import * as Fe from "react";
import An, { useRef as It, useCallback as ft, useState as Jt, useMemo as lr, useReducer as qA, useEffect as kn, forwardRef as $A, useImperativeHandle as zA, Fragment as GA } from "react";
var mn = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function pr(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ep = { exports: {} }, va = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Am;
function VA() {
  if (Am) return va;
  Am = 1;
  var e = An, t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, a = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, i = { key: !0, ref: !0, __self: !0, __source: !0 };
  function o(s, l, u) {
    var c, d = {}, m = null, f = null;
    u !== void 0 && (m = "" + u), l.key !== void 0 && (m = "" + l.key), l.ref !== void 0 && (f = l.ref);
    for (c in l) r.call(l, c) && !i.hasOwnProperty(c) && (d[c] = l[c]);
    if (s && s.defaultProps) for (c in l = s.defaultProps, l) d[c] === void 0 && (d[c] = l[c]);
    return { $$typeof: t, type: s, key: m, ref: f, props: d, _owner: a.current };
  }
  return va.Fragment = n, va.jsx = o, va.jsxs = o, va;
}
var Ta = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xm;
function WA() {
  return xm || (xm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = An, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), a = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), o = Symbol.for("react.provider"), s = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), c = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), f = Symbol.for("react.offscreen"), h = Symbol.iterator, E = "@@iterator";
    function I(q) {
      if (q === null || typeof q != "object")
        return null;
      var R = h && q[h] || q[E];
      return typeof R == "function" ? R : null;
    }
    var x = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function v(q) {
      {
        for (var R = arguments.length, C = new Array(R > 1 ? R - 1 : 0), _ = 1; _ < R; _++)
          C[_ - 1] = arguments[_];
        S("error", q, C);
      }
    }
    function S(q, R, C) {
      {
        var _ = x.ReactDebugCurrentFrame, k = _.getStackAddendum();
        k !== "" && (R += "%s", C = C.concat([k]));
        var N = C.map(function(W) {
          return String(W);
        });
        N.unshift("Warning: " + R), Function.prototype.apply.call(console[q], console, N);
      }
    }
    var g = !1, y = !1, T = !1, j = !1, $ = !1, D;
    D = Symbol.for("react.module.reference");
    function w(q) {
      return !!(typeof q == "string" || typeof q == "function" || q === r || q === i || $ || q === a || q === u || q === c || j || q === f || g || y || T || typeof q == "object" && q !== null && (q.$$typeof === m || q.$$typeof === d || q.$$typeof === o || q.$$typeof === s || q.$$typeof === l || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      q.$$typeof === D || q.getModuleId !== void 0));
    }
    function G(q, R, C) {
      var _ = q.displayName;
      if (_)
        return _;
      var k = R.displayName || R.name || "";
      return k !== "" ? C + "(" + k + ")" : C;
    }
    function Q(q) {
      return q.displayName || "Context";
    }
    function z(q) {
      if (q == null)
        return null;
      if (typeof q.tag == "number" && v("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof q == "function")
        return q.displayName || q.name || null;
      if (typeof q == "string")
        return q;
      switch (q) {
        case r:
          return "Fragment";
        case n:
          return "Portal";
        case i:
          return "Profiler";
        case a:
          return "StrictMode";
        case u:
          return "Suspense";
        case c:
          return "SuspenseList";
      }
      if (typeof q == "object")
        switch (q.$$typeof) {
          case s:
            var R = q;
            return Q(R) + ".Consumer";
          case o:
            var C = q;
            return Q(C._context) + ".Provider";
          case l:
            return G(q, q.render, "ForwardRef");
          case d:
            var _ = q.displayName || null;
            return _ !== null ? _ : z(q.type) || "Memo";
          case m: {
            var k = q, N = k._payload, W = k._init;
            try {
              return z(W(N));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var ce = Object.assign, ae = 0, K, he, ye, Te, A, re, se;
    function M() {
    }
    M.__reactDisabledLog = !0;
    function me() {
      {
        if (ae === 0) {
          K = console.log, he = console.info, ye = console.warn, Te = console.error, A = console.group, re = console.groupCollapsed, se = console.groupEnd;
          var q = {
            configurable: !0,
            enumerable: !0,
            value: M,
            writable: !0
          };
          Object.defineProperties(console, {
            info: q,
            log: q,
            warn: q,
            error: q,
            group: q,
            groupCollapsed: q,
            groupEnd: q
          });
        }
        ae++;
      }
    }
    function we() {
      {
        if (ae--, ae === 0) {
          var q = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: ce({}, q, {
              value: K
            }),
            info: ce({}, q, {
              value: he
            }),
            warn: ce({}, q, {
              value: ye
            }),
            error: ce({}, q, {
              value: Te
            }),
            group: ce({}, q, {
              value: A
            }),
            groupCollapsed: ce({}, q, {
              value: re
            }),
            groupEnd: ce({}, q, {
              value: se
            })
          });
        }
        ae < 0 && v("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var pe = x.ReactCurrentDispatcher, Ie;
    function Re(q, R, C) {
      {
        if (Ie === void 0)
          try {
            throw Error();
          } catch (k) {
            var _ = k.stack.trim().match(/\n( *(at )?)/);
            Ie = _ && _[1] || "";
          }
        return `
` + Ie + q;
      }
    }
    var be = !1, ve;
    {
      var He = typeof WeakMap == "function" ? WeakMap : Map;
      ve = new He();
    }
    function Se(q, R) {
      if (!q || be)
        return "";
      {
        var C = ve.get(q);
        if (C !== void 0)
          return C;
      }
      var _;
      be = !0;
      var k = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var N;
      N = pe.current, pe.current = null, me();
      try {
        if (R) {
          var W = function() {
            throw Error();
          };
          if (Object.defineProperty(W.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(W, []);
            } catch (je) {
              _ = je;
            }
            Reflect.construct(q, [], W);
          } else {
            try {
              W.call();
            } catch (je) {
              _ = je;
            }
            q.call(W.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (je) {
            _ = je;
          }
          q();
        }
      } catch (je) {
        if (je && _ && typeof je.stack == "string") {
          for (var ee = je.stack.split(`
`), ne = _.stack.split(`
`), V = ee.length - 1, le = ne.length - 1; V >= 1 && le >= 0 && ee[V] !== ne[le]; )
            le--;
          for (; V >= 1 && le >= 0; V--, le--)
            if (ee[V] !== ne[le]) {
              if (V !== 1 || le !== 1)
                do
                  if (V--, le--, le < 0 || ee[V] !== ne[le]) {
                    var Ce = `
` + ee[V].replace(" at new ", " at ");
                    return q.displayName && Ce.includes("<anonymous>") && (Ce = Ce.replace("<anonymous>", q.displayName)), typeof q == "function" && ve.set(q, Ce), Ce;
                  }
                while (V >= 1 && le >= 0);
              break;
            }
        }
      } finally {
        be = !1, pe.current = N, we(), Error.prepareStackTrace = k;
      }
      var Be = q ? q.displayName || q.name : "", Ge = Be ? Re(Be) : "";
      return typeof q == "function" && ve.set(q, Ge), Ge;
    }
    function Ke(q, R, C) {
      return Se(q, !1);
    }
    function _t(q) {
      var R = q.prototype;
      return !!(R && R.isReactComponent);
    }
    function mt(q, R, C) {
      if (q == null)
        return "";
      if (typeof q == "function")
        return Se(q, _t(q));
      if (typeof q == "string")
        return Re(q);
      switch (q) {
        case u:
          return Re("Suspense");
        case c:
          return Re("SuspenseList");
      }
      if (typeof q == "object")
        switch (q.$$typeof) {
          case l:
            return Ke(q.render);
          case d:
            return mt(q.type, R, C);
          case m: {
            var _ = q, k = _._payload, N = _._init;
            try {
              return mt(N(k), R, C);
            } catch {
            }
          }
        }
      return "";
    }
    var vt = Object.prototype.hasOwnProperty, wt = {}, jt = x.ReactDebugCurrentFrame;
    function Tt(q) {
      if (q) {
        var R = q._owner, C = mt(q.type, q._source, R ? R.type : null);
        jt.setExtraStackFrame(C);
      } else
        jt.setExtraStackFrame(null);
    }
    function Ht(q, R, C, _, k) {
      {
        var N = Function.call.bind(vt);
        for (var W in q)
          if (N(q, W)) {
            var ee = void 0;
            try {
              if (typeof q[W] != "function") {
                var ne = Error((_ || "React class") + ": " + C + " type `" + W + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof q[W] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw ne.name = "Invariant Violation", ne;
              }
              ee = q[W](R, W, _, C, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (V) {
              ee = V;
            }
            ee && !(ee instanceof Error) && (Tt(k), v("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", _ || "React class", C, W, typeof ee), Tt(null)), ee instanceof Error && !(ee.message in wt) && (wt[ee.message] = !0, Tt(k), v("Failed %s type: %s", C, ee.message), Tt(null));
          }
      }
    }
    var Yt = Array.isArray;
    function Ct(q) {
      return Yt(q);
    }
    function gt(q) {
      {
        var R = typeof Symbol == "function" && Symbol.toStringTag, C = R && q[Symbol.toStringTag] || q.constructor.name || "Object";
        return C;
      }
    }
    function xe(q) {
      try {
        return Z(q), !1;
      } catch {
        return !0;
      }
    }
    function Z(q) {
      return "" + q;
    }
    function O(q) {
      if (xe(q))
        return v("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", gt(q)), Z(q);
    }
    var U = x.ReactCurrentOwner, X = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, ue, fe, Ne;
    Ne = {};
    function Oe(q) {
      if (vt.call(q, "ref")) {
        var R = Object.getOwnPropertyDescriptor(q, "ref").get;
        if (R && R.isReactWarning)
          return !1;
      }
      return q.ref !== void 0;
    }
    function Pe(q) {
      if (vt.call(q, "key")) {
        var R = Object.getOwnPropertyDescriptor(q, "key").get;
        if (R && R.isReactWarning)
          return !1;
      }
      return q.key !== void 0;
    }
    function et(q, R) {
      if (typeof q.ref == "string" && U.current && R && U.current.stateNode !== R) {
        var C = z(U.current.type);
        Ne[C] || (v('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', z(U.current.type), q.ref), Ne[C] = !0);
      }
    }
    function tt(q, R) {
      {
        var C = function() {
          ue || (ue = !0, v("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", R));
        };
        C.isReactWarning = !0, Object.defineProperty(q, "key", {
          get: C,
          configurable: !0
        });
      }
    }
    function $e(q, R) {
      {
        var C = function() {
          fe || (fe = !0, v("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", R));
        };
        C.isReactWarning = !0, Object.defineProperty(q, "ref", {
          get: C,
          configurable: !0
        });
      }
    }
    var Xe = function(q, R, C, _, k, N, W) {
      var ee = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: q,
        key: R,
        ref: C,
        props: W,
        // Record the component responsible for creating this element.
        _owner: N
      };
      return ee._store = {}, Object.defineProperty(ee._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(ee, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: _
      }), Object.defineProperty(ee, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: k
      }), Object.freeze && (Object.freeze(ee.props), Object.freeze(ee)), ee;
    };
    function rt(q, R, C, _, k) {
      {
        var N, W = {}, ee = null, ne = null;
        C !== void 0 && (O(C), ee = "" + C), Pe(R) && (O(R.key), ee = "" + R.key), Oe(R) && (ne = R.ref, et(R, k));
        for (N in R)
          vt.call(R, N) && !X.hasOwnProperty(N) && (W[N] = R[N]);
        if (q && q.defaultProps) {
          var V = q.defaultProps;
          for (N in V)
            W[N] === void 0 && (W[N] = V[N]);
        }
        if (ee || ne) {
          var le = typeof q == "function" ? q.displayName || q.name || "Unknown" : q;
          ee && tt(W, le), ne && $e(W, le);
        }
        return Xe(q, ee, ne, k, _, U.current, W);
      }
    }
    var kt = x.ReactCurrentOwner, ht = x.ReactDebugCurrentFrame;
    function ct(q) {
      if (q) {
        var R = q._owner, C = mt(q.type, q._source, R ? R.type : null);
        ht.setExtraStackFrame(C);
      } else
        ht.setExtraStackFrame(null);
    }
    var bt;
    bt = !1;
    function ze(q) {
      return typeof q == "object" && q !== null && q.$$typeof === t;
    }
    function At() {
      {
        if (kt.current) {
          var q = z(kt.current.type);
          if (q)
            return `

Check the render method of \`` + q + "`.";
        }
        return "";
      }
    }
    function Nt(q) {
      return "";
    }
    var un = {};
    function cn(q) {
      {
        var R = At();
        if (!R) {
          var C = typeof q == "string" ? q : q.displayName || q.name;
          C && (R = `

Check the top-level render call using <` + C + ">.");
        }
        return R;
      }
    }
    function qt(q, R) {
      {
        if (!q._store || q._store.validated || q.key != null)
          return;
        q._store.validated = !0;
        var C = cn(R);
        if (un[C])
          return;
        un[C] = !0;
        var _ = "";
        q && q._owner && q._owner !== kt.current && (_ = " It was passed a child from " + z(q._owner.type) + "."), ct(q), v('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', C, _), ct(null);
      }
    }
    function en(q, R) {
      {
        if (typeof q != "object")
          return;
        if (Ct(q))
          for (var C = 0; C < q.length; C++) {
            var _ = q[C];
            ze(_) && qt(_, R);
          }
        else if (ze(q))
          q._store && (q._store.validated = !0);
        else if (q) {
          var k = I(q);
          if (typeof k == "function" && k !== q.entries)
            for (var N = k.call(q), W; !(W = N.next()).done; )
              ze(W.value) && qt(W.value, R);
        }
      }
    }
    function Ln(q) {
      {
        var R = q.type;
        if (R == null || typeof R == "string")
          return;
        var C;
        if (typeof R == "function")
          C = R.propTypes;
        else if (typeof R == "object" && (R.$$typeof === l || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        R.$$typeof === d))
          C = R.propTypes;
        else
          return;
        if (C) {
          var _ = z(R);
          Ht(C, q.props, "prop", _, q);
        } else if (R.PropTypes !== void 0 && !bt) {
          bt = !0;
          var k = z(R);
          v("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", k || "Unknown");
        }
        typeof R.getDefaultProps == "function" && !R.getDefaultProps.isReactClassApproved && v("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Yn(q) {
      {
        for (var R = Object.keys(q.props), C = 0; C < R.length; C++) {
          var _ = R[C];
          if (_ !== "children" && _ !== "key") {
            ct(q), v("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", _), ct(null);
            break;
          }
        }
        q.ref !== null && (ct(q), v("Invalid attribute `ref` supplied to `React.Fragment`."), ct(null));
      }
    }
    var Br = {};
    function Dn(q, R, C, _, k, N) {
      {
        var W = w(q);
        if (!W) {
          var ee = "";
          (q === void 0 || typeof q == "object" && q !== null && Object.keys(q).length === 0) && (ee += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ne = Nt();
          ne ? ee += ne : ee += At();
          var V;
          q === null ? V = "null" : Ct(q) ? V = "array" : q !== void 0 && q.$$typeof === t ? (V = "<" + (z(q.type) || "Unknown") + " />", ee = " Did you accidentally export a JSX literal instead of a component?") : V = typeof q, v("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", V, ee);
        }
        var le = rt(q, R, C, k, N);
        if (le == null)
          return le;
        if (W) {
          var Ce = R.children;
          if (Ce !== void 0)
            if (_)
              if (Ct(Ce)) {
                for (var Be = 0; Be < Ce.length; Be++)
                  en(Ce[Be], q);
                Object.freeze && Object.freeze(Ce);
              } else
                v("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              en(Ce, q);
        }
        if (vt.call(R, "key")) {
          var Ge = z(q), je = Object.keys(R).filter(function(Et) {
            return Et !== "key";
          }), Le = je.length > 0 ? "{key: someKey, " + je.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Br[Ge + Le]) {
            var at = je.length > 0 ? "{" + je.join(": ..., ") + ": ...}" : "{}";
            v(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, Le, Ge, at, Ge), Br[Ge + Le] = !0;
          }
        }
        return q === r ? Yn(le) : Ln(le), le;
      }
    }
    function Kn(q, R, C) {
      return Dn(q, R, C, !0);
    }
    function hr(q, R, C) {
      return Dn(q, R, C, !1);
    }
    var br = hr, Er = Kn;
    Ta.Fragment = r, Ta.jsx = br, Ta.jsxs = Er;
  }()), Ta;
}
process.env.NODE_ENV === "production" ? Ep.exports = VA() : Ep.exports = WA();
var Y = Ep.exports, YA = /* @__PURE__ */ ((e) => (e.Text = "Text", e.ImageUrl = "ImageUrl", e))(YA || {}), KA = /* @__PURE__ */ ((e) => (e.SystemMessage = "system", e.AIMessage = "ai", e.HumanMessage = "human", e.ToolMessage = "tool", e))(KA || {}), XA = /* @__PURE__ */ ((e) => (e.Auto = "Auto", e.Low = "Low", e.High = "High", e))(XA || {});
function ZA(e) {
  return e.map((t) => {
    if (!t.content_array || t.content_array.length === 0)
      return {
        role: t.type,
        content: t.message || ""
      };
    let n = t.content_array.map((r) => {
      let a = r, i = a[0], o = a[1];
      if (i === "ImageUrl")
        return {
          type: "image_url",
          image_url: {
            url: o
          }
        };
      if (i === "InputAudio")
        return {
          type: "audio",
          audio: {
            data: o,
            format: "mp3"
          }
        };
      if (i === "Text")
        return {
          type: "text",
          text: o
        };
    }).filter((r) => r !== void 0);
    return {
      role: t.type,
      content: n
    };
  });
}
async function QA(e) {
  const { files: t, message: n } = e;
  if (!t || !t.length)
    return {
      role: "user",
      content: n
    };
  {
    let r = await Promise.all(t.filter((o) => o && o.type && (o.type.startsWith("audio/") || o.type.startsWith("image/"))).map(async (o) => {
      var s;
      if (o.type.startsWith("audio/")) {
        let u = o.raw_file.name.split(".").pop();
        return {
          type: "input_audio",
          audio: {
            data: (s = o.base64) == null ? void 0 : s.split(",")[1],
            format: u
          }
        };
      } else {
        const l = await tf(o, e.resizeOptions);
        if (!l)
          throw new Error("resize failed");
        const u = await nf(l);
        if (!u)
          throw new Error("base64 failed");
        return {
          type: "image_url",
          image_url: {
            url: u
          }
        };
      }
    })), a = {
      type: "text",
      text: n
    };
    return {
      role: "user",
      content: [...r, a]
    };
  }
}
const pq = async (e) => {
  const { file: t, resizeOptions: n } = e, r = await tf(t, n);
  if (!r)
    throw new Error("resize failed");
  const a = await nf(r);
  if (!a)
    throw new Error("base64 failed");
  return a;
};
async function fq(e) {
  const { files: t, message: n } = e;
  if (!t || !t.length)
    return n;
  {
    let r = await Promise.all(t.filter((a) => a && a.type && a.type.startsWith("image/")).map(async (a) => {
      const i = await tf(a, e.resizeOptions);
      if (!i)
        throw new Error("resize failed");
      const o = await nf(i);
      if (!o)
        throw new Error("base64 failed");
      return [
        "ImageUrl",
        o,
        null
      ];
    }));
    return r.push(
      [
        "Text",
        n,
        null
      ]
    ), r;
  }
}
const tf = async (e, t) => {
  const n = (t == null ? void 0 : t.maxSize) || 256, r = document.createElement("canvas"), a = r.getContext("2d");
  if (!a) throw new Error("ctx is not available");
  let i = e.raw_file;
  if (!(i instanceof Blob))
    return null;
  if (i.type === "image/svg+xml") {
    const m = await i.text(), E = new DOMParser().parseFromString(m, "image/svg+xml").documentElement;
    E.setAttribute("width", n.toString()), E.setAttribute("height", n.toString());
    const x = new XMLSerializer().serializeToString(E);
    return new Blob([x], { type: "image/svg+xml" });
  }
  let o = await createImageBitmap(i);
  const { width: s, height: l } = o;
  if (s < n && l < n)
    return i;
  r.width = n, r.height = n;
  const u = Math.max(n / s, n / l), c = (n - s * u) / 2, d = (n - l * u) / 2;
  return a.drawImage(o, 0, 0, s, l, c, d, s * u, l * u), new Promise((m) => {
    r.toBlob((f) => {
      m(f);
    });
  });
};
async function nf(e) {
  return new Promise((t, n) => {
    const r = new FileReader();
    r.onloadend = () => t(r.result), r.readAsDataURL(e);
  });
}
async function JA(e, t) {
  const n = e.getReader();
  let r;
  for (; !(r = await n.read()).done; )
    t(r.value);
}
function ex(e) {
  let t, n, r, a = !1;
  return function(o) {
    t === void 0 ? (t = o, n = 0, r = -1) : t = nx(t, o);
    const s = t.length;
    let l = 0;
    for (; n < s; ) {
      a && (t[n] === 10 && (l = ++n), a = !1);
      let u = -1;
      for (; n < s && u === -1; ++n)
        switch (t[n]) {
          case 58:
            r === -1 && (r = n - l);
            break;
          case 13:
            a = !0;
          case 10:
            u = n;
            break;
        }
      if (u === -1)
        break;
      e(t.subarray(l, u), r), l = n, r = -1;
    }
    l === s ? t = void 0 : l !== 0 && (t = t.subarray(l), n -= l);
  };
}
function tx(e, t, n) {
  let r = Rm();
  const a = new TextDecoder();
  return function(o, s) {
    if (o.length === 0)
      n == null || n(r), r = Rm();
    else if (s > 0) {
      const l = a.decode(o.subarray(0, s)), u = s + (o[s + 1] === 32 ? 2 : 1), c = a.decode(o.subarray(u));
      switch (l) {
        case "data":
          r.data = r.data ? r.data + (c || `
`) : c || `
`;
          break;
        case "event":
          r.event = c;
          break;
        case "id":
          e(r.id = c);
          break;
        case "retry":
          const d = parseInt(c, 10);
          isNaN(d) || t(r.retry = d);
          break;
      }
    }
  };
}
function nx(e, t) {
  const n = new Uint8Array(e.length + t.length);
  return n.set(e), n.set(t, e.length), n;
}
function Rm() {
  return {
    data: "",
    event: "",
    id: "",
    retry: void 0
  };
}
var rx = function(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var a = 0, r = Object.getOwnPropertySymbols(e); a < r.length; a++)
      t.indexOf(r[a]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[a]) && (n[r[a]] = e[r[a]]);
  return n;
};
const yp = "text/event-stream", ax = 1e3, Im = "last-event-id";
function ix(e, t) {
  var { signal: n, headers: r, onopen: a, onmessage: i, onclose: o, onerror: s, openWhenHidden: l, fetch: u } = t, c = rx(t, ["signal", "headers", "onopen", "onmessage", "onclose", "onerror", "openWhenHidden", "fetch"]);
  return new Promise((d, m) => {
    const f = Object.assign({}, r);
    f.accept || (f.accept = yp);
    let h;
    function E() {
      h.abort(), document.hidden || y();
    }
    l || document.addEventListener("visibilitychange", E);
    let I = ax, x = 0;
    function v() {
      document.removeEventListener("visibilitychange", E), window.clearTimeout(x), h.abort();
    }
    n == null || n.addEventListener("abort", () => {
      v(), d();
    });
    const S = u ?? window.fetch, g = a ?? ox;
    async function y() {
      var T;
      h = new AbortController();
      try {
        const j = await S(e, Object.assign(Object.assign({}, c), { headers: f, signal: h.signal }));
        await g(j), await JA(j.body, ex(tx(($) => {
          $ ? f[Im] = $ : delete f[Im];
        }, ($) => {
          I = $;
        }, i))), o == null || o(), v(), d();
      } catch (j) {
        if (!h.signal.aborted)
          try {
            const $ = (T = s == null ? void 0 : s(j)) !== null && T !== void 0 ? T : I;
            window.clearTimeout(x), x = window.setTimeout(y, $);
          } catch ($) {
            v(), m($);
          }
      }
    }
    y();
  });
}
function ox(e) {
  const t = e.headers.get("content-type");
  if (!(t != null && t.startsWith(yp)))
    throw new Error(`Expected content-type to be ${yp}, Actual: ${t}`);
}
const rf = "https://api.dev.langdb.ai", af = async (e) => {
  const { projectId: t, publicId: n, apiKey: r, getAccessToken: a, threadId: i } = e, o = { "Content-Type": "application/json" };
  if (t && (o["x-project-id"] = t), i && (o["X-Thread-Id"] = i), n && (o["X-PUBLIC-APPLICATION-ID"] = n), r)
    o.Authorization = `Bearer ${r}`;
  else {
    const s = await (a == null ? void 0 : a());
    if (!s)
      throw new Error("Failed to get the user token");
    o.Authorization = `Bearer ${s}`;
  }
  return o;
}, sx = async (e) => {
  const { widgetProps: t, files: n, message: r, threadId: a, onopen: i, onmessage: o, onerror: s, onclose: l, previousMessages: u, searchToolEnabled: c } = e, { fileResizeOptions: d } = t, f = `${t.serverUrl || rf}/chat/completions`, { modelName: h, agentParams: E, responseCallback: I } = t;
  try {
    const x = await af({
      projectId: t.projectId,
      publicId: t.publicId,
      getAccessToken: t.getAccessToken,
      threadId: a || t.threadId,
      apiKey: t.apiKey
    });
    let v = ZA(u), S = await QA({
      files: n,
      message: r,
      resizeOptions: d
    }), g = [...v, S];
    !a && h && h.includes("claude-") && (g = [
      {
        role: "system",
        content: "You are a helpful assistant."
      },
      S
    ]);
    const y = {
      model: h,
      thread_id: a,
      messages: g,
      stream: !0,
      stream_options: {
        include_usage: !0
      },
      ...E || {},
      ...c ? {
        mcp_servers: [{
          name: "websearch",
          type: "in-memory"
        }]
      } : {}
    };
    await ix(f, {
      method: "POST",
      body: JSON.stringify(y),
      headers: x,
      credentials: "include",
      onopen: i,
      onmessage: o,
      onclose: l,
      onerror: s
    });
  } catch (x) {
    throw I && I({ error: x, modelName: h }), x;
  }
}, lx = () => {
  const e = It(null), t = ft(() => {
    var n;
    (n = e.current) == null || n.scrollIntoView({ behavior: "smooth" });
  }, [e]);
  return { messagesEndRef: e, scrollToBottom: t };
}, of = (e) => /* @__PURE__ */ Y.jsxs("svg", { width: "1176", height: "1176", ...e, viewBox: "0 0 1176 1176", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
  /* @__PURE__ */ Y.jsxs("g", { "clip-path": "url(#clip0_191_10)", children: [
    /* @__PURE__ */ Y.jsx("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M1006.71 105.003C983.924 34.7033 908.214 -4.13421 837.747 18.3355L255.675 203.937C185.207 226.407 146.502 301.727 169.289 372.027C192.076 442.326 267.785 481.164 338.253 458.694L920.325 273.092C990.792 250.623 1029.5 175.302 1006.71 105.003Z", fill: "#E94560" }),
    /* @__PURE__ */ Y.jsx("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M1006.71 454.208C983.924 383.908 908.214 345.071 837.747 367.541L255.675 553.142C185.207 575.612 146.502 650.932 169.289 721.232C192.076 791.531 267.785 830.369 338.253 807.899L920.325 622.297C990.792 599.828 1029.5 524.507 1006.71 454.208Z", fill: "#E94560" }),
    /* @__PURE__ */ Y.jsx("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M1006.71 803.463C983.924 733.163 908.214 694.326 837.747 716.795L255.675 902.397C185.207 924.867 146.502 1000.19 169.289 1070.49C192.076 1140.79 267.785 1179.62 338.253 1157.15L920.325 971.552C990.792 949.083 1029.5 873.762 1006.71 803.463Z", fill: "#E94560" })
  ] }),
  /* @__PURE__ */ Y.jsx("defs", { children: /* @__PURE__ */ Y.jsx("clipPath", { id: "clip0_191_10", children: /* @__PURE__ */ Y.jsx("rect", { width: "1176", height: "1176", fill: "white" }) }) })
] });
var Qt = [];
for (var Oo = 0; Oo < 256; ++Oo)
  Qt.push((Oo + 256).toString(16).slice(1));
function ux(e, t = 0) {
  return (Qt[e[t + 0]] + Qt[e[t + 1]] + Qt[e[t + 2]] + Qt[e[t + 3]] + "-" + Qt[e[t + 4]] + Qt[e[t + 5]] + "-" + Qt[e[t + 6]] + Qt[e[t + 7]] + "-" + Qt[e[t + 8]] + Qt[e[t + 9]] + "-" + Qt[e[t + 10]] + Qt[e[t + 11]] + Qt[e[t + 12]] + Qt[e[t + 13]] + Qt[e[t + 14]] + Qt[e[t + 15]]).toLowerCase();
}
var fi, cx = new Uint8Array(16);
function dx() {
  if (!fi && (fi = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !fi))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return fi(cx);
}
var px = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const wm = {
  randomUUID: px
};
function Cm(e, t, n) {
  if (wm.randomUUID && !t && !e)
    return wm.randomUUID();
  e = e || {};
  var r = e.random || (e.rng || dx)();
  return r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, ux(r);
}
const fx = (e) => {
  const { initialMessages: t } = e, [n, r] = Jt([]), [a, i] = Jt(""), [o, s] = Jt(), [l, u] = Jt(), [c, d] = Jt(!1), [m, f] = Jt(), [h, E] = Jt([]), I = ft((S) => {
    E((g) => [...g, S]);
  }, [E]), x = [...t, ...n];
  return {
    messages: Array.from(new Set(x.map((S) => S.id))).map((S) => x.find((g) => g.id === S)).filter((S) => S !== void 0),
    setMessages: r,
    currentInput: a,
    setCurrentInput: i,
    threadId: o,
    setThreadId: s,
    messageId: l,
    setMessageId: u,
    typing: c,
    setTyping: d,
    error: m,
    setError: f,
    usageInfo: h,
    appendUsage: I,
    initialMessages: t
  };
};
var vp = /* @__PURE__ */ ((e) => (e.Text = "Text", e.ImageUrl = "ImageUrl", e))(vp || {}), dr = /* @__PURE__ */ ((e) => (e.SystemMessage = "system", e.AIMessage = "ai", e.HumanMessage = "human", e.ToolMessage = "tool", e))(dr || {});
function mx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "m4.5 12.75 6 6 9-13.5"
  }));
}
const gx = /* @__PURE__ */ Fe.forwardRef(mx);
function hx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5A3.375 3.375 0 0 0 6.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0 0 15 2.25h-1.5a2.251 2.251 0 0 0-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 0 0-9-9Z"
  }));
}
const bx = /* @__PURE__ */ Fe.forwardRef(hx);
function Ex({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418"
  }));
}
const yx = /* @__PURE__ */ Fe.forwardRef(Ex);
function vx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M7.498 15.25H4.372c-1.026 0-1.945-.694-2.054-1.715a12.137 12.137 0 0 1-.068-1.285c0-2.848.992-5.464 2.649-7.521C5.287 4.247 5.886 4 6.504 4h4.016a4.5 4.5 0 0 1 1.423.23l3.114 1.04a4.5 4.5 0 0 0 1.423.23h1.294M7.498 15.25c.618 0 .991.724.725 1.282A7.471 7.471 0 0 0 7.5 19.75 2.25 2.25 0 0 0 9.75 22a.75.75 0 0 0 .75-.75v-.633c0-.573.11-1.14.322-1.672.304-.76.93-1.33 1.653-1.715a9.04 9.04 0 0 0 2.86-2.4c.498-.634 1.226-1.08 2.032-1.08h.384m-10.253 1.5H9.7m8.075-9.75c.01.05.027.1.05.148.593 1.2.925 2.55.925 3.977 0 1.487-.36 2.89-.999 4.125m.023-8.25c-.076-.365.183-.75.575-.75h.908c.889 0 1.713.518 1.972 1.368.339 1.11.521 2.287.521 3.507 0 1.553-.295 3.036-.831 4.398-.306.774-1.086 1.227-1.918 1.227h-1.053c-.472 0-.745-.556-.5-.96a8.95 8.95 0 0 0 .303-.54"
  }));
}
const Tx = /* @__PURE__ */ Fe.forwardRef(vx);
function Sx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M6.633 10.25c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 0 1 2.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 0 0 .322-1.672V2.75a.75.75 0 0 1 .75-.75 2.25 2.25 0 0 1 2.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282m0 0h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 0 1-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 0 0-1.423-.23H5.904m10.598-9.75H14.25M5.904 18.5c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 0 1-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 9.953 4.167 9.5 5 9.5h1.053c.472 0 .745.556.5.96a8.958 8.958 0 0 0-1.302 4.665c0 1.194.232 2.333.654 3.375Z"
  }));
}
const _x = /* @__PURE__ */ Fe.forwardRef(Sx);
function Ax({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "m18.375 12.739-7.693 7.693a4.5 4.5 0 0 1-6.364-6.364l10.94-10.94A3 3 0 1 1 19.5 7.372L8.552 18.32m.009-.01-.01.01m5.699-9.941-7.81 7.81a1.5 1.5 0 0 0 2.112 2.13"
  }));
}
const oT = /* @__PURE__ */ Fe.forwardRef(Ax);
function xx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125"
  }));
}
const Rx = /* @__PURE__ */ Fe.forwardRef(xx);
function Ix({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
  }));
}
const km = /* @__PURE__ */ Fe.forwardRef(Ix), Xr = ({ imageUrl: e, name: t, className: n }) => {
  const r = (a) => a.charAt(0).toUpperCase();
  return /* @__PURE__ */ Y.jsx("div", { className: `avatar ${n}`, children: e ? /* @__PURE__ */ Y.jsx("img", { src: e, alt: t, className: "h-full w-full rounded-full object-cover" }) : /* @__PURE__ */ Y.jsx("div", { className: "h-full w-full rounded-full bg-gray-500 flex items-center justify-center text-white", children: r(t) }) });
};
function wx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    d: "M15.73 5.5h1.035A7.465 7.465 0 0 1 18 9.625a7.465 7.465 0 0 1-1.235 4.125h-.148c-.806 0-1.534.446-2.031 1.08a9.04 9.04 0 0 1-2.861 2.4c-.723.384-1.35.956-1.653 1.715a4.499 4.499 0 0 0-.322 1.672v.633A.75.75 0 0 1 9 22a2.25 2.25 0 0 1-2.25-2.25c0-1.152.26-2.243.723-3.218.266-.558-.107-1.282-.725-1.282H3.622c-1.026 0-1.945-.694-2.054-1.715A12.137 12.137 0 0 1 1.5 12.25c0-2.848.992-5.464 2.649-7.521C4.537 4.247 5.136 4 5.754 4H9.77a4.5 4.5 0 0 1 1.423.23l3.114 1.04a4.5 4.5 0 0 0 1.423.23ZM21.669 14.023c.536-1.362.831-2.845.831-4.398 0-1.22-.182-2.398-.52-3.507-.26-.85-1.084-1.368-1.973-1.368H19.1c-.445 0-.72.498-.523.898.591 1.2.924 2.55.924 3.977a8.958 8.958 0 0 1-1.302 4.666c-.245.403.028.959.5.959h1.053c.832 0 1.612-.453 1.918-1.227Z"
  }));
}
const Cx = /* @__PURE__ */ Fe.forwardRef(wx);
function kx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    d: "M7.493 18.5c-.425 0-.82-.236-.975-.632A7.48 7.48 0 0 1 6 15.125c0-1.75.599-3.358 1.602-4.634.151-.192.373-.309.6-.397.473-.183.89-.514 1.212-.924a9.042 9.042 0 0 1 2.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 0 0 .322-1.672V2.75A.75.75 0 0 1 15 2a2.25 2.25 0 0 1 2.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 0 1-2.649 7.521c-.388.482-.987.729-1.605.729H14.23c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 0 0-1.423-.23h-.777ZM2.331 10.727a11.969 11.969 0 0 0-.831 4.398 12 12 0 0 0 .52 3.507C2.28 19.482 3.105 20 3.994 20H4.9c.445 0 .72-.498.523-.898a8.963 8.963 0 0 1-.924-3.977c0-1.708.476-3.305 1.302-4.666.245-.403-.028-.959-.5-.959H4.25c-.832 0-1.612.453-1.918 1.227Z"
  }));
}
const Nx = /* @__PURE__ */ Fe.forwardRef(kx);
function Ox({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    fillRule: "evenodd",
    d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z",
    clipRule: "evenodd"
  }));
}
const Lx = /* @__PURE__ */ Fe.forwardRef(Ox);
function Dx({
  title: e,
  titleId: t,
  ...n
}, r) {
  return /* @__PURE__ */ Fe.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    "data-slot": "icon",
    ref: r,
    "aria-labelledby": t
  }, n), e ? /* @__PURE__ */ Fe.createElement("title", {
    id: t
  }, e) : null, /* @__PURE__ */ Fe.createElement("path", {
    fillRule: "evenodd",
    d: "M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z",
    clipRule: "evenodd"
  }));
}
const Mx = /* @__PURE__ */ Fe.forwardRef(Dx), sT = ({ files: e, setFiles: t }) => {
  const n = (a) => () => {
    const i = e.filter((o) => o !== a);
    t && t(i);
  }, r = t ? "w-12 h-12" : "w-24 h-24";
  return /* @__PURE__ */ Y.jsx("div", { className: "flex flex-col w-[100%]", children: /* @__PURE__ */ Y.jsx("aside", { className: "flex flex-wrap mt-4", children: e.map((a) => /* @__PURE__ */ Y.jsxs("div", { className: "relative m-2", children: [
    t && /* @__PURE__ */ Y.jsx("button", { onClick: n(a), className: "absolute right-1 top-1 -translate-y-1/2 translate-x-1/2 rounded-full font-bold bg-slate-400 opacity-80 hover:opacity-100 text-white  border-border p-1  hover:text-black  text-token-text-primary transition-colors", children: /* @__PURE__ */ Y.jsx(Mx, { className: "w-2 h-2" }) }),
    /* @__PURE__ */ Y.jsxs("div", { className: "", children: [
      a.type === "application/pdf" && /* @__PURE__ */ Y.jsx("embed", { src: a.preview, className: `${r} border border-border object-cover rounded-lg overflow-hidden`, type: "application/pdf" }),
      a.type === "text/plain" && /* @__PURE__ */ Y.jsx("iframe", { src: a.preview, className: `${r} border border-border object-cover rounded-lg overflow-hidden` }),
      a.type.startsWith("image/") && /* @__PURE__ */ Y.jsx(
        "img",
        {
          src: a.preview,
          alt: a.name,
          "object-fit": "cover",
          className: `${r} border border-border object-cover rounded-lg`
        }
      ),
      a.type.startsWith("audio/") && /* @__PURE__ */ Y.jsxs("audio", { controls: !0, className: "bg-black", children: [
        /* @__PURE__ */ Y.jsx("source", { src: a.base64, type: a.type }),
        "Your browser does not support the audio element."
      ] })
    ] }, `preview-${a.name}`)
  ] }, a.name)) }) });
};
function Nm(e) {
  const t = [], n = String(e || "");
  let r = n.indexOf(","), a = 0, i = !1;
  for (; !i; ) {
    r === -1 && (r = n.length, i = !0);
    const o = n.slice(a, r).trim();
    (o || !i) && t.push(o), a = r + 1, r = n.indexOf(",", a);
  }
  return t;
}
function lT(e, t) {
  const n = {};
  return (e[e.length - 1] === "" ? [...e, ""] : e).join(
    (n.padRight ? " " : "") + "," + (n.padLeft === !1 ? "" : " ")
  ).trim();
}
const Px = /^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, Fx = /^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, Bx = {};
function Om(e, t) {
  return (Bx.jsx ? Fx : Px).test(e);
}
const Ux = /[ \t\n\f\r]/g;
function jx(e) {
  return typeof e == "object" ? e.type === "text" ? Lm(e.value) : !1 : Lm(e);
}
function Lm(e) {
  return e.replace(Ux, "") === "";
}
let Ka = class {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(t, n, r) {
    this.property = t, this.normal = n, r && (this.space = r);
  }
};
Ka.prototype.property = {};
Ka.prototype.normal = {};
Ka.prototype.space = null;
function uT(e, t) {
  const n = {}, r = {};
  let a = -1;
  for (; ++a < e.length; )
    Object.assign(n, e[a].property), Object.assign(r, e[a].normal);
  return new Ka(n, r, t);
}
function Tp(e) {
  return e.toLowerCase();
}
let Nn = class {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(t, n) {
    this.property = t, this.attribute = n;
  }
};
Nn.prototype.space = null;
Nn.prototype.boolean = !1;
Nn.prototype.booleanish = !1;
Nn.prototype.overloadedBoolean = !1;
Nn.prototype.number = !1;
Nn.prototype.commaSeparated = !1;
Nn.prototype.spaceSeparated = !1;
Nn.prototype.commaOrSpaceSeparated = !1;
Nn.prototype.mustUseProperty = !1;
Nn.prototype.defined = !1;
let Hx = 0;
const Ve = Lr(), Mt = Lr(), cT = Lr(), _e = Lr(), dt = Lr(), Jr = Lr(), Sn = Lr();
function Lr() {
  return 2 ** ++Hx;
}
const Sp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: Ve,
  booleanish: Mt,
  commaOrSpaceSeparated: Sn,
  commaSeparated: Jr,
  number: _e,
  overloadedBoolean: cT,
  spaceSeparated: dt
}, Symbol.toStringTag, { value: "Module" })), Lo = Object.keys(Sp);
let sf = class extends Nn {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(t, n, r, a) {
    let i = -1;
    if (super(t, n), Dm(this, "space", a), typeof r == "number")
      for (; ++i < Lo.length; ) {
        const o = Lo[i];
        Dm(this, Lo[i], (r & Sp[o]) === Sp[o]);
      }
  }
};
sf.prototype.defined = !0;
function Dm(e, t, n) {
  n && (e[t] = n);
}
const qx = {}.hasOwnProperty;
function oa(e) {
  const t = {}, n = {};
  let r;
  for (r in e.properties)
    if (qx.call(e.properties, r)) {
      const a = e.properties[r], i = new sf(
        r,
        e.transform(e.attributes || {}, r),
        a,
        e.space
      );
      e.mustUseProperty && e.mustUseProperty.includes(r) && (i.mustUseProperty = !0), t[r] = i, n[Tp(r)] = r, n[Tp(i.attribute)] = r;
    }
  return new Ka(t, n, e.space);
}
const dT = oa({
  space: "xlink",
  transform(e, t) {
    return "xlink:" + t.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
}), pT = oa({
  space: "xml",
  transform(e, t) {
    return "xml:" + t.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});
function fT(e, t) {
  return t in e ? e[t] : t;
}
function mT(e, t) {
  return fT(e, t.toLowerCase());
}
const gT = oa({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: mT,
  properties: { xmlns: null, xmlnsXLink: null }
}), hT = oa({
  transform(e, t) {
    return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: Mt,
    ariaAutoComplete: null,
    ariaBusy: Mt,
    ariaChecked: Mt,
    ariaColCount: _e,
    ariaColIndex: _e,
    ariaColSpan: _e,
    ariaControls: dt,
    ariaCurrent: null,
    ariaDescribedBy: dt,
    ariaDetails: null,
    ariaDisabled: Mt,
    ariaDropEffect: dt,
    ariaErrorMessage: null,
    ariaExpanded: Mt,
    ariaFlowTo: dt,
    ariaGrabbed: Mt,
    ariaHasPopup: null,
    ariaHidden: Mt,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: dt,
    ariaLevel: _e,
    ariaLive: null,
    ariaModal: Mt,
    ariaMultiLine: Mt,
    ariaMultiSelectable: Mt,
    ariaOrientation: null,
    ariaOwns: dt,
    ariaPlaceholder: null,
    ariaPosInSet: _e,
    ariaPressed: Mt,
    ariaReadOnly: Mt,
    ariaRelevant: null,
    ariaRequired: Mt,
    ariaRoleDescription: dt,
    ariaRowCount: _e,
    ariaRowIndex: _e,
    ariaRowSpan: _e,
    ariaSelected: Mt,
    ariaSetSize: _e,
    ariaSort: null,
    ariaValueMax: _e,
    ariaValueMin: _e,
    ariaValueNow: _e,
    ariaValueText: null,
    role: null
  }
}), $x = oa({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: mT,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: Jr,
    acceptCharset: dt,
    accessKey: dt,
    action: null,
    allow: null,
    allowFullScreen: Ve,
    allowPaymentRequest: Ve,
    allowUserMedia: Ve,
    alt: null,
    as: null,
    async: Ve,
    autoCapitalize: null,
    autoComplete: dt,
    autoFocus: Ve,
    autoPlay: Ve,
    blocking: dt,
    capture: null,
    charSet: null,
    checked: Ve,
    cite: null,
    className: dt,
    cols: _e,
    colSpan: null,
    content: null,
    contentEditable: Mt,
    controls: Ve,
    controlsList: dt,
    coords: _e | Jr,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: Ve,
    defer: Ve,
    dir: null,
    dirName: null,
    disabled: Ve,
    download: cT,
    draggable: Mt,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: Ve,
    formTarget: null,
    headers: dt,
    height: _e,
    hidden: Ve,
    high: _e,
    href: null,
    hrefLang: null,
    htmlFor: dt,
    httpEquiv: dt,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: Ve,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: Ve,
    itemId: null,
    itemProp: dt,
    itemRef: dt,
    itemScope: Ve,
    itemType: dt,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: Ve,
    low: _e,
    manifest: null,
    max: null,
    maxLength: _e,
    media: null,
    method: null,
    min: null,
    minLength: _e,
    multiple: Ve,
    muted: Ve,
    name: null,
    nonce: null,
    noModule: Ve,
    noValidate: Ve,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: Ve,
    optimum: _e,
    pattern: null,
    ping: dt,
    placeholder: null,
    playsInline: Ve,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: Ve,
    referrerPolicy: null,
    rel: dt,
    required: Ve,
    reversed: Ve,
    rows: _e,
    rowSpan: _e,
    sandbox: dt,
    scope: null,
    scoped: Ve,
    seamless: Ve,
    selected: Ve,
    shadowRootClonable: Ve,
    shadowRootDelegatesFocus: Ve,
    shadowRootMode: null,
    shape: null,
    size: _e,
    sizes: null,
    slot: null,
    span: _e,
    spellCheck: Mt,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: _e,
    step: null,
    style: null,
    tabIndex: _e,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: Ve,
    useMap: null,
    value: Mt,
    width: _e,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: dt,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: _e,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: _e,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: Ve,
    // Lists. Use CSS to reduce space between items instead
    declare: Ve,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: _e,
    // `<img>` and `<object>`
    leftMargin: _e,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: _e,
    // `<body>`
    marginWidth: _e,
    // `<body>`
    noResize: Ve,
    // `<frame>`
    noHref: Ve,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: Ve,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: Ve,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: _e,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: Mt,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: _e,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: _e,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: Ve,
    disableRemotePlayback: Ve,
    prefix: null,
    property: null,
    results: _e,
    security: null,
    unselectable: null
  }
}), zx = oa({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: fT,
  properties: {
    about: Sn,
    accentHeight: _e,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: _e,
    amplitude: _e,
    arabicForm: null,
    ascent: _e,
    attributeName: null,
    attributeType: null,
    azimuth: _e,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: _e,
    by: null,
    calcMode: null,
    capHeight: _e,
    className: dt,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: _e,
    diffuseConstant: _e,
    direction: null,
    display: null,
    dur: null,
    divisor: _e,
    dominantBaseline: null,
    download: Ve,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: _e,
    enableBackground: null,
    end: null,
    event: null,
    exponent: _e,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: _e,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: Jr,
    g2: Jr,
    glyphName: Jr,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: _e,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: _e,
    horizOriginX: _e,
    horizOriginY: _e,
    id: null,
    ideographic: _e,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: _e,
    k: _e,
    k1: _e,
    k2: _e,
    k3: _e,
    k4: _e,
    kernelMatrix: Sn,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: _e,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: _e,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: _e,
    overlineThickness: _e,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: _e,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: dt,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: _e,
    pointsAtY: _e,
    pointsAtZ: _e,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: Sn,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: Sn,
    rev: Sn,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: Sn,
    requiredFeatures: Sn,
    requiredFonts: Sn,
    requiredFormats: Sn,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: _e,
    specularExponent: _e,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: _e,
    strikethroughThickness: _e,
    string: null,
    stroke: null,
    strokeDashArray: Sn,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: _e,
    strokeOpacity: _e,
    strokeWidth: null,
    style: null,
    surfaceScale: _e,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: Sn,
    tabIndex: _e,
    tableValues: null,
    target: null,
    targetX: _e,
    targetY: _e,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: Sn,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: _e,
    underlineThickness: _e,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: _e,
    values: null,
    vAlphabetic: _e,
    vMathematical: _e,
    vectorEffect: null,
    vHanging: _e,
    vIdeographic: _e,
    version: null,
    vertAdvY: _e,
    vertOriginX: _e,
    vertOriginY: _e,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: _e,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
}), Gx = /^data[-\w.:]+$/i, Mm = /-[a-z]/g, Vx = /[A-Z]/g;
function bT(e, t) {
  const n = Tp(t);
  let r = t, a = Nn;
  if (n in e.normal)
    return e.property[e.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && Gx.test(t)) {
    if (t.charAt(4) === "-") {
      const i = t.slice(5).replace(Mm, Yx);
      r = "data" + i.charAt(0).toUpperCase() + i.slice(1);
    } else {
      const i = t.slice(4);
      if (!Mm.test(i)) {
        let o = i.replace(Vx, Wx);
        o.charAt(0) !== "-" && (o = "-" + o), t = "data" + o;
      }
    }
    a = sf;
  }
  return new a(r, t);
}
function Wx(e) {
  return "-" + e.toLowerCase();
}
function Yx(e) {
  return e.charAt(1).toUpperCase();
}
const Kx = {
  classId: "classID",
  dataType: "datatype",
  itemId: "itemID",
  strokeDashArray: "strokeDasharray",
  strokeDashOffset: "strokeDashoffset",
  strokeLineCap: "strokeLinecap",
  strokeLineJoin: "strokeLinejoin",
  strokeMiterLimit: "strokeMiterlimit",
  typeOf: "typeof",
  xLinkActuate: "xlinkActuate",
  xLinkArcRole: "xlinkArcrole",
  xLinkHref: "xlinkHref",
  xLinkRole: "xlinkRole",
  xLinkShow: "xlinkShow",
  xLinkTitle: "xlinkTitle",
  xLinkType: "xlinkType",
  xmlnsXLink: "xmlnsXlink"
}, ET = uT([pT, dT, gT, hT, $x], "html"), Xa = uT([pT, dT, gT, hT, zx], "svg");
function Pm(e) {
  const t = String(e || "").trim();
  return t ? t.split(/[ \t\n\r\f]+/g) : [];
}
function yT(e) {
  return e.join(" ").trim();
}
var vT = {}, Fm = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, Xx = /\n/g, Zx = /^\s*/, Qx = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, Jx = /^:\s*/, eR = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/, tR = /^[;\s]*/, nR = /^\s+|\s+$/g, rR = `
`, Bm = "/", Um = "*", Ar = "", aR = "comment", iR = "declaration", oR = function(e, t) {
  if (typeof e != "string")
    throw new TypeError("First argument must be a string");
  if (!e) return [];
  t = t || {};
  var n = 1, r = 1;
  function a(h) {
    var E = h.match(Xx);
    E && (n += E.length);
    var I = h.lastIndexOf(rR);
    r = ~I ? h.length - I : r + h.length;
  }
  function i() {
    var h = { line: n, column: r };
    return function(E) {
      return E.position = new o(h), u(), E;
    };
  }
  function o(h) {
    this.start = h, this.end = { line: n, column: r }, this.source = t.source;
  }
  o.prototype.content = e;
  function s(h) {
    var E = new Error(
      t.source + ":" + n + ":" + r + ": " + h
    );
    if (E.reason = h, E.filename = t.source, E.line = n, E.column = r, E.source = e, !t.silent) throw E;
  }
  function l(h) {
    var E = h.exec(e);
    if (E) {
      var I = E[0];
      return a(I), e = e.slice(I.length), E;
    }
  }
  function u() {
    l(Zx);
  }
  function c(h) {
    var E;
    for (h = h || []; E = d(); )
      E !== !1 && h.push(E);
    return h;
  }
  function d() {
    var h = i();
    if (!(Bm != e.charAt(0) || Um != e.charAt(1))) {
      for (var E = 2; Ar != e.charAt(E) && (Um != e.charAt(E) || Bm != e.charAt(E + 1)); )
        ++E;
      if (E += 2, Ar === e.charAt(E - 1))
        return s("End of comment missing");
      var I = e.slice(2, E - 2);
      return r += 2, a(I), e = e.slice(E), r += 2, h({
        type: aR,
        comment: I
      });
    }
  }
  function m() {
    var h = i(), E = l(Qx);
    if (E) {
      if (d(), !l(Jx)) return s("property missing ':'");
      var I = l(eR), x = h({
        type: iR,
        property: jm(E[0].replace(Fm, Ar)),
        value: I ? jm(I[0].replace(Fm, Ar)) : Ar
      });
      return l(tR), x;
    }
  }
  function f() {
    var h = [];
    c(h);
    for (var E; E = m(); )
      E !== !1 && (h.push(E), c(h));
    return h;
  }
  return u(), f();
};
function jm(e) {
  return e ? e.replace(nR, Ar) : Ar;
}
var sR = mn && mn.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(vT, "__esModule", { value: !0 });
var Hm = vT.default = uR, lR = sR(oR);
function uR(e, t) {
  var n = null;
  if (!e || typeof e != "string")
    return n;
  var r = (0, lR.default)(e), a = typeof t == "function";
  return r.forEach(function(i) {
    if (i.type === "declaration") {
      var o = i.property, s = i.value;
      a ? t(o, s, i) : s && (n = n || {}, n[o] = s);
    }
  }), n;
}
const cR = Hm.default || Hm, Ki = TT("end"), Gn = TT("start");
function TT(e) {
  return t;
  function t(n) {
    const r = n && n.position && n.position[e] || {};
    if (typeof r.line == "number" && r.line > 0 && typeof r.column == "number" && r.column > 0)
      return {
        line: r.line,
        column: r.column,
        offset: typeof r.offset == "number" && r.offset > -1 ? r.offset : void 0
      };
  }
}
function dR(e) {
  const t = Gn(e), n = Ki(e);
  if (t && n)
    return { start: t, end: n };
}
function Oa(e) {
  return !e || typeof e != "object" ? "" : "position" in e || "type" in e ? qm(e.position) : "start" in e || "end" in e ? qm(e) : "line" in e || "column" in e ? _p(e) : "";
}
function _p(e) {
  return $m(e && e.line) + ":" + $m(e && e.column);
}
function qm(e) {
  return _p(e && e.start) + "-" + _p(e && e.end);
}
function $m(e) {
  return e && typeof e == "number" ? e : 1;
}
class sn extends Error {
  /**
   * Create a message for `reason`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {Options | null | undefined} [options]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns
   *   Instance of `VFileMessage`.
   */
  // eslint-disable-next-line complexity
  constructor(t, n, r) {
    super(), typeof n == "string" && (r = n, n = void 0);
    let a = "", i = {}, o = !1;
    if (n && ("line" in n && "column" in n ? i = { place: n } : "start" in n && "end" in n ? i = { place: n } : "type" in n ? i = {
      ancestors: [n],
      place: n.position
    } : i = { ...n }), typeof t == "string" ? a = t : !i.cause && t && (o = !0, a = t.message, i.cause = t), !i.ruleId && !i.source && typeof r == "string") {
      const l = r.indexOf(":");
      l === -1 ? i.ruleId = r : (i.source = r.slice(0, l), i.ruleId = r.slice(l + 1));
    }
    if (!i.place && i.ancestors && i.ancestors) {
      const l = i.ancestors[i.ancestors.length - 1];
      l && (i.place = l.position);
    }
    const s = i.place && "start" in i.place ? i.place.start : i.place;
    this.ancestors = i.ancestors || void 0, this.cause = i.cause || void 0, this.column = s ? s.column : void 0, this.fatal = void 0, this.file, this.message = a, this.line = s ? s.line : void 0, this.name = Oa(i.place) || "1:1", this.place = i.place || void 0, this.reason = this.message, this.ruleId = i.ruleId || void 0, this.source = i.source || void 0, this.stack = o && i.cause && typeof i.cause.stack == "string" ? i.cause.stack : "", this.actual, this.expected, this.note, this.url;
  }
}
sn.prototype.file = "";
sn.prototype.name = "";
sn.prototype.reason = "";
sn.prototype.message = "";
sn.prototype.stack = "";
sn.prototype.column = void 0;
sn.prototype.line = void 0;
sn.prototype.ancestors = void 0;
sn.prototype.cause = void 0;
sn.prototype.fatal = void 0;
sn.prototype.place = void 0;
sn.prototype.ruleId = void 0;
sn.prototype.source = void 0;
const lf = {}.hasOwnProperty, pR = /* @__PURE__ */ new Map(), fR = /[A-Z]/g, mR = /-([a-z])/g, gR = /* @__PURE__ */ new Set(["table", "tbody", "thead", "tfoot", "tr"]), hR = /* @__PURE__ */ new Set(["td", "th"]), ST = "https://github.com/syntax-tree/hast-util-to-jsx-runtime";
function bR(e, t) {
  if (!t || t.Fragment === void 0)
    throw new TypeError("Expected `Fragment` in options");
  const n = t.filePath || void 0;
  let r;
  if (t.development) {
    if (typeof t.jsxDEV != "function")
      throw new TypeError(
        "Expected `jsxDEV` in options when `development: true`"
      );
    r = xR(n, t.jsxDEV);
  } else {
    if (typeof t.jsx != "function")
      throw new TypeError("Expected `jsx` in production options");
    if (typeof t.jsxs != "function")
      throw new TypeError("Expected `jsxs` in production options");
    r = AR(n, t.jsx, t.jsxs);
  }
  const a = {
    Fragment: t.Fragment,
    ancestors: [],
    components: t.components || {},
    create: r,
    elementAttributeNameCase: t.elementAttributeNameCase || "react",
    evaluater: t.createEvaluater ? t.createEvaluater() : void 0,
    filePath: n,
    ignoreInvalidStyle: t.ignoreInvalidStyle || !1,
    passKeys: t.passKeys !== !1,
    passNode: t.passNode || !1,
    schema: t.space === "svg" ? Xa : ET,
    stylePropertyNameCase: t.stylePropertyNameCase || "dom",
    tableCellAlignToStyle: t.tableCellAlignToStyle !== !1
  }, i = _T(a, e, void 0);
  return i && typeof i != "string" ? i : a.create(
    e,
    a.Fragment,
    { children: i || void 0 },
    void 0
  );
}
function _T(e, t, n) {
  if (t.type === "element")
    return ER(e, t, n);
  if (t.type === "mdxFlowExpression" || t.type === "mdxTextExpression")
    return yR(e, t);
  if (t.type === "mdxJsxFlowElement" || t.type === "mdxJsxTextElement")
    return TR(e, t, n);
  if (t.type === "mdxjsEsm")
    return vR(e, t);
  if (t.type === "root")
    return SR(e, t, n);
  if (t.type === "text")
    return _R(e, t);
}
function ER(e, t, n) {
  const r = e.schema;
  let a = r;
  t.tagName.toLowerCase() === "svg" && r.space === "html" && (a = Xa, e.schema = a), e.ancestors.push(t);
  const i = xT(e, t.tagName, !1), o = RR(e, t);
  let s = cf(e, t);
  return gR.has(t.tagName) && (s = s.filter(function(l) {
    return typeof l == "string" ? !jx(l) : !0;
  })), AT(e, o, i, t), uf(o, s), e.ancestors.pop(), e.schema = r, e.create(t, i, o, n);
}
function yR(e, t) {
  if (t.data && t.data.estree && e.evaluater) {
    const r = t.data.estree.body[0];
    return r.type, /** @type {Child | undefined} */
    e.evaluater.evaluateExpression(r.expression);
  }
  Ha(e, t.position);
}
function vR(e, t) {
  if (t.data && t.data.estree && e.evaluater)
    return (
      /** @type {Child | undefined} */
      e.evaluater.evaluateProgram(t.data.estree)
    );
  Ha(e, t.position);
}
function TR(e, t, n) {
  const r = e.schema;
  let a = r;
  t.name === "svg" && r.space === "html" && (a = Xa, e.schema = a), e.ancestors.push(t);
  const i = t.name === null ? e.Fragment : xT(e, t.name, !0), o = IR(e, t), s = cf(e, t);
  return AT(e, o, i, t), uf(o, s), e.ancestors.pop(), e.schema = r, e.create(t, i, o, n);
}
function SR(e, t, n) {
  const r = {};
  return uf(r, cf(e, t)), e.create(t, e.Fragment, r, n);
}
function _R(e, t) {
  return t.value;
}
function AT(e, t, n, r) {
  typeof n != "string" && n !== e.Fragment && e.passNode && (t.node = r);
}
function uf(e, t) {
  if (t.length > 0) {
    const n = t.length > 1 ? t : t[0];
    n && (e.children = n);
  }
}
function AR(e, t, n) {
  return r;
  function r(a, i, o, s) {
    const u = Array.isArray(o.children) ? n : t;
    return s ? u(i, o, s) : u(i, o);
  }
}
function xR(e, t) {
  return n;
  function n(r, a, i, o) {
    const s = Array.isArray(i.children), l = Gn(r);
    return t(
      a,
      i,
      o,
      s,
      {
        columnNumber: l ? l.column - 1 : void 0,
        fileName: e,
        lineNumber: l ? l.line : void 0
      },
      void 0
    );
  }
}
function RR(e, t) {
  const n = {};
  let r, a;
  for (a in t.properties)
    if (a !== "children" && lf.call(t.properties, a)) {
      const i = wR(e, a, t.properties[a]);
      if (i) {
        const [o, s] = i;
        e.tableCellAlignToStyle && o === "align" && typeof s == "string" && hR.has(t.tagName) ? r = s : n[o] = s;
      }
    }
  if (r) {
    const i = (
      /** @type {Style} */
      n.style || (n.style = {})
    );
    i[e.stylePropertyNameCase === "css" ? "text-align" : "textAlign"] = r;
  }
  return n;
}
function IR(e, t) {
  const n = {};
  for (const r of t.attributes)
    if (r.type === "mdxJsxExpressionAttribute")
      if (r.data && r.data.estree && e.evaluater) {
        const i = r.data.estree.body[0];
        i.type;
        const o = i.expression;
        o.type;
        const s = o.properties[0];
        s.type, Object.assign(
          n,
          e.evaluater.evaluateExpression(s.argument)
        );
      } else
        Ha(e, t.position);
    else {
      const a = r.name;
      let i;
      if (r.value && typeof r.value == "object")
        if (r.value.data && r.value.data.estree && e.evaluater) {
          const s = r.value.data.estree.body[0];
          s.type, i = e.evaluater.evaluateExpression(s.expression);
        } else
          Ha(e, t.position);
      else
        i = r.value === null ? !0 : r.value;
      n[a] = /** @type {Props[keyof Props]} */
      i;
    }
  return n;
}
function cf(e, t) {
  const n = [];
  let r = -1;
  const a = e.passKeys ? /* @__PURE__ */ new Map() : pR;
  for (; ++r < t.children.length; ) {
    const i = t.children[r];
    let o;
    if (e.passKeys) {
      const l = i.type === "element" ? i.tagName : i.type === "mdxJsxFlowElement" || i.type === "mdxJsxTextElement" ? i.name : void 0;
      if (l) {
        const u = a.get(l) || 0;
        o = l + "-" + u, a.set(l, u + 1);
      }
    }
    const s = _T(e, i, o);
    s !== void 0 && n.push(s);
  }
  return n;
}
function wR(e, t, n) {
  const r = bT(e.schema, t);
  if (!(n == null || typeof n == "number" && Number.isNaN(n))) {
    if (Array.isArray(n) && (n = r.commaSeparated ? lT(n) : yT(n)), r.property === "style") {
      let a = typeof n == "object" ? n : CR(e, String(n));
      return e.stylePropertyNameCase === "css" && (a = kR(a)), ["style", a];
    }
    return [
      e.elementAttributeNameCase === "react" && r.space ? Kx[r.property] || r.property : r.attribute,
      n
    ];
  }
}
function CR(e, t) {
  const n = {};
  try {
    cR(t, r);
  } catch (a) {
    if (!e.ignoreInvalidStyle) {
      const i = (
        /** @type {Error} */
        a
      ), o = new sn("Cannot parse `style` attribute", {
        ancestors: e.ancestors,
        cause: i,
        ruleId: "style",
        source: "hast-util-to-jsx-runtime"
      });
      throw o.file = e.filePath || void 0, o.url = ST + "#cannot-parse-style-attribute", o;
    }
  }
  return n;
  function r(a, i) {
    let o = a;
    o.slice(0, 2) !== "--" && (o.slice(0, 4) === "-ms-" && (o = "ms-" + o.slice(4)), o = o.replace(mR, OR)), n[o] = i;
  }
}
function xT(e, t, n) {
  let r;
  if (!n)
    r = { type: "Literal", value: t };
  else if (t.includes(".")) {
    const a = t.split(".");
    let i = -1, o;
    for (; ++i < a.length; ) {
      const s = Om(a[i]) ? { type: "Identifier", name: a[i] } : { type: "Literal", value: a[i] };
      o = o ? {
        type: "MemberExpression",
        object: o,
        property: s,
        computed: !!(i && s.type === "Literal"),
        optional: !1
      } : s;
    }
    r = o;
  } else
    r = Om(t) && !/^[a-z]/.test(t) ? { type: "Identifier", name: t } : { type: "Literal", value: t };
  if (r.type === "Literal") {
    const a = (
      /** @type {keyof JSX.IntrinsicElements} */
      r.value
    );
    return lf.call(e.components, a) ? e.components[a] : a;
  }
  if (e.evaluater)
    return e.evaluater.evaluateExpression(r);
  Ha(e);
}
function Ha(e, t) {
  const n = new sn(
    "Cannot handle MDX estrees without `createEvaluater`",
    {
      ancestors: e.ancestors,
      place: t,
      ruleId: "mdx-estree",
      source: "hast-util-to-jsx-runtime"
    }
  );
  throw n.file = e.filePath || void 0, n.url = ST + "#cannot-handle-mdx-estrees-without-createevaluater", n;
}
function kR(e) {
  const t = {};
  let n;
  for (n in e)
    lf.call(e, n) && (t[NR(n)] = e[n]);
  return t;
}
function NR(e) {
  let t = e.replace(fR, LR);
  return t.slice(0, 3) === "ms-" && (t = "-" + t), t;
}
function OR(e, t) {
  return t.toUpperCase();
}
function LR(e) {
  return "-" + e.toLowerCase();
}
const Do = {
  action: ["form"],
  cite: ["blockquote", "del", "ins", "q"],
  data: ["object"],
  formAction: ["button", "input"],
  href: ["a", "area", "base", "link"],
  icon: ["menuitem"],
  itemId: null,
  manifest: ["html"],
  ping: ["a", "area"],
  poster: ["video"],
  src: [
    "audio",
    "embed",
    "iframe",
    "img",
    "input",
    "script",
    "source",
    "track",
    "video"
  ]
}, DR = {};
function df(e, t) {
  const n = DR, r = typeof n.includeImageAlt == "boolean" ? n.includeImageAlt : !0, a = typeof n.includeHtml == "boolean" ? n.includeHtml : !0;
  return RT(e, r, a);
}
function RT(e, t, n) {
  if (MR(e)) {
    if ("value" in e)
      return e.type === "html" && !n ? "" : e.value;
    if (t && "alt" in e && e.alt)
      return e.alt;
    if ("children" in e)
      return zm(e.children, t, n);
  }
  return Array.isArray(e) ? zm(e, t, n) : "";
}
function zm(e, t, n) {
  const r = [];
  let a = -1;
  for (; ++a < e.length; )
    r[a] = RT(e[a], t, n);
  return r.join("");
}
function MR(e) {
  return !!(e && typeof e == "object");
}
const Gm = document.createElement("i");
function pf(e) {
  const t = "&" + e + ";";
  Gm.innerHTML = t;
  const n = Gm.textContent;
  return n.charCodeAt(n.length - 1) === 59 && e !== "semi" || n === t ? !1 : n;
}
function xn(e, t, n, r) {
  const a = e.length;
  let i = 0, o;
  if (t < 0 ? t = -t > a ? 0 : a + t : t = t > a ? a : t, n = n > 0 ? n : 0, r.length < 1e4)
    o = Array.from(r), o.unshift(t, n), e.splice(...o);
  else
    for (n && e.splice(t, n); i < r.length; )
      o = r.slice(i, i + 1e4), o.unshift(t, 0), e.splice(...o), i += 1e4, t += 1e4;
}
function wn(e, t) {
  return e.length > 0 ? (xn(e, e.length, 0, t), e) : t;
}
const Vm = {}.hasOwnProperty;
function IT(e) {
  const t = {};
  let n = -1;
  for (; ++n < e.length; )
    PR(t, e[n]);
  return t;
}
function PR(e, t) {
  let n;
  for (n in t) {
    const a = (Vm.call(e, n) ? e[n] : void 0) || (e[n] = {}), i = t[n];
    let o;
    if (i)
      for (o in i) {
        Vm.call(a, o) || (a[o] = []);
        const s = i[o];
        FR(
          // @ts-expect-error Looks like a list.
          a[o],
          Array.isArray(s) ? s : s ? [s] : []
        );
      }
  }
}
function FR(e, t) {
  let n = -1;
  const r = [];
  for (; ++n < t.length; )
    (t[n].add === "after" ? e : r).push(t[n]);
  xn(e, 0, 0, r);
}
function wT(e, t) {
  const n = Number.parseInt(e, t);
  return (
    // C0 except for HT, LF, FF, CR, space.
    n < 9 || n === 11 || n > 13 && n < 32 || // Control character (DEL) of C0, and C1 controls.
    n > 126 && n < 160 || // Lone high surrogates and low surrogates.
    n > 55295 && n < 57344 || // Noncharacters.
    n > 64975 && n < 65008 || /* eslint-disable no-bitwise */
    (n & 65535) === 65535 || (n & 65535) === 65534 || /* eslint-enable no-bitwise */
    // Out of range
    n > 1114111 ? "�" : String.fromCodePoint(n)
  );
}
function Bn(e) {
  return e.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
const fn = fr(/[A-Za-z]/), on = fr(/[\dA-Za-z]/), BR = fr(/[#-'*+\--9=?A-Z^-~]/);
function Mi(e) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    e !== null && (e < 32 || e === 127)
  );
}
const Ap = fr(/\d/), UR = fr(/[\dA-Fa-f]/), jR = fr(/[!-/:-@[-`{-~]/);
function Me(e) {
  return e !== null && e < -2;
}
function ut(e) {
  return e !== null && (e < 0 || e === 32);
}
function Je(e) {
  return e === -2 || e === -1 || e === 32;
}
const Xi = fr(new RegExp("\\p{P}|\\p{S}", "u")), Nr = fr(/\s/);
function fr(e) {
  return t;
  function t(n) {
    return n !== null && n > -1 && e.test(String.fromCharCode(n));
  }
}
function sa(e) {
  const t = [];
  let n = -1, r = 0, a = 0;
  for (; ++n < e.length; ) {
    const i = e.charCodeAt(n);
    let o = "";
    if (i === 37 && on(e.charCodeAt(n + 1)) && on(e.charCodeAt(n + 2)))
      a = 2;
    else if (i < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(i)) || (o = String.fromCharCode(i));
    else if (i > 55295 && i < 57344) {
      const s = e.charCodeAt(n + 1);
      i < 56320 && s > 56319 && s < 57344 ? (o = String.fromCharCode(i, s), a = 1) : o = "�";
    } else
      o = String.fromCharCode(i);
    o && (t.push(e.slice(r, n), encodeURIComponent(o)), r = n + a + 1, o = ""), a && (n += a, a = 0);
  }
  return t.join("") + e.slice(r);
}
function nt(e, t, n, r) {
  const a = r ? r - 1 : Number.POSITIVE_INFINITY;
  let i = 0;
  return o;
  function o(l) {
    return Je(l) ? (e.enter(n), s(l)) : t(l);
  }
  function s(l) {
    return Je(l) && i++ < a ? (e.consume(l), s) : (e.exit(n), t(l));
  }
}
const HR = {
  tokenize: qR
};
function qR(e) {
  const t = e.attempt(this.parser.constructs.contentInitial, r, a);
  let n;
  return t;
  function r(s) {
    if (s === null) {
      e.consume(s);
      return;
    }
    return e.enter("lineEnding"), e.consume(s), e.exit("lineEnding"), nt(e, t, "linePrefix");
  }
  function a(s) {
    return e.enter("paragraph"), i(s);
  }
  function i(s) {
    const l = e.enter("chunkText", {
      contentType: "text",
      previous: n
    });
    return n && (n.next = l), n = l, o(s);
  }
  function o(s) {
    if (s === null) {
      e.exit("chunkText"), e.exit("paragraph"), e.consume(s);
      return;
    }
    return Me(s) ? (e.consume(s), e.exit("chunkText"), i) : (e.consume(s), o);
  }
}
const $R = {
  tokenize: zR
}, Wm = {
  tokenize: GR
};
function zR(e) {
  const t = this, n = [];
  let r = 0, a, i, o;
  return s;
  function s(S) {
    if (r < n.length) {
      const g = n[r];
      return t.containerState = g[1], e.attempt(g[0].continuation, l, u)(S);
    }
    return u(S);
  }
  function l(S) {
    if (r++, t.containerState._closeFlow) {
      t.containerState._closeFlow = void 0, a && v();
      const g = t.events.length;
      let y = g, T;
      for (; y--; )
        if (t.events[y][0] === "exit" && t.events[y][1].type === "chunkFlow") {
          T = t.events[y][1].end;
          break;
        }
      x(r);
      let j = g;
      for (; j < t.events.length; )
        t.events[j][1].end = {
          ...T
        }, j++;
      return xn(t.events, y + 1, 0, t.events.slice(g)), t.events.length = j, u(S);
    }
    return s(S);
  }
  function u(S) {
    if (r === n.length) {
      if (!a)
        return m(S);
      if (a.currentConstruct && a.currentConstruct.concrete)
        return h(S);
      t.interrupt = !!(a.currentConstruct && !a._gfmTableDynamicInterruptHack);
    }
    return t.containerState = {}, e.check(Wm, c, d)(S);
  }
  function c(S) {
    return a && v(), x(r), m(S);
  }
  function d(S) {
    return t.parser.lazy[t.now().line] = r !== n.length, o = t.now().offset, h(S);
  }
  function m(S) {
    return t.containerState = {}, e.attempt(Wm, f, h)(S);
  }
  function f(S) {
    return r++, n.push([t.currentConstruct, t.containerState]), m(S);
  }
  function h(S) {
    if (S === null) {
      a && v(), x(0), e.consume(S);
      return;
    }
    return a = a || t.parser.flow(t.now()), e.enter("chunkFlow", {
      _tokenizer: a,
      contentType: "flow",
      previous: i
    }), E(S);
  }
  function E(S) {
    if (S === null) {
      I(e.exit("chunkFlow"), !0), x(0), e.consume(S);
      return;
    }
    return Me(S) ? (e.consume(S), I(e.exit("chunkFlow")), r = 0, t.interrupt = void 0, s) : (e.consume(S), E);
  }
  function I(S, g) {
    const y = t.sliceStream(S);
    if (g && y.push(null), S.previous = i, i && (i.next = S), i = S, a.defineSkip(S.start), a.write(y), t.parser.lazy[S.start.line]) {
      let T = a.events.length;
      for (; T--; )
        if (
          // The token starts before the line ending…
          a.events[T][1].start.offset < o && // …and either is not ended yet…
          (!a.events[T][1].end || // …or ends after it.
          a.events[T][1].end.offset > o)
        )
          return;
      const j = t.events.length;
      let $ = j, D, w;
      for (; $--; )
        if (t.events[$][0] === "exit" && t.events[$][1].type === "chunkFlow") {
          if (D) {
            w = t.events[$][1].end;
            break;
          }
          D = !0;
        }
      for (x(r), T = j; T < t.events.length; )
        t.events[T][1].end = {
          ...w
        }, T++;
      xn(t.events, $ + 1, 0, t.events.slice(j)), t.events.length = T;
    }
  }
  function x(S) {
    let g = n.length;
    for (; g-- > S; ) {
      const y = n[g];
      t.containerState = y[1], y[0].exit.call(t, e);
    }
    n.length = S;
  }
  function v() {
    a.write([null]), i = void 0, a = void 0, t.containerState._closeFlow = void 0;
  }
}
function GR(e, t, n) {
  return nt(e, e.attempt(this.parser.constructs.document, t, n), "linePrefix", this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4);
}
function ta(e) {
  if (e === null || ut(e) || Nr(e))
    return 1;
  if (Xi(e))
    return 2;
}
function Zi(e, t, n) {
  const r = [];
  let a = -1;
  for (; ++a < e.length; ) {
    const i = e[a].resolveAll;
    i && !r.includes(i) && (t = i(t, n), r.push(i));
  }
  return t;
}
const xp = {
  name: "attention",
  resolveAll: VR,
  tokenize: WR
};
function VR(e, t) {
  let n = -1, r, a, i, o, s, l, u, c;
  for (; ++n < e.length; )
    if (e[n][0] === "enter" && e[n][1].type === "attentionSequence" && e[n][1]._close) {
      for (r = n; r--; )
        if (e[r][0] === "exit" && e[r][1].type === "attentionSequence" && e[r][1]._open && // If the markers are the same:
        t.sliceSerialize(e[r][1]).charCodeAt(0) === t.sliceSerialize(e[n][1]).charCodeAt(0)) {
          if ((e[r][1]._close || e[n][1]._open) && (e[n][1].end.offset - e[n][1].start.offset) % 3 && !((e[r][1].end.offset - e[r][1].start.offset + e[n][1].end.offset - e[n][1].start.offset) % 3))
            continue;
          l = e[r][1].end.offset - e[r][1].start.offset > 1 && e[n][1].end.offset - e[n][1].start.offset > 1 ? 2 : 1;
          const d = {
            ...e[r][1].end
          }, m = {
            ...e[n][1].start
          };
          Ym(d, -l), Ym(m, l), o = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: d,
            end: {
              ...e[r][1].end
            }
          }, s = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: {
              ...e[n][1].start
            },
            end: m
          }, i = {
            type: l > 1 ? "strongText" : "emphasisText",
            start: {
              ...e[r][1].end
            },
            end: {
              ...e[n][1].start
            }
          }, a = {
            type: l > 1 ? "strong" : "emphasis",
            start: {
              ...o.start
            },
            end: {
              ...s.end
            }
          }, e[r][1].end = {
            ...o.start
          }, e[n][1].start = {
            ...s.end
          }, u = [], e[r][1].end.offset - e[r][1].start.offset && (u = wn(u, [["enter", e[r][1], t], ["exit", e[r][1], t]])), u = wn(u, [["enter", a, t], ["enter", o, t], ["exit", o, t], ["enter", i, t]]), u = wn(u, Zi(t.parser.constructs.insideSpan.null, e.slice(r + 1, n), t)), u = wn(u, [["exit", i, t], ["enter", s, t], ["exit", s, t], ["exit", a, t]]), e[n][1].end.offset - e[n][1].start.offset ? (c = 2, u = wn(u, [["enter", e[n][1], t], ["exit", e[n][1], t]])) : c = 0, xn(e, r - 1, n - r + 3, u), n = r + u.length - c - 2;
          break;
        }
    }
  for (n = -1; ++n < e.length; )
    e[n][1].type === "attentionSequence" && (e[n][1].type = "data");
  return e;
}
function WR(e, t) {
  const n = this.parser.constructs.attentionMarkers.null, r = this.previous, a = ta(r);
  let i;
  return o;
  function o(l) {
    return i = l, e.enter("attentionSequence"), s(l);
  }
  function s(l) {
    if (l === i)
      return e.consume(l), s;
    const u = e.exit("attentionSequence"), c = ta(l), d = !c || c === 2 && a || n.includes(l), m = !a || a === 2 && c || n.includes(r);
    return u._open = !!(i === 42 ? d : d && (a || !m)), u._close = !!(i === 42 ? m : m && (c || !d)), t(l);
  }
}
function Ym(e, t) {
  e.column += t, e.offset += t, e._bufferIndex += t;
}
const YR = {
  name: "autolink",
  tokenize: KR
};
function KR(e, t, n) {
  let r = 0;
  return a;
  function a(f) {
    return e.enter("autolink"), e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.enter("autolinkProtocol"), i;
  }
  function i(f) {
    return fn(f) ? (e.consume(f), o) : f === 64 ? n(f) : u(f);
  }
  function o(f) {
    return f === 43 || f === 45 || f === 46 || on(f) ? (r = 1, s(f)) : u(f);
  }
  function s(f) {
    return f === 58 ? (e.consume(f), r = 0, l) : (f === 43 || f === 45 || f === 46 || on(f)) && r++ < 32 ? (e.consume(f), s) : (r = 0, u(f));
  }
  function l(f) {
    return f === 62 ? (e.exit("autolinkProtocol"), e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.exit("autolink"), t) : f === null || f === 32 || f === 60 || Mi(f) ? n(f) : (e.consume(f), l);
  }
  function u(f) {
    return f === 64 ? (e.consume(f), c) : BR(f) ? (e.consume(f), u) : n(f);
  }
  function c(f) {
    return on(f) ? d(f) : n(f);
  }
  function d(f) {
    return f === 46 ? (e.consume(f), r = 0, c) : f === 62 ? (e.exit("autolinkProtocol").type = "autolinkEmail", e.enter("autolinkMarker"), e.consume(f), e.exit("autolinkMarker"), e.exit("autolink"), t) : m(f);
  }
  function m(f) {
    if ((f === 45 || on(f)) && r++ < 63) {
      const h = f === 45 ? m : d;
      return e.consume(f), h;
    }
    return n(f);
  }
}
const Za = {
  partial: !0,
  tokenize: XR
};
function XR(e, t, n) {
  return r;
  function r(i) {
    return Je(i) ? nt(e, a, "linePrefix")(i) : a(i);
  }
  function a(i) {
    return i === null || Me(i) ? t(i) : n(i);
  }
}
const CT = {
  continuation: {
    tokenize: QR
  },
  exit: JR,
  name: "blockQuote",
  tokenize: ZR
};
function ZR(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    if (o === 62) {
      const s = r.containerState;
      return s.open || (e.enter("blockQuote", {
        _container: !0
      }), s.open = !0), e.enter("blockQuotePrefix"), e.enter("blockQuoteMarker"), e.consume(o), e.exit("blockQuoteMarker"), i;
    }
    return n(o);
  }
  function i(o) {
    return Je(o) ? (e.enter("blockQuotePrefixWhitespace"), e.consume(o), e.exit("blockQuotePrefixWhitespace"), e.exit("blockQuotePrefix"), t) : (e.exit("blockQuotePrefix"), t(o));
  }
}
function QR(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return Je(o) ? nt(e, i, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(o) : i(o);
  }
  function i(o) {
    return e.attempt(CT, t, n)(o);
  }
}
function JR(e) {
  e.exit("blockQuote");
}
const kT = {
  name: "characterEscape",
  tokenize: eI
};
function eI(e, t, n) {
  return r;
  function r(i) {
    return e.enter("characterEscape"), e.enter("escapeMarker"), e.consume(i), e.exit("escapeMarker"), a;
  }
  function a(i) {
    return jR(i) ? (e.enter("characterEscapeValue"), e.consume(i), e.exit("characterEscapeValue"), e.exit("characterEscape"), t) : n(i);
  }
}
const NT = {
  name: "characterReference",
  tokenize: tI
};
function tI(e, t, n) {
  const r = this;
  let a = 0, i, o;
  return s;
  function s(d) {
    return e.enter("characterReference"), e.enter("characterReferenceMarker"), e.consume(d), e.exit("characterReferenceMarker"), l;
  }
  function l(d) {
    return d === 35 ? (e.enter("characterReferenceMarkerNumeric"), e.consume(d), e.exit("characterReferenceMarkerNumeric"), u) : (e.enter("characterReferenceValue"), i = 31, o = on, c(d));
  }
  function u(d) {
    return d === 88 || d === 120 ? (e.enter("characterReferenceMarkerHexadecimal"), e.consume(d), e.exit("characterReferenceMarkerHexadecimal"), e.enter("characterReferenceValue"), i = 6, o = UR, c) : (e.enter("characterReferenceValue"), i = 7, o = Ap, c(d));
  }
  function c(d) {
    if (d === 59 && a) {
      const m = e.exit("characterReferenceValue");
      return o === on && !pf(r.sliceSerialize(m)) ? n(d) : (e.enter("characterReferenceMarker"), e.consume(d), e.exit("characterReferenceMarker"), e.exit("characterReference"), t);
    }
    return o(d) && a++ < i ? (e.consume(d), c) : n(d);
  }
}
const Km = {
  partial: !0,
  tokenize: rI
}, Xm = {
  concrete: !0,
  name: "codeFenced",
  tokenize: nI
};
function nI(e, t, n) {
  const r = this, a = {
    partial: !0,
    tokenize: y
  };
  let i = 0, o = 0, s;
  return l;
  function l(T) {
    return u(T);
  }
  function u(T) {
    const j = r.events[r.events.length - 1];
    return i = j && j[1].type === "linePrefix" ? j[2].sliceSerialize(j[1], !0).length : 0, s = T, e.enter("codeFenced"), e.enter("codeFencedFence"), e.enter("codeFencedFenceSequence"), c(T);
  }
  function c(T) {
    return T === s ? (o++, e.consume(T), c) : o < 3 ? n(T) : (e.exit("codeFencedFenceSequence"), Je(T) ? nt(e, d, "whitespace")(T) : d(T));
  }
  function d(T) {
    return T === null || Me(T) ? (e.exit("codeFencedFence"), r.interrupt ? t(T) : e.check(Km, E, g)(T)) : (e.enter("codeFencedFenceInfo"), e.enter("chunkString", {
      contentType: "string"
    }), m(T));
  }
  function m(T) {
    return T === null || Me(T) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), d(T)) : Je(T) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), nt(e, f, "whitespace")(T)) : T === 96 && T === s ? n(T) : (e.consume(T), m);
  }
  function f(T) {
    return T === null || Me(T) ? d(T) : (e.enter("codeFencedFenceMeta"), e.enter("chunkString", {
      contentType: "string"
    }), h(T));
  }
  function h(T) {
    return T === null || Me(T) ? (e.exit("chunkString"), e.exit("codeFencedFenceMeta"), d(T)) : T === 96 && T === s ? n(T) : (e.consume(T), h);
  }
  function E(T) {
    return e.attempt(a, g, I)(T);
  }
  function I(T) {
    return e.enter("lineEnding"), e.consume(T), e.exit("lineEnding"), x;
  }
  function x(T) {
    return i > 0 && Je(T) ? nt(e, v, "linePrefix", i + 1)(T) : v(T);
  }
  function v(T) {
    return T === null || Me(T) ? e.check(Km, E, g)(T) : (e.enter("codeFlowValue"), S(T));
  }
  function S(T) {
    return T === null || Me(T) ? (e.exit("codeFlowValue"), v(T)) : (e.consume(T), S);
  }
  function g(T) {
    return e.exit("codeFenced"), t(T);
  }
  function y(T, j, $) {
    let D = 0;
    return w;
    function w(ae) {
      return T.enter("lineEnding"), T.consume(ae), T.exit("lineEnding"), G;
    }
    function G(ae) {
      return T.enter("codeFencedFence"), Je(ae) ? nt(T, Q, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(ae) : Q(ae);
    }
    function Q(ae) {
      return ae === s ? (T.enter("codeFencedFenceSequence"), z(ae)) : $(ae);
    }
    function z(ae) {
      return ae === s ? (D++, T.consume(ae), z) : D >= o ? (T.exit("codeFencedFenceSequence"), Je(ae) ? nt(T, ce, "whitespace")(ae) : ce(ae)) : $(ae);
    }
    function ce(ae) {
      return ae === null || Me(ae) ? (T.exit("codeFencedFence"), j(ae)) : $(ae);
    }
  }
}
function rI(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return o === null ? n(o) : (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), i);
  }
  function i(o) {
    return r.parser.lazy[r.now().line] ? n(o) : t(o);
  }
}
const Mo = {
  name: "codeIndented",
  tokenize: iI
}, aI = {
  partial: !0,
  tokenize: oI
};
function iI(e, t, n) {
  const r = this;
  return a;
  function a(u) {
    return e.enter("codeIndented"), nt(e, i, "linePrefix", 5)(u);
  }
  function i(u) {
    const c = r.events[r.events.length - 1];
    return c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? o(u) : n(u);
  }
  function o(u) {
    return u === null ? l(u) : Me(u) ? e.attempt(aI, o, l)(u) : (e.enter("codeFlowValue"), s(u));
  }
  function s(u) {
    return u === null || Me(u) ? (e.exit("codeFlowValue"), o(u)) : (e.consume(u), s);
  }
  function l(u) {
    return e.exit("codeIndented"), t(u);
  }
}
function oI(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return r.parser.lazy[r.now().line] ? n(o) : Me(o) ? (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), a) : nt(e, i, "linePrefix", 5)(o);
  }
  function i(o) {
    const s = r.events[r.events.length - 1];
    return s && s[1].type === "linePrefix" && s[2].sliceSerialize(s[1], !0).length >= 4 ? t(o) : Me(o) ? a(o) : n(o);
  }
}
const sI = {
  name: "codeText",
  previous: uI,
  resolve: lI,
  tokenize: cI
};
function lI(e) {
  let t = e.length - 4, n = 3, r, a;
  if ((e[n][1].type === "lineEnding" || e[n][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
    for (r = n; ++r < t; )
      if (e[r][1].type === "codeTextData") {
        e[n][1].type = "codeTextPadding", e[t][1].type = "codeTextPadding", n += 2, t -= 2;
        break;
      }
  }
  for (r = n - 1, t++; ++r <= t; )
    a === void 0 ? r !== t && e[r][1].type !== "lineEnding" && (a = r) : (r === t || e[r][1].type === "lineEnding") && (e[a][1].type = "codeTextData", r !== a + 2 && (e[a][1].end = e[r - 1][1].end, e.splice(a + 2, r - a - 2), t -= r - a - 2, r = a + 2), a = void 0);
  return e;
}
function uI(e) {
  return e !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function cI(e, t, n) {
  let r = 0, a, i;
  return o;
  function o(d) {
    return e.enter("codeText"), e.enter("codeTextSequence"), s(d);
  }
  function s(d) {
    return d === 96 ? (e.consume(d), r++, s) : (e.exit("codeTextSequence"), l(d));
  }
  function l(d) {
    return d === null ? n(d) : d === 32 ? (e.enter("space"), e.consume(d), e.exit("space"), l) : d === 96 ? (i = e.enter("codeTextSequence"), a = 0, c(d)) : Me(d) ? (e.enter("lineEnding"), e.consume(d), e.exit("lineEnding"), l) : (e.enter("codeTextData"), u(d));
  }
  function u(d) {
    return d === null || d === 32 || d === 96 || Me(d) ? (e.exit("codeTextData"), l(d)) : (e.consume(d), u);
  }
  function c(d) {
    return d === 96 ? (e.consume(d), a++, c) : a === r ? (e.exit("codeTextSequence"), e.exit("codeText"), t(d)) : (i.type = "codeTextData", u(d));
  }
}
class dI {
  /**
   * @param {ReadonlyArray<T> | null | undefined} [initial]
   *   Initial items (optional).
   * @returns
   *   Splice buffer.
   */
  constructor(t) {
    this.left = t ? [...t] : [], this.right = [];
  }
  /**
   * Array access;
   * does not move the cursor.
   *
   * @param {number} index
   *   Index.
   * @return {T}
   *   Item.
   */
  get(t) {
    if (t < 0 || t >= this.left.length + this.right.length)
      throw new RangeError("Cannot access index `" + t + "` in a splice buffer of size `" + (this.left.length + this.right.length) + "`");
    return t < this.left.length ? this.left[t] : this.right[this.right.length - t + this.left.length - 1];
  }
  /**
   * The length of the splice buffer, one greater than the largest index in the
   * array.
   */
  get length() {
    return this.left.length + this.right.length;
  }
  /**
   * Remove and return `list[0]`;
   * moves the cursor to `0`.
   *
   * @returns {T | undefined}
   *   Item, optional.
   */
  shift() {
    return this.setCursor(0), this.right.pop();
  }
  /**
   * Slice the buffer to get an array;
   * does not move the cursor.
   *
   * @param {number} start
   *   Start.
   * @param {number | null | undefined} [end]
   *   End (optional).
   * @returns {Array<T>}
   *   Array of items.
   */
  slice(t, n) {
    const r = n ?? Number.POSITIVE_INFINITY;
    return r < this.left.length ? this.left.slice(t, r) : t > this.left.length ? this.right.slice(this.right.length - r + this.left.length, this.right.length - t + this.left.length).reverse() : this.left.slice(t).concat(this.right.slice(this.right.length - r + this.left.length).reverse());
  }
  /**
   * Mimics the behavior of Array.prototype.splice() except for the change of
   * interface necessary to avoid segfaults when patching in very large arrays.
   *
   * This operation moves cursor is moved to `start` and results in the cursor
   * placed after any inserted items.
   *
   * @param {number} start
   *   Start;
   *   zero-based index at which to start changing the array;
   *   negative numbers count backwards from the end of the array and values
   *   that are out-of bounds are clamped to the appropriate end of the array.
   * @param {number | null | undefined} [deleteCount=0]
   *   Delete count (default: `0`);
   *   maximum number of elements to delete, starting from start.
   * @param {Array<T> | null | undefined} [items=[]]
   *   Items to include in place of the deleted items (default: `[]`).
   * @return {Array<T>}
   *   Any removed items.
   */
  splice(t, n, r) {
    const a = n || 0;
    this.setCursor(Math.trunc(t));
    const i = this.right.splice(this.right.length - a, Number.POSITIVE_INFINITY);
    return r && Sa(this.left, r), i.reverse();
  }
  /**
   * Remove and return the highest-numbered item in the array, so
   * `list[list.length - 1]`;
   * Moves the cursor to `length`.
   *
   * @returns {T | undefined}
   *   Item, optional.
   */
  pop() {
    return this.setCursor(Number.POSITIVE_INFINITY), this.left.pop();
  }
  /**
   * Inserts a single item to the high-numbered side of the array;
   * moves the cursor to `length`.
   *
   * @param {T} item
   *   Item.
   * @returns {undefined}
   *   Nothing.
   */
  push(t) {
    this.setCursor(Number.POSITIVE_INFINITY), this.left.push(t);
  }
  /**
   * Inserts many items to the high-numbered side of the array.
   * Moves the cursor to `length`.
   *
   * @param {Array<T>} items
   *   Items.
   * @returns {undefined}
   *   Nothing.
   */
  pushMany(t) {
    this.setCursor(Number.POSITIVE_INFINITY), Sa(this.left, t);
  }
  /**
   * Inserts a single item to the low-numbered side of the array;
   * Moves the cursor to `0`.
   *
   * @param {T} item
   *   Item.
   * @returns {undefined}
   *   Nothing.
   */
  unshift(t) {
    this.setCursor(0), this.right.push(t);
  }
  /**
   * Inserts many items to the low-numbered side of the array;
   * moves the cursor to `0`.
   *
   * @param {Array<T>} items
   *   Items.
   * @returns {undefined}
   *   Nothing.
   */
  unshiftMany(t) {
    this.setCursor(0), Sa(this.right, t.reverse());
  }
  /**
   * Move the cursor to a specific position in the array. Requires
   * time proportional to the distance moved.
   *
   * If `n < 0`, the cursor will end up at the beginning.
   * If `n > length`, the cursor will end up at the end.
   *
   * @param {number} n
   *   Position.
   * @return {undefined}
   *   Nothing.
   */
  setCursor(t) {
    if (!(t === this.left.length || t > this.left.length && this.right.length === 0 || t < 0 && this.left.length === 0))
      if (t < this.left.length) {
        const n = this.left.splice(t, Number.POSITIVE_INFINITY);
        Sa(this.right, n.reverse());
      } else {
        const n = this.right.splice(this.left.length + this.right.length - t, Number.POSITIVE_INFINITY);
        Sa(this.left, n.reverse());
      }
  }
}
function Sa(e, t) {
  let n = 0;
  if (t.length < 1e4)
    e.push(...t);
  else
    for (; n < t.length; )
      e.push(...t.slice(n, n + 1e4)), n += 1e4;
}
function OT(e) {
  const t = {};
  let n = -1, r, a, i, o, s, l, u;
  const c = new dI(e);
  for (; ++n < c.length; ) {
    for (; n in t; )
      n = t[n];
    if (r = c.get(n), n && r[1].type === "chunkFlow" && c.get(n - 1)[1].type === "listItemPrefix" && (l = r[1]._tokenizer.events, i = 0, i < l.length && l[i][1].type === "lineEndingBlank" && (i += 2), i < l.length && l[i][1].type === "content"))
      for (; ++i < l.length && l[i][1].type !== "content"; )
        l[i][1].type === "chunkText" && (l[i][1]._isInFirstContentOfListItem = !0, i++);
    if (r[0] === "enter")
      r[1].contentType && (Object.assign(t, pI(c, n)), n = t[n], u = !0);
    else if (r[1]._container) {
      for (i = n, a = void 0; i-- && (o = c.get(i), o[1].type === "lineEnding" || o[1].type === "lineEndingBlank"); )
        o[0] === "enter" && (a && (c.get(a)[1].type = "lineEndingBlank"), o[1].type = "lineEnding", a = i);
      a && (r[1].end = {
        ...c.get(a)[1].start
      }, s = c.slice(a, n), s.unshift(r), c.splice(a, n - a + 1, s));
    }
  }
  return xn(e, 0, Number.POSITIVE_INFINITY, c.slice(0)), !u;
}
function pI(e, t) {
  const n = e.get(t)[1], r = e.get(t)[2];
  let a = t - 1;
  const i = [], o = n._tokenizer || r.parser[n.contentType](n.start), s = o.events, l = [], u = {};
  let c, d, m = -1, f = n, h = 0, E = 0;
  const I = [E];
  for (; f; ) {
    for (; e.get(++a)[1] !== f; )
      ;
    i.push(a), f._tokenizer || (c = r.sliceStream(f), f.next || c.push(null), d && o.defineSkip(f.start), f._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = !0), o.write(c), f._isInFirstContentOfListItem && (o._gfmTasklistFirstContentOfListItem = void 0)), d = f, f = f.next;
  }
  for (f = n; ++m < s.length; )
    // Find a void token that includes a break.
    s[m][0] === "exit" && s[m - 1][0] === "enter" && s[m][1].type === s[m - 1][1].type && s[m][1].start.line !== s[m][1].end.line && (E = m + 1, I.push(E), f._tokenizer = void 0, f.previous = void 0, f = f.next);
  for (o.events = [], f ? (f._tokenizer = void 0, f.previous = void 0) : I.pop(), m = I.length; m--; ) {
    const x = s.slice(I[m], I[m + 1]), v = i.pop();
    l.push([v, v + x.length - 1]), e.splice(v, 2, x);
  }
  for (l.reverse(), m = -1; ++m < l.length; )
    u[h + l[m][0]] = h + l[m][1], h += l[m][1] - l[m][0] - 1;
  return u;
}
const fI = {
  resolve: gI,
  tokenize: hI
}, mI = {
  partial: !0,
  tokenize: bI
};
function gI(e) {
  return OT(e), e;
}
function hI(e, t) {
  let n;
  return r;
  function r(s) {
    return e.enter("content"), n = e.enter("chunkContent", {
      contentType: "content"
    }), a(s);
  }
  function a(s) {
    return s === null ? i(s) : Me(s) ? e.check(mI, o, i)(s) : (e.consume(s), a);
  }
  function i(s) {
    return e.exit("chunkContent"), e.exit("content"), t(s);
  }
  function o(s) {
    return e.consume(s), e.exit("chunkContent"), n.next = e.enter("chunkContent", {
      contentType: "content",
      previous: n
    }), n = n.next, a;
  }
}
function bI(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return e.exit("chunkContent"), e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), nt(e, i, "linePrefix");
  }
  function i(o) {
    if (o === null || Me(o))
      return n(o);
    const s = r.events[r.events.length - 1];
    return !r.parser.constructs.disable.null.includes("codeIndented") && s && s[1].type === "linePrefix" && s[2].sliceSerialize(s[1], !0).length >= 4 ? t(o) : e.interrupt(r.parser.constructs.flow, n, t)(o);
  }
}
function LT(e, t, n, r, a, i, o, s, l) {
  const u = l || Number.POSITIVE_INFINITY;
  let c = 0;
  return d;
  function d(x) {
    return x === 60 ? (e.enter(r), e.enter(a), e.enter(i), e.consume(x), e.exit(i), m) : x === null || x === 32 || x === 41 || Mi(x) ? n(x) : (e.enter(r), e.enter(o), e.enter(s), e.enter("chunkString", {
      contentType: "string"
    }), E(x));
  }
  function m(x) {
    return x === 62 ? (e.enter(i), e.consume(x), e.exit(i), e.exit(a), e.exit(r), t) : (e.enter(s), e.enter("chunkString", {
      contentType: "string"
    }), f(x));
  }
  function f(x) {
    return x === 62 ? (e.exit("chunkString"), e.exit(s), m(x)) : x === null || x === 60 || Me(x) ? n(x) : (e.consume(x), x === 92 ? h : f);
  }
  function h(x) {
    return x === 60 || x === 62 || x === 92 ? (e.consume(x), f) : f(x);
  }
  function E(x) {
    return !c && (x === null || x === 41 || ut(x)) ? (e.exit("chunkString"), e.exit(s), e.exit(o), e.exit(r), t(x)) : c < u && x === 40 ? (e.consume(x), c++, E) : x === 41 ? (e.consume(x), c--, E) : x === null || x === 32 || x === 40 || Mi(x) ? n(x) : (e.consume(x), x === 92 ? I : E);
  }
  function I(x) {
    return x === 40 || x === 41 || x === 92 ? (e.consume(x), E) : E(x);
  }
}
function DT(e, t, n, r, a, i) {
  const o = this;
  let s = 0, l;
  return u;
  function u(f) {
    return e.enter(r), e.enter(a), e.consume(f), e.exit(a), e.enter(i), c;
  }
  function c(f) {
    return s > 999 || f === null || f === 91 || f === 93 && !l || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    f === 94 && !s && "_hiddenFootnoteSupport" in o.parser.constructs ? n(f) : f === 93 ? (e.exit(i), e.enter(a), e.consume(f), e.exit(a), e.exit(r), t) : Me(f) ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), c) : (e.enter("chunkString", {
      contentType: "string"
    }), d(f));
  }
  function d(f) {
    return f === null || f === 91 || f === 93 || Me(f) || s++ > 999 ? (e.exit("chunkString"), c(f)) : (e.consume(f), l || (l = !Je(f)), f === 92 ? m : d);
  }
  function m(f) {
    return f === 91 || f === 92 || f === 93 ? (e.consume(f), s++, d) : d(f);
  }
}
function MT(e, t, n, r, a, i) {
  let o;
  return s;
  function s(m) {
    return m === 34 || m === 39 || m === 40 ? (e.enter(r), e.enter(a), e.consume(m), e.exit(a), o = m === 40 ? 41 : m, l) : n(m);
  }
  function l(m) {
    return m === o ? (e.enter(a), e.consume(m), e.exit(a), e.exit(r), t) : (e.enter(i), u(m));
  }
  function u(m) {
    return m === o ? (e.exit(i), l(o)) : m === null ? n(m) : Me(m) ? (e.enter("lineEnding"), e.consume(m), e.exit("lineEnding"), nt(e, u, "linePrefix")) : (e.enter("chunkString", {
      contentType: "string"
    }), c(m));
  }
  function c(m) {
    return m === o || m === null || Me(m) ? (e.exit("chunkString"), u(m)) : (e.consume(m), m === 92 ? d : c);
  }
  function d(m) {
    return m === o || m === 92 ? (e.consume(m), c) : c(m);
  }
}
function La(e, t) {
  let n;
  return r;
  function r(a) {
    return Me(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), n = !0, r) : Je(a) ? nt(e, r, n ? "linePrefix" : "lineSuffix")(a) : t(a);
  }
}
const EI = {
  name: "definition",
  tokenize: vI
}, yI = {
  partial: !0,
  tokenize: TI
};
function vI(e, t, n) {
  const r = this;
  let a;
  return i;
  function i(f) {
    return e.enter("definition"), o(f);
  }
  function o(f) {
    return DT.call(
      r,
      e,
      s,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(f);
  }
  function s(f) {
    return a = Bn(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1)), f === 58 ? (e.enter("definitionMarker"), e.consume(f), e.exit("definitionMarker"), l) : n(f);
  }
  function l(f) {
    return ut(f) ? La(e, u)(f) : u(f);
  }
  function u(f) {
    return LT(
      e,
      c,
      // Note: we don’t need to reset the way `markdown-rs` does.
      n,
      "definitionDestination",
      "definitionDestinationLiteral",
      "definitionDestinationLiteralMarker",
      "definitionDestinationRaw",
      "definitionDestinationString"
    )(f);
  }
  function c(f) {
    return e.attempt(yI, d, d)(f);
  }
  function d(f) {
    return Je(f) ? nt(e, m, "whitespace")(f) : m(f);
  }
  function m(f) {
    return f === null || Me(f) ? (e.exit("definition"), r.parser.defined.push(a), t(f)) : n(f);
  }
}
function TI(e, t, n) {
  return r;
  function r(s) {
    return ut(s) ? La(e, a)(s) : n(s);
  }
  function a(s) {
    return MT(e, i, n, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(s);
  }
  function i(s) {
    return Je(s) ? nt(e, o, "whitespace")(s) : o(s);
  }
  function o(s) {
    return s === null || Me(s) ? t(s) : n(s);
  }
}
const SI = {
  name: "hardBreakEscape",
  tokenize: _I
};
function _I(e, t, n) {
  return r;
  function r(i) {
    return e.enter("hardBreakEscape"), e.consume(i), a;
  }
  function a(i) {
    return Me(i) ? (e.exit("hardBreakEscape"), t(i)) : n(i);
  }
}
const AI = {
  name: "headingAtx",
  resolve: xI,
  tokenize: RI
};
function xI(e, t) {
  let n = e.length - 2, r = 3, a, i;
  return e[r][1].type === "whitespace" && (r += 2), n - 2 > r && e[n][1].type === "whitespace" && (n -= 2), e[n][1].type === "atxHeadingSequence" && (r === n - 1 || n - 4 > r && e[n - 2][1].type === "whitespace") && (n -= r + 1 === n ? 2 : 4), n > r && (a = {
    type: "atxHeadingText",
    start: e[r][1].start,
    end: e[n][1].end
  }, i = {
    type: "chunkText",
    start: e[r][1].start,
    end: e[n][1].end,
    contentType: "text"
  }, xn(e, r, n - r + 1, [["enter", a, t], ["enter", i, t], ["exit", i, t], ["exit", a, t]])), e;
}
function RI(e, t, n) {
  let r = 0;
  return a;
  function a(c) {
    return e.enter("atxHeading"), i(c);
  }
  function i(c) {
    return e.enter("atxHeadingSequence"), o(c);
  }
  function o(c) {
    return c === 35 && r++ < 6 ? (e.consume(c), o) : c === null || ut(c) ? (e.exit("atxHeadingSequence"), s(c)) : n(c);
  }
  function s(c) {
    return c === 35 ? (e.enter("atxHeadingSequence"), l(c)) : c === null || Me(c) ? (e.exit("atxHeading"), t(c)) : Je(c) ? nt(e, s, "whitespace")(c) : (e.enter("atxHeadingText"), u(c));
  }
  function l(c) {
    return c === 35 ? (e.consume(c), l) : (e.exit("atxHeadingSequence"), s(c));
  }
  function u(c) {
    return c === null || c === 35 || ut(c) ? (e.exit("atxHeadingText"), s(c)) : (e.consume(c), u);
  }
}
const II = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], Zm = ["pre", "script", "style", "textarea"], wI = {
  concrete: !0,
  name: "htmlFlow",
  resolveTo: NI,
  tokenize: OI
}, CI = {
  partial: !0,
  tokenize: DI
}, kI = {
  partial: !0,
  tokenize: LI
};
function NI(e) {
  let t = e.length;
  for (; t-- && !(e[t][0] === "enter" && e[t][1].type === "htmlFlow"); )
    ;
  return t > 1 && e[t - 2][1].type === "linePrefix" && (e[t][1].start = e[t - 2][1].start, e[t + 1][1].start = e[t - 2][1].start, e.splice(t - 2, 2)), e;
}
function OI(e, t, n) {
  const r = this;
  let a, i, o, s, l;
  return u;
  function u(M) {
    return c(M);
  }
  function c(M) {
    return e.enter("htmlFlow"), e.enter("htmlFlowData"), e.consume(M), d;
  }
  function d(M) {
    return M === 33 ? (e.consume(M), m) : M === 47 ? (e.consume(M), i = !0, E) : M === 63 ? (e.consume(M), a = 3, r.interrupt ? t : A) : fn(M) ? (e.consume(M), o = String.fromCharCode(M), I) : n(M);
  }
  function m(M) {
    return M === 45 ? (e.consume(M), a = 2, f) : M === 91 ? (e.consume(M), a = 5, s = 0, h) : fn(M) ? (e.consume(M), a = 4, r.interrupt ? t : A) : n(M);
  }
  function f(M) {
    return M === 45 ? (e.consume(M), r.interrupt ? t : A) : n(M);
  }
  function h(M) {
    const me = "CDATA[";
    return M === me.charCodeAt(s++) ? (e.consume(M), s === me.length ? r.interrupt ? t : Q : h) : n(M);
  }
  function E(M) {
    return fn(M) ? (e.consume(M), o = String.fromCharCode(M), I) : n(M);
  }
  function I(M) {
    if (M === null || M === 47 || M === 62 || ut(M)) {
      const me = M === 47, we = o.toLowerCase();
      return !me && !i && Zm.includes(we) ? (a = 1, r.interrupt ? t(M) : Q(M)) : II.includes(o.toLowerCase()) ? (a = 6, me ? (e.consume(M), x) : r.interrupt ? t(M) : Q(M)) : (a = 7, r.interrupt && !r.parser.lazy[r.now().line] ? n(M) : i ? v(M) : S(M));
    }
    return M === 45 || on(M) ? (e.consume(M), o += String.fromCharCode(M), I) : n(M);
  }
  function x(M) {
    return M === 62 ? (e.consume(M), r.interrupt ? t : Q) : n(M);
  }
  function v(M) {
    return Je(M) ? (e.consume(M), v) : w(M);
  }
  function S(M) {
    return M === 47 ? (e.consume(M), w) : M === 58 || M === 95 || fn(M) ? (e.consume(M), g) : Je(M) ? (e.consume(M), S) : w(M);
  }
  function g(M) {
    return M === 45 || M === 46 || M === 58 || M === 95 || on(M) ? (e.consume(M), g) : y(M);
  }
  function y(M) {
    return M === 61 ? (e.consume(M), T) : Je(M) ? (e.consume(M), y) : S(M);
  }
  function T(M) {
    return M === null || M === 60 || M === 61 || M === 62 || M === 96 ? n(M) : M === 34 || M === 39 ? (e.consume(M), l = M, j) : Je(M) ? (e.consume(M), T) : $(M);
  }
  function j(M) {
    return M === l ? (e.consume(M), l = null, D) : M === null || Me(M) ? n(M) : (e.consume(M), j);
  }
  function $(M) {
    return M === null || M === 34 || M === 39 || M === 47 || M === 60 || M === 61 || M === 62 || M === 96 || ut(M) ? y(M) : (e.consume(M), $);
  }
  function D(M) {
    return M === 47 || M === 62 || Je(M) ? S(M) : n(M);
  }
  function w(M) {
    return M === 62 ? (e.consume(M), G) : n(M);
  }
  function G(M) {
    return M === null || Me(M) ? Q(M) : Je(M) ? (e.consume(M), G) : n(M);
  }
  function Q(M) {
    return M === 45 && a === 2 ? (e.consume(M), K) : M === 60 && a === 1 ? (e.consume(M), he) : M === 62 && a === 4 ? (e.consume(M), re) : M === 63 && a === 3 ? (e.consume(M), A) : M === 93 && a === 5 ? (e.consume(M), Te) : Me(M) && (a === 6 || a === 7) ? (e.exit("htmlFlowData"), e.check(CI, se, z)(M)) : M === null || Me(M) ? (e.exit("htmlFlowData"), z(M)) : (e.consume(M), Q);
  }
  function z(M) {
    return e.check(kI, ce, se)(M);
  }
  function ce(M) {
    return e.enter("lineEnding"), e.consume(M), e.exit("lineEnding"), ae;
  }
  function ae(M) {
    return M === null || Me(M) ? z(M) : (e.enter("htmlFlowData"), Q(M));
  }
  function K(M) {
    return M === 45 ? (e.consume(M), A) : Q(M);
  }
  function he(M) {
    return M === 47 ? (e.consume(M), o = "", ye) : Q(M);
  }
  function ye(M) {
    if (M === 62) {
      const me = o.toLowerCase();
      return Zm.includes(me) ? (e.consume(M), re) : Q(M);
    }
    return fn(M) && o.length < 8 ? (e.consume(M), o += String.fromCharCode(M), ye) : Q(M);
  }
  function Te(M) {
    return M === 93 ? (e.consume(M), A) : Q(M);
  }
  function A(M) {
    return M === 62 ? (e.consume(M), re) : M === 45 && a === 2 ? (e.consume(M), A) : Q(M);
  }
  function re(M) {
    return M === null || Me(M) ? (e.exit("htmlFlowData"), se(M)) : (e.consume(M), re);
  }
  function se(M) {
    return e.exit("htmlFlow"), t(M);
  }
}
function LI(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return Me(o) ? (e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), i) : n(o);
  }
  function i(o) {
    return r.parser.lazy[r.now().line] ? n(o) : t(o);
  }
}
function DI(e, t, n) {
  return r;
  function r(a) {
    return e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), e.attempt(Za, t, n);
  }
}
const MI = {
  name: "htmlText",
  tokenize: PI
};
function PI(e, t, n) {
  const r = this;
  let a, i, o;
  return s;
  function s(A) {
    return e.enter("htmlText"), e.enter("htmlTextData"), e.consume(A), l;
  }
  function l(A) {
    return A === 33 ? (e.consume(A), u) : A === 47 ? (e.consume(A), y) : A === 63 ? (e.consume(A), S) : fn(A) ? (e.consume(A), $) : n(A);
  }
  function u(A) {
    return A === 45 ? (e.consume(A), c) : A === 91 ? (e.consume(A), i = 0, h) : fn(A) ? (e.consume(A), v) : n(A);
  }
  function c(A) {
    return A === 45 ? (e.consume(A), f) : n(A);
  }
  function d(A) {
    return A === null ? n(A) : A === 45 ? (e.consume(A), m) : Me(A) ? (o = d, he(A)) : (e.consume(A), d);
  }
  function m(A) {
    return A === 45 ? (e.consume(A), f) : d(A);
  }
  function f(A) {
    return A === 62 ? K(A) : A === 45 ? m(A) : d(A);
  }
  function h(A) {
    const re = "CDATA[";
    return A === re.charCodeAt(i++) ? (e.consume(A), i === re.length ? E : h) : n(A);
  }
  function E(A) {
    return A === null ? n(A) : A === 93 ? (e.consume(A), I) : Me(A) ? (o = E, he(A)) : (e.consume(A), E);
  }
  function I(A) {
    return A === 93 ? (e.consume(A), x) : E(A);
  }
  function x(A) {
    return A === 62 ? K(A) : A === 93 ? (e.consume(A), x) : E(A);
  }
  function v(A) {
    return A === null || A === 62 ? K(A) : Me(A) ? (o = v, he(A)) : (e.consume(A), v);
  }
  function S(A) {
    return A === null ? n(A) : A === 63 ? (e.consume(A), g) : Me(A) ? (o = S, he(A)) : (e.consume(A), S);
  }
  function g(A) {
    return A === 62 ? K(A) : S(A);
  }
  function y(A) {
    return fn(A) ? (e.consume(A), T) : n(A);
  }
  function T(A) {
    return A === 45 || on(A) ? (e.consume(A), T) : j(A);
  }
  function j(A) {
    return Me(A) ? (o = j, he(A)) : Je(A) ? (e.consume(A), j) : K(A);
  }
  function $(A) {
    return A === 45 || on(A) ? (e.consume(A), $) : A === 47 || A === 62 || ut(A) ? D(A) : n(A);
  }
  function D(A) {
    return A === 47 ? (e.consume(A), K) : A === 58 || A === 95 || fn(A) ? (e.consume(A), w) : Me(A) ? (o = D, he(A)) : Je(A) ? (e.consume(A), D) : K(A);
  }
  function w(A) {
    return A === 45 || A === 46 || A === 58 || A === 95 || on(A) ? (e.consume(A), w) : G(A);
  }
  function G(A) {
    return A === 61 ? (e.consume(A), Q) : Me(A) ? (o = G, he(A)) : Je(A) ? (e.consume(A), G) : D(A);
  }
  function Q(A) {
    return A === null || A === 60 || A === 61 || A === 62 || A === 96 ? n(A) : A === 34 || A === 39 ? (e.consume(A), a = A, z) : Me(A) ? (o = Q, he(A)) : Je(A) ? (e.consume(A), Q) : (e.consume(A), ce);
  }
  function z(A) {
    return A === a ? (e.consume(A), a = void 0, ae) : A === null ? n(A) : Me(A) ? (o = z, he(A)) : (e.consume(A), z);
  }
  function ce(A) {
    return A === null || A === 34 || A === 39 || A === 60 || A === 61 || A === 96 ? n(A) : A === 47 || A === 62 || ut(A) ? D(A) : (e.consume(A), ce);
  }
  function ae(A) {
    return A === 47 || A === 62 || ut(A) ? D(A) : n(A);
  }
  function K(A) {
    return A === 62 ? (e.consume(A), e.exit("htmlTextData"), e.exit("htmlText"), t) : n(A);
  }
  function he(A) {
    return e.exit("htmlTextData"), e.enter("lineEnding"), e.consume(A), e.exit("lineEnding"), ye;
  }
  function ye(A) {
    return Je(A) ? nt(e, Te, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(A) : Te(A);
  }
  function Te(A) {
    return e.enter("htmlTextData"), o(A);
  }
}
const ff = {
  name: "labelEnd",
  resolveAll: jI,
  resolveTo: HI,
  tokenize: qI
}, FI = {
  tokenize: $I
}, BI = {
  tokenize: zI
}, UI = {
  tokenize: GI
};
function jI(e) {
  let t = -1;
  const n = [];
  for (; ++t < e.length; ) {
    const r = e[t][1];
    if (n.push(e[t]), r.type === "labelImage" || r.type === "labelLink" || r.type === "labelEnd") {
      const a = r.type === "labelImage" ? 4 : 2;
      r.type = "data", t += a;
    }
  }
  return e.length !== n.length && xn(e, 0, e.length, n), e;
}
function HI(e, t) {
  let n = e.length, r = 0, a, i, o, s;
  for (; n--; )
    if (a = e[n][1], i) {
      if (a.type === "link" || a.type === "labelLink" && a._inactive)
        break;
      e[n][0] === "enter" && a.type === "labelLink" && (a._inactive = !0);
    } else if (o) {
      if (e[n][0] === "enter" && (a.type === "labelImage" || a.type === "labelLink") && !a._balanced && (i = n, a.type !== "labelLink")) {
        r = 2;
        break;
      }
    } else a.type === "labelEnd" && (o = n);
  const l = {
    type: e[i][1].type === "labelLink" ? "link" : "image",
    start: {
      ...e[i][1].start
    },
    end: {
      ...e[e.length - 1][1].end
    }
  }, u = {
    type: "label",
    start: {
      ...e[i][1].start
    },
    end: {
      ...e[o][1].end
    }
  }, c = {
    type: "labelText",
    start: {
      ...e[i + r + 2][1].end
    },
    end: {
      ...e[o - 2][1].start
    }
  };
  return s = [["enter", l, t], ["enter", u, t]], s = wn(s, e.slice(i + 1, i + r + 3)), s = wn(s, [["enter", c, t]]), s = wn(s, Zi(t.parser.constructs.insideSpan.null, e.slice(i + r + 4, o - 3), t)), s = wn(s, [["exit", c, t], e[o - 2], e[o - 1], ["exit", u, t]]), s = wn(s, e.slice(o + 1)), s = wn(s, [["exit", l, t]]), xn(e, i, e.length, s), e;
}
function qI(e, t, n) {
  const r = this;
  let a = r.events.length, i, o;
  for (; a--; )
    if ((r.events[a][1].type === "labelImage" || r.events[a][1].type === "labelLink") && !r.events[a][1]._balanced) {
      i = r.events[a][1];
      break;
    }
  return s;
  function s(m) {
    return i ? i._inactive ? d(m) : (o = r.parser.defined.includes(Bn(r.sliceSerialize({
      start: i.end,
      end: r.now()
    }))), e.enter("labelEnd"), e.enter("labelMarker"), e.consume(m), e.exit("labelMarker"), e.exit("labelEnd"), l) : n(m);
  }
  function l(m) {
    return m === 40 ? e.attempt(FI, c, o ? c : d)(m) : m === 91 ? e.attempt(BI, c, o ? u : d)(m) : o ? c(m) : d(m);
  }
  function u(m) {
    return e.attempt(UI, c, d)(m);
  }
  function c(m) {
    return t(m);
  }
  function d(m) {
    return i._balanced = !0, n(m);
  }
}
function $I(e, t, n) {
  return r;
  function r(d) {
    return e.enter("resource"), e.enter("resourceMarker"), e.consume(d), e.exit("resourceMarker"), a;
  }
  function a(d) {
    return ut(d) ? La(e, i)(d) : i(d);
  }
  function i(d) {
    return d === 41 ? c(d) : LT(e, o, s, "resourceDestination", "resourceDestinationLiteral", "resourceDestinationLiteralMarker", "resourceDestinationRaw", "resourceDestinationString", 32)(d);
  }
  function o(d) {
    return ut(d) ? La(e, l)(d) : c(d);
  }
  function s(d) {
    return n(d);
  }
  function l(d) {
    return d === 34 || d === 39 || d === 40 ? MT(e, u, n, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(d) : c(d);
  }
  function u(d) {
    return ut(d) ? La(e, c)(d) : c(d);
  }
  function c(d) {
    return d === 41 ? (e.enter("resourceMarker"), e.consume(d), e.exit("resourceMarker"), e.exit("resource"), t) : n(d);
  }
}
function zI(e, t, n) {
  const r = this;
  return a;
  function a(s) {
    return DT.call(r, e, i, o, "reference", "referenceMarker", "referenceString")(s);
  }
  function i(s) {
    return r.parser.defined.includes(Bn(r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1))) ? t(s) : n(s);
  }
  function o(s) {
    return n(s);
  }
}
function GI(e, t, n) {
  return r;
  function r(i) {
    return e.enter("reference"), e.enter("referenceMarker"), e.consume(i), e.exit("referenceMarker"), a;
  }
  function a(i) {
    return i === 93 ? (e.enter("referenceMarker"), e.consume(i), e.exit("referenceMarker"), e.exit("reference"), t) : n(i);
  }
}
const VI = {
  name: "labelStartImage",
  resolveAll: ff.resolveAll,
  tokenize: WI
};
function WI(e, t, n) {
  const r = this;
  return a;
  function a(s) {
    return e.enter("labelImage"), e.enter("labelImageMarker"), e.consume(s), e.exit("labelImageMarker"), i;
  }
  function i(s) {
    return s === 91 ? (e.enter("labelMarker"), e.consume(s), e.exit("labelMarker"), e.exit("labelImage"), o) : n(s);
  }
  function o(s) {
    return s === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(s) : t(s);
  }
}
const YI = {
  name: "labelStartLink",
  resolveAll: ff.resolveAll,
  tokenize: KI
};
function KI(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return e.enter("labelLink"), e.enter("labelMarker"), e.consume(o), e.exit("labelMarker"), e.exit("labelLink"), i;
  }
  function i(o) {
    return o === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(o) : t(o);
  }
}
const Po = {
  name: "lineEnding",
  tokenize: XI
};
function XI(e, t) {
  return n;
  function n(r) {
    return e.enter("lineEnding"), e.consume(r), e.exit("lineEnding"), nt(e, t, "linePrefix");
  }
}
const xi = {
  name: "thematicBreak",
  tokenize: ZI
};
function ZI(e, t, n) {
  let r = 0, a;
  return i;
  function i(u) {
    return e.enter("thematicBreak"), o(u);
  }
  function o(u) {
    return a = u, s(u);
  }
  function s(u) {
    return u === a ? (e.enter("thematicBreakSequence"), l(u)) : r >= 3 && (u === null || Me(u)) ? (e.exit("thematicBreak"), t(u)) : n(u);
  }
  function l(u) {
    return u === a ? (e.consume(u), r++, l) : (e.exit("thematicBreakSequence"), Je(u) ? nt(e, s, "whitespace")(u) : s(u));
  }
}
const bn = {
  continuation: {
    tokenize: tw
  },
  exit: rw,
  name: "list",
  tokenize: ew
}, QI = {
  partial: !0,
  tokenize: aw
}, JI = {
  partial: !0,
  tokenize: nw
};
function ew(e, t, n) {
  const r = this, a = r.events[r.events.length - 1];
  let i = a && a[1].type === "linePrefix" ? a[2].sliceSerialize(a[1], !0).length : 0, o = 0;
  return s;
  function s(f) {
    const h = r.containerState.type || (f === 42 || f === 43 || f === 45 ? "listUnordered" : "listOrdered");
    if (h === "listUnordered" ? !r.containerState.marker || f === r.containerState.marker : Ap(f)) {
      if (r.containerState.type || (r.containerState.type = h, e.enter(h, {
        _container: !0
      })), h === "listUnordered")
        return e.enter("listItemPrefix"), f === 42 || f === 45 ? e.check(xi, n, u)(f) : u(f);
      if (!r.interrupt || f === 49)
        return e.enter("listItemPrefix"), e.enter("listItemValue"), l(f);
    }
    return n(f);
  }
  function l(f) {
    return Ap(f) && ++o < 10 ? (e.consume(f), l) : (!r.interrupt || o < 2) && (r.containerState.marker ? f === r.containerState.marker : f === 41 || f === 46) ? (e.exit("listItemValue"), u(f)) : n(f);
  }
  function u(f) {
    return e.enter("listItemMarker"), e.consume(f), e.exit("listItemMarker"), r.containerState.marker = r.containerState.marker || f, e.check(
      Za,
      // Can’t be empty when interrupting.
      r.interrupt ? n : c,
      e.attempt(QI, m, d)
    );
  }
  function c(f) {
    return r.containerState.initialBlankLine = !0, i++, m(f);
  }
  function d(f) {
    return Je(f) ? (e.enter("listItemPrefixWhitespace"), e.consume(f), e.exit("listItemPrefixWhitespace"), m) : n(f);
  }
  function m(f) {
    return r.containerState.size = i + r.sliceSerialize(e.exit("listItemPrefix"), !0).length, t(f);
  }
}
function tw(e, t, n) {
  const r = this;
  return r.containerState._closeFlow = void 0, e.check(Za, a, i);
  function a(s) {
    return r.containerState.furtherBlankLines = r.containerState.furtherBlankLines || r.containerState.initialBlankLine, nt(e, t, "listItemIndent", r.containerState.size + 1)(s);
  }
  function i(s) {
    return r.containerState.furtherBlankLines || !Je(s) ? (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, o(s)) : (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, e.attempt(JI, t, o)(s));
  }
  function o(s) {
    return r.containerState._closeFlow = !0, r.interrupt = void 0, nt(e, e.attempt(bn, t, n), "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(s);
  }
}
function nw(e, t, n) {
  const r = this;
  return nt(e, a, "listItemIndent", r.containerState.size + 1);
  function a(i) {
    const o = r.events[r.events.length - 1];
    return o && o[1].type === "listItemIndent" && o[2].sliceSerialize(o[1], !0).length === r.containerState.size ? t(i) : n(i);
  }
}
function rw(e) {
  e.exit(this.containerState.type);
}
function aw(e, t, n) {
  const r = this;
  return nt(e, a, "listItemPrefixWhitespace", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 5);
  function a(i) {
    const o = r.events[r.events.length - 1];
    return !Je(i) && o && o[1].type === "listItemPrefixWhitespace" ? t(i) : n(i);
  }
}
const Qm = {
  name: "setextUnderline",
  resolveTo: iw,
  tokenize: ow
};
function iw(e, t) {
  let n = e.length, r, a, i;
  for (; n--; )
    if (e[n][0] === "enter") {
      if (e[n][1].type === "content") {
        r = n;
        break;
      }
      e[n][1].type === "paragraph" && (a = n);
    } else
      e[n][1].type === "content" && e.splice(n, 1), !i && e[n][1].type === "definition" && (i = n);
  const o = {
    type: "setextHeading",
    start: {
      ...e[a][1].start
    },
    end: {
      ...e[e.length - 1][1].end
    }
  };
  return e[a][1].type = "setextHeadingText", i ? (e.splice(a, 0, ["enter", o, t]), e.splice(i + 1, 0, ["exit", e[r][1], t]), e[r][1].end = {
    ...e[i][1].end
  }) : e[r][1] = o, e.push(["exit", o, t]), e;
}
function ow(e, t, n) {
  const r = this;
  let a;
  return i;
  function i(u) {
    let c = r.events.length, d;
    for (; c--; )
      if (r.events[c][1].type !== "lineEnding" && r.events[c][1].type !== "linePrefix" && r.events[c][1].type !== "content") {
        d = r.events[c][1].type === "paragraph";
        break;
      }
    return !r.parser.lazy[r.now().line] && (r.interrupt || d) ? (e.enter("setextHeadingLine"), a = u, o(u)) : n(u);
  }
  function o(u) {
    return e.enter("setextHeadingLineSequence"), s(u);
  }
  function s(u) {
    return u === a ? (e.consume(u), s) : (e.exit("setextHeadingLineSequence"), Je(u) ? nt(e, l, "lineSuffix")(u) : l(u));
  }
  function l(u) {
    return u === null || Me(u) ? (e.exit("setextHeadingLine"), t(u)) : n(u);
  }
}
const sw = {
  tokenize: lw
};
function lw(e) {
  const t = this, n = e.attempt(
    // Try to parse a blank line.
    Za,
    r,
    // Try to parse initial flow (essentially, only code).
    e.attempt(this.parser.constructs.flowInitial, a, nt(e, e.attempt(this.parser.constructs.flow, a, e.attempt(fI, a)), "linePrefix"))
  );
  return n;
  function r(i) {
    if (i === null) {
      e.consume(i);
      return;
    }
    return e.enter("lineEndingBlank"), e.consume(i), e.exit("lineEndingBlank"), t.currentConstruct = void 0, n;
  }
  function a(i) {
    if (i === null) {
      e.consume(i);
      return;
    }
    return e.enter("lineEnding"), e.consume(i), e.exit("lineEnding"), t.currentConstruct = void 0, n;
  }
}
const uw = {
  resolveAll: FT()
}, cw = PT("string"), dw = PT("text");
function PT(e) {
  return {
    resolveAll: FT(e === "text" ? pw : void 0),
    tokenize: t
  };
  function t(n) {
    const r = this, a = this.parser.constructs[e], i = n.attempt(a, o, s);
    return o;
    function o(c) {
      return u(c) ? i(c) : s(c);
    }
    function s(c) {
      if (c === null) {
        n.consume(c);
        return;
      }
      return n.enter("data"), n.consume(c), l;
    }
    function l(c) {
      return u(c) ? (n.exit("data"), i(c)) : (n.consume(c), l);
    }
    function u(c) {
      if (c === null)
        return !0;
      const d = a[c];
      let m = -1;
      if (d)
        for (; ++m < d.length; ) {
          const f = d[m];
          if (!f.previous || f.previous.call(r, r.previous))
            return !0;
        }
      return !1;
    }
  }
}
function FT(e) {
  return t;
  function t(n, r) {
    let a = -1, i;
    for (; ++a <= n.length; )
      i === void 0 ? n[a] && n[a][1].type === "data" && (i = a, a++) : (!n[a] || n[a][1].type !== "data") && (a !== i + 2 && (n[i][1].end = n[a - 1][1].end, n.splice(i + 2, a - i - 2), a = i + 2), i = void 0);
    return e ? e(n, r) : n;
  }
}
function pw(e, t) {
  let n = 0;
  for (; ++n <= e.length; )
    if ((n === e.length || e[n][1].type === "lineEnding") && e[n - 1][1].type === "data") {
      const r = e[n - 1][1], a = t.sliceStream(r);
      let i = a.length, o = -1, s = 0, l;
      for (; i--; ) {
        const u = a[i];
        if (typeof u == "string") {
          for (o = u.length; u.charCodeAt(o - 1) === 32; )
            s++, o--;
          if (o) break;
          o = -1;
        } else if (u === -2)
          l = !0, s++;
        else if (u !== -1) {
          i++;
          break;
        }
      }
      if (s) {
        const u = {
          type: n === e.length || l || s < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            _bufferIndex: i ? o : r.start._bufferIndex + o,
            _index: r.start._index + i,
            line: r.end.line,
            column: r.end.column - s,
            offset: r.end.offset - s
          },
          end: {
            ...r.end
          }
        };
        r.end = {
          ...u.start
        }, r.start.offset === r.end.offset ? Object.assign(r, u) : (e.splice(n, 0, ["enter", u, t], ["exit", u, t]), n += 2);
      }
      n++;
    }
  return e;
}
const fw = {
  42: bn,
  43: bn,
  45: bn,
  48: bn,
  49: bn,
  50: bn,
  51: bn,
  52: bn,
  53: bn,
  54: bn,
  55: bn,
  56: bn,
  57: bn,
  62: CT
}, mw = {
  91: EI
}, gw = {
  [-2]: Mo,
  [-1]: Mo,
  32: Mo
}, hw = {
  35: AI,
  42: xi,
  45: [Qm, xi],
  60: wI,
  61: Qm,
  95: xi,
  96: Xm,
  126: Xm
}, bw = {
  38: NT,
  92: kT
}, Ew = {
  [-5]: Po,
  [-4]: Po,
  [-3]: Po,
  33: VI,
  38: NT,
  42: xp,
  60: [YR, MI],
  91: YI,
  92: [SI, kT],
  93: ff,
  95: xp,
  96: sI
}, yw = {
  null: [xp, uw]
}, vw = {
  null: [42, 95]
}, Tw = {
  null: []
}, Sw = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  attentionMarkers: vw,
  contentInitial: mw,
  disable: Tw,
  document: fw,
  flow: hw,
  flowInitial: gw,
  insideSpan: yw,
  string: bw,
  text: Ew
}, Symbol.toStringTag, { value: "Module" }));
function _w(e, t, n) {
  let r = {
    _bufferIndex: -1,
    _index: 0,
    line: n && n.line || 1,
    column: n && n.column || 1,
    offset: n && n.offset || 0
  };
  const a = {}, i = [];
  let o = [], s = [];
  const l = {
    attempt: j(y),
    check: j(T),
    consume: v,
    enter: S,
    exit: g,
    interrupt: j(T, {
      interrupt: !0
    })
  }, u = {
    code: null,
    containerState: {},
    defineSkip: E,
    events: [],
    now: h,
    parser: e,
    previous: null,
    sliceSerialize: m,
    sliceStream: f,
    write: d
  };
  let c = t.tokenize.call(u, l);
  return t.resolveAll && i.push(t), u;
  function d(G) {
    return o = wn(o, G), I(), o[o.length - 1] !== null ? [] : ($(t, 0), u.events = Zi(i, u.events, u), u.events);
  }
  function m(G, Q) {
    return xw(f(G), Q);
  }
  function f(G) {
    return Aw(o, G);
  }
  function h() {
    const {
      _bufferIndex: G,
      _index: Q,
      line: z,
      column: ce,
      offset: ae
    } = r;
    return {
      _bufferIndex: G,
      _index: Q,
      line: z,
      column: ce,
      offset: ae
    };
  }
  function E(G) {
    a[G.line] = G.column, w();
  }
  function I() {
    let G;
    for (; r._index < o.length; ) {
      const Q = o[r._index];
      if (typeof Q == "string")
        for (G = r._index, r._bufferIndex < 0 && (r._bufferIndex = 0); r._index === G && r._bufferIndex < Q.length; )
          x(Q.charCodeAt(r._bufferIndex));
      else
        x(Q);
    }
  }
  function x(G) {
    c = c(G);
  }
  function v(G) {
    Me(G) ? (r.line++, r.column = 1, r.offset += G === -3 ? 2 : 1, w()) : G !== -1 && (r.column++, r.offset++), r._bufferIndex < 0 ? r._index++ : (r._bufferIndex++, r._bufferIndex === // Points w/ non-negative `_bufferIndex` reference
    // strings.
    /** @type {string} */
    o[r._index].length && (r._bufferIndex = -1, r._index++)), u.previous = G;
  }
  function S(G, Q) {
    const z = Q || {};
    return z.type = G, z.start = h(), u.events.push(["enter", z, u]), s.push(z), z;
  }
  function g(G) {
    const Q = s.pop();
    return Q.end = h(), u.events.push(["exit", Q, u]), Q;
  }
  function y(G, Q) {
    $(G, Q.from);
  }
  function T(G, Q) {
    Q.restore();
  }
  function j(G, Q) {
    return z;
    function z(ce, ae, K) {
      let he, ye, Te, A;
      return Array.isArray(ce) ? (
        /* c8 ignore next 1 */
        se(ce)
      ) : "tokenize" in ce ? (
        // Looks like a construct.
        se([
          /** @type {Construct} */
          ce
        ])
      ) : re(ce);
      function re(pe) {
        return Ie;
        function Ie(Re) {
          const be = Re !== null && pe[Re], ve = Re !== null && pe.null, He = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(be) ? be : be ? [be] : [],
            ...Array.isArray(ve) ? ve : ve ? [ve] : []
          ];
          return se(He)(Re);
        }
      }
      function se(pe) {
        return he = pe, ye = 0, pe.length === 0 ? K : M(pe[ye]);
      }
      function M(pe) {
        return Ie;
        function Ie(Re) {
          return A = D(), Te = pe, pe.partial || (u.currentConstruct = pe), pe.name && u.parser.constructs.disable.null.includes(pe.name) ? we() : pe.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            Q ? Object.assign(Object.create(u), Q) : u,
            l,
            me,
            we
          )(Re);
        }
      }
      function me(pe) {
        return G(Te, A), ae;
      }
      function we(pe) {
        return A.restore(), ++ye < he.length ? M(he[ye]) : K;
      }
    }
  }
  function $(G, Q) {
    G.resolveAll && !i.includes(G) && i.push(G), G.resolve && xn(u.events, Q, u.events.length - Q, G.resolve(u.events.slice(Q), u)), G.resolveTo && (u.events = G.resolveTo(u.events, u));
  }
  function D() {
    const G = h(), Q = u.previous, z = u.currentConstruct, ce = u.events.length, ae = Array.from(s);
    return {
      from: ce,
      restore: K
    };
    function K() {
      r = G, u.previous = Q, u.currentConstruct = z, u.events.length = ce, s = ae, w();
    }
  }
  function w() {
    r.line in a && r.column < 2 && (r.column = a[r.line], r.offset += a[r.line] - 1);
  }
}
function Aw(e, t) {
  const n = t.start._index, r = t.start._bufferIndex, a = t.end._index, i = t.end._bufferIndex;
  let o;
  if (n === a)
    o = [e[n].slice(r, i)];
  else {
    if (o = e.slice(n, a), r > -1) {
      const s = o[0];
      typeof s == "string" ? o[0] = s.slice(r) : o.shift();
    }
    i > 0 && o.push(e[a].slice(0, i));
  }
  return o;
}
function xw(e, t) {
  let n = -1;
  const r = [];
  let a;
  for (; ++n < e.length; ) {
    const i = e[n];
    let o;
    if (typeof i == "string")
      o = i;
    else switch (i) {
      case -5: {
        o = "\r";
        break;
      }
      case -4: {
        o = `
`;
        break;
      }
      case -3: {
        o = `\r
`;
        break;
      }
      case -2: {
        o = t ? " " : "	";
        break;
      }
      case -1: {
        if (!t && a) continue;
        o = " ";
        break;
      }
      default:
        o = String.fromCharCode(i);
    }
    a = i === -2, r.push(o);
  }
  return r.join("");
}
function Rw(e) {
  const r = {
    constructs: (
      /** @type {FullNormalizedExtension} */
      IT([Sw, ...(e || {}).extensions || []])
    ),
    content: a(HR),
    defined: [],
    document: a($R),
    flow: a(sw),
    lazy: {},
    string: a(cw),
    text: a(dw)
  };
  return r;
  function a(i) {
    return o;
    function o(s) {
      return _w(r, i, s);
    }
  }
}
function Iw(e) {
  for (; !OT(e); )
    ;
  return e;
}
const Jm = /[\0\t\n\r]/g;
function ww() {
  let e = 1, t = "", n = !0, r;
  return a;
  function a(i, o, s) {
    const l = [];
    let u, c, d, m, f;
    for (i = t + (typeof i == "string" ? i.toString() : new TextDecoder(o || void 0).decode(i)), d = 0, t = "", n && (i.charCodeAt(0) === 65279 && d++, n = void 0); d < i.length; ) {
      if (Jm.lastIndex = d, u = Jm.exec(i), m = u && u.index !== void 0 ? u.index : i.length, f = i.charCodeAt(m), !u) {
        t = i.slice(d);
        break;
      }
      if (f === 10 && d === m && r)
        l.push(-3), r = void 0;
      else
        switch (r && (l.push(-5), r = void 0), d < m && (l.push(i.slice(d, m)), e += m - d), f) {
          case 0: {
            l.push(65533), e++;
            break;
          }
          case 9: {
            for (c = Math.ceil(e / 4) * 4, l.push(-2); e++ < c; ) l.push(-1);
            break;
          }
          case 10: {
            l.push(-4), e = 1;
            break;
          }
          default:
            r = !0, e = 1;
        }
      d = m + 1;
    }
    return s && (r && l.push(-5), t && l.push(t), l.push(null)), l;
  }
}
const Cw = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function kw(e) {
  return e.replace(Cw, Nw);
}
function Nw(e, t, n) {
  if (t)
    return t;
  if (n.charCodeAt(0) === 35) {
    const a = n.charCodeAt(1), i = a === 120 || a === 88;
    return wT(n.slice(i ? 2 : 1), i ? 16 : 10);
  }
  return pf(n) || e;
}
const BT = {}.hasOwnProperty;
function Ow(e, t, n) {
  return typeof t != "string" && (n = t, t = void 0), Lw(n)(Iw(Rw(n).document().write(ww()(e, t, !0))));
}
function Lw(e) {
  const t = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: i(Tt),
      autolinkProtocol: D,
      autolinkEmail: D,
      atxHeading: i(mt),
      blockQuote: i(ve),
      characterEscape: D,
      characterReference: D,
      codeFenced: i(He),
      codeFencedFenceInfo: o,
      codeFencedFenceMeta: o,
      codeIndented: i(He, o),
      codeText: i(Se, o),
      codeTextData: D,
      data: D,
      codeFlowValue: D,
      definition: i(Ke),
      definitionDestinationString: o,
      definitionLabelString: o,
      definitionTitleString: o,
      emphasis: i(_t),
      hardBreakEscape: i(vt),
      hardBreakTrailing: i(vt),
      htmlFlow: i(wt, o),
      htmlFlowData: D,
      htmlText: i(wt, o),
      htmlTextData: D,
      image: i(jt),
      label: o,
      link: i(Tt),
      listItem: i(Yt),
      listItemValue: m,
      listOrdered: i(Ht, d),
      listUnordered: i(Ht),
      paragraph: i(Ct),
      reference: M,
      referenceString: o,
      resourceDestinationString: o,
      resourceTitleString: o,
      setextHeading: i(mt),
      strong: i(gt),
      thematicBreak: i(Z)
    },
    exit: {
      atxHeading: l(),
      atxHeadingSequence: y,
      autolink: l(),
      autolinkEmail: be,
      autolinkProtocol: Re,
      blockQuote: l(),
      characterEscapeValue: w,
      characterReferenceMarkerHexadecimal: we,
      characterReferenceMarkerNumeric: we,
      characterReferenceValue: pe,
      characterReference: Ie,
      codeFenced: l(I),
      codeFencedFence: E,
      codeFencedFenceInfo: f,
      codeFencedFenceMeta: h,
      codeFlowValue: w,
      codeIndented: l(x),
      codeText: l(ae),
      codeTextData: w,
      data: w,
      definition: l(),
      definitionDestinationString: g,
      definitionLabelString: v,
      definitionTitleString: S,
      emphasis: l(),
      hardBreakEscape: l(Q),
      hardBreakTrailing: l(Q),
      htmlFlow: l(z),
      htmlFlowData: w,
      htmlText: l(ce),
      htmlTextData: w,
      image: l(he),
      label: Te,
      labelText: ye,
      lineEnding: G,
      link: l(K),
      listItem: l(),
      listOrdered: l(),
      listUnordered: l(),
      paragraph: l(),
      referenceString: me,
      resourceDestinationString: A,
      resourceTitleString: re,
      resource: se,
      setextHeading: l($),
      setextHeadingLineSequence: j,
      setextHeadingText: T,
      strong: l(),
      thematicBreak: l()
    }
  };
  UT(t, (e || {}).mdastExtensions || []);
  const n = {};
  return r;
  function r(O) {
    let U = {
      type: "root",
      children: []
    };
    const X = {
      stack: [U],
      tokenStack: [],
      config: t,
      enter: s,
      exit: u,
      buffer: o,
      resume: c,
      data: n
    }, ue = [];
    let fe = -1;
    for (; ++fe < O.length; )
      if (O[fe][1].type === "listOrdered" || O[fe][1].type === "listUnordered")
        if (O[fe][0] === "enter")
          ue.push(fe);
        else {
          const Ne = ue.pop();
          fe = a(O, Ne, fe);
        }
    for (fe = -1; ++fe < O.length; ) {
      const Ne = t[O[fe][0]];
      BT.call(Ne, O[fe][1].type) && Ne[O[fe][1].type].call(Object.assign({
        sliceSerialize: O[fe][2].sliceSerialize
      }, X), O[fe][1]);
    }
    if (X.tokenStack.length > 0) {
      const Ne = X.tokenStack[X.tokenStack.length - 1];
      (Ne[1] || eg).call(X, void 0, Ne[0]);
    }
    for (U.position = {
      start: ir(O.length > 0 ? O[0][1].start : {
        line: 1,
        column: 1,
        offset: 0
      }),
      end: ir(O.length > 0 ? O[O.length - 2][1].end : {
        line: 1,
        column: 1,
        offset: 0
      })
    }, fe = -1; ++fe < t.transforms.length; )
      U = t.transforms[fe](U) || U;
    return U;
  }
  function a(O, U, X) {
    let ue = U - 1, fe = -1, Ne = !1, Oe, Pe, et, tt;
    for (; ++ue <= X; ) {
      const $e = O[ue];
      switch ($e[1].type) {
        case "listUnordered":
        case "listOrdered":
        case "blockQuote": {
          $e[0] === "enter" ? fe++ : fe--, tt = void 0;
          break;
        }
        case "lineEndingBlank": {
          $e[0] === "enter" && (Oe && !tt && !fe && !et && (et = ue), tt = void 0);
          break;
        }
        case "linePrefix":
        case "listItemValue":
        case "listItemMarker":
        case "listItemPrefix":
        case "listItemPrefixWhitespace":
          break;
        default:
          tt = void 0;
      }
      if (!fe && $e[0] === "enter" && $e[1].type === "listItemPrefix" || fe === -1 && $e[0] === "exit" && ($e[1].type === "listUnordered" || $e[1].type === "listOrdered")) {
        if (Oe) {
          let Xe = ue;
          for (Pe = void 0; Xe--; ) {
            const rt = O[Xe];
            if (rt[1].type === "lineEnding" || rt[1].type === "lineEndingBlank") {
              if (rt[0] === "exit") continue;
              Pe && (O[Pe][1].type = "lineEndingBlank", Ne = !0), rt[1].type = "lineEnding", Pe = Xe;
            } else if (!(rt[1].type === "linePrefix" || rt[1].type === "blockQuotePrefix" || rt[1].type === "blockQuotePrefixWhitespace" || rt[1].type === "blockQuoteMarker" || rt[1].type === "listItemIndent")) break;
          }
          et && (!Pe || et < Pe) && (Oe._spread = !0), Oe.end = Object.assign({}, Pe ? O[Pe][1].start : $e[1].end), O.splice(Pe || ue, 0, ["exit", Oe, $e[2]]), ue++, X++;
        }
        if ($e[1].type === "listItemPrefix") {
          const Xe = {
            type: "listItem",
            _spread: !1,
            start: Object.assign({}, $e[1].start),
            // @ts-expect-error: we’ll add `end` in a second.
            end: void 0
          };
          Oe = Xe, O.splice(ue, 0, ["enter", Xe, $e[2]]), ue++, X++, et = void 0, tt = !0;
        }
      }
    }
    return O[U][1]._spread = Ne, X;
  }
  function i(O, U) {
    return X;
    function X(ue) {
      s.call(this, O(ue), ue), U && U.call(this, ue);
    }
  }
  function o() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function s(O, U, X) {
    this.stack[this.stack.length - 1].children.push(O), this.stack.push(O), this.tokenStack.push([U, X || void 0]), O.position = {
      start: ir(U.start),
      // @ts-expect-error: `end` will be patched later.
      end: void 0
    };
  }
  function l(O) {
    return U;
    function U(X) {
      O && O.call(this, X), u.call(this, X);
    }
  }
  function u(O, U) {
    const X = this.stack.pop(), ue = this.tokenStack.pop();
    if (ue)
      ue[0].type !== O.type && (U ? U.call(this, O, ue[0]) : (ue[1] || eg).call(this, O, ue[0]));
    else throw new Error("Cannot close `" + O.type + "` (" + Oa({
      start: O.start,
      end: O.end
    }) + "): it’s not open");
    X.position.end = ir(O.end);
  }
  function c() {
    return df(this.stack.pop());
  }
  function d() {
    this.data.expectingFirstListItemValue = !0;
  }
  function m(O) {
    if (this.data.expectingFirstListItemValue) {
      const U = this.stack[this.stack.length - 2];
      U.start = Number.parseInt(this.sliceSerialize(O), 10), this.data.expectingFirstListItemValue = void 0;
    }
  }
  function f() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.lang = O;
  }
  function h() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.meta = O;
  }
  function E() {
    this.data.flowCodeInside || (this.buffer(), this.data.flowCodeInside = !0);
  }
  function I() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.value = O.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), this.data.flowCodeInside = void 0;
  }
  function x() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.value = O.replace(/(\r?\n|\r)$/g, "");
  }
  function v(O) {
    const U = this.resume(), X = this.stack[this.stack.length - 1];
    X.label = U, X.identifier = Bn(this.sliceSerialize(O)).toLowerCase();
  }
  function S() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.title = O;
  }
  function g() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.url = O;
  }
  function y(O) {
    const U = this.stack[this.stack.length - 1];
    if (!U.depth) {
      const X = this.sliceSerialize(O).length;
      U.depth = X;
    }
  }
  function T() {
    this.data.setextHeadingSlurpLineEnding = !0;
  }
  function j(O) {
    const U = this.stack[this.stack.length - 1];
    U.depth = this.sliceSerialize(O).codePointAt(0) === 61 ? 1 : 2;
  }
  function $() {
    this.data.setextHeadingSlurpLineEnding = void 0;
  }
  function D(O) {
    const X = this.stack[this.stack.length - 1].children;
    let ue = X[X.length - 1];
    (!ue || ue.type !== "text") && (ue = xe(), ue.position = {
      start: ir(O.start),
      // @ts-expect-error: we’ll add `end` later.
      end: void 0
    }, X.push(ue)), this.stack.push(ue);
  }
  function w(O) {
    const U = this.stack.pop();
    U.value += this.sliceSerialize(O), U.position.end = ir(O.end);
  }
  function G(O) {
    const U = this.stack[this.stack.length - 1];
    if (this.data.atHardBreak) {
      const X = U.children[U.children.length - 1];
      X.position.end = ir(O.end), this.data.atHardBreak = void 0;
      return;
    }
    !this.data.setextHeadingSlurpLineEnding && t.canContainEols.includes(U.type) && (D.call(this, O), w.call(this, O));
  }
  function Q() {
    this.data.atHardBreak = !0;
  }
  function z() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.value = O;
  }
  function ce() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.value = O;
  }
  function ae() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.value = O;
  }
  function K() {
    const O = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      const U = this.data.referenceType || "shortcut";
      O.type += "Reference", O.referenceType = U, delete O.url, delete O.title;
    } else
      delete O.identifier, delete O.label;
    this.data.referenceType = void 0;
  }
  function he() {
    const O = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      const U = this.data.referenceType || "shortcut";
      O.type += "Reference", O.referenceType = U, delete O.url, delete O.title;
    } else
      delete O.identifier, delete O.label;
    this.data.referenceType = void 0;
  }
  function ye(O) {
    const U = this.sliceSerialize(O), X = this.stack[this.stack.length - 2];
    X.label = kw(U), X.identifier = Bn(U).toLowerCase();
  }
  function Te() {
    const O = this.stack[this.stack.length - 1], U = this.resume(), X = this.stack[this.stack.length - 1];
    if (this.data.inReference = !0, X.type === "link") {
      const ue = O.children;
      X.children = ue;
    } else
      X.alt = U;
  }
  function A() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.url = O;
  }
  function re() {
    const O = this.resume(), U = this.stack[this.stack.length - 1];
    U.title = O;
  }
  function se() {
    this.data.inReference = void 0;
  }
  function M() {
    this.data.referenceType = "collapsed";
  }
  function me(O) {
    const U = this.resume(), X = this.stack[this.stack.length - 1];
    X.label = U, X.identifier = Bn(this.sliceSerialize(O)).toLowerCase(), this.data.referenceType = "full";
  }
  function we(O) {
    this.data.characterReferenceType = O.type;
  }
  function pe(O) {
    const U = this.sliceSerialize(O), X = this.data.characterReferenceType;
    let ue;
    X ? (ue = wT(U, X === "characterReferenceMarkerNumeric" ? 10 : 16), this.data.characterReferenceType = void 0) : ue = pf(U);
    const fe = this.stack[this.stack.length - 1];
    fe.value += ue;
  }
  function Ie(O) {
    const U = this.stack.pop();
    U.position.end = ir(O.end);
  }
  function Re(O) {
    w.call(this, O);
    const U = this.stack[this.stack.length - 1];
    U.url = this.sliceSerialize(O);
  }
  function be(O) {
    w.call(this, O);
    const U = this.stack[this.stack.length - 1];
    U.url = "mailto:" + this.sliceSerialize(O);
  }
  function ve() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function He() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function Se() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function Ke() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function _t() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function mt() {
    return {
      type: "heading",
      // @ts-expect-error `depth` will be set later.
      depth: 0,
      children: []
    };
  }
  function vt() {
    return {
      type: "break"
    };
  }
  function wt() {
    return {
      type: "html",
      value: ""
    };
  }
  function jt() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function Tt() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function Ht(O) {
    return {
      type: "list",
      ordered: O.type === "listOrdered",
      start: null,
      spread: O._spread,
      children: []
    };
  }
  function Yt(O) {
    return {
      type: "listItem",
      spread: O._spread,
      checked: null,
      children: []
    };
  }
  function Ct() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function gt() {
    return {
      type: "strong",
      children: []
    };
  }
  function xe() {
    return {
      type: "text",
      value: ""
    };
  }
  function Z() {
    return {
      type: "thematicBreak"
    };
  }
}
function ir(e) {
  return {
    line: e.line,
    column: e.column,
    offset: e.offset
  };
}
function UT(e, t) {
  let n = -1;
  for (; ++n < t.length; ) {
    const r = t[n];
    Array.isArray(r) ? UT(e, r) : Dw(e, r);
  }
}
function Dw(e, t) {
  let n;
  for (n in t)
    if (BT.call(t, n))
      switch (n) {
        case "canContainEols": {
          const r = t[n];
          r && e[n].push(...r);
          break;
        }
        case "transforms": {
          const r = t[n];
          r && e[n].push(...r);
          break;
        }
        case "enter":
        case "exit": {
          const r = t[n];
          r && Object.assign(e[n], r);
          break;
        }
      }
}
function eg(e, t) {
  throw e ? new Error("Cannot close `" + e.type + "` (" + Oa({
    start: e.start,
    end: e.end
  }) + "): a different token (`" + t.type + "`, " + Oa({
    start: t.start,
    end: t.end
  }) + ") is open") : new Error("Cannot close document, a token (`" + t.type + "`, " + Oa({
    start: t.start,
    end: t.end
  }) + ") is still open");
}
function Mw(e) {
  const t = this;
  t.parser = n;
  function n(r) {
    return Ow(r, {
      ...t.data("settings"),
      ...e,
      // Note: these options are not in the readme.
      // The goal is for them to be set by plugins on `data` instead of being
      // passed by users.
      extensions: t.data("micromarkExtensions") || [],
      mdastExtensions: t.data("fromMarkdownExtensions") || []
    });
  }
}
function Pw(e, t) {
  const n = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: e.wrap(e.all(t), !0)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function Fw(e, t) {
  const n = { type: "element", tagName: "br", properties: {}, children: [] };
  return e.patch(t, n), [e.applyData(t, n), { type: "text", value: `
` }];
}
function Bw(e, t) {
  const n = t.value ? t.value + `
` : "", r = {};
  t.lang && (r.className = ["language-" + t.lang]);
  let a = {
    type: "element",
    tagName: "code",
    properties: r,
    children: [{ type: "text", value: n }]
  };
  return t.meta && (a.data = { meta: t.meta }), e.patch(t, a), a = e.applyData(t, a), a = { type: "element", tagName: "pre", properties: {}, children: [a] }, e.patch(t, a), a;
}
function Uw(e, t) {
  const n = {
    type: "element",
    tagName: "del",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function jw(e, t) {
  const n = {
    type: "element",
    tagName: "em",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function Hw(e, t) {
  const n = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", r = String(t.identifier).toUpperCase(), a = sa(r.toLowerCase()), i = e.footnoteOrder.indexOf(r);
  let o, s = e.footnoteCounts.get(r);
  s === void 0 ? (s = 0, e.footnoteOrder.push(r), o = e.footnoteOrder.length) : o = i + 1, s += 1, e.footnoteCounts.set(r, s);
  const l = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + n + "fn-" + a,
      id: n + "fnref-" + a + (s > 1 ? "-" + s : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(o) }]
  };
  e.patch(t, l);
  const u = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [l]
  };
  return e.patch(t, u), e.applyData(t, u);
}
function qw(e, t) {
  const n = {
    type: "element",
    tagName: "h" + t.depth,
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function $w(e, t) {
  if (e.options.allowDangerousHtml) {
    const n = { type: "raw", value: t.value };
    return e.patch(t, n), e.applyData(t, n);
  }
}
function jT(e, t) {
  const n = t.referenceType;
  let r = "]";
  if (n === "collapsed" ? r += "[]" : n === "full" && (r += "[" + (t.label || t.identifier) + "]"), t.type === "imageReference")
    return [{ type: "text", value: "![" + t.alt + r }];
  const a = e.all(t), i = a[0];
  i && i.type === "text" ? i.value = "[" + i.value : a.unshift({ type: "text", value: "[" });
  const o = a[a.length - 1];
  return o && o.type === "text" ? o.value += r : a.push({ type: "text", value: r }), a;
}
function zw(e, t) {
  const n = String(t.identifier).toUpperCase(), r = e.definitionById.get(n);
  if (!r)
    return jT(e, t);
  const a = { src: sa(r.url || ""), alt: t.alt };
  r.title !== null && r.title !== void 0 && (a.title = r.title);
  const i = { type: "element", tagName: "img", properties: a, children: [] };
  return e.patch(t, i), e.applyData(t, i);
}
function Gw(e, t) {
  const n = { src: sa(t.url) };
  t.alt !== null && t.alt !== void 0 && (n.alt = t.alt), t.title !== null && t.title !== void 0 && (n.title = t.title);
  const r = { type: "element", tagName: "img", properties: n, children: [] };
  return e.patch(t, r), e.applyData(t, r);
}
function Vw(e, t) {
  const n = { type: "text", value: t.value.replace(/\r?\n|\r/g, " ") };
  e.patch(t, n);
  const r = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [n]
  };
  return e.patch(t, r), e.applyData(t, r);
}
function Ww(e, t) {
  const n = String(t.identifier).toUpperCase(), r = e.definitionById.get(n);
  if (!r)
    return jT(e, t);
  const a = { href: sa(r.url || "") };
  r.title !== null && r.title !== void 0 && (a.title = r.title);
  const i = {
    type: "element",
    tagName: "a",
    properties: a,
    children: e.all(t)
  };
  return e.patch(t, i), e.applyData(t, i);
}
function Yw(e, t) {
  const n = { href: sa(t.url) };
  t.title !== null && t.title !== void 0 && (n.title = t.title);
  const r = {
    type: "element",
    tagName: "a",
    properties: n,
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function Kw(e, t, n) {
  const r = e.all(t), a = n ? Xw(n) : HT(t), i = {}, o = [];
  if (typeof t.checked == "boolean") {
    const c = r[0];
    let d;
    c && c.type === "element" && c.tagName === "p" ? d = c : (d = { type: "element", tagName: "p", properties: {}, children: [] }, r.unshift(d)), d.children.length > 0 && d.children.unshift({ type: "text", value: " " }), d.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: t.checked, disabled: !0 },
      children: []
    }), i.className = ["task-list-item"];
  }
  let s = -1;
  for (; ++s < r.length; ) {
    const c = r[s];
    (a || s !== 0 || c.type !== "element" || c.tagName !== "p") && o.push({ type: "text", value: `
` }), c.type === "element" && c.tagName === "p" && !a ? o.push(...c.children) : o.push(c);
  }
  const l = r[r.length - 1];
  l && (a || l.type !== "element" || l.tagName !== "p") && o.push({ type: "text", value: `
` });
  const u = { type: "element", tagName: "li", properties: i, children: o };
  return e.patch(t, u), e.applyData(t, u);
}
function Xw(e) {
  let t = !1;
  if (e.type === "list") {
    t = e.spread || !1;
    const n = e.children;
    let r = -1;
    for (; !t && ++r < n.length; )
      t = HT(n[r]);
  }
  return t;
}
function HT(e) {
  const t = e.spread;
  return t ?? e.children.length > 1;
}
function Zw(e, t) {
  const n = {}, r = e.all(t);
  let a = -1;
  for (typeof t.start == "number" && t.start !== 1 && (n.start = t.start); ++a < r.length; ) {
    const o = r[a];
    if (o.type === "element" && o.tagName === "li" && o.properties && Array.isArray(o.properties.className) && o.properties.className.includes("task-list-item")) {
      n.className = ["contains-task-list"];
      break;
    }
  }
  const i = {
    type: "element",
    tagName: t.ordered ? "ol" : "ul",
    properties: n,
    children: e.wrap(r, !0)
  };
  return e.patch(t, i), e.applyData(t, i);
}
function Qw(e, t) {
  const n = {
    type: "element",
    tagName: "p",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function Jw(e, t) {
  const n = { type: "root", children: e.wrap(e.all(t)) };
  return e.patch(t, n), e.applyData(t, n);
}
function eC(e, t) {
  const n = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function tC(e, t) {
  const n = e.all(t), r = n.shift(), a = [];
  if (r) {
    const o = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: e.wrap([r], !0)
    };
    e.patch(t.children[0], o), a.push(o);
  }
  if (n.length > 0) {
    const o = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: e.wrap(n, !0)
    }, s = Gn(t.children[1]), l = Ki(t.children[t.children.length - 1]);
    s && l && (o.position = { start: s, end: l }), a.push(o);
  }
  const i = {
    type: "element",
    tagName: "table",
    properties: {},
    children: e.wrap(a, !0)
  };
  return e.patch(t, i), e.applyData(t, i);
}
function nC(e, t, n) {
  const r = n ? n.children : void 0, i = (r ? r.indexOf(t) : 1) === 0 ? "th" : "td", o = n && n.type === "table" ? n.align : void 0, s = o ? o.length : t.children.length;
  let l = -1;
  const u = [];
  for (; ++l < s; ) {
    const d = t.children[l], m = {}, f = o ? o[l] : void 0;
    f && (m.align = f);
    let h = { type: "element", tagName: i, properties: m, children: [] };
    d && (h.children = e.all(d), e.patch(d, h), h = e.applyData(d, h)), u.push(h);
  }
  const c = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: e.wrap(u, !0)
  };
  return e.patch(t, c), e.applyData(t, c);
}
function rC(e, t) {
  const n = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
const tg = 9, ng = 32;
function aC(e) {
  const t = String(e), n = /\r?\n|\r/g;
  let r = n.exec(t), a = 0;
  const i = [];
  for (; r; )
    i.push(
      rg(t.slice(a, r.index), a > 0, !0),
      r[0]
    ), a = r.index + r[0].length, r = n.exec(t);
  return i.push(rg(t.slice(a), a > 0, !1)), i.join("");
}
function rg(e, t, n) {
  let r = 0, a = e.length;
  if (t) {
    let i = e.codePointAt(r);
    for (; i === tg || i === ng; )
      r++, i = e.codePointAt(r);
  }
  if (n) {
    let i = e.codePointAt(a - 1);
    for (; i === tg || i === ng; )
      a--, i = e.codePointAt(a - 1);
  }
  return a > r ? e.slice(r, a) : "";
}
function iC(e, t) {
  const n = { type: "text", value: aC(String(t.value)) };
  return e.patch(t, n), e.applyData(t, n);
}
function oC(e, t) {
  const n = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return e.patch(t, n), e.applyData(t, n);
}
const sC = {
  blockquote: Pw,
  break: Fw,
  code: Bw,
  delete: Uw,
  emphasis: jw,
  footnoteReference: Hw,
  heading: qw,
  html: $w,
  imageReference: zw,
  image: Gw,
  inlineCode: Vw,
  linkReference: Ww,
  link: Yw,
  listItem: Kw,
  list: Zw,
  paragraph: Qw,
  // @ts-expect-error: root is different, but hard to type.
  root: Jw,
  strong: eC,
  table: tC,
  tableCell: rC,
  tableRow: nC,
  text: iC,
  thematicBreak: oC,
  toml: mi,
  yaml: mi,
  definition: mi,
  footnoteDefinition: mi
};
function mi() {
}
const qT = -1, Qi = 0, Pi = 1, Fi = 2, mf = 3, gf = 4, hf = 5, bf = 6, $T = 7, zT = 8, ag = typeof self == "object" ? self : globalThis, lC = (e, t) => {
  const n = (a, i) => (e.set(i, a), a), r = (a) => {
    if (e.has(a))
      return e.get(a);
    const [i, o] = t[a];
    switch (i) {
      case Qi:
      case qT:
        return n(o, a);
      case Pi: {
        const s = n([], a);
        for (const l of o)
          s.push(r(l));
        return s;
      }
      case Fi: {
        const s = n({}, a);
        for (const [l, u] of o)
          s[r(l)] = r(u);
        return s;
      }
      case mf:
        return n(new Date(o), a);
      case gf: {
        const { source: s, flags: l } = o;
        return n(new RegExp(s, l), a);
      }
      case hf: {
        const s = n(/* @__PURE__ */ new Map(), a);
        for (const [l, u] of o)
          s.set(r(l), r(u));
        return s;
      }
      case bf: {
        const s = n(/* @__PURE__ */ new Set(), a);
        for (const l of o)
          s.add(r(l));
        return s;
      }
      case $T: {
        const { name: s, message: l } = o;
        return n(new ag[s](l), a);
      }
      case zT:
        return n(BigInt(o), a);
      case "BigInt":
        return n(Object(BigInt(o)), a);
    }
    return n(new ag[i](o), a);
  };
  return r;
}, ig = (e) => lC(/* @__PURE__ */ new Map(), e)(0), Gr = "", { toString: uC } = {}, { keys: cC } = Object, _a = (e) => {
  const t = typeof e;
  if (t !== "object" || !e)
    return [Qi, t];
  const n = uC.call(e).slice(8, -1);
  switch (n) {
    case "Array":
      return [Pi, Gr];
    case "Object":
      return [Fi, Gr];
    case "Date":
      return [mf, Gr];
    case "RegExp":
      return [gf, Gr];
    case "Map":
      return [hf, Gr];
    case "Set":
      return [bf, Gr];
  }
  return n.includes("Array") ? [Pi, n] : n.includes("Error") ? [$T, n] : [Fi, n];
}, gi = ([e, t]) => e === Qi && (t === "function" || t === "symbol"), dC = (e, t, n, r) => {
  const a = (o, s) => {
    const l = r.push(o) - 1;
    return n.set(s, l), l;
  }, i = (o) => {
    if (n.has(o))
      return n.get(o);
    let [s, l] = _a(o);
    switch (s) {
      case Qi: {
        let c = o;
        switch (l) {
          case "bigint":
            s = zT, c = o.toString();
            break;
          case "function":
          case "symbol":
            if (e)
              throw new TypeError("unable to serialize " + l);
            c = null;
            break;
          case "undefined":
            return a([qT], o);
        }
        return a([s, c], o);
      }
      case Pi: {
        if (l)
          return a([l, [...o]], o);
        const c = [], d = a([s, c], o);
        for (const m of o)
          c.push(i(m));
        return d;
      }
      case Fi: {
        if (l)
          switch (l) {
            case "BigInt":
              return a([l, o.toString()], o);
            case "Boolean":
            case "Number":
            case "String":
              return a([l, o.valueOf()], o);
          }
        if (t && "toJSON" in o)
          return i(o.toJSON());
        const c = [], d = a([s, c], o);
        for (const m of cC(o))
          (e || !gi(_a(o[m]))) && c.push([i(m), i(o[m])]);
        return d;
      }
      case mf:
        return a([s, o.toISOString()], o);
      case gf: {
        const { source: c, flags: d } = o;
        return a([s, { source: c, flags: d }], o);
      }
      case hf: {
        const c = [], d = a([s, c], o);
        for (const [m, f] of o)
          (e || !(gi(_a(m)) || gi(_a(f)))) && c.push([i(m), i(f)]);
        return d;
      }
      case bf: {
        const c = [], d = a([s, c], o);
        for (const m of o)
          (e || !gi(_a(m))) && c.push(i(m));
        return d;
      }
    }
    const { message: u } = o;
    return a([s, { name: l, message: u }], o);
  };
  return i;
}, og = (e, { json: t, lossy: n } = {}) => {
  const r = [];
  return dC(!(t || n), !!t, /* @__PURE__ */ new Map(), r)(e), r;
}, na = typeof structuredClone == "function" ? (
  /* c8 ignore start */
  (e, t) => t && ("json" in t || "lossy" in t) ? ig(og(e, t)) : structuredClone(e)
) : (e, t) => ig(og(e, t));
function pC(e, t) {
  const n = [{ type: "text", value: "↩" }];
  return t > 1 && n.push({
    type: "element",
    tagName: "sup",
    properties: {},
    children: [{ type: "text", value: String(t) }]
  }), n;
}
function fC(e, t) {
  return "Back to reference " + (e + 1) + (t > 1 ? "-" + t : "");
}
function mC(e) {
  const t = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", n = e.options.footnoteBackContent || pC, r = e.options.footnoteBackLabel || fC, a = e.options.footnoteLabel || "Footnotes", i = e.options.footnoteLabelTagName || "h2", o = e.options.footnoteLabelProperties || {
    className: ["sr-only"]
  }, s = [];
  let l = -1;
  for (; ++l < e.footnoteOrder.length; ) {
    const u = e.footnoteById.get(
      e.footnoteOrder[l]
    );
    if (!u)
      continue;
    const c = e.all(u), d = String(u.identifier).toUpperCase(), m = sa(d.toLowerCase());
    let f = 0;
    const h = [], E = e.footnoteCounts.get(d);
    for (; E !== void 0 && ++f <= E; ) {
      h.length > 0 && h.push({ type: "text", value: " " });
      let v = typeof n == "string" ? n : n(l, f);
      typeof v == "string" && (v = { type: "text", value: v }), h.push({
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t + "fnref-" + m + (f > 1 ? "-" + f : ""),
          dataFootnoteBackref: "",
          ariaLabel: typeof r == "string" ? r : r(l, f),
          className: ["data-footnote-backref"]
        },
        children: Array.isArray(v) ? v : [v]
      });
    }
    const I = c[c.length - 1];
    if (I && I.type === "element" && I.tagName === "p") {
      const v = I.children[I.children.length - 1];
      v && v.type === "text" ? v.value += " " : I.children.push({ type: "text", value: " " }), I.children.push(...h);
    } else
      c.push(...h);
    const x = {
      type: "element",
      tagName: "li",
      properties: { id: t + "fn-" + m },
      children: e.wrap(c, !0)
    };
    e.patch(u, x), s.push(x);
  }
  if (s.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: i,
          properties: {
            ...na(o),
            id: "footnote-label"
          },
          children: [{ type: "text", value: a }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: e.wrap(s, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
const Ji = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  function(e) {
    if (e == null)
      return EC;
    if (typeof e == "function")
      return eo(e);
    if (typeof e == "object")
      return Array.isArray(e) ? gC(e) : hC(e);
    if (typeof e == "string")
      return bC(e);
    throw new Error("Expected function, string, or object as test");
  }
);
function gC(e) {
  const t = [];
  let n = -1;
  for (; ++n < e.length; )
    t[n] = Ji(e[n]);
  return eo(r);
  function r(...a) {
    let i = -1;
    for (; ++i < t.length; )
      if (t[i].apply(this, a)) return !0;
    return !1;
  }
}
function hC(e) {
  const t = (
    /** @type {Record<string, unknown>} */
    e
  );
  return eo(n);
  function n(r) {
    const a = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      r
    );
    let i;
    for (i in e)
      if (a[i] !== t[i]) return !1;
    return !0;
  }
}
function bC(e) {
  return eo(t);
  function t(n) {
    return n && n.type === e;
  }
}
function eo(e) {
  return t;
  function t(n, r, a) {
    return !!(yC(n) && e.call(
      this,
      n,
      typeof r == "number" ? r : void 0,
      a || void 0
    ));
  }
}
function EC() {
  return !0;
}
function yC(e) {
  return e !== null && typeof e == "object" && "type" in e;
}
const GT = [], vC = !0, Bi = !1, TC = "skip";
function VT(e, t, n, r) {
  let a;
  typeof t == "function" && typeof n != "function" ? (r = n, n = t) : a = t;
  const i = Ji(a), o = r ? -1 : 1;
  s(e, void 0, [])();
  function s(l, u, c) {
    const d = (
      /** @type {Record<string, unknown>} */
      l && typeof l == "object" ? l : {}
    );
    if (typeof d.type == "string") {
      const f = (
        // `hast`
        typeof d.tagName == "string" ? d.tagName : (
          // `xast`
          typeof d.name == "string" ? d.name : void 0
        )
      );
      Object.defineProperty(m, "name", {
        value: "node (" + (l.type + (f ? "<" + f + ">" : "")) + ")"
      });
    }
    return m;
    function m() {
      let f = GT, h, E, I;
      if ((!t || i(l, u, c[c.length - 1] || void 0)) && (f = SC(n(l, c)), f[0] === Bi))
        return f;
      if ("children" in l && l.children) {
        const x = (
          /** @type {UnistParent} */
          l
        );
        if (x.children && f[0] !== TC)
          for (E = (r ? x.children.length : -1) + o, I = c.concat(x); E > -1 && E < x.children.length; ) {
            const v = x.children[E];
            if (h = s(v, E, I)(), h[0] === Bi)
              return h;
            E = typeof h[1] == "number" ? h[1] : E + o;
          }
      }
      return f;
    }
  }
}
function SC(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [vC, e] : e == null ? GT : [e];
}
function ra(e, t, n, r) {
  let a, i, o;
  typeof t == "function" && typeof n != "function" ? (i = void 0, o = t, a = n) : (i = t, o = n, a = r), VT(e, i, s, a);
  function s(l, u) {
    const c = u[u.length - 1], d = c ? c.children.indexOf(l) : void 0;
    return o(l, d, c);
  }
}
const Rp = {}.hasOwnProperty, _C = {};
function AC(e, t) {
  const n = t || _C, r = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map(), o = { ...sC, ...n.handlers }, s = {
    all: u,
    applyData: RC,
    definitionById: r,
    footnoteById: a,
    footnoteCounts: i,
    footnoteOrder: [],
    handlers: o,
    one: l,
    options: n,
    patch: xC,
    wrap: wC
  };
  return ra(e, function(c) {
    if (c.type === "definition" || c.type === "footnoteDefinition") {
      const d = c.type === "definition" ? r : a, m = String(c.identifier).toUpperCase();
      d.has(m) || d.set(m, c);
    }
  }), s;
  function l(c, d) {
    const m = c.type, f = s.handlers[m];
    if (Rp.call(s.handlers, m) && f)
      return f(s, c, d);
    if (s.options.passThrough && s.options.passThrough.includes(m)) {
      if ("children" in c) {
        const { children: E, ...I } = c, x = na(I);
        return x.children = s.all(c), x;
      }
      return na(c);
    }
    return (s.options.unknownHandler || IC)(s, c, d);
  }
  function u(c) {
    const d = [];
    if ("children" in c) {
      const m = c.children;
      let f = -1;
      for (; ++f < m.length; ) {
        const h = s.one(m[f], c);
        if (h) {
          if (f && m[f - 1].type === "break" && (!Array.isArray(h) && h.type === "text" && (h.value = sg(h.value)), !Array.isArray(h) && h.type === "element")) {
            const E = h.children[0];
            E && E.type === "text" && (E.value = sg(E.value));
          }
          Array.isArray(h) ? d.push(...h) : d.push(h);
        }
      }
    }
    return d;
  }
}
function xC(e, t) {
  e.position && (t.position = dR(e));
}
function RC(e, t) {
  let n = t;
  if (e && e.data) {
    const r = e.data.hName, a = e.data.hChildren, i = e.data.hProperties;
    if (typeof r == "string")
      if (n.type === "element")
        n.tagName = r;
      else {
        const o = "children" in n ? n.children : [n];
        n = { type: "element", tagName: r, properties: {}, children: o };
      }
    n.type === "element" && i && Object.assign(n.properties, na(i)), "children" in n && n.children && a !== null && a !== void 0 && (n.children = a);
  }
  return n;
}
function IC(e, t) {
  const n = t.data || {}, r = "value" in t && !(Rp.call(n, "hProperties") || Rp.call(n, "hChildren")) ? { type: "text", value: t.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function wC(e, t) {
  const n = [];
  let r = -1;
  for (t && n.push({ type: "text", value: `
` }); ++r < e.length; )
    r && n.push({ type: "text", value: `
` }), n.push(e[r]);
  return t && e.length > 0 && n.push({ type: "text", value: `
` }), n;
}
function sg(e) {
  let t = 0, n = e.charCodeAt(t);
  for (; n === 9 || n === 32; )
    t++, n = e.charCodeAt(t);
  return e.slice(t);
}
function lg(e, t) {
  const n = AC(e, t), r = n.one(e, void 0), a = mC(n), i = Array.isArray(r) ? { type: "root", children: r } : r || { type: "root", children: [] };
  return a && i.children.push({ type: "text", value: `
` }, a), i;
}
function CC(e, t) {
  return e && "run" in e ? async function(n, r) {
    const a = (
      /** @type {HastRoot} */
      lg(n, { file: r, ...t })
    );
    await e.run(a, r);
  } : function(n, r) {
    return (
      /** @type {HastRoot} */
      lg(n, { file: r, ...e || t })
    );
  };
}
function ug(e) {
  if (e)
    throw e;
}
var Ri = Object.prototype.hasOwnProperty, WT = Object.prototype.toString, cg = Object.defineProperty, dg = Object.getOwnPropertyDescriptor, pg = function(t) {
  return typeof Array.isArray == "function" ? Array.isArray(t) : WT.call(t) === "[object Array]";
}, fg = function(t) {
  if (!t || WT.call(t) !== "[object Object]")
    return !1;
  var n = Ri.call(t, "constructor"), r = t.constructor && t.constructor.prototype && Ri.call(t.constructor.prototype, "isPrototypeOf");
  if (t.constructor && !n && !r)
    return !1;
  var a;
  for (a in t)
    ;
  return typeof a > "u" || Ri.call(t, a);
}, mg = function(t, n) {
  cg && n.name === "__proto__" ? cg(t, n.name, {
    enumerable: !0,
    configurable: !0,
    value: n.newValue,
    writable: !0
  }) : t[n.name] = n.newValue;
}, gg = function(t, n) {
  if (n === "__proto__")
    if (Ri.call(t, n)) {
      if (dg)
        return dg(t, n).value;
    } else return;
  return t[n];
}, kC = function e() {
  var t, n, r, a, i, o, s = arguments[0], l = 1, u = arguments.length, c = !1;
  for (typeof s == "boolean" && (c = s, s = arguments[1] || {}, l = 2), (s == null || typeof s != "object" && typeof s != "function") && (s = {}); l < u; ++l)
    if (t = arguments[l], t != null)
      for (n in t)
        r = gg(s, n), a = gg(t, n), s !== a && (c && a && (fg(a) || (i = pg(a))) ? (i ? (i = !1, o = r && pg(r) ? r : []) : o = r && fg(r) ? r : {}, mg(s, { name: n, newValue: e(c, o, a) })) : typeof a < "u" && mg(s, { name: n, newValue: a }));
  return s;
};
const Fo = /* @__PURE__ */ pr(kC);
function Ip(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function NC() {
  const e = [], t = { run: n, use: r };
  return t;
  function n(...a) {
    let i = -1;
    const o = a.pop();
    if (typeof o != "function")
      throw new TypeError("Expected function as last argument, not " + o);
    s(null, ...a);
    function s(l, ...u) {
      const c = e[++i];
      let d = -1;
      if (l) {
        o(l);
        return;
      }
      for (; ++d < a.length; )
        (u[d] === null || u[d] === void 0) && (u[d] = a[d]);
      a = u, c ? OC(c, s)(...u) : o(null, ...u);
    }
  }
  function r(a) {
    if (typeof a != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + a
      );
    return e.push(a), t;
  }
}
function OC(e, t) {
  let n;
  return r;
  function r(...o) {
    const s = e.length > o.length;
    let l;
    s && o.push(a);
    try {
      l = e.apply(this, o);
    } catch (u) {
      const c = (
        /** @type {Error} */
        u
      );
      if (s && n)
        throw c;
      return a(c);
    }
    s || (l && l.then && typeof l.then == "function" ? l.then(i, a) : l instanceof Error ? a(l) : i(l));
  }
  function a(o, ...s) {
    n || (n = !0, t(o, ...s));
  }
  function i(o) {
    a(null, o);
  }
}
const $n = { basename: LC, dirname: DC, extname: MC, join: PC, sep: "/" };
function LC(e, t) {
  if (t !== void 0 && typeof t != "string")
    throw new TypeError('"ext" argument must be a string');
  Qa(e);
  let n = 0, r = -1, a = e.length, i;
  if (t === void 0 || t.length === 0 || t.length > e.length) {
    for (; a--; )
      if (e.codePointAt(a) === 47) {
        if (i) {
          n = a + 1;
          break;
        }
      } else r < 0 && (i = !0, r = a + 1);
    return r < 0 ? "" : e.slice(n, r);
  }
  if (t === e)
    return "";
  let o = -1, s = t.length - 1;
  for (; a--; )
    if (e.codePointAt(a) === 47) {
      if (i) {
        n = a + 1;
        break;
      }
    } else
      o < 0 && (i = !0, o = a + 1), s > -1 && (e.codePointAt(a) === t.codePointAt(s--) ? s < 0 && (r = a) : (s = -1, r = o));
  return n === r ? r = o : r < 0 && (r = e.length), e.slice(n, r);
}
function DC(e) {
  if (Qa(e), e.length === 0)
    return ".";
  let t = -1, n = e.length, r;
  for (; --n; )
    if (e.codePointAt(n) === 47) {
      if (r) {
        t = n;
        break;
      }
    } else r || (r = !0);
  return t < 0 ? e.codePointAt(0) === 47 ? "/" : "." : t === 1 && e.codePointAt(0) === 47 ? "//" : e.slice(0, t);
}
function MC(e) {
  Qa(e);
  let t = e.length, n = -1, r = 0, a = -1, i = 0, o;
  for (; t--; ) {
    const s = e.codePointAt(t);
    if (s === 47) {
      if (o) {
        r = t + 1;
        break;
      }
      continue;
    }
    n < 0 && (o = !0, n = t + 1), s === 46 ? a < 0 ? a = t : i !== 1 && (i = 1) : a > -1 && (i = -1);
  }
  return a < 0 || n < 0 || // We saw a non-dot character immediately before the dot.
  i === 0 || // The (right-most) trimmed path component is exactly `..`.
  i === 1 && a === n - 1 && a === r + 1 ? "" : e.slice(a, n);
}
function PC(...e) {
  let t = -1, n;
  for (; ++t < e.length; )
    Qa(e[t]), e[t] && (n = n === void 0 ? e[t] : n + "/" + e[t]);
  return n === void 0 ? "." : FC(n);
}
function FC(e) {
  Qa(e);
  const t = e.codePointAt(0) === 47;
  let n = BC(e, !t);
  return n.length === 0 && !t && (n = "."), n.length > 0 && e.codePointAt(e.length - 1) === 47 && (n += "/"), t ? "/" + n : n;
}
function BC(e, t) {
  let n = "", r = 0, a = -1, i = 0, o = -1, s, l;
  for (; ++o <= e.length; ) {
    if (o < e.length)
      s = e.codePointAt(o);
    else {
      if (s === 47)
        break;
      s = 47;
    }
    if (s === 47) {
      if (!(a === o - 1 || i === 1)) if (a !== o - 1 && i === 2) {
        if (n.length < 2 || r !== 2 || n.codePointAt(n.length - 1) !== 46 || n.codePointAt(n.length - 2) !== 46) {
          if (n.length > 2) {
            if (l = n.lastIndexOf("/"), l !== n.length - 1) {
              l < 0 ? (n = "", r = 0) : (n = n.slice(0, l), r = n.length - 1 - n.lastIndexOf("/")), a = o, i = 0;
              continue;
            }
          } else if (n.length > 0) {
            n = "", r = 0, a = o, i = 0;
            continue;
          }
        }
        t && (n = n.length > 0 ? n + "/.." : "..", r = 2);
      } else
        n.length > 0 ? n += "/" + e.slice(a + 1, o) : n = e.slice(a + 1, o), r = o - a - 1;
      a = o, i = 0;
    } else s === 46 && i > -1 ? i++ : i = -1;
  }
  return n;
}
function Qa(e) {
  if (typeof e != "string")
    throw new TypeError(
      "Path must be a string. Received " + JSON.stringify(e)
    );
}
const UC = { cwd: jC };
function jC() {
  return "/";
}
function wp(e) {
  return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && // @ts-expect-error: indexing is fine.
  e.auth === void 0);
}
function HC(e) {
  if (typeof e == "string")
    e = new URL(e);
  else if (!wp(e)) {
    const t = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' + e + "`"
    );
    throw t.code = "ERR_INVALID_ARG_TYPE", t;
  }
  if (e.protocol !== "file:") {
    const t = new TypeError("The URL must be of scheme file");
    throw t.code = "ERR_INVALID_URL_SCHEME", t;
  }
  return qC(e);
}
function qC(e) {
  if (e.hostname !== "") {
    const r = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    );
    throw r.code = "ERR_INVALID_FILE_URL_HOST", r;
  }
  const t = e.pathname;
  let n = -1;
  for (; ++n < t.length; )
    if (t.codePointAt(n) === 37 && t.codePointAt(n + 1) === 50) {
      const r = t.codePointAt(n + 2);
      if (r === 70 || r === 102) {
        const a = new TypeError(
          "File URL path must not include encoded / characters"
        );
        throw a.code = "ERR_INVALID_FILE_URL_PATH", a;
      }
    }
  return decodeURIComponent(t);
}
const Bo = (
  /** @type {const} */
  [
    "history",
    "path",
    "basename",
    "stem",
    "extname",
    "dirname"
  ]
);
class YT {
  /**
   * Create a new virtual file.
   *
   * `options` is treated as:
   *
   * *   `string` or `Uint8Array` — `{value: options}`
   * *   `URL` — `{path: options}`
   * *   `VFile` — shallow copies its data over to the new file
   * *   `object` — all fields are shallow copied over to the new file
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * You cannot set `dirname` or `extname` without setting either `history`,
   * `path`, `basename`, or `stem` too.
   *
   * @param {Compatible | null | undefined} [value]
   *   File value.
   * @returns
   *   New instance.
   */
  constructor(t) {
    let n;
    t ? wp(t) ? n = { path: t } : typeof t == "string" || $C(t) ? n = { value: t } : n = t : n = {}, this.cwd = "cwd" in n ? "" : UC.cwd(), this.data = {}, this.history = [], this.messages = [], this.value, this.map, this.result, this.stored;
    let r = -1;
    for (; ++r < Bo.length; ) {
      const i = Bo[r];
      i in n && n[i] !== void 0 && n[i] !== null && (this[i] = i === "history" ? [...n[i]] : n[i]);
    }
    let a;
    for (a in n)
      Bo.includes(a) || (this[a] = n[a]);
  }
  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   *
   * @returns {string | undefined}
   *   Basename.
   */
  get basename() {
    return typeof this.path == "string" ? $n.basename(this.path) : void 0;
  }
  /**
   * Set basename (including extname) (`'index.min.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   *
   * @param {string} basename
   *   Basename.
   * @returns {undefined}
   *   Nothing.
   */
  set basename(t) {
    jo(t, "basename"), Uo(t, "basename"), this.path = $n.join(this.dirname || "", t);
  }
  /**
   * Get the parent path (example: `'~'`).
   *
   * @returns {string | undefined}
   *   Dirname.
   */
  get dirname() {
    return typeof this.path == "string" ? $n.dirname(this.path) : void 0;
  }
  /**
   * Set the parent path (example: `'~'`).
   *
   * Cannot be set if there’s no `path` yet.
   *
   * @param {string | undefined} dirname
   *   Dirname.
   * @returns {undefined}
   *   Nothing.
   */
  set dirname(t) {
    hg(this.basename, "dirname"), this.path = $n.join(t || "", this.basename);
  }
  /**
   * Get the extname (including dot) (example: `'.js'`).
   *
   * @returns {string | undefined}
   *   Extname.
   */
  get extname() {
    return typeof this.path == "string" ? $n.extname(this.path) : void 0;
  }
  /**
   * Set the extname (including dot) (example: `'.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   *
   * @param {string | undefined} extname
   *   Extname.
   * @returns {undefined}
   *   Nothing.
   */
  set extname(t) {
    if (Uo(t, "extname"), hg(this.dirname, "extname"), t) {
      if (t.codePointAt(0) !== 46)
        throw new Error("`extname` must start with `.`");
      if (t.includes(".", 1))
        throw new Error("`extname` cannot contain multiple dots");
    }
    this.path = $n.join(this.dirname, this.stem + (t || ""));
  }
  /**
   * Get the full path (example: `'~/index.min.js'`).
   *
   * @returns {string}
   *   Path.
   */
  get path() {
    return this.history[this.history.length - 1];
  }
  /**
   * Set the full path (example: `'~/index.min.js'`).
   *
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   *
   * @param {URL | string} path
   *   Path.
   * @returns {undefined}
   *   Nothing.
   */
  set path(t) {
    wp(t) && (t = HC(t)), jo(t, "path"), this.path !== t && this.history.push(t);
  }
  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   *
   * @returns {string | undefined}
   *   Stem.
   */
  get stem() {
    return typeof this.path == "string" ? $n.basename(this.path, this.extname) : void 0;
  }
  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   *
   * @param {string} stem
   *   Stem.
   * @returns {undefined}
   *   Nothing.
   */
  set stem(t) {
    jo(t, "stem"), Uo(t, "stem"), this.path = $n.join(this.dirname || "", t + (this.extname || ""));
  }
  // Normal prototypal methods.
  /**
   * Create a fatal message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `true` (error; file not usable)
   * and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {never}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {never}
   *   Never.
   * @throws {VFileMessage}
   *   Message.
   */
  fail(t, n, r) {
    const a = this.message(t, n, r);
    throw a.fatal = !0, a;
  }
  /**
   * Create an info message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `undefined` (info; change
   * likely not needed) and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  info(t, n, r) {
    const a = this.message(t, n, r);
    return a.fatal = void 0, a;
  }
  /**
   * Create a message for `reason` associated with the file.
   *
   * The `fatal` field of the message is set to `false` (warning; change may be
   * needed) and the `file` field is set to the current file path.
   * The message is added to the `messages` field on `file`.
   *
   * > 🪦 **Note**: also has obsolete signatures.
   *
   * @overload
   * @param {string} reason
   * @param {MessageOptions | null | undefined} [options]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {string} reason
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Node | NodeLike | null | undefined} parent
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {Point | Position | null | undefined} place
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @overload
   * @param {Error | VFileMessage} cause
   * @param {string | null | undefined} [origin]
   * @returns {VFileMessage}
   *
   * @param {Error | VFileMessage | string} causeOrReason
   *   Reason for message, should use markdown.
   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
   *   Configuration (optional).
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  message(t, n, r) {
    const a = new sn(
      // @ts-expect-error: the overloads are fine.
      t,
      n,
      r
    );
    return this.path && (a.name = this.path + ":" + a.name, a.file = this.path), a.fatal = !1, this.messages.push(a), a;
  }
  /**
   * Serialize the file.
   *
   * > **Note**: which encodings are supported depends on the engine.
   * > For info on Node.js, see:
   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.
   *
   * @param {string | null | undefined} [encoding='utf8']
   *   Character encoding to understand `value` as when it’s a `Uint8Array`
   *   (default: `'utf-8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(t) {
    return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(t || void 0).decode(this.value);
  }
}
function Uo(e, t) {
  if (e && e.includes($n.sep))
    throw new Error(
      "`" + t + "` cannot be a path: did not expect `" + $n.sep + "`"
    );
}
function jo(e, t) {
  if (!e)
    throw new Error("`" + t + "` cannot be empty");
}
function hg(e, t) {
  if (!e)
    throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function $C(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const zC = (
  /**
   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}
   */
  /** @type {unknown} */
  /**
   * @this {Function}
   * @param {string | symbol} property
   * @returns {(...parameters: Array<unknown>) => unknown}
   */
  function(e) {
    const r = (
      /** @type {Record<string | symbol, Function>} */
      // Prototypes do exist.
      // type-coverage:ignore-next-line
      this.constructor.prototype
    ), a = r[e], i = function() {
      return a.apply(i, arguments);
    };
    return Object.setPrototypeOf(i, r), i;
  }
), GC = {}.hasOwnProperty;
class Ef extends zC {
  /**
   * Create a processor.
   */
  constructor() {
    super("copy"), this.Compiler = void 0, this.Parser = void 0, this.attachers = [], this.compiler = void 0, this.freezeIndex = -1, this.frozen = void 0, this.namespace = {}, this.parser = void 0, this.transformers = NC();
  }
  /**
   * Copy a processor.
   *
   * @deprecated
   *   This is a private internal method and should not be used.
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   New *unfrozen* processor ({@linkcode Processor}) that is
   *   configured to work the same as its ancestor.
   *   When the descendant processor is configured in the future it does not
   *   affect the ancestral processor.
   */
  copy() {
    const t = (
      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */
      new Ef()
    );
    let n = -1;
    for (; ++n < this.attachers.length; ) {
      const r = this.attachers[n];
      t.use(...r);
    }
    return t.data(Fo(!0, {}, this.namespace)), t;
  }
  /**
   * Configure the processor with info available to all plugins.
   * Information is stored in an object.
   *
   * Typically, options can be given to a specific plugin, but sometimes it
   * makes sense to have information shared with several plugins.
   * For example, a list of HTML elements that are self-closing, which is
   * needed during all phases.
   *
   * > **Note**: setting information cannot occur on *frozen* processors.
   * > Call the processor first to create a new unfrozen processor.
   *
   * > **Note**: to register custom data in TypeScript, augment the
   * > {@linkcode Data} interface.
   *
   * @example
   *   This example show how to get and set info:
   *
   *   ```js
   *   import {unified} from 'unified'
   *
   *   const processor = unified().data('alpha', 'bravo')
   *
   *   processor.data('alpha') // => 'bravo'
   *
   *   processor.data() // => {alpha: 'bravo'}
   *
   *   processor.data({charlie: 'delta'})
   *
   *   processor.data() // => {charlie: 'delta'}
   *   ```
   *
   * @template {keyof Data} Key
   *
   * @overload
   * @returns {Data}
   *
   * @overload
   * @param {Data} dataset
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {Key} key
   * @returns {Data[Key]}
   *
   * @overload
   * @param {Key} key
   * @param {Data[Key]} value
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @param {Data | Key} [key]
   *   Key to get or set, or entire dataset to set, or nothing to get the
   *   entire dataset (optional).
   * @param {Data[Key]} [value]
   *   Value to set (optional).
   * @returns {unknown}
   *   The current processor when setting, the value at `key` when getting, or
   *   the entire dataset when getting without key.
   */
  data(t, n) {
    return typeof t == "string" ? arguments.length === 2 ? ($o("data", this.frozen), this.namespace[t] = n, this) : GC.call(this.namespace, t) && this.namespace[t] || void 0 : t ? ($o("data", this.frozen), this.namespace = t, this) : this.namespace;
  }
  /**
   * Freeze a processor.
   *
   * Frozen processors are meant to be extended and not to be configured
   * directly.
   *
   * When a processor is frozen it cannot be unfrozen.
   * New processors working the same way can be created by calling the
   * processor.
   *
   * It’s possible to freeze processors explicitly by calling `.freeze()`.
   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,
   * `.stringify()`, `.process()`, or `.processSync()` are called.
   *
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   The current processor.
   */
  freeze() {
    if (this.frozen)
      return this;
    const t = (
      /** @type {Processor} */
      /** @type {unknown} */
      this
    );
    for (; ++this.freezeIndex < this.attachers.length; ) {
      const [n, ...r] = this.attachers[this.freezeIndex];
      if (r[0] === !1)
        continue;
      r[0] === !0 && (r[0] = void 0);
      const a = n.call(t, ...r);
      typeof a == "function" && this.transformers.use(a);
    }
    return this.frozen = !0, this.freezeIndex = Number.POSITIVE_INFINITY, this;
  }
  /**
   * Parse text to a syntax tree.
   *
   * > **Note**: `parse` freezes the processor if not already *frozen*.
   *
   * > **Note**: `parse` performs the parse phase, not the run phase or other
   * > phases.
   *
   * @param {Compatible | undefined} [file]
   *   file to parse (optional); typically `string` or `VFile`; any value
   *   accepted as `x` in `new VFile(x)`.
   * @returns {ParseTree extends undefined ? Node : ParseTree}
   *   Syntax tree representing `file`.
   */
  parse(t) {
    this.freeze();
    const n = hi(t), r = this.parser || this.Parser;
    return Ho("parse", r), r(String(n), n);
  }
  /**
   * Process the given file as configured on the processor.
   *
   * > **Note**: `process` freezes the processor if not already *frozen*.
   *
   * > **Note**: `process` performs the parse, run, and stringify phases.
   *
   * @overload
   * @param {Compatible | undefined} file
   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done
   * @returns {undefined}
   *
   * @overload
   * @param {Compatible | undefined} [file]
   * @returns {Promise<VFileWithOutput<CompileResult>>}
   *
   * @param {Compatible | undefined} [file]
   *   File (optional); typically `string` or `VFile`]; any value accepted as
   *   `x` in `new VFile(x)`.
   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]
   *   Callback (optional).
   * @returns {Promise<VFile> | undefined}
   *   Nothing if `done` is given.
   *   Otherwise a promise, rejected with a fatal error or resolved with the
   *   processed file.
   *
   *   The parsed, transformed, and compiled value is available at
   *   `file.value` (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most
   *   > compilers return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  process(t, n) {
    const r = this;
    return this.freeze(), Ho("process", this.parser || this.Parser), qo("process", this.compiler || this.Compiler), n ? a(void 0, n) : new Promise(a);
    function a(i, o) {
      const s = hi(t), l = (
        /** @type {HeadTree extends undefined ? Node : HeadTree} */
        /** @type {unknown} */
        r.parse(s)
      );
      r.run(l, s, function(c, d, m) {
        if (c || !d || !m)
          return u(c);
        const f = (
          /** @type {CompileTree extends undefined ? Node : CompileTree} */
          /** @type {unknown} */
          d
        ), h = r.stringify(f, m);
        YC(h) ? m.value = h : m.result = h, u(
          c,
          /** @type {VFileWithOutput<CompileResult>} */
          m
        );
      });
      function u(c, d) {
        c || !d ? o(c) : i ? i(d) : n(void 0, d);
      }
    }
  }
  /**
   * Process the given file as configured on the processor.
   *
   * An error is thrown if asynchronous transforms are configured.
   *
   * > **Note**: `processSync` freezes the processor if not already *frozen*.
   *
   * > **Note**: `processSync` performs the parse, run, and stringify phases.
   *
   * @param {Compatible | undefined} [file]
   *   File (optional); typically `string` or `VFile`; any value accepted as
   *   `x` in `new VFile(x)`.
   * @returns {VFileWithOutput<CompileResult>}
   *   The processed file.
   *
   *   The parsed, transformed, and compiled value is available at
   *   `file.value` (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most
   *   > compilers return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  processSync(t) {
    let n = !1, r;
    return this.freeze(), Ho("processSync", this.parser || this.Parser), qo("processSync", this.compiler || this.Compiler), this.process(t, a), Eg("processSync", "process", n), r;
    function a(i, o) {
      n = !0, ug(i), r = o;
    }
  }
  /**
   * Run *transformers* on a syntax tree.
   *
   * > **Note**: `run` freezes the processor if not already *frozen*.
   *
   * > **Note**: `run` performs the run phase, not other phases.
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
   * @returns {undefined}
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {Compatible | undefined} file
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
   * @returns {undefined}
   *
   * @overload
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   * @param {Compatible | undefined} [file]
   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}
   *
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   *   Tree to transform and inspect.
   * @param {(
   *   RunCallback<TailTree extends undefined ? Node : TailTree> |
   *   Compatible
   * )} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]
   *   Callback (optional).
   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}
   *   Nothing if `done` is given.
   *   Otherwise, a promise rejected with a fatal error or resolved with the
   *   transformed tree.
   */
  run(t, n, r) {
    bg(t), this.freeze();
    const a = this.transformers;
    return !r && typeof n == "function" && (r = n, n = void 0), r ? i(void 0, r) : new Promise(i);
    function i(o, s) {
      const l = hi(n);
      a.run(t, l, u);
      function u(c, d, m) {
        const f = (
          /** @type {TailTree extends undefined ? Node : TailTree} */
          d || t
        );
        c ? s(c) : o ? o(f) : r(void 0, f, m);
      }
    }
  }
  /**
   * Run *transformers* on a syntax tree.
   *
   * An error is thrown if asynchronous transforms are configured.
   *
   * > **Note**: `runSync` freezes the processor if not already *frozen*.
   *
   * > **Note**: `runSync` performs the run phase, not other phases.
   *
   * @param {HeadTree extends undefined ? Node : HeadTree} tree
   *   Tree to transform and inspect.
   * @param {Compatible | undefined} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @returns {TailTree extends undefined ? Node : TailTree}
   *   Transformed tree.
   */
  runSync(t, n) {
    let r = !1, a;
    return this.run(t, n, i), Eg("runSync", "run", r), a;
    function i(o, s) {
      ug(o), a = s, r = !0;
    }
  }
  /**
   * Compile a syntax tree.
   *
   * > **Note**: `stringify` freezes the processor if not already *frozen*.
   *
   * > **Note**: `stringify` performs the stringify phase, not the run phase
   * > or other phases.
   *
   * @param {CompileTree extends undefined ? Node : CompileTree} tree
   *   Tree to compile.
   * @param {Compatible | undefined} [file]
   *   File associated with `node` (optional); any value accepted as `x` in
   *   `new VFile(x)`.
   * @returns {CompileResult extends undefined ? Value : CompileResult}
   *   Textual representation of the tree (see note).
   *
   *   > **Note**: unified typically compiles by serializing: most compilers
   *   > return `string` (or `Uint8Array`).
   *   > Some compilers, such as the one configured with
   *   > [`rehype-react`][rehype-react], return other values (in this case, a
   *   > React tree).
   *   > If you’re using a compiler that doesn’t serialize, expect different
   *   > result values.
   *   >
   *   > To register custom results in TypeScript, add them to
   *   > {@linkcode CompileResultMap}.
   *
   *   [rehype-react]: https://github.com/rehypejs/rehype-react
   */
  stringify(t, n) {
    this.freeze();
    const r = hi(n), a = this.compiler || this.Compiler;
    return qo("stringify", a), bg(t), a(t, r);
  }
  /**
   * Configure the processor to use a plugin, a list of usable values, or a
   * preset.
   *
   * If the processor is already using a plugin, the previous plugin
   * configuration is changed based on the options that are passed in.
   * In other words, the plugin is not added a second time.
   *
   * > **Note**: `use` cannot be called on *frozen* processors.
   * > Call the processor first to create a new unfrozen processor.
   *
   * @example
   *   There are many ways to pass plugins to `.use()`.
   *   This example gives an overview:
   *
   *   ```js
   *   import {unified} from 'unified'
   *
   *   unified()
   *     // Plugin with options:
   *     .use(pluginA, {x: true, y: true})
   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):
   *     .use(pluginA, {y: false, z: true})
   *     // Plugins:
   *     .use([pluginB, pluginC])
   *     // Two plugins, the second with options:
   *     .use([pluginD, [pluginE, {}]])
   *     // Preset with plugins and settings:
   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})
   *     // Settings only:
   *     .use({settings: {position: false}})
   *   ```
   *
   * @template {Array<unknown>} [Parameters=[]]
   * @template {Node | string | undefined} [Input=undefined]
   * @template [Output=Input]
   *
   * @overload
   * @param {Preset | null | undefined} [preset]
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {PluggableList} list
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *
   * @overload
   * @param {Plugin<Parameters, Input, Output>} plugin
   * @param {...(Parameters | [boolean])} parameters
   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}
   *
   * @param {PluggableList | Plugin | Preset | null | undefined} value
   *   Usable value.
   * @param {...unknown} parameters
   *   Parameters, when a plugin is given as a usable value.
   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
   *   Current processor.
   */
  use(t, ...n) {
    const r = this.attachers, a = this.namespace;
    if ($o("use", this.frozen), t != null) if (typeof t == "function")
      l(t, n);
    else if (typeof t == "object")
      Array.isArray(t) ? s(t) : o(t);
    else
      throw new TypeError("Expected usable value, not `" + t + "`");
    return this;
    function i(u) {
      if (typeof u == "function")
        l(u, []);
      else if (typeof u == "object")
        if (Array.isArray(u)) {
          const [c, ...d] = (
            /** @type {PluginTuple<Array<unknown>>} */
            u
          );
          l(c, d);
        } else
          o(u);
      else
        throw new TypeError("Expected usable value, not `" + u + "`");
    }
    function o(u) {
      if (!("plugins" in u) && !("settings" in u))
        throw new Error(
          "Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither"
        );
      s(u.plugins), u.settings && (a.settings = Fo(!0, a.settings, u.settings));
    }
    function s(u) {
      let c = -1;
      if (u != null) if (Array.isArray(u))
        for (; ++c < u.length; ) {
          const d = u[c];
          i(d);
        }
      else
        throw new TypeError("Expected a list of plugins, not `" + u + "`");
    }
    function l(u, c) {
      let d = -1, m = -1;
      for (; ++d < r.length; )
        if (r[d][0] === u) {
          m = d;
          break;
        }
      if (m === -1)
        r.push([u, ...c]);
      else if (c.length > 0) {
        let [f, ...h] = c;
        const E = r[m][1];
        Ip(E) && Ip(f) && (f = Fo(!0, E, f)), r[m] = [u, f, ...h];
      }
    }
  }
}
const VC = new Ef().freeze();
function Ho(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `parser`");
}
function qo(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `compiler`");
}
function $o(e, t) {
  if (t)
    throw new Error(
      "Cannot call `" + e + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function bg(e) {
  if (!Ip(e) || typeof e.type != "string")
    throw new TypeError("Expected node, got `" + e + "`");
}
function Eg(e, t, n) {
  if (!n)
    throw new Error(
      "`" + e + "` finished async. Use `" + t + "` instead"
    );
}
function hi(e) {
  return WC(e) ? e : new YT(e);
}
function WC(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function YC(e) {
  return typeof e == "string" || KC(e);
}
function KC(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
const XC = "https://github.com/remarkjs/react-markdown/blob/main/changelog.md", yg = [], vg = { allowDangerousHtml: !0 }, ZC = /^(https?|ircs?|mailto|xmpp)$/i, QC = [
  { from: "astPlugins", id: "remove-buggy-html-in-markdown-parser" },
  { from: "allowDangerousHtml", id: "remove-buggy-html-in-markdown-parser" },
  {
    from: "allowNode",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "allowElement"
  },
  {
    from: "allowedTypes",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "allowedElements"
  },
  {
    from: "disallowedTypes",
    id: "replace-allownode-allowedtypes-and-disallowedtypes",
    to: "disallowedElements"
  },
  { from: "escapeHtml", id: "remove-buggy-html-in-markdown-parser" },
  { from: "includeElementIndex", id: "#remove-includeelementindex" },
  {
    from: "includeNodeIndex",
    id: "change-includenodeindex-to-includeelementindex"
  },
  { from: "linkTarget", id: "remove-linktarget" },
  { from: "plugins", id: "change-plugins-to-remarkplugins", to: "remarkPlugins" },
  { from: "rawSourcePos", id: "#remove-rawsourcepos" },
  { from: "renderers", id: "change-renderers-to-components", to: "components" },
  { from: "source", id: "change-source-to-children", to: "children" },
  { from: "sourcePos", id: "#remove-sourcepos" },
  { from: "transformImageUri", id: "#add-urltransform", to: "urlTransform" },
  { from: "transformLinkUri", id: "#add-urltransform", to: "urlTransform" }
];
function JC(e) {
  const t = e.allowedElements, n = e.allowElement, r = e.children || "", a = e.className, i = e.components, o = e.disallowedElements, s = e.rehypePlugins || yg, l = e.remarkPlugins || yg, u = e.remarkRehypeOptions ? { ...e.remarkRehypeOptions, ...vg } : vg, c = e.skipHtml, d = e.unwrapDisallowed, m = e.urlTransform || ek, f = VC().use(Mw).use(l).use(CC, u).use(s), h = new YT();
  typeof r == "string" && (h.value = r);
  for (const v of QC)
    Object.hasOwn(e, v.from) && ("" + v.from + (v.to ? "use `" + v.to + "` instead" : "remove it") + XC + v.id, void 0);
  const E = f.parse(h);
  let I = f.runSync(E, h);
  return a && (I = {
    type: "element",
    tagName: "div",
    properties: { className: a },
    // Assume no doctypes.
    children: (
      /** @type {Array<ElementContent>} */
      I.type === "root" ? I.children : [I]
    )
  }), ra(I, x), bR(I, {
    Fragment: Y.Fragment,
    // @ts-expect-error
    // React components are allowed to return numbers,
    // but not according to the types in hast-util-to-jsx-runtime
    components: i,
    ignoreInvalidStyle: !0,
    jsx: Y.jsx,
    jsxs: Y.jsxs,
    passKeys: !0,
    passNode: !0
  });
  function x(v, S, g) {
    if (v.type === "raw" && g && typeof S == "number")
      return c ? g.children.splice(S, 1) : g.children[S] = { type: "text", value: v.value }, S;
    if (v.type === "element") {
      let y;
      for (y in Do)
        if (Object.hasOwn(Do, y) && Object.hasOwn(v.properties, y)) {
          const T = v.properties[y], j = Do[y];
          (j === null || j.includes(v.tagName)) && (v.properties[y] = m(String(T || ""), y, v));
        }
    }
    if (v.type === "element") {
      let y = t ? !t.includes(v.tagName) : o ? o.includes(v.tagName) : !1;
      if (!y && n && typeof S == "number" && (y = !n(v, S, g)), y && g && typeof S == "number")
        return d && v.children ? g.children.splice(S, 1, ...v.children) : g.children.splice(S, 1), S;
    }
  }
}
function ek(e) {
  const t = e.indexOf(":"), n = e.indexOf("?"), r = e.indexOf("#"), a = e.indexOf("/");
  return (
    // If there is no protocol, it’s relative.
    t === -1 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.
    a !== -1 && t > a || n !== -1 && t > n || r !== -1 && t > r || // It is a protocol, it should be allowed.
    ZC.test(e.slice(0, t)) ? e : ""
  );
}
function Tg(e, t) {
  const n = String(e);
  if (typeof t != "string")
    throw new TypeError("Expected character");
  let r = 0, a = n.indexOf(t);
  for (; a !== -1; )
    r++, a = n.indexOf(t, a + t.length);
  return r;
}
function tk(e) {
  if (typeof e != "string")
    throw new TypeError("Expected a string");
  return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
function nk(e, t, n) {
  const a = Ji((n || {}).ignore || []), i = rk(t);
  let o = -1;
  for (; ++o < i.length; )
    VT(e, "text", s);
  function s(u, c) {
    let d = -1, m;
    for (; ++d < c.length; ) {
      const f = c[d], h = m ? m.children : void 0;
      if (a(
        f,
        h ? h.indexOf(f) : void 0,
        m
      ))
        return;
      m = f;
    }
    if (m)
      return l(u, c);
  }
  function l(u, c) {
    const d = c[c.length - 1], m = i[o][0], f = i[o][1];
    let h = 0;
    const I = d.children.indexOf(u);
    let x = !1, v = [];
    m.lastIndex = 0;
    let S = m.exec(u.value);
    for (; S; ) {
      const g = S.index, y = {
        index: S.index,
        input: S.input,
        stack: [...c, u]
      };
      let T = f(...S, y);
      if (typeof T == "string" && (T = T.length > 0 ? { type: "text", value: T } : void 0), T === !1 ? m.lastIndex = g + 1 : (h !== g && v.push({
        type: "text",
        value: u.value.slice(h, g)
      }), Array.isArray(T) ? v.push(...T) : T && v.push(T), h = g + S[0].length, x = !0), !m.global)
        break;
      S = m.exec(u.value);
    }
    return x ? (h < u.value.length && v.push({ type: "text", value: u.value.slice(h) }), d.children.splice(I, 1, ...v)) : v = [u], I + v.length;
  }
}
function rk(e) {
  const t = [];
  if (!Array.isArray(e))
    throw new TypeError("Expected find and replace tuple or list of tuples");
  const n = !e[0] || Array.isArray(e[0]) ? e : [e];
  let r = -1;
  for (; ++r < n.length; ) {
    const a = n[r];
    t.push([ak(a[0]), ik(a[1])]);
  }
  return t;
}
function ak(e) {
  return typeof e == "string" ? new RegExp(tk(e), "g") : e;
}
function ik(e) {
  return typeof e == "function" ? e : function() {
    return e;
  };
}
const zo = "phrasing", Go = ["autolink", "link", "image", "label"];
function ok() {
  return {
    transforms: [fk],
    enter: {
      literalAutolink: lk,
      literalAutolinkEmail: Vo,
      literalAutolinkHttp: Vo,
      literalAutolinkWww: Vo
    },
    exit: {
      literalAutolink: pk,
      literalAutolinkEmail: dk,
      literalAutolinkHttp: uk,
      literalAutolinkWww: ck
    }
  };
}
function sk() {
  return {
    unsafe: [
      {
        character: "@",
        before: "[+\\-.\\w]",
        after: "[\\-.\\w]",
        inConstruct: zo,
        notInConstruct: Go
      },
      {
        character: ".",
        before: "[Ww]",
        after: "[\\-.\\w]",
        inConstruct: zo,
        notInConstruct: Go
      },
      {
        character: ":",
        before: "[ps]",
        after: "\\/",
        inConstruct: zo,
        notInConstruct: Go
      }
    ]
  };
}
function lk(e) {
  this.enter({ type: "link", title: null, url: "", children: [] }, e);
}
function Vo(e) {
  this.config.enter.autolinkProtocol.call(this, e);
}
function uk(e) {
  this.config.exit.autolinkProtocol.call(this, e);
}
function ck(e) {
  this.config.exit.data.call(this, e);
  const t = this.stack[this.stack.length - 1];
  t.type, t.url = "http://" + this.sliceSerialize(e);
}
function dk(e) {
  this.config.exit.autolinkEmail.call(this, e);
}
function pk(e) {
  this.exit(e);
}
function fk(e) {
  nk(
    e,
    [
      [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, mk],
      [new RegExp("(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)", "gu"), gk]
    ],
    { ignore: ["link", "linkReference"] }
  );
}
function mk(e, t, n, r, a) {
  let i = "";
  if (!KT(a) || (/^w/i.test(t) && (n = t + n, t = "", i = "http://"), !hk(n)))
    return !1;
  const o = bk(n + r);
  if (!o[0]) return !1;
  const s = {
    type: "link",
    title: null,
    url: i + t + o[0],
    children: [{ type: "text", value: t + o[0] }]
  };
  return o[1] ? [s, { type: "text", value: o[1] }] : s;
}
function gk(e, t, n, r) {
  return (
    // Not an expected previous character.
    !KT(r, !0) || // Label ends in not allowed character.
    /[-\d_]$/.test(n) ? !1 : {
      type: "link",
      title: null,
      url: "mailto:" + t + "@" + n,
      children: [{ type: "text", value: t + "@" + n }]
    }
  );
}
function hk(e) {
  const t = e.split(".");
  return !(t.length < 2 || t[t.length - 1] && (/_/.test(t[t.length - 1]) || !/[a-zA-Z\d]/.test(t[t.length - 1])) || t[t.length - 2] && (/_/.test(t[t.length - 2]) || !/[a-zA-Z\d]/.test(t[t.length - 2])));
}
function bk(e) {
  const t = /[!"&'),.:;<>?\]}]+$/.exec(e);
  if (!t)
    return [e, void 0];
  e = e.slice(0, t.index);
  let n = t[0], r = n.indexOf(")");
  const a = Tg(e, "(");
  let i = Tg(e, ")");
  for (; r !== -1 && a > i; )
    e += n.slice(0, r + 1), n = n.slice(r + 1), r = n.indexOf(")"), i++;
  return [e, n];
}
function KT(e, t) {
  const n = e.input.charCodeAt(e.index - 1);
  return (e.index === 0 || Nr(n) || Xi(n)) && // If it’s an email, the previous character should not be a slash.
  (!t || n !== 47);
}
XT.peek = Rk;
function Ek() {
  this.buffer();
}
function yk(e) {
  this.enter({ type: "footnoteReference", identifier: "", label: "" }, e);
}
function vk() {
  this.buffer();
}
function Tk(e) {
  this.enter(
    { type: "footnoteDefinition", identifier: "", label: "", children: [] },
    e
  );
}
function Sk(e) {
  const t = this.resume(), n = this.stack[this.stack.length - 1];
  n.type, n.identifier = Bn(
    this.sliceSerialize(e)
  ).toLowerCase(), n.label = t;
}
function _k(e) {
  this.exit(e);
}
function Ak(e) {
  const t = this.resume(), n = this.stack[this.stack.length - 1];
  n.type, n.identifier = Bn(
    this.sliceSerialize(e)
  ).toLowerCase(), n.label = t;
}
function xk(e) {
  this.exit(e);
}
function Rk() {
  return "[";
}
function XT(e, t, n, r) {
  const a = n.createTracker(r);
  let i = a.move("[^");
  const o = n.enter("footnoteReference"), s = n.enter("reference");
  return i += a.move(
    n.safe(n.associationId(e), { after: "]", before: i })
  ), s(), o(), i += a.move("]"), i;
}
function Ik() {
  return {
    enter: {
      gfmFootnoteCallString: Ek,
      gfmFootnoteCall: yk,
      gfmFootnoteDefinitionLabelString: vk,
      gfmFootnoteDefinition: Tk
    },
    exit: {
      gfmFootnoteCallString: Sk,
      gfmFootnoteCall: _k,
      gfmFootnoteDefinitionLabelString: Ak,
      gfmFootnoteDefinition: xk
    }
  };
}
function wk(e) {
  let t = !1;
  return e && e.firstLineBlank && (t = !0), {
    handlers: { footnoteDefinition: n, footnoteReference: XT },
    // This is on by default already.
    unsafe: [{ character: "[", inConstruct: ["label", "phrasing", "reference"] }]
  };
  function n(r, a, i, o) {
    const s = i.createTracker(o);
    let l = s.move("[^");
    const u = i.enter("footnoteDefinition"), c = i.enter("label");
    return l += s.move(
      i.safe(i.associationId(r), { before: l, after: "]" })
    ), c(), l += s.move("]:"), r.children && r.children.length > 0 && (s.shift(4), l += s.move(
      (t ? `
` : " ") + i.indentLines(
        i.containerFlow(r, s.current()),
        t ? ZT : Ck
      )
    )), u(), l;
  }
}
function Ck(e, t, n) {
  return t === 0 ? e : ZT(e, t, n);
}
function ZT(e, t, n) {
  return (n ? "" : "    ") + e;
}
const kk = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
QT.peek = Mk;
function Nk() {
  return {
    canContainEols: ["delete"],
    enter: { strikethrough: Lk },
    exit: { strikethrough: Dk }
  };
}
function Ok() {
  return {
    unsafe: [
      {
        character: "~",
        inConstruct: "phrasing",
        notInConstruct: kk
      }
    ],
    handlers: { delete: QT }
  };
}
function Lk(e) {
  this.enter({ type: "delete", children: [] }, e);
}
function Dk(e) {
  this.exit(e);
}
function QT(e, t, n, r) {
  const a = n.createTracker(r), i = n.enter("strikethrough");
  let o = a.move("~~");
  return o += n.containerPhrasing(e, {
    ...a.current(),
    before: o,
    after: "~"
  }), o += a.move("~~"), i(), o;
}
function Mk() {
  return "~";
}
function Pk(e) {
  return e.length;
}
function Fk(e, t) {
  const n = t || {}, r = (n.align || []).concat(), a = n.stringLength || Pk, i = [], o = [], s = [], l = [];
  let u = 0, c = -1;
  for (; ++c < e.length; ) {
    const E = [], I = [];
    let x = -1;
    for (e[c].length > u && (u = e[c].length); ++x < e[c].length; ) {
      const v = Bk(e[c][x]);
      if (n.alignDelimiters !== !1) {
        const S = a(v);
        I[x] = S, (l[x] === void 0 || S > l[x]) && (l[x] = S);
      }
      E.push(v);
    }
    o[c] = E, s[c] = I;
  }
  let d = -1;
  if (typeof r == "object" && "length" in r)
    for (; ++d < u; )
      i[d] = Sg(r[d]);
  else {
    const E = Sg(r);
    for (; ++d < u; )
      i[d] = E;
  }
  d = -1;
  const m = [], f = [];
  for (; ++d < u; ) {
    const E = i[d];
    let I = "", x = "";
    E === 99 ? (I = ":", x = ":") : E === 108 ? I = ":" : E === 114 && (x = ":");
    let v = n.alignDelimiters === !1 ? 1 : Math.max(
      1,
      l[d] - I.length - x.length
    );
    const S = I + "-".repeat(v) + x;
    n.alignDelimiters !== !1 && (v = I.length + v + x.length, v > l[d] && (l[d] = v), f[d] = v), m[d] = S;
  }
  o.splice(1, 0, m), s.splice(1, 0, f), c = -1;
  const h = [];
  for (; ++c < o.length; ) {
    const E = o[c], I = s[c];
    d = -1;
    const x = [];
    for (; ++d < u; ) {
      const v = E[d] || "";
      let S = "", g = "";
      if (n.alignDelimiters !== !1) {
        const y = l[d] - (I[d] || 0), T = i[d];
        T === 114 ? S = " ".repeat(y) : T === 99 ? y % 2 ? (S = " ".repeat(y / 2 + 0.5), g = " ".repeat(y / 2 - 0.5)) : (S = " ".repeat(y / 2), g = S) : g = " ".repeat(y);
      }
      n.delimiterStart !== !1 && !d && x.push("|"), n.padding !== !1 && // Don’t add the opening space if we’re not aligning and the cell is
      // empty: there will be a closing space.
      !(n.alignDelimiters === !1 && v === "") && (n.delimiterStart !== !1 || d) && x.push(" "), n.alignDelimiters !== !1 && x.push(S), x.push(v), n.alignDelimiters !== !1 && x.push(g), n.padding !== !1 && x.push(" "), (n.delimiterEnd !== !1 || d !== u - 1) && x.push("|");
    }
    h.push(
      n.delimiterEnd === !1 ? x.join("").replace(/ +$/, "") : x.join("")
    );
  }
  return h.join(`
`);
}
function Bk(e) {
  return e == null ? "" : String(e);
}
function Sg(e) {
  const t = typeof e == "string" ? e.codePointAt(0) : 0;
  return t === 67 || t === 99 ? 99 : t === 76 || t === 108 ? 108 : t === 82 || t === 114 ? 114 : 0;
}
const _g = {}.hasOwnProperty;
function JT(e, t) {
  const n = t || {};
  function r(a, ...i) {
    let o = r.invalid;
    const s = r.handlers;
    if (a && _g.call(a, e)) {
      const l = String(a[e]);
      o = _g.call(s, l) ? s[l] : r.unknown;
    }
    if (o)
      return o.call(this, a, ...i);
  }
  return r.handlers = n.handlers || {}, r.invalid = n.invalid, r.unknown = n.unknown, r;
}
function Uk(e, t, n, r) {
  const a = n.enter("blockquote"), i = n.createTracker(r);
  i.move("> "), i.shift(2);
  const o = n.indentLines(
    n.containerFlow(e, i.current()),
    jk
  );
  return a(), o;
}
function jk(e, t, n) {
  return ">" + (n ? "" : " ") + e;
}
function Hk(e, t) {
  return Ag(e, t.inConstruct, !0) && !Ag(e, t.notInConstruct, !1);
}
function Ag(e, t, n) {
  if (typeof t == "string" && (t = [t]), !t || t.length === 0)
    return n;
  let r = -1;
  for (; ++r < t.length; )
    if (e.includes(t[r]))
      return !0;
  return !1;
}
function xg(e, t, n, r) {
  let a = -1;
  for (; ++a < n.unsafe.length; )
    if (n.unsafe[a].character === `
` && Hk(n.stack, n.unsafe[a]))
      return /[ \t]/.test(r.before) ? "" : " ";
  return `\\
`;
}
function qk(e, t) {
  const n = String(e);
  let r = n.indexOf(t), a = r, i = 0, o = 0;
  if (typeof t != "string")
    throw new TypeError("Expected substring");
  for (; r !== -1; )
    r === a ? ++i > o && (o = i) : i = 1, a = r + t.length, r = n.indexOf(t, a);
  return o;
}
function $k(e, t) {
  return !!(t.options.fences === !1 && e.value && // If there’s no info…
  !e.lang && // And there’s a non-whitespace character…
  /[^ \r\n]/.test(e.value) && // And the value doesn’t start or end in a blank…
  !/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(e.value));
}
function zk(e) {
  const t = e.options.fence || "`";
  if (t !== "`" && t !== "~")
    throw new Error(
      "Cannot serialize code with `" + t + "` for `options.fence`, expected `` ` `` or `~`"
    );
  return t;
}
function Gk(e, t, n, r) {
  const a = zk(n), i = e.value || "", o = a === "`" ? "GraveAccent" : "Tilde";
  if ($k(e, n)) {
    const d = n.enter("codeIndented"), m = n.indentLines(i, Vk);
    return d(), m;
  }
  const s = n.createTracker(r), l = a.repeat(Math.max(qk(i, a) + 1, 3)), u = n.enter("codeFenced");
  let c = s.move(l);
  if (e.lang) {
    const d = n.enter(`codeFencedLang${o}`);
    c += s.move(
      n.safe(e.lang, {
        before: c,
        after: " ",
        encode: ["`"],
        ...s.current()
      })
    ), d();
  }
  if (e.lang && e.meta) {
    const d = n.enter(`codeFencedMeta${o}`);
    c += s.move(" "), c += s.move(
      n.safe(e.meta, {
        before: c,
        after: `
`,
        encode: ["`"],
        ...s.current()
      })
    ), d();
  }
  return c += s.move(`
`), i && (c += s.move(i + `
`)), c += s.move(l), u(), c;
}
function Vk(e, t, n) {
  return (n ? "" : "    ") + e;
}
function yf(e) {
  const t = e.options.quote || '"';
  if (t !== '"' && t !== "'")
    throw new Error(
      "Cannot serialize title with `" + t + "` for `options.quote`, expected `\"`, or `'`"
    );
  return t;
}
function Wk(e, t, n, r) {
  const a = yf(n), i = a === '"' ? "Quote" : "Apostrophe", o = n.enter("definition");
  let s = n.enter("label");
  const l = n.createTracker(r);
  let u = l.move("[");
  return u += l.move(
    n.safe(n.associationId(e), {
      before: u,
      after: "]",
      ...l.current()
    })
  ), u += l.move("]: "), s(), // If there’s no url, or…
  !e.url || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (s = n.enter("destinationLiteral"), u += l.move("<"), u += l.move(
    n.safe(e.url, { before: u, after: ">", ...l.current() })
  ), u += l.move(">")) : (s = n.enter("destinationRaw"), u += l.move(
    n.safe(e.url, {
      before: u,
      after: e.title ? " " : `
`,
      ...l.current()
    })
  )), s(), e.title && (s = n.enter(`title${i}`), u += l.move(" " + a), u += l.move(
    n.safe(e.title, {
      before: u,
      after: a,
      ...l.current()
    })
  ), u += l.move(a), s()), o(), u;
}
function Yk(e) {
  const t = e.options.emphasis || "*";
  if (t !== "*" && t !== "_")
    throw new Error(
      "Cannot serialize emphasis with `" + t + "` for `options.emphasis`, expected `*`, or `_`"
    );
  return t;
}
function qa(e) {
  return "&#x" + e.toString(16).toUpperCase() + ";";
}
function Ui(e, t, n) {
  const r = ta(e), a = ta(t);
  return r === void 0 ? a === void 0 ? (
    // Letter inside:
    // we have to encode *both* letters for `_` as it is looser.
    // it already forms for `*` (and GFMs `~`).
    n === "_" ? { inside: !0, outside: !0 } : { inside: !1, outside: !1 }
  ) : a === 1 ? (
    // Whitespace inside: encode both (letter, whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: encode outer (letter)
    { inside: !1, outside: !0 }
  ) : r === 1 ? a === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : a === 1 ? (
    // Whitespace inside: encode both (whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  ) : a === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : a === 1 ? (
    // Whitespace inside: encode inner (whitespace).
    { inside: !0, outside: !1 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  );
}
e1.peek = Kk;
function e1(e, t, n, r) {
  const a = Yk(n), i = n.enter("emphasis"), o = n.createTracker(r), s = o.move(a);
  let l = o.move(
    n.containerPhrasing(e, {
      after: a,
      before: s,
      ...o.current()
    })
  );
  const u = l.charCodeAt(0), c = Ui(
    r.before.charCodeAt(r.before.length - 1),
    u,
    a
  );
  c.inside && (l = qa(u) + l.slice(1));
  const d = l.charCodeAt(l.length - 1), m = Ui(r.after.charCodeAt(0), d, a);
  m.inside && (l = l.slice(0, -1) + qa(d));
  const f = o.move(a);
  return i(), n.attentionEncodeSurroundingInfo = {
    after: m.outside,
    before: c.outside
  }, s + l + f;
}
function Kk(e, t, n) {
  return n.options.emphasis || "*";
}
function Xk(e, t) {
  let n = !1;
  return ra(e, function(r) {
    if ("value" in r && /\r?\n|\r/.test(r.value) || r.type === "break")
      return n = !0, Bi;
  }), !!((!e.depth || e.depth < 3) && df(e) && (t.options.setext || n));
}
function Zk(e, t, n, r) {
  const a = Math.max(Math.min(6, e.depth || 1), 1), i = n.createTracker(r);
  if (Xk(e, n)) {
    const c = n.enter("headingSetext"), d = n.enter("phrasing"), m = n.containerPhrasing(e, {
      ...i.current(),
      before: `
`,
      after: `
`
    });
    return d(), c(), m + `
` + (a === 1 ? "=" : "-").repeat(
      // The whole size…
      m.length - // Minus the position of the character after the last EOL (or
      // 0 if there is none)…
      (Math.max(m.lastIndexOf("\r"), m.lastIndexOf(`
`)) + 1)
    );
  }
  const o = "#".repeat(a), s = n.enter("headingAtx"), l = n.enter("phrasing");
  i.move(o + " ");
  let u = n.containerPhrasing(e, {
    before: "# ",
    after: `
`,
    ...i.current()
  });
  return /^[\t ]/.test(u) && (u = qa(u.charCodeAt(0)) + u.slice(1)), u = u ? o + " " + u : o, n.options.closeAtx && (u += " " + o), l(), s(), u;
}
t1.peek = Qk;
function t1(e) {
  return e.value || "";
}
function Qk() {
  return "<";
}
n1.peek = Jk;
function n1(e, t, n, r) {
  const a = yf(n), i = a === '"' ? "Quote" : "Apostrophe", o = n.enter("image");
  let s = n.enter("label");
  const l = n.createTracker(r);
  let u = l.move("![");
  return u += l.move(
    n.safe(e.alt, { before: u, after: "]", ...l.current() })
  ), u += l.move("]("), s(), // If there’s no url but there is a title…
  !e.url && e.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (s = n.enter("destinationLiteral"), u += l.move("<"), u += l.move(
    n.safe(e.url, { before: u, after: ">", ...l.current() })
  ), u += l.move(">")) : (s = n.enter("destinationRaw"), u += l.move(
    n.safe(e.url, {
      before: u,
      after: e.title ? " " : ")",
      ...l.current()
    })
  )), s(), e.title && (s = n.enter(`title${i}`), u += l.move(" " + a), u += l.move(
    n.safe(e.title, {
      before: u,
      after: a,
      ...l.current()
    })
  ), u += l.move(a), s()), u += l.move(")"), o(), u;
}
function Jk() {
  return "!";
}
r1.peek = eN;
function r1(e, t, n, r) {
  const a = e.referenceType, i = n.enter("imageReference");
  let o = n.enter("label");
  const s = n.createTracker(r);
  let l = s.move("![");
  const u = n.safe(e.alt, {
    before: l,
    after: "]",
    ...s.current()
  });
  l += s.move(u + "]["), o();
  const c = n.stack;
  n.stack = [], o = n.enter("reference");
  const d = n.safe(n.associationId(e), {
    before: l,
    after: "]",
    ...s.current()
  });
  return o(), n.stack = c, i(), a === "full" || !u || u !== d ? l += s.move(d + "]") : a === "shortcut" ? l = l.slice(0, -1) : l += s.move("]"), l;
}
function eN() {
  return "!";
}
a1.peek = tN;
function a1(e, t, n) {
  let r = e.value || "", a = "`", i = -1;
  for (; new RegExp("(^|[^`])" + a + "([^`]|$)").test(r); )
    a += "`";
  for (/[^ \r\n]/.test(r) && (/^[ \r\n]/.test(r) && /[ \r\n]$/.test(r) || /^`|`$/.test(r)) && (r = " " + r + " "); ++i < n.unsafe.length; ) {
    const o = n.unsafe[i], s = n.compilePattern(o);
    let l;
    if (o.atBreak)
      for (; l = s.exec(r); ) {
        let u = l.index;
        r.charCodeAt(u) === 10 && r.charCodeAt(u - 1) === 13 && u--, r = r.slice(0, u) + " " + r.slice(l.index + 1);
      }
  }
  return a + r + a;
}
function tN() {
  return "`";
}
function i1(e, t) {
  const n = df(e);
  return !!(!t.options.resourceLink && // If there’s a url…
  e.url && // And there’s a no title…
  !e.title && // And the content of `node` is a single text node…
  e.children && e.children.length === 1 && e.children[0].type === "text" && // And if the url is the same as the content…
  (n === e.url || "mailto:" + n === e.url) && // And that starts w/ a protocol…
  /^[a-z][a-z+.-]+:/i.test(e.url) && // And that doesn’t contain ASCII control codes (character escapes and
  // references don’t work), space, or angle brackets…
  !/[\0- <>\u007F]/.test(e.url));
}
o1.peek = nN;
function o1(e, t, n, r) {
  const a = yf(n), i = a === '"' ? "Quote" : "Apostrophe", o = n.createTracker(r);
  let s, l;
  if (i1(e, n)) {
    const c = n.stack;
    n.stack = [], s = n.enter("autolink");
    let d = o.move("<");
    return d += o.move(
      n.containerPhrasing(e, {
        before: d,
        after: ">",
        ...o.current()
      })
    ), d += o.move(">"), s(), n.stack = c, d;
  }
  s = n.enter("link"), l = n.enter("label");
  let u = o.move("[");
  return u += o.move(
    n.containerPhrasing(e, {
      before: u,
      after: "](",
      ...o.current()
    })
  ), u += o.move("]("), l(), // If there’s no url but there is a title…
  !e.url && e.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(e.url) ? (l = n.enter("destinationLiteral"), u += o.move("<"), u += o.move(
    n.safe(e.url, { before: u, after: ">", ...o.current() })
  ), u += o.move(">")) : (l = n.enter("destinationRaw"), u += o.move(
    n.safe(e.url, {
      before: u,
      after: e.title ? " " : ")",
      ...o.current()
    })
  )), l(), e.title && (l = n.enter(`title${i}`), u += o.move(" " + a), u += o.move(
    n.safe(e.title, {
      before: u,
      after: a,
      ...o.current()
    })
  ), u += o.move(a), l()), u += o.move(")"), s(), u;
}
function nN(e, t, n) {
  return i1(e, n) ? "<" : "[";
}
s1.peek = rN;
function s1(e, t, n, r) {
  const a = e.referenceType, i = n.enter("linkReference");
  let o = n.enter("label");
  const s = n.createTracker(r);
  let l = s.move("[");
  const u = n.containerPhrasing(e, {
    before: l,
    after: "]",
    ...s.current()
  });
  l += s.move(u + "]["), o();
  const c = n.stack;
  n.stack = [], o = n.enter("reference");
  const d = n.safe(n.associationId(e), {
    before: l,
    after: "]",
    ...s.current()
  });
  return o(), n.stack = c, i(), a === "full" || !u || u !== d ? l += s.move(d + "]") : a === "shortcut" ? l = l.slice(0, -1) : l += s.move("]"), l;
}
function rN() {
  return "[";
}
function vf(e) {
  const t = e.options.bullet || "*";
  if (t !== "*" && t !== "+" && t !== "-")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  return t;
}
function aN(e) {
  const t = vf(e), n = e.options.bulletOther;
  if (!n)
    return t === "*" ? "-" : "*";
  if (n !== "*" && n !== "+" && n !== "-")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOther`, expected `*`, `+`, or `-`"
    );
  if (n === t)
    throw new Error(
      "Expected `bullet` (`" + t + "`) and `bulletOther` (`" + n + "`) to be different"
    );
  return n;
}
function iN(e) {
  const t = e.options.bulletOrdered || ".";
  if (t !== "." && t !== ")")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.bulletOrdered`, expected `.` or `)`"
    );
  return t;
}
function l1(e) {
  const t = e.options.rule || "*";
  if (t !== "*" && t !== "-" && t !== "_")
    throw new Error(
      "Cannot serialize rules with `" + t + "` for `options.rule`, expected `*`, `-`, or `_`"
    );
  return t;
}
function oN(e, t, n, r) {
  const a = n.enter("list"), i = n.bulletCurrent;
  let o = e.ordered ? iN(n) : vf(n);
  const s = e.ordered ? o === "." ? ")" : "." : aN(n);
  let l = t && n.bulletLastUsed ? o === n.bulletLastUsed : !1;
  if (!e.ordered) {
    const c = e.children ? e.children[0] : void 0;
    if (
      // Bullet could be used as a thematic break marker:
      (o === "*" || o === "-") && // Empty first list item:
      c && (!c.children || !c.children[0]) && // Directly in two other list items:
      n.stack[n.stack.length - 1] === "list" && n.stack[n.stack.length - 2] === "listItem" && n.stack[n.stack.length - 3] === "list" && n.stack[n.stack.length - 4] === "listItem" && // That are each the first child.
      n.indexStack[n.indexStack.length - 1] === 0 && n.indexStack[n.indexStack.length - 2] === 0 && n.indexStack[n.indexStack.length - 3] === 0 && (l = !0), l1(n) === o && c
    ) {
      let d = -1;
      for (; ++d < e.children.length; ) {
        const m = e.children[d];
        if (m && m.type === "listItem" && m.children && m.children[0] && m.children[0].type === "thematicBreak") {
          l = !0;
          break;
        }
      }
    }
  }
  l && (o = s), n.bulletCurrent = o;
  const u = n.containerFlow(e, r);
  return n.bulletLastUsed = o, n.bulletCurrent = i, a(), u;
}
function sN(e) {
  const t = e.options.listItemIndent || "one";
  if (t !== "tab" && t !== "one" && t !== "mixed")
    throw new Error(
      "Cannot serialize items with `" + t + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  return t;
}
function lN(e, t, n, r) {
  const a = sN(n);
  let i = n.bulletCurrent || vf(n);
  t && t.type === "list" && t.ordered && (i = (typeof t.start == "number" && t.start > -1 ? t.start : 1) + (n.options.incrementListMarker === !1 ? 0 : t.children.indexOf(e)) + i);
  let o = i.length + 1;
  (a === "tab" || a === "mixed" && (t && t.type === "list" && t.spread || e.spread)) && (o = Math.ceil(o / 4) * 4);
  const s = n.createTracker(r);
  s.move(i + " ".repeat(o - i.length)), s.shift(o);
  const l = n.enter("listItem"), u = n.indentLines(
    n.containerFlow(e, s.current()),
    c
  );
  return l(), u;
  function c(d, m, f) {
    return m ? (f ? "" : " ".repeat(o)) + d : (f ? i : i + " ".repeat(o - i.length)) + d;
  }
}
function uN(e, t, n, r) {
  const a = n.enter("paragraph"), i = n.enter("phrasing"), o = n.containerPhrasing(e, r);
  return i(), a(), o;
}
const cN = (
  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */
  Ji([
    "break",
    "delete",
    "emphasis",
    // To do: next major: removed since footnotes were added to GFM.
    "footnote",
    "footnoteReference",
    "image",
    "imageReference",
    "inlineCode",
    // Enabled by `mdast-util-math`:
    "inlineMath",
    "link",
    "linkReference",
    // Enabled by `mdast-util-mdx`:
    "mdxJsxTextElement",
    // Enabled by `mdast-util-mdx`:
    "mdxTextExpression",
    "strong",
    "text",
    // Enabled by `mdast-util-directive`:
    "textDirective"
  ])
);
function dN(e, t, n, r) {
  return (e.children.some(function(o) {
    return cN(o);
  }) ? n.containerPhrasing : n.containerFlow).call(n, e, r);
}
function pN(e) {
  const t = e.options.strong || "*";
  if (t !== "*" && t !== "_")
    throw new Error(
      "Cannot serialize strong with `" + t + "` for `options.strong`, expected `*`, or `_`"
    );
  return t;
}
u1.peek = fN;
function u1(e, t, n, r) {
  const a = pN(n), i = n.enter("strong"), o = n.createTracker(r), s = o.move(a + a);
  let l = o.move(
    n.containerPhrasing(e, {
      after: a,
      before: s,
      ...o.current()
    })
  );
  const u = l.charCodeAt(0), c = Ui(
    r.before.charCodeAt(r.before.length - 1),
    u,
    a
  );
  c.inside && (l = qa(u) + l.slice(1));
  const d = l.charCodeAt(l.length - 1), m = Ui(r.after.charCodeAt(0), d, a);
  m.inside && (l = l.slice(0, -1) + qa(d));
  const f = o.move(a + a);
  return i(), n.attentionEncodeSurroundingInfo = {
    after: m.outside,
    before: c.outside
  }, s + l + f;
}
function fN(e, t, n) {
  return n.options.strong || "*";
}
function mN(e, t, n, r) {
  return n.safe(e.value, r);
}
function gN(e) {
  const t = e.options.ruleRepetition || 3;
  if (t < 3)
    throw new Error(
      "Cannot serialize rules with repetition `" + t + "` for `options.ruleRepetition`, expected `3` or more"
    );
  return t;
}
function hN(e, t, n) {
  const r = (l1(n) + (n.options.ruleSpaces ? " " : "")).repeat(gN(n));
  return n.options.ruleSpaces ? r.slice(0, -1) : r;
}
const c1 = {
  blockquote: Uk,
  break: xg,
  code: Gk,
  definition: Wk,
  emphasis: e1,
  hardBreak: xg,
  heading: Zk,
  html: t1,
  image: n1,
  imageReference: r1,
  inlineCode: a1,
  link: o1,
  linkReference: s1,
  list: oN,
  listItem: lN,
  paragraph: uN,
  root: dN,
  strong: u1,
  text: mN,
  thematicBreak: hN
};
function bN() {
  return {
    enter: {
      table: EN,
      tableData: Rg,
      tableHeader: Rg,
      tableRow: vN
    },
    exit: {
      codeText: TN,
      table: yN,
      tableData: Wo,
      tableHeader: Wo,
      tableRow: Wo
    }
  };
}
function EN(e) {
  const t = e._align;
  this.enter(
    {
      type: "table",
      align: t.map(function(n) {
        return n === "none" ? null : n;
      }),
      children: []
    },
    e
  ), this.data.inTable = !0;
}
function yN(e) {
  this.exit(e), this.data.inTable = void 0;
}
function vN(e) {
  this.enter({ type: "tableRow", children: [] }, e);
}
function Wo(e) {
  this.exit(e);
}
function Rg(e) {
  this.enter({ type: "tableCell", children: [] }, e);
}
function TN(e) {
  let t = this.resume();
  this.data.inTable && (t = t.replace(/\\([\\|])/g, SN));
  const n = this.stack[this.stack.length - 1];
  n.type, n.value = t, this.exit(e);
}
function SN(e, t) {
  return t === "|" ? t : e;
}
function _N(e) {
  const t = e || {}, n = t.tableCellPadding, r = t.tablePipeAlign, a = t.stringLength, i = n ? " " : "|";
  return {
    unsafe: [
      { character: "\r", inConstruct: "tableCell" },
      { character: `
`, inConstruct: "tableCell" },
      // A pipe, when followed by a tab or space (padding), or a dash or colon
      // (unpadded delimiter row), could result in a table.
      { atBreak: !0, character: "|", after: "[	 :-]" },
      // A pipe in a cell must be encoded.
      { character: "|", inConstruct: "tableCell" },
      // A colon must be followed by a dash, in which case it could start a
      // delimiter row.
      { atBreak: !0, character: ":", after: "-" },
      // A delimiter row can also start with a dash, when followed by more
      // dashes, a colon, or a pipe.
      // This is a stricter version than the built in check for lists, thematic
      // breaks, and setex heading underlines though:
      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>
      { atBreak: !0, character: "-", after: "[:|-]" }
    ],
    handlers: {
      inlineCode: m,
      table: o,
      tableCell: l,
      tableRow: s
    }
  };
  function o(f, h, E, I) {
    return u(c(f, E, I), f.align);
  }
  function s(f, h, E, I) {
    const x = d(f, E, I), v = u([x]);
    return v.slice(0, v.indexOf(`
`));
  }
  function l(f, h, E, I) {
    const x = E.enter("tableCell"), v = E.enter("phrasing"), S = E.containerPhrasing(f, {
      ...I,
      before: i,
      after: i
    });
    return v(), x(), S;
  }
  function u(f, h) {
    return Fk(f, {
      align: h,
      // @ts-expect-error: `markdown-table` types should support `null`.
      alignDelimiters: r,
      // @ts-expect-error: `markdown-table` types should support `null`.
      padding: n,
      // @ts-expect-error: `markdown-table` types should support `null`.
      stringLength: a
    });
  }
  function c(f, h, E) {
    const I = f.children;
    let x = -1;
    const v = [], S = h.enter("table");
    for (; ++x < I.length; )
      v[x] = d(I[x], h, E);
    return S(), v;
  }
  function d(f, h, E) {
    const I = f.children;
    let x = -1;
    const v = [], S = h.enter("tableRow");
    for (; ++x < I.length; )
      v[x] = l(I[x], f, h, E);
    return S(), v;
  }
  function m(f, h, E) {
    let I = c1.inlineCode(f, h, E);
    return E.stack.includes("tableCell") && (I = I.replace(/\|/g, "\\$&")), I;
  }
}
function AN() {
  return {
    exit: {
      taskListCheckValueChecked: Ig,
      taskListCheckValueUnchecked: Ig,
      paragraph: RN
    }
  };
}
function xN() {
  return {
    unsafe: [{ atBreak: !0, character: "-", after: "[:|-]" }],
    handlers: { listItem: IN }
  };
}
function Ig(e) {
  const t = this.stack[this.stack.length - 2];
  t.type, t.checked = e.type === "taskListCheckValueChecked";
}
function RN(e) {
  const t = this.stack[this.stack.length - 2];
  if (t && t.type === "listItem" && typeof t.checked == "boolean") {
    const n = this.stack[this.stack.length - 1];
    n.type;
    const r = n.children[0];
    if (r && r.type === "text") {
      const a = t.children;
      let i = -1, o;
      for (; ++i < a.length; ) {
        const s = a[i];
        if (s.type === "paragraph") {
          o = s;
          break;
        }
      }
      o === n && (r.value = r.value.slice(1), r.value.length === 0 ? n.children.shift() : n.position && r.position && typeof r.position.start.offset == "number" && (r.position.start.column++, r.position.start.offset++, n.position.start = Object.assign({}, r.position.start)));
    }
  }
  this.exit(e);
}
function IN(e, t, n, r) {
  const a = e.children[0], i = typeof e.checked == "boolean" && a && a.type === "paragraph", o = "[" + (e.checked ? "x" : " ") + "] ", s = n.createTracker(r);
  i && s.move(o);
  let l = c1.listItem(e, t, n, {
    ...r,
    ...s.current()
  });
  return i && (l = l.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, u)), l;
  function u(c) {
    return c + o;
  }
}
function wN() {
  return [
    ok(),
    Ik(),
    Nk(),
    bN(),
    AN()
  ];
}
function CN(e) {
  return {
    extensions: [
      sk(),
      wk(e),
      Ok(),
      _N(e),
      xN()
    ]
  };
}
const kN = {
  tokenize: PN,
  partial: !0
}, d1 = {
  tokenize: FN,
  partial: !0
}, p1 = {
  tokenize: BN,
  partial: !0
}, f1 = {
  tokenize: UN,
  partial: !0
}, NN = {
  tokenize: jN,
  partial: !0
}, m1 = {
  name: "wwwAutolink",
  tokenize: DN,
  previous: h1
}, g1 = {
  name: "protocolAutolink",
  tokenize: MN,
  previous: b1
}, er = {
  name: "emailAutolink",
  tokenize: LN,
  previous: E1
}, Vn = {};
function ON() {
  return {
    text: Vn
  };
}
let Sr = 48;
for (; Sr < 123; )
  Vn[Sr] = er, Sr++, Sr === 58 ? Sr = 65 : Sr === 91 && (Sr = 97);
Vn[43] = er;
Vn[45] = er;
Vn[46] = er;
Vn[95] = er;
Vn[72] = [er, g1];
Vn[104] = [er, g1];
Vn[87] = [er, m1];
Vn[119] = [er, m1];
function LN(e, t, n) {
  const r = this;
  let a, i;
  return o;
  function o(d) {
    return !Cp(d) || !E1.call(r, r.previous) || Tf(r.events) ? n(d) : (e.enter("literalAutolink"), e.enter("literalAutolinkEmail"), s(d));
  }
  function s(d) {
    return Cp(d) ? (e.consume(d), s) : d === 64 ? (e.consume(d), l) : n(d);
  }
  function l(d) {
    return d === 46 ? e.check(NN, c, u)(d) : d === 45 || d === 95 || on(d) ? (i = !0, e.consume(d), l) : c(d);
  }
  function u(d) {
    return e.consume(d), a = !0, l;
  }
  function c(d) {
    return i && a && fn(r.previous) ? (e.exit("literalAutolinkEmail"), e.exit("literalAutolink"), t(d)) : n(d);
  }
}
function DN(e, t, n) {
  const r = this;
  return a;
  function a(o) {
    return o !== 87 && o !== 119 || !h1.call(r, r.previous) || Tf(r.events) ? n(o) : (e.enter("literalAutolink"), e.enter("literalAutolinkWww"), e.check(kN, e.attempt(d1, e.attempt(p1, i), n), n)(o));
  }
  function i(o) {
    return e.exit("literalAutolinkWww"), e.exit("literalAutolink"), t(o);
  }
}
function MN(e, t, n) {
  const r = this;
  let a = "", i = !1;
  return o;
  function o(d) {
    return (d === 72 || d === 104) && b1.call(r, r.previous) && !Tf(r.events) ? (e.enter("literalAutolink"), e.enter("literalAutolinkHttp"), a += String.fromCodePoint(d), e.consume(d), s) : n(d);
  }
  function s(d) {
    if (fn(d) && a.length < 5)
      return a += String.fromCodePoint(d), e.consume(d), s;
    if (d === 58) {
      const m = a.toLowerCase();
      if (m === "http" || m === "https")
        return e.consume(d), l;
    }
    return n(d);
  }
  function l(d) {
    return d === 47 ? (e.consume(d), i ? u : (i = !0, l)) : n(d);
  }
  function u(d) {
    return d === null || Mi(d) || ut(d) || Nr(d) || Xi(d) ? n(d) : e.attempt(d1, e.attempt(p1, c), n)(d);
  }
  function c(d) {
    return e.exit("literalAutolinkHttp"), e.exit("literalAutolink"), t(d);
  }
}
function PN(e, t, n) {
  let r = 0;
  return a;
  function a(o) {
    return (o === 87 || o === 119) && r < 3 ? (r++, e.consume(o), a) : o === 46 && r === 3 ? (e.consume(o), i) : n(o);
  }
  function i(o) {
    return o === null ? n(o) : t(o);
  }
}
function FN(e, t, n) {
  let r, a, i;
  return o;
  function o(u) {
    return u === 46 || u === 95 ? e.check(f1, l, s)(u) : u === null || ut(u) || Nr(u) || u !== 45 && Xi(u) ? l(u) : (i = !0, e.consume(u), o);
  }
  function s(u) {
    return u === 95 ? r = !0 : (a = r, r = void 0), e.consume(u), o;
  }
  function l(u) {
    return a || r || !i ? n(u) : t(u);
  }
}
function BN(e, t) {
  let n = 0, r = 0;
  return a;
  function a(o) {
    return o === 40 ? (n++, e.consume(o), a) : o === 41 && r < n ? i(o) : o === 33 || o === 34 || o === 38 || o === 39 || o === 41 || o === 42 || o === 44 || o === 46 || o === 58 || o === 59 || o === 60 || o === 63 || o === 93 || o === 95 || o === 126 ? e.check(f1, t, i)(o) : o === null || ut(o) || Nr(o) ? t(o) : (e.consume(o), a);
  }
  function i(o) {
    return o === 41 && r++, e.consume(o), a;
  }
}
function UN(e, t, n) {
  return r;
  function r(s) {
    return s === 33 || s === 34 || s === 39 || s === 41 || s === 42 || s === 44 || s === 46 || s === 58 || s === 59 || s === 63 || s === 95 || s === 126 ? (e.consume(s), r) : s === 38 ? (e.consume(s), i) : s === 93 ? (e.consume(s), a) : (
      // `<` is an end.
      s === 60 || // So is whitespace.
      s === null || ut(s) || Nr(s) ? t(s) : n(s)
    );
  }
  function a(s) {
    return s === null || s === 40 || s === 91 || ut(s) || Nr(s) ? t(s) : r(s);
  }
  function i(s) {
    return fn(s) ? o(s) : n(s);
  }
  function o(s) {
    return s === 59 ? (e.consume(s), r) : fn(s) ? (e.consume(s), o) : n(s);
  }
}
function jN(e, t, n) {
  return r;
  function r(i) {
    return e.consume(i), a;
  }
  function a(i) {
    return on(i) ? n(i) : t(i);
  }
}
function h1(e) {
  return e === null || e === 40 || e === 42 || e === 95 || e === 91 || e === 93 || e === 126 || ut(e);
}
function b1(e) {
  return !fn(e);
}
function E1(e) {
  return !(e === 47 || Cp(e));
}
function Cp(e) {
  return e === 43 || e === 45 || e === 46 || e === 95 || on(e);
}
function Tf(e) {
  let t = e.length, n = !1;
  for (; t--; ) {
    const r = e[t][1];
    if ((r.type === "labelLink" || r.type === "labelImage") && !r._balanced) {
      n = !0;
      break;
    }
    if (r._gfmAutolinkLiteralWalkedInto) {
      n = !1;
      break;
    }
  }
  return e.length > 0 && !n && (e[e.length - 1][1]._gfmAutolinkLiteralWalkedInto = !0), n;
}
const HN = {
  tokenize: KN,
  partial: !0
};
function qN() {
  return {
    document: {
      91: {
        name: "gfmFootnoteDefinition",
        tokenize: VN,
        continuation: {
          tokenize: WN
        },
        exit: YN
      }
    },
    text: {
      91: {
        name: "gfmFootnoteCall",
        tokenize: GN
      },
      93: {
        name: "gfmPotentialFootnoteCall",
        add: "after",
        tokenize: $N,
        resolveTo: zN
      }
    }
  };
}
function $N(e, t, n) {
  const r = this;
  let a = r.events.length;
  const i = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let o;
  for (; a--; ) {
    const l = r.events[a][1];
    if (l.type === "labelImage") {
      o = l;
      break;
    }
    if (l.type === "gfmFootnoteCall" || l.type === "labelLink" || l.type === "label" || l.type === "image" || l.type === "link")
      break;
  }
  return s;
  function s(l) {
    if (!o || !o._balanced)
      return n(l);
    const u = Bn(r.sliceSerialize({
      start: o.end,
      end: r.now()
    }));
    return u.codePointAt(0) !== 94 || !i.includes(u.slice(1)) ? n(l) : (e.enter("gfmFootnoteCallLabelMarker"), e.consume(l), e.exit("gfmFootnoteCallLabelMarker"), t(l));
  }
}
function zN(e, t) {
  let n = e.length;
  for (; n--; )
    if (e[n][1].type === "labelImage" && e[n][0] === "enter") {
      e[n][1];
      break;
    }
  e[n + 1][1].type = "data", e[n + 3][1].type = "gfmFootnoteCallLabelMarker";
  const r = {
    type: "gfmFootnoteCall",
    start: Object.assign({}, e[n + 3][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  }, a = {
    type: "gfmFootnoteCallMarker",
    start: Object.assign({}, e[n + 3][1].end),
    end: Object.assign({}, e[n + 3][1].end)
  };
  a.end.column++, a.end.offset++, a.end._bufferIndex++;
  const i = {
    type: "gfmFootnoteCallString",
    start: Object.assign({}, a.end),
    end: Object.assign({}, e[e.length - 1][1].start)
  }, o = {
    type: "chunkString",
    contentType: "string",
    start: Object.assign({}, i.start),
    end: Object.assign({}, i.end)
  }, s = [
    // Take the `labelImageMarker` (now `data`, the `!`)
    e[n + 1],
    e[n + 2],
    ["enter", r, t],
    // The `[`
    e[n + 3],
    e[n + 4],
    // The `^`.
    ["enter", a, t],
    ["exit", a, t],
    // Everything in between.
    ["enter", i, t],
    ["enter", o, t],
    ["exit", o, t],
    ["exit", i, t],
    // The ending (`]`, properly parsed and labelled).
    e[e.length - 2],
    e[e.length - 1],
    ["exit", r, t]
  ];
  return e.splice(n, e.length - n + 1, ...s), e;
}
function GN(e, t, n) {
  const r = this, a = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let i = 0, o;
  return s;
  function s(d) {
    return e.enter("gfmFootnoteCall"), e.enter("gfmFootnoteCallLabelMarker"), e.consume(d), e.exit("gfmFootnoteCallLabelMarker"), l;
  }
  function l(d) {
    return d !== 94 ? n(d) : (e.enter("gfmFootnoteCallMarker"), e.consume(d), e.exit("gfmFootnoteCallMarker"), e.enter("gfmFootnoteCallString"), e.enter("chunkString").contentType = "string", u);
  }
  function u(d) {
    if (
      // Too long.
      i > 999 || // Closing brace with nothing.
      d === 93 && !o || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      d === null || d === 91 || ut(d)
    )
      return n(d);
    if (d === 93) {
      e.exit("chunkString");
      const m = e.exit("gfmFootnoteCallString");
      return a.includes(Bn(r.sliceSerialize(m))) ? (e.enter("gfmFootnoteCallLabelMarker"), e.consume(d), e.exit("gfmFootnoteCallLabelMarker"), e.exit("gfmFootnoteCall"), t) : n(d);
    }
    return ut(d) || (o = !0), i++, e.consume(d), d === 92 ? c : u;
  }
  function c(d) {
    return d === 91 || d === 92 || d === 93 ? (e.consume(d), i++, u) : u(d);
  }
}
function VN(e, t, n) {
  const r = this, a = r.parser.gfmFootnotes || (r.parser.gfmFootnotes = []);
  let i, o = 0, s;
  return l;
  function l(h) {
    return e.enter("gfmFootnoteDefinition")._container = !0, e.enter("gfmFootnoteDefinitionLabel"), e.enter("gfmFootnoteDefinitionLabelMarker"), e.consume(h), e.exit("gfmFootnoteDefinitionLabelMarker"), u;
  }
  function u(h) {
    return h === 94 ? (e.enter("gfmFootnoteDefinitionMarker"), e.consume(h), e.exit("gfmFootnoteDefinitionMarker"), e.enter("gfmFootnoteDefinitionLabelString"), e.enter("chunkString").contentType = "string", c) : n(h);
  }
  function c(h) {
    if (
      // Too long.
      o > 999 || // Closing brace with nothing.
      h === 93 && !s || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      h === null || h === 91 || ut(h)
    )
      return n(h);
    if (h === 93) {
      e.exit("chunkString");
      const E = e.exit("gfmFootnoteDefinitionLabelString");
      return i = Bn(r.sliceSerialize(E)), e.enter("gfmFootnoteDefinitionLabelMarker"), e.consume(h), e.exit("gfmFootnoteDefinitionLabelMarker"), e.exit("gfmFootnoteDefinitionLabel"), m;
    }
    return ut(h) || (s = !0), o++, e.consume(h), h === 92 ? d : c;
  }
  function d(h) {
    return h === 91 || h === 92 || h === 93 ? (e.consume(h), o++, c) : c(h);
  }
  function m(h) {
    return h === 58 ? (e.enter("definitionMarker"), e.consume(h), e.exit("definitionMarker"), a.includes(i) || a.push(i), nt(e, f, "gfmFootnoteDefinitionWhitespace")) : n(h);
  }
  function f(h) {
    return t(h);
  }
}
function WN(e, t, n) {
  return e.check(Za, t, e.attempt(HN, t, n));
}
function YN(e) {
  e.exit("gfmFootnoteDefinition");
}
function KN(e, t, n) {
  const r = this;
  return nt(e, a, "gfmFootnoteDefinitionIndent", 5);
  function a(i) {
    const o = r.events[r.events.length - 1];
    return o && o[1].type === "gfmFootnoteDefinitionIndent" && o[2].sliceSerialize(o[1], !0).length === 4 ? t(i) : n(i);
  }
}
function XN(e) {
  let n = (e || {}).singleTilde;
  const r = {
    name: "strikethrough",
    tokenize: i,
    resolveAll: a
  };
  return n == null && (n = !0), {
    text: {
      126: r
    },
    insideSpan: {
      null: [r]
    },
    attentionMarkers: {
      null: [126]
    }
  };
  function a(o, s) {
    let l = -1;
    for (; ++l < o.length; )
      if (o[l][0] === "enter" && o[l][1].type === "strikethroughSequenceTemporary" && o[l][1]._close) {
        let u = l;
        for (; u--; )
          if (o[u][0] === "exit" && o[u][1].type === "strikethroughSequenceTemporary" && o[u][1]._open && // If the sizes are the same:
          o[l][1].end.offset - o[l][1].start.offset === o[u][1].end.offset - o[u][1].start.offset) {
            o[l][1].type = "strikethroughSequence", o[u][1].type = "strikethroughSequence";
            const c = {
              type: "strikethrough",
              start: Object.assign({}, o[u][1].start),
              end: Object.assign({}, o[l][1].end)
            }, d = {
              type: "strikethroughText",
              start: Object.assign({}, o[u][1].end),
              end: Object.assign({}, o[l][1].start)
            }, m = [["enter", c, s], ["enter", o[u][1], s], ["exit", o[u][1], s], ["enter", d, s]], f = s.parser.constructs.insideSpan.null;
            f && xn(m, m.length, 0, Zi(f, o.slice(u + 1, l), s)), xn(m, m.length, 0, [["exit", d, s], ["enter", o[l][1], s], ["exit", o[l][1], s], ["exit", c, s]]), xn(o, u - 1, l - u + 3, m), l = u + m.length - 2;
            break;
          }
      }
    for (l = -1; ++l < o.length; )
      o[l][1].type === "strikethroughSequenceTemporary" && (o[l][1].type = "data");
    return o;
  }
  function i(o, s, l) {
    const u = this.previous, c = this.events;
    let d = 0;
    return m;
    function m(h) {
      return u === 126 && c[c.length - 1][1].type !== "characterEscape" ? l(h) : (o.enter("strikethroughSequenceTemporary"), f(h));
    }
    function f(h) {
      const E = ta(u);
      if (h === 126)
        return d > 1 ? l(h) : (o.consume(h), d++, f);
      if (d < 2 && !n) return l(h);
      const I = o.exit("strikethroughSequenceTemporary"), x = ta(h);
      return I._open = !x || x === 2 && !!E, I._close = !E || E === 2 && !!x, s(h);
    }
  }
}
class ZN {
  /**
   * Create a new edit map.
   */
  constructor() {
    this.map = [];
  }
  /**
   * Create an edit: a remove and/or add at a certain place.
   *
   * @param {number} index
   * @param {number} remove
   * @param {Array<Event>} add
   * @returns {undefined}
   */
  add(t, n, r) {
    QN(this, t, n, r);
  }
  // To do: add this when moving to `micromark`.
  // /**
  //  * Create an edit: but insert `add` before existing additions.
  //  *
  //  * @param {number} index
  //  * @param {number} remove
  //  * @param {Array<Event>} add
  //  * @returns {undefined}
  //  */
  // addBefore(index, remove, add) {
  //   addImplementation(this, index, remove, add, true)
  // }
  /**
   * Done, change the events.
   *
   * @param {Array<Event>} events
   * @returns {undefined}
   */
  consume(t) {
    if (this.map.sort(function(i, o) {
      return i[0] - o[0];
    }), this.map.length === 0)
      return;
    let n = this.map.length;
    const r = [];
    for (; n > 0; )
      n -= 1, r.push(t.slice(this.map[n][0] + this.map[n][1]), this.map[n][2]), t.length = this.map[n][0];
    r.push(t.slice()), t.length = 0;
    let a = r.pop();
    for (; a; ) {
      for (const i of a)
        t.push(i);
      a = r.pop();
    }
    this.map.length = 0;
  }
}
function QN(e, t, n, r) {
  let a = 0;
  if (!(n === 0 && r.length === 0)) {
    for (; a < e.map.length; ) {
      if (e.map[a][0] === t) {
        e.map[a][1] += n, e.map[a][2].push(...r);
        return;
      }
      a += 1;
    }
    e.map.push([t, n, r]);
  }
}
function JN(e, t) {
  let n = !1;
  const r = [];
  for (; t < e.length; ) {
    const a = e[t];
    if (n) {
      if (a[0] === "enter")
        a[1].type === "tableContent" && r.push(e[t + 1][1].type === "tableDelimiterMarker" ? "left" : "none");
      else if (a[1].type === "tableContent") {
        if (e[t - 1][1].type === "tableDelimiterMarker") {
          const i = r.length - 1;
          r[i] = r[i] === "left" ? "center" : "right";
        }
      } else if (a[1].type === "tableDelimiterRow")
        break;
    } else a[0] === "enter" && a[1].type === "tableDelimiterRow" && (n = !0);
    t += 1;
  }
  return r;
}
function eO() {
  return {
    flow: {
      null: {
        name: "table",
        tokenize: tO,
        resolveAll: nO
      }
    }
  };
}
function tO(e, t, n) {
  const r = this;
  let a = 0, i = 0, o;
  return s;
  function s(w) {
    let G = r.events.length - 1;
    for (; G > -1; ) {
      const ce = r.events[G][1].type;
      if (ce === "lineEnding" || // Note: markdown-rs uses `whitespace` instead of `linePrefix`
      ce === "linePrefix") G--;
      else break;
    }
    const Q = G > -1 ? r.events[G][1].type : null, z = Q === "tableHead" || Q === "tableRow" ? T : l;
    return z === T && r.parser.lazy[r.now().line] ? n(w) : z(w);
  }
  function l(w) {
    return e.enter("tableHead"), e.enter("tableRow"), u(w);
  }
  function u(w) {
    return w === 124 || (o = !0, i += 1), c(w);
  }
  function c(w) {
    return w === null ? n(w) : Me(w) ? i > 1 ? (i = 0, r.interrupt = !0, e.exit("tableRow"), e.enter("lineEnding"), e.consume(w), e.exit("lineEnding"), f) : n(w) : Je(w) ? nt(e, c, "whitespace")(w) : (i += 1, o && (o = !1, a += 1), w === 124 ? (e.enter("tableCellDivider"), e.consume(w), e.exit("tableCellDivider"), o = !0, c) : (e.enter("data"), d(w)));
  }
  function d(w) {
    return w === null || w === 124 || ut(w) ? (e.exit("data"), c(w)) : (e.consume(w), w === 92 ? m : d);
  }
  function m(w) {
    return w === 92 || w === 124 ? (e.consume(w), d) : d(w);
  }
  function f(w) {
    return r.interrupt = !1, r.parser.lazy[r.now().line] ? n(w) : (e.enter("tableDelimiterRow"), o = !1, Je(w) ? nt(e, h, "linePrefix", r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4)(w) : h(w));
  }
  function h(w) {
    return w === 45 || w === 58 ? I(w) : w === 124 ? (o = !0, e.enter("tableCellDivider"), e.consume(w), e.exit("tableCellDivider"), E) : y(w);
  }
  function E(w) {
    return Je(w) ? nt(e, I, "whitespace")(w) : I(w);
  }
  function I(w) {
    return w === 58 ? (i += 1, o = !0, e.enter("tableDelimiterMarker"), e.consume(w), e.exit("tableDelimiterMarker"), x) : w === 45 ? (i += 1, x(w)) : w === null || Me(w) ? g(w) : y(w);
  }
  function x(w) {
    return w === 45 ? (e.enter("tableDelimiterFiller"), v(w)) : y(w);
  }
  function v(w) {
    return w === 45 ? (e.consume(w), v) : w === 58 ? (o = !0, e.exit("tableDelimiterFiller"), e.enter("tableDelimiterMarker"), e.consume(w), e.exit("tableDelimiterMarker"), S) : (e.exit("tableDelimiterFiller"), S(w));
  }
  function S(w) {
    return Je(w) ? nt(e, g, "whitespace")(w) : g(w);
  }
  function g(w) {
    return w === 124 ? h(w) : w === null || Me(w) ? !o || a !== i ? y(w) : (e.exit("tableDelimiterRow"), e.exit("tableHead"), t(w)) : y(w);
  }
  function y(w) {
    return n(w);
  }
  function T(w) {
    return e.enter("tableRow"), j(w);
  }
  function j(w) {
    return w === 124 ? (e.enter("tableCellDivider"), e.consume(w), e.exit("tableCellDivider"), j) : w === null || Me(w) ? (e.exit("tableRow"), t(w)) : Je(w) ? nt(e, j, "whitespace")(w) : (e.enter("data"), $(w));
  }
  function $(w) {
    return w === null || w === 124 || ut(w) ? (e.exit("data"), j(w)) : (e.consume(w), w === 92 ? D : $);
  }
  function D(w) {
    return w === 92 || w === 124 ? (e.consume(w), $) : $(w);
  }
}
function nO(e, t) {
  let n = -1, r = !0, a = 0, i = [0, 0, 0, 0], o = [0, 0, 0, 0], s = !1, l = 0, u, c, d;
  const m = new ZN();
  for (; ++n < e.length; ) {
    const f = e[n], h = f[1];
    f[0] === "enter" ? h.type === "tableHead" ? (s = !1, l !== 0 && (wg(m, t, l, u, c), c = void 0, l = 0), u = {
      type: "table",
      start: Object.assign({}, h.start),
      // Note: correct end is set later.
      end: Object.assign({}, h.end)
    }, m.add(n, 0, [["enter", u, t]])) : h.type === "tableRow" || h.type === "tableDelimiterRow" ? (r = !0, d = void 0, i = [0, 0, 0, 0], o = [0, n + 1, 0, 0], s && (s = !1, c = {
      type: "tableBody",
      start: Object.assign({}, h.start),
      // Note: correct end is set later.
      end: Object.assign({}, h.end)
    }, m.add(n, 0, [["enter", c, t]])), a = h.type === "tableDelimiterRow" ? 2 : c ? 3 : 1) : a && (h.type === "data" || h.type === "tableDelimiterMarker" || h.type === "tableDelimiterFiller") ? (r = !1, o[2] === 0 && (i[1] !== 0 && (o[0] = o[1], d = bi(m, t, i, a, void 0, d), i = [0, 0, 0, 0]), o[2] = n)) : h.type === "tableCellDivider" && (r ? r = !1 : (i[1] !== 0 && (o[0] = o[1], d = bi(m, t, i, a, void 0, d)), i = o, o = [i[1], n, 0, 0])) : h.type === "tableHead" ? (s = !0, l = n) : h.type === "tableRow" || h.type === "tableDelimiterRow" ? (l = n, i[1] !== 0 ? (o[0] = o[1], d = bi(m, t, i, a, n, d)) : o[1] !== 0 && (d = bi(m, t, o, a, n, d)), a = 0) : a && (h.type === "data" || h.type === "tableDelimiterMarker" || h.type === "tableDelimiterFiller") && (o[3] = n);
  }
  for (l !== 0 && wg(m, t, l, u, c), m.consume(t.events), n = -1; ++n < t.events.length; ) {
    const f = t.events[n];
    f[0] === "enter" && f[1].type === "table" && (f[1]._align = JN(t.events, n));
  }
  return e;
}
function bi(e, t, n, r, a, i) {
  const o = r === 1 ? "tableHeader" : r === 2 ? "tableDelimiter" : "tableData", s = "tableContent";
  n[0] !== 0 && (i.end = Object.assign({}, Yr(t.events, n[0])), e.add(n[0], 0, [["exit", i, t]]));
  const l = Yr(t.events, n[1]);
  if (i = {
    type: o,
    start: Object.assign({}, l),
    // Note: correct end is set later.
    end: Object.assign({}, l)
  }, e.add(n[1], 0, [["enter", i, t]]), n[2] !== 0) {
    const u = Yr(t.events, n[2]), c = Yr(t.events, n[3]), d = {
      type: s,
      start: Object.assign({}, u),
      end: Object.assign({}, c)
    };
    if (e.add(n[2], 0, [["enter", d, t]]), r !== 2) {
      const m = t.events[n[2]], f = t.events[n[3]];
      if (m[1].end = Object.assign({}, f[1].end), m[1].type = "chunkText", m[1].contentType = "text", n[3] > n[2] + 1) {
        const h = n[2] + 1, E = n[3] - n[2] - 1;
        e.add(h, E, []);
      }
    }
    e.add(n[3] + 1, 0, [["exit", d, t]]);
  }
  return a !== void 0 && (i.end = Object.assign({}, Yr(t.events, a)), e.add(a, 0, [["exit", i, t]]), i = void 0), i;
}
function wg(e, t, n, r, a) {
  const i = [], o = Yr(t.events, n);
  a && (a.end = Object.assign({}, o), i.push(["exit", a, t])), r.end = Object.assign({}, o), i.push(["exit", r, t]), e.add(n + 1, 0, i);
}
function Yr(e, t) {
  const n = e[t], r = n[0] === "enter" ? "start" : "end";
  return n[1][r];
}
const rO = {
  name: "tasklistCheck",
  tokenize: iO
};
function aO() {
  return {
    text: {
      91: rO
    }
  };
}
function iO(e, t, n) {
  const r = this;
  return a;
  function a(l) {
    return (
      // Exit if there’s stuff before.
      r.previous !== null || // Exit if not in the first content that is the first child of a list
      // item.
      !r._gfmTasklistFirstContentOfListItem ? n(l) : (e.enter("taskListCheck"), e.enter("taskListCheckMarker"), e.consume(l), e.exit("taskListCheckMarker"), i)
    );
  }
  function i(l) {
    return ut(l) ? (e.enter("taskListCheckValueUnchecked"), e.consume(l), e.exit("taskListCheckValueUnchecked"), o) : l === 88 || l === 120 ? (e.enter("taskListCheckValueChecked"), e.consume(l), e.exit("taskListCheckValueChecked"), o) : n(l);
  }
  function o(l) {
    return l === 93 ? (e.enter("taskListCheckMarker"), e.consume(l), e.exit("taskListCheckMarker"), e.exit("taskListCheck"), s) : n(l);
  }
  function s(l) {
    return Me(l) ? t(l) : Je(l) ? e.check({
      tokenize: oO
    }, t, n)(l) : n(l);
  }
}
function oO(e, t, n) {
  return nt(e, r, "whitespace");
  function r(a) {
    return a === null ? n(a) : t(a);
  }
}
function sO(e) {
  return IT([
    ON(),
    qN(),
    XN(e),
    eO(),
    aO()
  ]);
}
const lO = {};
function uO(e) {
  const t = (
    /** @type {Processor<Root>} */
    this
  ), n = e || lO, r = t.data(), a = r.micromarkExtensions || (r.micromarkExtensions = []), i = r.fromMarkdownExtensions || (r.fromMarkdownExtensions = []), o = r.toMarkdownExtensions || (r.toMarkdownExtensions = []);
  a.push(sO(n)), i.push(wN()), o.push(CN(n));
}
function cO(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.includes(r)) continue;
    n[r] = e[r];
  }
  return n;
}
function dO(e, t) {
  if (e == null) return {};
  var n, r, a = cO(e, t);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(e);
    for (r = 0; r < i.length; r++) n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (a[n] = e[n]);
  }
  return a;
}
function kp(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = Array(t); n < t; n++) r[n] = e[n];
  return r;
}
function pO(e) {
  if (Array.isArray(e)) return kp(e);
}
function fO(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function mO(e, t) {
  if (e) {
    if (typeof e == "string") return kp(e, t);
    var n = {}.toString.call(e).slice(8, -1);
    return n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set" ? Array.from(e) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? kp(e, t) : void 0;
  }
}
function gO() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Np(e) {
  return pO(e) || fO(e) || mO(e) || gO();
}
function $a(e) {
  "@babel/helpers - typeof";
  return $a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, $a(e);
}
function hO(e, t) {
  if ($a(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if ($a(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function bO(e) {
  var t = hO(e, "string");
  return $a(t) == "symbol" ? t : t + "";
}
function y1(e, t, n) {
  return (t = bO(t)) in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function Op() {
  return Op = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, Op.apply(null, arguments);
}
function Cg(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Zr(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Cg(Object(n), !0).forEach(function(r) {
      y1(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Cg(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function EO(e) {
  var t = e.length;
  if (t === 0 || t === 1) return e;
  if (t === 2)
    return [e[0], e[1], "".concat(e[0], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0])];
  if (t === 3)
    return [e[0], e[1], e[2], "".concat(e[0], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2]), "".concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0])];
  if (t >= 4)
    return [e[0], e[1], e[2], e[3], "".concat(e[0], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2]), "".concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2]), "".concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1]), "".concat(e[2], ".").concat(e[3]), "".concat(e[3], ".").concat(e[0]), "".concat(e[3], ".").concat(e[1]), "".concat(e[3], ".").concat(e[2]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[1], ".").concat(e[3]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[2], ".").concat(e[3]), "".concat(e[0], ".").concat(e[3], ".").concat(e[1]), "".concat(e[0], ".").concat(e[3], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[1], ".").concat(e[2], ".").concat(e[3]), "".concat(e[1], ".").concat(e[3], ".").concat(e[0]), "".concat(e[1], ".").concat(e[3], ".").concat(e[2]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[0], ".").concat(e[3]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0]), "".concat(e[2], ".").concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[3], ".").concat(e[0]), "".concat(e[2], ".").concat(e[3], ".").concat(e[1]), "".concat(e[3], ".").concat(e[0], ".").concat(e[1]), "".concat(e[3], ".").concat(e[0], ".").concat(e[2]), "".concat(e[3], ".").concat(e[1], ".").concat(e[0]), "".concat(e[3], ".").concat(e[1], ".").concat(e[2]), "".concat(e[3], ".").concat(e[2], ".").concat(e[0]), "".concat(e[3], ".").concat(e[2], ".").concat(e[1]), "".concat(e[0], ".").concat(e[1], ".").concat(e[2], ".").concat(e[3]), "".concat(e[0], ".").concat(e[1], ".").concat(e[3], ".").concat(e[2]), "".concat(e[0], ".").concat(e[2], ".").concat(e[1], ".").concat(e[3]), "".concat(e[0], ".").concat(e[2], ".").concat(e[3], ".").concat(e[1]), "".concat(e[0], ".").concat(e[3], ".").concat(e[1], ".").concat(e[2]), "".concat(e[0], ".").concat(e[3], ".").concat(e[2], ".").concat(e[1]), "".concat(e[1], ".").concat(e[0], ".").concat(e[2], ".").concat(e[3]), "".concat(e[1], ".").concat(e[0], ".").concat(e[3], ".").concat(e[2]), "".concat(e[1], ".").concat(e[2], ".").concat(e[0], ".").concat(e[3]), "".concat(e[1], ".").concat(e[2], ".").concat(e[3], ".").concat(e[0]), "".concat(e[1], ".").concat(e[3], ".").concat(e[0], ".").concat(e[2]), "".concat(e[1], ".").concat(e[3], ".").concat(e[2], ".").concat(e[0]), "".concat(e[2], ".").concat(e[0], ".").concat(e[1], ".").concat(e[3]), "".concat(e[2], ".").concat(e[0], ".").concat(e[3], ".").concat(e[1]), "".concat(e[2], ".").concat(e[1], ".").concat(e[0], ".").concat(e[3]), "".concat(e[2], ".").concat(e[1], ".").concat(e[3], ".").concat(e[0]), "".concat(e[2], ".").concat(e[3], ".").concat(e[0], ".").concat(e[1]), "".concat(e[2], ".").concat(e[3], ".").concat(e[1], ".").concat(e[0]), "".concat(e[3], ".").concat(e[0], ".").concat(e[1], ".").concat(e[2]), "".concat(e[3], ".").concat(e[0], ".").concat(e[2], ".").concat(e[1]), "".concat(e[3], ".").concat(e[1], ".").concat(e[0], ".").concat(e[2]), "".concat(e[3], ".").concat(e[1], ".").concat(e[2], ".").concat(e[0]), "".concat(e[3], ".").concat(e[2], ".").concat(e[0], ".").concat(e[1]), "".concat(e[3], ".").concat(e[2], ".").concat(e[1], ".").concat(e[0])];
}
var Yo = {};
function yO(e) {
  if (e.length === 0 || e.length === 1) return e;
  var t = e.join(".");
  return Yo[t] || (Yo[t] = EO(e)), Yo[t];
}
function vO(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 ? arguments[2] : void 0, r = e.filter(function(i) {
    return i !== "token";
  }), a = yO(r);
  return a.reduce(function(i, o) {
    return Zr(Zr({}, i), n[o]);
  }, t);
}
function kg(e) {
  return e.join(" ");
}
function TO(e, t) {
  var n = 0;
  return function(r) {
    return n += 1, r.map(function(a, i) {
      return v1({
        node: a,
        stylesheet: e,
        useInlineStyles: t,
        key: "code-segment-".concat(n, "-").concat(i)
      });
    });
  };
}
function v1(e) {
  var t = e.node, n = e.stylesheet, r = e.style, a = r === void 0 ? {} : r, i = e.useInlineStyles, o = e.key, s = t.properties, l = t.type, u = t.tagName, c = t.value;
  if (l === "text")
    return c;
  if (u) {
    var d = TO(n, i), m;
    if (!i)
      m = Zr(Zr({}, s), {}, {
        className: kg(s.className)
      });
    else {
      var f = Object.keys(n).reduce(function(x, v) {
        return v.split(".").forEach(function(S) {
          x.includes(S) || x.push(S);
        }), x;
      }, []), h = s.className && s.className.includes("token") ? ["token"] : [], E = s.className && h.concat(s.className.filter(function(x) {
        return !f.includes(x);
      }));
      m = Zr(Zr({}, s), {}, {
        className: kg(E) || void 0,
        style: vO(s.className, Object.assign({}, s.style, a), n)
      });
    }
    var I = d(t.children);
    return /* @__PURE__ */ An.createElement(u, Op({
      key: o
    }, m), I);
  }
}
const SO = function(e, t) {
  var n = e.listLanguages();
  return n.indexOf(t) !== -1;
};
var _O = ["language", "children", "style", "customStyle", "codeTagProps", "useInlineStyles", "showLineNumbers", "showInlineLineNumbers", "startingLineNumber", "lineNumberContainerStyle", "lineNumberStyle", "wrapLines", "wrapLongLines", "lineProps", "renderer", "PreTag", "CodeTag", "code", "astGenerator"];
function Ng(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function ur(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Ng(Object(n), !0).forEach(function(r) {
      y1(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ng(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
var AO = /\n/g;
function xO(e) {
  return e.match(AO);
}
function RO(e) {
  var t = e.lines, n = e.startingLineNumber, r = e.style;
  return t.map(function(a, i) {
    var o = i + n;
    return /* @__PURE__ */ An.createElement("span", {
      key: "line-".concat(i),
      className: "react-syntax-highlighter-line-number",
      style: typeof r == "function" ? r(o) : r
    }, "".concat(o, `
`));
  });
}
function IO(e) {
  var t = e.codeString, n = e.codeStyle, r = e.containerStyle, a = r === void 0 ? {
    float: "left",
    paddingRight: "10px"
  } : r, i = e.numberStyle, o = i === void 0 ? {} : i, s = e.startingLineNumber;
  return /* @__PURE__ */ An.createElement("code", {
    style: Object.assign({}, n, a)
  }, RO({
    lines: t.replace(/\n$/, "").split(`
`),
    style: o,
    startingLineNumber: s
  }));
}
function wO(e) {
  return "".concat(e.toString().length, ".25em");
}
function T1(e, t) {
  return {
    type: "element",
    tagName: "span",
    properties: {
      key: "line-number--".concat(e),
      className: ["comment", "linenumber", "react-syntax-highlighter-line-number"],
      style: t
    },
    children: [{
      type: "text",
      value: e
    }]
  };
}
function S1(e, t, n) {
  var r = {
    display: "inline-block",
    minWidth: wO(n),
    paddingRight: "1em",
    textAlign: "right",
    userSelect: "none"
  }, a = typeof e == "function" ? e(t) : e, i = ur(ur({}, r), a);
  return i;
}
function Ii(e) {
  var t = e.children, n = e.lineNumber, r = e.lineNumberStyle, a = e.largestLineNumber, i = e.showInlineLineNumbers, o = e.lineProps, s = o === void 0 ? {} : o, l = e.className, u = l === void 0 ? [] : l, c = e.showLineNumbers, d = e.wrapLongLines, m = e.wrapLines, f = m === void 0 ? !1 : m, h = f ? ur({}, typeof s == "function" ? s(n) : s) : {};
  if (h.className = h.className ? [].concat(Np(h.className.trim().split(/\s+/)), Np(u)) : u, n && i) {
    var E = S1(r, n, a);
    t.unshift(T1(n, E));
  }
  return d & c && (h.style = ur({
    display: "flex"
  }, h.style)), {
    type: "element",
    tagName: "span",
    properties: h,
    children: t
  };
}
function _1(e) {
  for (var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r = 0; r < e.length; r++) {
    var a = e[r];
    if (a.type === "text")
      n.push(Ii({
        children: [a],
        className: Np(new Set(t))
      }));
    else if (a.children) {
      var i = t.concat(a.properties.className);
      _1(a.children, i).forEach(function(o) {
        return n.push(o);
      });
    }
  }
  return n;
}
function CO(e, t, n, r, a, i, o, s, l) {
  var u, c = _1(e.value), d = [], m = -1, f = 0;
  function h(y, T) {
    var j = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return Ii({
      children: y,
      lineNumber: T,
      lineNumberStyle: s,
      largestLineNumber: o,
      showInlineLineNumbers: a,
      lineProps: n,
      className: j,
      showLineNumbers: r,
      wrapLongLines: l,
      wrapLines: t
    });
  }
  function E(y, T) {
    if (r && T && a) {
      var j = S1(s, T, o);
      y.unshift(T1(T, j));
    }
    return y;
  }
  function I(y, T) {
    var j = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return t || j.length > 0 ? h(y, T, j) : E(y, T);
  }
  for (var x = function() {
    var T = c[f], j = T.children[0].value, $ = xO(j);
    if ($) {
      var D = j.split(`
`);
      D.forEach(function(w, G) {
        var Q = r && d.length + i, z = {
          type: "text",
          value: "".concat(w, `
`)
        };
        if (G === 0) {
          var ce = c.slice(m + 1, f).concat(Ii({
            children: [z],
            className: T.properties.className
          })), ae = I(ce, Q);
          d.push(ae);
        } else if (G === D.length - 1) {
          var K = c[f + 1] && c[f + 1].children && c[f + 1].children[0], he = {
            type: "text",
            value: "".concat(w)
          };
          if (K) {
            var ye = Ii({
              children: [he],
              className: T.properties.className
            });
            c.splice(f + 1, 0, ye);
          } else {
            var Te = [he], A = I(Te, Q, T.properties.className);
            d.push(A);
          }
        } else {
          var re = [z], se = I(re, Q, T.properties.className);
          d.push(se);
        }
      }), m = f;
    }
    f++;
  }; f < c.length; )
    x();
  if (m !== c.length - 1) {
    var v = c.slice(m + 1, c.length);
    if (v && v.length) {
      var S = r && d.length + i, g = I(v, S);
      d.push(g);
    }
  }
  return t ? d : (u = []).concat.apply(u, d);
}
function kO(e) {
  var t = e.rows, n = e.stylesheet, r = e.useInlineStyles;
  return t.map(function(a, i) {
    return v1({
      node: a,
      stylesheet: n,
      useInlineStyles: r,
      key: "code-segement".concat(i)
    });
  });
}
function A1(e) {
  return e && typeof e.highlightAuto < "u";
}
function NO(e) {
  var t = e.astGenerator, n = e.language, r = e.code, a = e.defaultCodeValue;
  if (A1(t)) {
    var i = SO(t, n);
    return n === "text" ? {
      value: a,
      language: "text"
    } : i ? t.highlight(n, r) : t.highlightAuto(r);
  }
  try {
    return n && n !== "text" ? {
      value: t.highlight(r, n)
    } : {
      value: a
    };
  } catch {
    return {
      value: a
    };
  }
}
function OO(e, t) {
  return function(r) {
    var a = r.language, i = r.children, o = r.style, s = o === void 0 ? t : o, l = r.customStyle, u = l === void 0 ? {} : l, c = r.codeTagProps, d = c === void 0 ? {
      className: a ? "language-".concat(a) : void 0,
      style: ur(ur({}, s['code[class*="language-"]']), s['code[class*="language-'.concat(a, '"]')])
    } : c, m = r.useInlineStyles, f = m === void 0 ? !0 : m, h = r.showLineNumbers, E = h === void 0 ? !1 : h, I = r.showInlineLineNumbers, x = I === void 0 ? !0 : I, v = r.startingLineNumber, S = v === void 0 ? 1 : v, g = r.lineNumberContainerStyle, y = r.lineNumberStyle, T = y === void 0 ? {} : y, j = r.wrapLines, $ = r.wrapLongLines, D = $ === void 0 ? !1 : $, w = r.lineProps, G = w === void 0 ? {} : w, Q = r.renderer, z = r.PreTag, ce = z === void 0 ? "pre" : z, ae = r.CodeTag, K = ae === void 0 ? "code" : ae, he = r.code, ye = he === void 0 ? (Array.isArray(i) ? i[0] : i) || "" : he, Te = r.astGenerator, A = dO(r, _O);
    Te = Te || e;
    var re = E ? /* @__PURE__ */ An.createElement(IO, {
      containerStyle: g,
      codeStyle: d.style || {},
      numberStyle: T,
      startingLineNumber: S,
      codeString: ye
    }) : null, se = s.hljs || s['pre[class*="language-"]'] || {
      backgroundColor: "#fff"
    }, M = A1(Te) ? "hljs" : "prismjs", me = f ? Object.assign({}, A, {
      style: Object.assign({}, se, u)
    }) : Object.assign({}, A, {
      className: A.className ? "".concat(M, " ").concat(A.className) : M,
      style: Object.assign({}, u)
    });
    if (D ? d.style = ur({
      whiteSpace: "pre-wrap"
    }, d.style) : d.style = ur({
      whiteSpace: "pre"
    }, d.style), !Te)
      return /* @__PURE__ */ An.createElement(ce, me, re, /* @__PURE__ */ An.createElement(K, d, ye));
    (j === void 0 && Q || D) && (j = !0), Q = Q || kO;
    var we = [{
      type: "text",
      value: ye
    }], pe = NO({
      astGenerator: Te,
      language: a,
      code: ye,
      defaultCodeValue: we
    });
    pe.language === null && (pe.value = we);
    var Ie = pe.value.length;
    Ie === 1 && pe.value[0].type === "text" && (Ie = pe.value[0].value.split(`
`).length);
    var Re = Ie + S, be = CO(pe, j, G, E, x, S, Re, T, D);
    return /* @__PURE__ */ An.createElement(ce, me, /* @__PURE__ */ An.createElement(K, d, !x && re, Q({
      rows: be,
      stylesheet: s,
      useInlineStyles: f
    })));
  };
}
const LO = ["abap", "abnf", "actionscript", "ada", "agda", "al", "antlr4", "apacheconf", "apex", "apl", "applescript", "aql", "arduino", "arff", "asciidoc", "asm6502", "asmatmel", "aspnet", "autohotkey", "autoit", "avisynth", "avro-idl", "bash", "basic", "batch", "bbcode", "bicep", "birb", "bison", "bnf", "brainfuck", "brightscript", "bro", "bsl", "c", "cfscript", "chaiscript", "cil", "clike", "clojure", "cmake", "cobol", "coffeescript", "concurnas", "coq", "cpp", "crystal", "csharp", "cshtml", "csp", "css-extras", "css", "csv", "cypher", "d", "dart", "dataweave", "dax", "dhall", "diff", "django", "dns-zone-file", "docker", "dot", "ebnf", "editorconfig", "eiffel", "ejs", "elixir", "elm", "erb", "erlang", "etlua", "excel-formula", "factor", "false", "firestore-security-rules", "flow", "fortran", "fsharp", "ftl", "gap", "gcode", "gdscript", "gedcom", "gherkin", "git", "glsl", "gml", "gn", "go-module", "go", "graphql", "groovy", "haml", "handlebars", "haskell", "haxe", "hcl", "hlsl", "hoon", "hpkp", "hsts", "http", "ichigojam", "icon", "icu-message-format", "idris", "iecst", "ignore", "inform7", "ini", "io", "j", "java", "javadoc", "javadoclike", "javascript", "javastacktrace", "jexl", "jolie", "jq", "js-extras", "js-templates", "jsdoc", "json", "json5", "jsonp", "jsstacktrace", "jsx", "julia", "keepalived", "keyman", "kotlin", "kumir", "kusto", "latex", "latte", "less", "lilypond", "liquid", "lisp", "livescript", "llvm", "log", "lolcode", "lua", "magma", "makefile", "markdown", "markup-templating", "markup", "matlab", "maxscript", "mel", "mermaid", "mizar", "mongodb", "monkey", "moonscript", "n1ql", "n4js", "nand2tetris-hdl", "naniscript", "nasm", "neon", "nevod", "nginx", "nim", "nix", "nsis", "objectivec", "ocaml", "opencl", "openqasm", "oz", "parigp", "parser", "pascal", "pascaligo", "pcaxis", "peoplecode", "perl", "php-extras", "php", "phpdoc", "plsql", "powerquery", "powershell", "processing", "prolog", "promql", "properties", "protobuf", "psl", "pug", "puppet", "pure", "purebasic", "purescript", "python", "q", "qml", "qore", "qsharp", "r", "racket", "reason", "regex", "rego", "renpy", "rest", "rip", "roboconf", "robotframework", "ruby", "rust", "sas", "sass", "scala", "scheme", "scss", "shell-session", "smali", "smalltalk", "smarty", "sml", "solidity", "solution-file", "soy", "sparql", "splunk-spl", "sqf", "sql", "squirrel", "stan", "stylus", "swift", "systemd", "t4-cs", "t4-templating", "t4-vb", "tap", "tcl", "textile", "toml", "tremor", "tsx", "tt2", "turtle", "twig", "typescript", "typoscript", "unrealscript", "uorazor", "uri", "v", "vala", "vbnet", "velocity", "verilog", "vhdl", "vim", "visual-basic", "warpscript", "wasm", "web-idl", "wiki", "wolfram", "wren", "xeora", "xml-doc", "xojo", "xquery", "yaml", "yang", "zig"];
var DO = PO, MO = Object.prototype.hasOwnProperty;
function PO() {
  for (var e = {}, t = 0; t < arguments.length; t++) {
    var n = arguments[t];
    for (var r in n)
      MO.call(n, r) && (e[r] = n[r]);
  }
  return e;
}
var x1 = R1, Sf = R1.prototype;
Sf.space = null;
Sf.normal = {};
Sf.property = {};
function R1(e, t, n) {
  this.property = e, this.normal = t, n && (this.space = n);
}
var Og = DO, FO = x1, BO = UO;
function UO(e) {
  for (var t = e.length, n = [], r = [], a = -1, i, o; ++a < t; )
    i = e[a], n.push(i.property), r.push(i.normal), o = i.space;
  return new FO(
    Og.apply(null, n),
    Og.apply(null, r),
    o
  );
}
var _f = jO;
function jO(e) {
  return e.toLowerCase();
}
var I1 = w1, On = w1.prototype;
On.space = null;
On.attribute = null;
On.property = null;
On.boolean = !1;
On.booleanish = !1;
On.overloadedBoolean = !1;
On.number = !1;
On.commaSeparated = !1;
On.spaceSeparated = !1;
On.commaOrSpaceSeparated = !1;
On.mustUseProperty = !1;
On.defined = !1;
function w1(e, t) {
  this.property = e, this.attribute = t;
}
var Wn = {}, HO = 0;
Wn.boolean = Dr();
Wn.booleanish = Dr();
Wn.overloadedBoolean = Dr();
Wn.number = Dr();
Wn.spaceSeparated = Dr();
Wn.commaSeparated = Dr();
Wn.commaOrSpaceSeparated = Dr();
function Dr() {
  return Math.pow(2, ++HO);
}
var C1 = I1, Lg = Wn, k1 = Af;
Af.prototype = new C1();
Af.prototype.defined = !0;
var N1 = [
  "boolean",
  "booleanish",
  "overloadedBoolean",
  "number",
  "commaSeparated",
  "spaceSeparated",
  "commaOrSpaceSeparated"
], qO = N1.length;
function Af(e, t, n, r) {
  var a = -1, i;
  for (Dg(this, "space", r), C1.call(this, e, t); ++a < qO; )
    i = N1[a], Dg(this, i, (n & Lg[i]) === Lg[i]);
}
function Dg(e, t, n) {
  n && (e[t] = n);
}
var Mg = _f, $O = x1, zO = k1, Ja = GO;
function GO(e) {
  var t = e.space, n = e.mustUseProperty || [], r = e.attributes || {}, a = e.properties, i = e.transform, o = {}, s = {}, l, u;
  for (l in a)
    u = new zO(
      l,
      i(r, l),
      a[l],
      t
    ), n.indexOf(l) !== -1 && (u.mustUseProperty = !0), o[l] = u, s[Mg(l)] = l, s[Mg(u.attribute)] = l;
  return new $O(o, s, t);
}
var VO = Ja, WO = VO({
  space: "xlink",
  transform: YO,
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
});
function YO(e, t) {
  return "xlink:" + t.slice(5).toLowerCase();
}
var KO = Ja, XO = KO({
  space: "xml",
  transform: ZO,
  properties: {
    xmlLang: null,
    xmlBase: null,
    xmlSpace: null
  }
});
function ZO(e, t) {
  return "xml:" + t.slice(3).toLowerCase();
}
var QO = JO;
function JO(e, t) {
  return t in e ? e[t] : t;
}
var e2 = QO, O1 = t2;
function t2(e, t) {
  return e2(e, t.toLowerCase());
}
var n2 = Ja, r2 = O1, a2 = n2({
  space: "xmlns",
  attributes: {
    xmlnsxlink: "xmlns:xlink"
  },
  transform: r2,
  properties: {
    xmlns: null,
    xmlnsXLink: null
  }
}), xf = Wn, i2 = Ja, gn = xf.booleanish, In = xf.number, _r = xf.spaceSeparated, o2 = i2({
  transform: s2,
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: gn,
    ariaAutoComplete: null,
    ariaBusy: gn,
    ariaChecked: gn,
    ariaColCount: In,
    ariaColIndex: In,
    ariaColSpan: In,
    ariaControls: _r,
    ariaCurrent: null,
    ariaDescribedBy: _r,
    ariaDetails: null,
    ariaDisabled: gn,
    ariaDropEffect: _r,
    ariaErrorMessage: null,
    ariaExpanded: gn,
    ariaFlowTo: _r,
    ariaGrabbed: gn,
    ariaHasPopup: null,
    ariaHidden: gn,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: _r,
    ariaLevel: In,
    ariaLive: null,
    ariaModal: gn,
    ariaMultiLine: gn,
    ariaMultiSelectable: gn,
    ariaOrientation: null,
    ariaOwns: _r,
    ariaPlaceholder: null,
    ariaPosInSet: In,
    ariaPressed: gn,
    ariaReadOnly: gn,
    ariaRelevant: null,
    ariaRequired: gn,
    ariaRoleDescription: _r,
    ariaRowCount: In,
    ariaRowIndex: In,
    ariaRowSpan: In,
    ariaSelected: gn,
    ariaSetSize: In,
    ariaSort: null,
    ariaValueMax: In,
    ariaValueMin: In,
    ariaValueNow: In,
    ariaValueText: null,
    role: null
  }
});
function s2(e, t) {
  return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
}
var la = Wn, l2 = Ja, u2 = O1, Ze = la.boolean, c2 = la.overloadedBoolean, Aa = la.booleanish, yt = la.number, pn = la.spaceSeparated, Ei = la.commaSeparated, d2 = l2({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: u2,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: Ei,
    acceptCharset: pn,
    accessKey: pn,
    action: null,
    allow: null,
    allowFullScreen: Ze,
    allowPaymentRequest: Ze,
    allowUserMedia: Ze,
    alt: null,
    as: null,
    async: Ze,
    autoCapitalize: null,
    autoComplete: pn,
    autoFocus: Ze,
    autoPlay: Ze,
    capture: Ze,
    charSet: null,
    checked: Ze,
    cite: null,
    className: pn,
    cols: yt,
    colSpan: null,
    content: null,
    contentEditable: Aa,
    controls: Ze,
    controlsList: pn,
    coords: yt | Ei,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: Ze,
    defer: Ze,
    dir: null,
    dirName: null,
    disabled: Ze,
    download: c2,
    draggable: Aa,
    encType: null,
    enterKeyHint: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: Ze,
    formTarget: null,
    headers: pn,
    height: yt,
    hidden: Ze,
    high: yt,
    href: null,
    hrefLang: null,
    htmlFor: pn,
    httpEquiv: pn,
    id: null,
    imageSizes: null,
    imageSrcSet: Ei,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: Ze,
    itemId: null,
    itemProp: pn,
    itemRef: pn,
    itemScope: Ze,
    itemType: pn,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: Ze,
    low: yt,
    manifest: null,
    max: null,
    maxLength: yt,
    media: null,
    method: null,
    min: null,
    minLength: yt,
    multiple: Ze,
    muted: Ze,
    name: null,
    nonce: null,
    noModule: Ze,
    noValidate: Ze,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforePrint: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextMenu: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: Ze,
    optimum: yt,
    pattern: null,
    ping: pn,
    placeholder: null,
    playsInline: Ze,
    poster: null,
    preload: null,
    readOnly: Ze,
    referrerPolicy: null,
    rel: pn,
    required: Ze,
    reversed: Ze,
    rows: yt,
    rowSpan: yt,
    sandbox: pn,
    scope: null,
    scoped: Ze,
    seamless: Ze,
    selected: Ze,
    shape: null,
    size: yt,
    sizes: null,
    slot: null,
    span: yt,
    spellCheck: Aa,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: Ei,
    start: yt,
    step: null,
    style: null,
    tabIndex: yt,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: Ze,
    useMap: null,
    value: Aa,
    width: yt,
    wrap: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: pn,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: yt,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: yt,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: Ze,
    // Lists. Use CSS to reduce space between items instead
    declare: Ze,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: yt,
    // `<img>` and `<object>`
    leftMargin: yt,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: yt,
    // `<body>`
    marginWidth: yt,
    // `<body>`
    noResize: Ze,
    // `<frame>`
    noHref: Ze,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: Ze,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: Ze,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: yt,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: Aa,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: yt,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: yt,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: Ze,
    disableRemotePlayback: Ze,
    prefix: null,
    property: null,
    results: yt,
    security: null,
    unselectable: null
  }
}), p2 = BO, f2 = WO, m2 = XO, g2 = a2, h2 = o2, b2 = d2, E2 = p2([m2, f2, g2, h2, b2]), y2 = _f, v2 = k1, T2 = I1, Rf = "data", S2 = x2, _2 = /^data[-\w.:]+$/i, L1 = /-[a-z]/g, A2 = /[A-Z]/g;
function x2(e, t) {
  var n = y2(t), r = t, a = T2;
  return n in e.normal ? e.property[e.normal[n]] : (n.length > 4 && n.slice(0, 4) === Rf && _2.test(t) && (t.charAt(4) === "-" ? r = R2(t) : t = I2(t), a = v2), new a(r, t));
}
function R2(e) {
  var t = e.slice(5).replace(L1, C2);
  return Rf + t.charAt(0).toUpperCase() + t.slice(1);
}
function I2(e) {
  var t = e.slice(4);
  return L1.test(t) ? e : (t = t.replace(A2, w2), t.charAt(0) !== "-" && (t = "-" + t), Rf + t);
}
function w2(e) {
  return "-" + e.toLowerCase();
}
function C2(e) {
  return e.charAt(1).toUpperCase();
}
var k2 = N2, Pg = /[#.]/g;
function N2(e, t) {
  for (var n = e || "", r = t || "div", a = {}, i = 0, o, s, l; i < n.length; )
    Pg.lastIndex = i, l = Pg.exec(n), o = n.slice(i, l ? l.index : n.length), o && (s ? s === "#" ? a.id = o : a.className ? a.className.push(o) : a.className = [o] : r = o, i += o.length), l && (s = l[0], i++);
  return { type: "element", tagName: r, properties: a, children: [] };
}
var If = {};
If.parse = D2;
If.stringify = M2;
var Fg = "", O2 = " ", L2 = /[ \t\n\r\f]+/g;
function D2(e) {
  var t = String(e || Fg).trim();
  return t === Fg ? [] : t.split(L2);
}
function M2(e) {
  return e.join(O2).trim();
}
var wf = {};
wf.parse = P2;
wf.stringify = F2;
var Lp = ",", Bg = " ", Ca = "";
function P2(e) {
  for (var t = [], n = String(e || Ca), r = n.indexOf(Lp), a = 0, i = !1, o; !i; )
    r === -1 && (r = n.length, i = !0), o = n.slice(a, r).trim(), (o || !i) && t.push(o), a = r + 1, r = n.indexOf(Lp, a);
  return t;
}
function F2(e, t) {
  var n = t || {}, r = n.padLeft === !1 ? Ca : Bg, a = n.padRight ? Bg : Ca;
  return e[e.length - 1] === Ca && (e = e.concat(Ca)), e.join(a + Lp + r).trim();
}
var B2 = S2, Ug = _f, U2 = k2, jg = If.parse, Hg = wf.parse, j2 = q2, H2 = {}.hasOwnProperty;
function q2(e, t, n) {
  var r = n ? W2(n) : null;
  return a;
  function a(o, s) {
    var l = U2(o, t), u = Array.prototype.slice.call(arguments, 2), c = l.tagName.toLowerCase(), d;
    if (l.tagName = r && H2.call(r, c) ? r[c] : c, s && $2(s, l) && (u.unshift(s), s = null), s)
      for (d in s)
        i(l.properties, d, s[d]);
    return D1(l.children, u), l.tagName === "template" && (l.content = { type: "root", children: l.children }, l.children = []), l;
  }
  function i(o, s, l) {
    var u, c, d;
    l == null || l !== l || (u = B2(e, s), c = u.property, d = l, typeof d == "string" && (u.spaceSeparated ? d = jg(d) : u.commaSeparated ? d = Hg(d) : u.commaOrSpaceSeparated && (d = jg(Hg(d).join(" ")))), c === "style" && typeof l != "string" && (d = V2(d)), c === "className" && o.className && (d = o.className.concat(d)), o[c] = G2(u, c, d));
  }
}
function $2(e, t) {
  return typeof e == "string" || "length" in e || z2(t.tagName, e);
}
function z2(e, t) {
  var n = t.type;
  return e === "input" || !n || typeof n != "string" ? !1 : typeof t.children == "object" && "length" in t.children ? !0 : (n = n.toLowerCase(), e === "button" ? n !== "menu" && n !== "submit" && n !== "reset" && n !== "button" : "value" in t);
}
function D1(e, t) {
  var n, r;
  if (typeof t == "string" || typeof t == "number") {
    e.push({ type: "text", value: String(t) });
    return;
  }
  if (typeof t == "object" && "length" in t) {
    for (n = -1, r = t.length; ++n < r; )
      D1(e, t[n]);
    return;
  }
  if (typeof t != "object" || !("type" in t))
    throw new Error("Expected node, nodes, or string, got `" + t + "`");
  e.push(t);
}
function G2(e, t, n) {
  var r, a, i;
  if (typeof n != "object" || !("length" in n))
    return qg(e, t, n);
  for (a = n.length, r = -1, i = []; ++r < a; )
    i[r] = qg(e, t, n[r]);
  return i;
}
function qg(e, t, n) {
  var r = n;
  return e.number || e.positiveNumber ? !isNaN(r) && r !== "" && (r = Number(r)) : (e.boolean || e.overloadedBoolean) && typeof r == "string" && (r === "" || Ug(n) === Ug(t)) && (r = !0), r;
}
function V2(e) {
  var t = [], n;
  for (n in e)
    t.push([n, e[n]].join(": "));
  return t.join("; ");
}
function W2(e) {
  for (var t = e.length, n = -1, r = {}, a; ++n < t; )
    a = e[n], r[a.toLowerCase()] = a;
  return r;
}
var Y2 = E2, K2 = j2, M1 = K2(Y2, "div");
M1.displayName = "html";
var X2 = M1, Z2 = X2;
const Q2 = "Æ", J2 = "&", eL = "Á", tL = "Â", nL = "À", rL = "Å", aL = "Ã", iL = "Ä", oL = "©", sL = "Ç", lL = "Ð", uL = "É", cL = "Ê", dL = "È", pL = "Ë", fL = ">", mL = "Í", gL = "Î", hL = "Ì", bL = "Ï", EL = "<", yL = "Ñ", vL = "Ó", TL = "Ô", SL = "Ò", _L = "Ø", AL = "Õ", xL = "Ö", RL = '"', IL = "®", wL = "Þ", CL = "Ú", kL = "Û", NL = "Ù", OL = "Ü", LL = "Ý", DL = "á", ML = "â", PL = "´", FL = "æ", BL = "à", UL = "&", jL = "å", HL = "ã", qL = "ä", $L = "¦", zL = "ç", GL = "¸", VL = "¢", WL = "©", YL = "¤", KL = "°", XL = "÷", ZL = "é", QL = "ê", JL = "è", eD = "ð", tD = "ë", nD = "½", rD = "¼", aD = "¾", iD = ">", oD = "í", sD = "î", lD = "¡", uD = "ì", cD = "¿", dD = "ï", pD = "«", fD = "<", mD = "¯", gD = "µ", hD = "·", bD = " ", ED = "¬", yD = "ñ", vD = "ó", TD = "ô", SD = "ò", _D = "ª", AD = "º", xD = "ø", RD = "õ", ID = "ö", wD = "¶", CD = "±", kD = "£", ND = '"', OD = "»", LD = "®", DD = "§", MD = "­", PD = "¹", FD = "²", BD = "³", UD = "ß", jD = "þ", HD = "×", qD = "ú", $D = "û", zD = "ù", GD = "¨", VD = "ü", WD = "ý", YD = "¥", KD = "ÿ", XD = {
  AElig: Q2,
  AMP: J2,
  Aacute: eL,
  Acirc: tL,
  Agrave: nL,
  Aring: rL,
  Atilde: aL,
  Auml: iL,
  COPY: oL,
  Ccedil: sL,
  ETH: lL,
  Eacute: uL,
  Ecirc: cL,
  Egrave: dL,
  Euml: pL,
  GT: fL,
  Iacute: mL,
  Icirc: gL,
  Igrave: hL,
  Iuml: bL,
  LT: EL,
  Ntilde: yL,
  Oacute: vL,
  Ocirc: TL,
  Ograve: SL,
  Oslash: _L,
  Otilde: AL,
  Ouml: xL,
  QUOT: RL,
  REG: IL,
  THORN: wL,
  Uacute: CL,
  Ucirc: kL,
  Ugrave: NL,
  Uuml: OL,
  Yacute: LL,
  aacute: DL,
  acirc: ML,
  acute: PL,
  aelig: FL,
  agrave: BL,
  amp: UL,
  aring: jL,
  atilde: HL,
  auml: qL,
  brvbar: $L,
  ccedil: zL,
  cedil: GL,
  cent: VL,
  copy: WL,
  curren: YL,
  deg: KL,
  divide: XL,
  eacute: ZL,
  ecirc: QL,
  egrave: JL,
  eth: eD,
  euml: tD,
  frac12: nD,
  frac14: rD,
  frac34: aD,
  gt: iD,
  iacute: oD,
  icirc: sD,
  iexcl: lD,
  igrave: uD,
  iquest: cD,
  iuml: dD,
  laquo: pD,
  lt: fD,
  macr: mD,
  micro: gD,
  middot: hD,
  nbsp: bD,
  not: ED,
  ntilde: yD,
  oacute: vD,
  ocirc: TD,
  ograve: SD,
  ordf: _D,
  ordm: AD,
  oslash: xD,
  otilde: RD,
  ouml: ID,
  para: wD,
  plusmn: CD,
  pound: kD,
  quot: ND,
  raquo: OD,
  reg: LD,
  sect: DD,
  shy: MD,
  sup1: PD,
  sup2: FD,
  sup3: BD,
  szlig: UD,
  thorn: jD,
  times: HD,
  uacute: qD,
  ucirc: $D,
  ugrave: zD,
  uml: GD,
  uuml: VD,
  yacute: WD,
  yen: YD,
  yuml: KD
}, ZD = {
  0: "�",
  128: "€",
  130: "‚",
  131: "ƒ",
  132: "„",
  133: "…",
  134: "†",
  135: "‡",
  136: "ˆ",
  137: "‰",
  138: "Š",
  139: "‹",
  140: "Œ",
  142: "Ž",
  145: "‘",
  146: "’",
  147: "“",
  148: "”",
  149: "•",
  150: "–",
  151: "—",
  152: "˜",
  153: "™",
  154: "š",
  155: "›",
  156: "œ",
  158: "ž",
  159: "Ÿ"
};
var P1 = QD;
function QD(e) {
  var t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 48 && t <= 57;
}
var JD = e3;
function e3(e) {
  var t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 102 || t >= 65 && t <= 70 || t >= 48 && t <= 57;
}
var t3 = n3;
function n3(e) {
  var t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 122 || t >= 65 && t <= 90;
}
var r3 = t3, a3 = P1, i3 = o3;
function o3(e) {
  return r3(e) || a3(e);
}
var yi, s3 = 59, l3 = u3;
function u3(e) {
  var t = "&" + e + ";", n;
  return yi = yi || document.createElement("i"), yi.innerHTML = t, n = yi.textContent, n.charCodeAt(n.length - 1) === s3 && e !== "semi" || n === t ? !1 : n;
}
var $g = XD, zg = ZD, c3 = P1, d3 = JD, F1 = i3, p3 = l3, f3 = R3, m3 = {}.hasOwnProperty, Vr = String.fromCharCode, g3 = Function.prototype, Gg = {
  warning: null,
  reference: null,
  text: null,
  warningContext: null,
  referenceContext: null,
  textContext: null,
  position: {},
  additional: null,
  attribute: !1,
  nonTerminated: !0
}, h3 = 9, Vg = 10, b3 = 12, E3 = 32, Wg = 38, y3 = 59, v3 = 60, T3 = 61, S3 = 35, _3 = 88, A3 = 120, x3 = 65533, Kr = "named", Cf = "hexadecimal", kf = "decimal", Nf = {};
Nf[Cf] = 16;
Nf[kf] = 10;
var to = {};
to[Kr] = F1;
to[kf] = c3;
to[Cf] = d3;
var B1 = 1, U1 = 2, j1 = 3, H1 = 4, q1 = 5, Dp = 6, $1 = 7, mr = {};
mr[B1] = "Named character references must be terminated by a semicolon";
mr[U1] = "Numeric character references must be terminated by a semicolon";
mr[j1] = "Named character references cannot be empty";
mr[H1] = "Numeric character references cannot be empty";
mr[q1] = "Named character references must be known";
mr[Dp] = "Numeric character references cannot be disallowed";
mr[$1] = "Numeric character references cannot be outside the permissible Unicode range";
function R3(e, t) {
  var n = {}, r, a;
  t || (t = {});
  for (a in Gg)
    r = t[a], n[a] = r ?? Gg[a];
  return (n.position.indent || n.position.start) && (n.indent = n.position.indent || [], n.position = n.position.start), I3(e, n);
}
function I3(e, t) {
  var n = t.additional, r = t.nonTerminated, a = t.text, i = t.reference, o = t.warning, s = t.textContext, l = t.referenceContext, u = t.warningContext, c = t.position, d = t.indent || [], m = e.length, f = 0, h = -1, E = c.column || 1, I = c.line || 1, x = "", v = [], S, g, y, T, j, $, D, w, G, Q, z, ce, ae, K, he, ye, Te, A, re;
  for (typeof n == "string" && (n = n.charCodeAt(0)), ye = se(), w = o ? M : g3, f--, m++; ++f < m; )
    if (j === Vg && (E = d[h] || 1), j = e.charCodeAt(f), j === Wg) {
      if (D = e.charCodeAt(f + 1), D === h3 || D === Vg || D === b3 || D === E3 || D === Wg || D === v3 || D !== D || n && D === n) {
        x += Vr(j), E++;
        continue;
      }
      for (ae = f + 1, ce = ae, re = ae, D === S3 ? (re = ++ce, D = e.charCodeAt(re), D === _3 || D === A3 ? (K = Cf, re = ++ce) : K = kf) : K = Kr, S = "", z = "", T = "", he = to[K], re--; ++re < m && (D = e.charCodeAt(re), !!he(D)); )
        T += Vr(D), K === Kr && m3.call($g, T) && (S = T, z = $g[T]);
      y = e.charCodeAt(re) === y3, y && (re++, g = K === Kr ? p3(T) : !1, g && (S = T, z = g)), A = 1 + re - ae, !y && !r || (T ? K === Kr ? (y && !z ? w(q1, 1) : (S !== T && (re = ce + S.length, A = 1 + re - ce, y = !1), y || (G = S ? B1 : j1, t.attribute ? (D = e.charCodeAt(re), D === T3 ? (w(G, A), z = null) : F1(D) ? z = null : w(G, A)) : w(G, A))), $ = z) : (y || w(U1, A), $ = parseInt(T, Nf[K]), w3($) ? (w($1, A), $ = Vr(x3)) : $ in zg ? (w(Dp, A), $ = zg[$]) : (Q = "", C3($) && w(Dp, A), $ > 65535 && ($ -= 65536, Q += Vr($ >>> 10 | 55296), $ = 56320 | $ & 1023), $ = Q + Vr($))) : K !== Kr && w(H1, A)), $ ? (me(), ye = se(), f = re - 1, E += re - ae + 1, v.push($), Te = se(), Te.offset++, i && i.call(
        l,
        $,
        { start: ye, end: Te },
        e.slice(ae - 1, re)
      ), ye = Te) : (T = e.slice(ae - 1, re), x += T, E += T.length, f = re - 1);
    } else
      j === 10 && (I++, h++, E = 0), j === j ? (x += Vr(j), E++) : me();
  return v.join("");
  function se() {
    return {
      line: I,
      column: E,
      offset: f + (c.offset || 0)
    };
  }
  function M(we, pe) {
    var Ie = se();
    Ie.column += pe, Ie.offset += pe, o.call(u, mr[we], Ie, we);
  }
  function me() {
    x && (v.push(x), a && a.call(s, x, { start: ye, end: se() }), x = "");
  }
}
function w3(e) {
  return e >= 55296 && e <= 57343 || e > 1114111;
}
function C3(e) {
  return e >= 1 && e <= 8 || e === 11 || e >= 13 && e <= 31 || e >= 127 && e <= 159 || e >= 64976 && e <= 65007 || (e & 65535) === 65535 || (e & 65535) === 65534;
}
var z1 = { exports: {} };
(function(e) {
  var t = typeof window < "u" ? window : typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope ? self : {};
  /**
   * Prism: Lightweight, robust, elegant syntax highlighting
   *
   * @license MIT <https://opensource.org/licenses/MIT>
   * @author Lea Verou <https://lea.verou.me>
   * @namespace
   * @public
   */
  var n = function(r) {
    var a = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i, i = 0, o = {}, s = {
      /**
       * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the
       * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load
       * additional languages or plugins yourself.
       *
       * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.
       *
       * You obviously have to change this value before the automatic highlighting started. To do this, you can add an
       * empty Prism object into the global scope before loading the Prism script like this:
       *
       * ```js
       * window.Prism = window.Prism || {};
       * Prism.manual = true;
       * // add a new <script> to load Prism's script
       * ```
       *
       * @default false
       * @type {boolean}
       * @memberof Prism
       * @public
       */
      manual: r.Prism && r.Prism.manual,
      /**
       * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses
       * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your
       * own worker, you don't want it to do this.
       *
       * By setting this value to `true`, Prism will not add its own listeners to the worker.
       *
       * You obviously have to change this value before Prism executes. To do this, you can add an
       * empty Prism object into the global scope before loading the Prism script like this:
       *
       * ```js
       * window.Prism = window.Prism || {};
       * Prism.disableWorkerMessageHandler = true;
       * // Load Prism's script
       * ```
       *
       * @default false
       * @type {boolean}
       * @memberof Prism
       * @public
       */
      disableWorkerMessageHandler: r.Prism && r.Prism.disableWorkerMessageHandler,
      /**
       * A namespace for utility methods.
       *
       * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
       * change or disappear at any time.
       *
       * @namespace
       * @memberof Prism
       */
      util: {
        encode: function v(S) {
          return S instanceof l ? new l(S.type, v(S.content), S.alias) : Array.isArray(S) ? S.map(v) : S.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
        },
        /**
         * Returns the name of the type of the given value.
         *
         * @param {any} o
         * @returns {string}
         * @example
         * type(null)      === 'Null'
         * type(undefined) === 'Undefined'
         * type(123)       === 'Number'
         * type('foo')     === 'String'
         * type(true)      === 'Boolean'
         * type([1, 2])    === 'Array'
         * type({})        === 'Object'
         * type(String)    === 'Function'
         * type(/abc+/)    === 'RegExp'
         */
        type: function(v) {
          return Object.prototype.toString.call(v).slice(8, -1);
        },
        /**
         * Returns a unique number for the given object. Later calls will still return the same number.
         *
         * @param {Object} obj
         * @returns {number}
         */
        objId: function(v) {
          return v.__id || Object.defineProperty(v, "__id", { value: ++i }), v.__id;
        },
        /**
         * Creates a deep clone of the given object.
         *
         * The main intended use of this function is to clone language definitions.
         *
         * @param {T} o
         * @param {Record<number, any>} [visited]
         * @returns {T}
         * @template T
         */
        clone: function v(S, g) {
          g = g || {};
          var y, T;
          switch (s.util.type(S)) {
            case "Object":
              if (T = s.util.objId(S), g[T])
                return g[T];
              y = /** @type {Record<string, any>} */
              {}, g[T] = y;
              for (var j in S)
                S.hasOwnProperty(j) && (y[j] = v(S[j], g));
              return (
                /** @type {any} */
                y
              );
            case "Array":
              return T = s.util.objId(S), g[T] ? g[T] : (y = [], g[T] = y, /** @type {Array} */
              /** @type {any} */
              S.forEach(function($, D) {
                y[D] = v($, g);
              }), /** @type {any} */
              y);
            default:
              return S;
          }
        },
        /**
         * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
         *
         * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
         *
         * @param {Element} element
         * @returns {string}
         */
        getLanguage: function(v) {
          for (; v; ) {
            var S = a.exec(v.className);
            if (S)
              return S[1].toLowerCase();
            v = v.parentElement;
          }
          return "none";
        },
        /**
         * Sets the Prism `language-xxxx` class of the given element.
         *
         * @param {Element} element
         * @param {string} language
         * @returns {void}
         */
        setLanguage: function(v, S) {
          v.className = v.className.replace(RegExp(a, "gi"), ""), v.classList.add("language-" + S);
        },
        /**
         * Returns the script element that is currently executing.
         *
         * This does __not__ work for line script element.
         *
         * @returns {HTMLScriptElement | null}
         */
        currentScript: function() {
          if (typeof document > "u")
            return null;
          if ("currentScript" in document)
            return (
              /** @type {any} */
              document.currentScript
            );
          try {
            throw new Error();
          } catch (y) {
            var v = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(y.stack) || [])[1];
            if (v) {
              var S = document.getElementsByTagName("script");
              for (var g in S)
                if (S[g].src == v)
                  return S[g];
            }
            return null;
          }
        },
        /**
         * Returns whether a given class is active for `element`.
         *
         * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
         * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
         * given class is just the given class with a `no-` prefix.
         *
         * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
         * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
         * ancestors have the given class or the negated version of it, then the default activation will be returned.
         *
         * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
         * version of it, the class is considered active.
         *
         * @param {Element} element
         * @param {string} className
         * @param {boolean} [defaultActivation=false]
         * @returns {boolean}
         */
        isActive: function(v, S, g) {
          for (var y = "no-" + S; v; ) {
            var T = v.classList;
            if (T.contains(S))
              return !0;
            if (T.contains(y))
              return !1;
            v = v.parentElement;
          }
          return !!g;
        }
      },
      /**
       * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
       *
       * @namespace
       * @memberof Prism
       * @public
       */
      languages: {
        /**
         * The grammar for plain, unformatted text.
         */
        plain: o,
        plaintext: o,
        text: o,
        txt: o,
        /**
         * Creates a deep copy of the language with the given id and appends the given tokens.
         *
         * If a token in `redef` also appears in the copied language, then the existing token in the copied language
         * will be overwritten at its original position.
         *
         * ## Best practices
         *
         * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
         * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
         * understand the language definition because, normally, the order of tokens matters in Prism grammars.
         *
         * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
         * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
         *
         * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
         * @param {Grammar} redef The new tokens to append.
         * @returns {Grammar} The new language created.
         * @public
         * @example
         * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
         *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
         *     // at its original position
         *     'comment': { ... },
         *     // CSS doesn't have a 'color' token, so this token will be appended
         *     'color': /\b(?:red|green|blue)\b/
         * });
         */
        extend: function(v, S) {
          var g = s.util.clone(s.languages[v]);
          for (var y in S)
            g[y] = S[y];
          return g;
        },
        /**
         * Inserts tokens _before_ another token in a language definition or any other grammar.
         *
         * ## Usage
         *
         * This helper method makes it easy to modify existing languages. For example, the CSS language definition
         * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
         * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
         * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
         * this:
         *
         * ```js
         * Prism.languages.markup.style = {
         *     // token
         * };
         * ```
         *
         * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
         * before existing tokens. For the CSS example above, you would use it like this:
         *
         * ```js
         * Prism.languages.insertBefore('markup', 'cdata', {
         *     'style': {
         *         // token
         *     }
         * });
         * ```
         *
         * ## Special cases
         *
         * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
         * will be ignored.
         *
         * This behavior can be used to insert tokens after `before`:
         *
         * ```js
         * Prism.languages.insertBefore('markup', 'comment', {
         *     'comment': Prism.languages.markup.comment,
         *     // tokens after 'comment'
         * });
         * ```
         *
         * ## Limitations
         *
         * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
         * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
         * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
         * deleting properties which is necessary to insert at arbitrary positions.
         *
         * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
         * Instead, it will create a new object and replace all references to the target object with the new one. This
         * can be done without temporarily deleting properties, so the iteration order is well-defined.
         *
         * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
         * you hold the target object in a variable, then the value of the variable will not change.
         *
         * ```js
         * var oldMarkup = Prism.languages.markup;
         * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
         *
         * assert(oldMarkup !== Prism.languages.markup);
         * assert(newMarkup === Prism.languages.markup);
         * ```
         *
         * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
         * object to be modified.
         * @param {string} before The key to insert before.
         * @param {Grammar} insert An object containing the key-value pairs to be inserted.
         * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
         * object to be modified.
         *
         * Defaults to `Prism.languages`.
         * @returns {Grammar} The new grammar object.
         * @public
         */
        insertBefore: function(v, S, g, y) {
          y = y || /** @type {any} */
          s.languages;
          var T = y[v], j = {};
          for (var $ in T)
            if (T.hasOwnProperty($)) {
              if ($ == S)
                for (var D in g)
                  g.hasOwnProperty(D) && (j[D] = g[D]);
              g.hasOwnProperty($) || (j[$] = T[$]);
            }
          var w = y[v];
          return y[v] = j, s.languages.DFS(s.languages, function(G, Q) {
            Q === w && G != v && (this[G] = j);
          }), j;
        },
        // Traverse a language definition with Depth First Search
        DFS: function v(S, g, y, T) {
          T = T || {};
          var j = s.util.objId;
          for (var $ in S)
            if (S.hasOwnProperty($)) {
              g.call(S, $, S[$], y || $);
              var D = S[$], w = s.util.type(D);
              w === "Object" && !T[j(D)] ? (T[j(D)] = !0, v(D, g, null, T)) : w === "Array" && !T[j(D)] && (T[j(D)] = !0, v(D, g, $, T));
            }
        }
      },
      plugins: {},
      /**
       * This is the most high-level function in Prism’s API.
       * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on
       * each one of them.
       *
       * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.
       *
       * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.
       * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.
       * @memberof Prism
       * @public
       */
      highlightAll: function(v, S) {
        s.highlightAllUnder(document, v, S);
      },
      /**
       * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls
       * {@link Prism.highlightElement} on each one of them.
       *
       * The following hooks will be run:
       * 1. `before-highlightall`
       * 2. `before-all-elements-highlight`
       * 3. All hooks of {@link Prism.highlightElement} for each element.
       *
       * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.
       * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.
       * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.
       * @memberof Prism
       * @public
       */
      highlightAllUnder: function(v, S, g) {
        var y = {
          callback: g,
          container: v,
          selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
        };
        s.hooks.run("before-highlightall", y), y.elements = Array.prototype.slice.apply(y.container.querySelectorAll(y.selector)), s.hooks.run("before-all-elements-highlight", y);
        for (var T = 0, j; j = y.elements[T++]; )
          s.highlightElement(j, S === !0, y.callback);
      },
      /**
       * Highlights the code inside a single element.
       *
       * The following hooks will be run:
       * 1. `before-sanity-check`
       * 2. `before-highlight`
       * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.
       * 4. `before-insert`
       * 5. `after-highlight`
       * 6. `complete`
       *
       * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for
       * the element's language.
       *
       * @param {Element} element The element containing the code.
       * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.
       * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers
       * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is
       * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).
       *
       * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for
       * asynchronous highlighting to work. You can build your own bundle on the
       * [Download page](https://prismjs.com/download.html).
       * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.
       * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.
       * @memberof Prism
       * @public
       */
      highlightElement: function(v, S, g) {
        var y = s.util.getLanguage(v), T = s.languages[y];
        s.util.setLanguage(v, y);
        var j = v.parentElement;
        j && j.nodeName.toLowerCase() === "pre" && s.util.setLanguage(j, y);
        var $ = v.textContent, D = {
          element: v,
          language: y,
          grammar: T,
          code: $
        };
        function w(Q) {
          D.highlightedCode = Q, s.hooks.run("before-insert", D), D.element.innerHTML = D.highlightedCode, s.hooks.run("after-highlight", D), s.hooks.run("complete", D), g && g.call(D.element);
        }
        if (s.hooks.run("before-sanity-check", D), j = D.element.parentElement, j && j.nodeName.toLowerCase() === "pre" && !j.hasAttribute("tabindex") && j.setAttribute("tabindex", "0"), !D.code) {
          s.hooks.run("complete", D), g && g.call(D.element);
          return;
        }
        if (s.hooks.run("before-highlight", D), !D.grammar) {
          w(s.util.encode(D.code));
          return;
        }
        if (S && r.Worker) {
          var G = new Worker(s.filename);
          G.onmessage = function(Q) {
            w(Q.data);
          }, G.postMessage(JSON.stringify({
            language: D.language,
            code: D.code,
            immediateClose: !0
          }));
        } else
          w(s.highlight(D.code, D.grammar, D.language));
      },
      /**
       * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
       * and the language definitions to use, and returns a string with the HTML produced.
       *
       * The following hooks will be run:
       * 1. `before-tokenize`
       * 2. `after-tokenize`
       * 3. `wrap`: On each {@link Token}.
       *
       * @param {string} text A string with the code to be highlighted.
       * @param {Grammar} grammar An object containing the tokens to use.
       *
       * Usually a language definition like `Prism.languages.markup`.
       * @param {string} language The name of the language definition passed to `grammar`.
       * @returns {string} The highlighted HTML.
       * @memberof Prism
       * @public
       * @example
       * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
       */
      highlight: function(v, S, g) {
        var y = {
          code: v,
          grammar: S,
          language: g
        };
        if (s.hooks.run("before-tokenize", y), !y.grammar)
          throw new Error('The language "' + y.language + '" has no grammar.');
        return y.tokens = s.tokenize(y.code, y.grammar), s.hooks.run("after-tokenize", y), l.stringify(s.util.encode(y.tokens), y.language);
      },
      /**
       * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
       * and the language definitions to use, and returns an array with the tokenized code.
       *
       * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
       *
       * This method could be useful in other contexts as well, as a very crude parser.
       *
       * @param {string} text A string with the code to be highlighted.
       * @param {Grammar} grammar An object containing the tokens to use.
       *
       * Usually a language definition like `Prism.languages.markup`.
       * @returns {TokenStream} An array of strings and tokens, a token stream.
       * @memberof Prism
       * @public
       * @example
       * let code = `var foo = 0;`;
       * let tokens = Prism.tokenize(code, Prism.languages.javascript);
       * tokens.forEach(token => {
       *     if (token instanceof Prism.Token && token.type === 'number') {
       *         console.log(`Found numeric literal: ${token.content}`);
       *     }
       * });
       */
      tokenize: function(v, S) {
        var g = S.rest;
        if (g) {
          for (var y in g)
            S[y] = g[y];
          delete S.rest;
        }
        var T = new d();
        return m(T, T.head, v), c(v, T, S, T.head, 0), h(T);
      },
      /**
       * @namespace
       * @memberof Prism
       * @public
       */
      hooks: {
        all: {},
        /**
         * Adds the given callback to the list of callbacks for the given hook.
         *
         * The callback will be invoked when the hook it is registered for is run.
         * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
         *
         * One callback function can be registered to multiple hooks and the same hook multiple times.
         *
         * @param {string} name The name of the hook.
         * @param {HookCallback} callback The callback function which is given environment variables.
         * @public
         */
        add: function(v, S) {
          var g = s.hooks.all;
          g[v] = g[v] || [], g[v].push(S);
        },
        /**
         * Runs a hook invoking all registered callbacks with the given environment variables.
         *
         * Callbacks will be invoked synchronously and in the order in which they were registered.
         *
         * @param {string} name The name of the hook.
         * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
         * @public
         */
        run: function(v, S) {
          var g = s.hooks.all[v];
          if (!(!g || !g.length))
            for (var y = 0, T; T = g[y++]; )
              T(S);
        }
      },
      Token: l
    };
    r.Prism = s;
    function l(v, S, g, y) {
      this.type = v, this.content = S, this.alias = g, this.length = (y || "").length | 0;
    }
    l.stringify = function v(S, g) {
      if (typeof S == "string")
        return S;
      if (Array.isArray(S)) {
        var y = "";
        return S.forEach(function(w) {
          y += v(w, g);
        }), y;
      }
      var T = {
        type: S.type,
        content: v(S.content, g),
        tag: "span",
        classes: ["token", S.type],
        attributes: {},
        language: g
      }, j = S.alias;
      j && (Array.isArray(j) ? Array.prototype.push.apply(T.classes, j) : T.classes.push(j)), s.hooks.run("wrap", T);
      var $ = "";
      for (var D in T.attributes)
        $ += " " + D + '="' + (T.attributes[D] || "").replace(/"/g, "&quot;") + '"';
      return "<" + T.tag + ' class="' + T.classes.join(" ") + '"' + $ + ">" + T.content + "</" + T.tag + ">";
    };
    function u(v, S, g, y) {
      v.lastIndex = S;
      var T = v.exec(g);
      if (T && y && T[1]) {
        var j = T[1].length;
        T.index += j, T[0] = T[0].slice(j);
      }
      return T;
    }
    function c(v, S, g, y, T, j) {
      for (var $ in g)
        if (!(!g.hasOwnProperty($) || !g[$])) {
          var D = g[$];
          D = Array.isArray(D) ? D : [D];
          for (var w = 0; w < D.length; ++w) {
            if (j && j.cause == $ + "," + w)
              return;
            var G = D[w], Q = G.inside, z = !!G.lookbehind, ce = !!G.greedy, ae = G.alias;
            if (ce && !G.pattern.global) {
              var K = G.pattern.toString().match(/[imsuy]*$/)[0];
              G.pattern = RegExp(G.pattern.source, K + "g");
            }
            for (var he = G.pattern || G, ye = y.next, Te = T; ye !== S.tail && !(j && Te >= j.reach); Te += ye.value.length, ye = ye.next) {
              var A = ye.value;
              if (S.length > v.length)
                return;
              if (!(A instanceof l)) {
                var re = 1, se;
                if (ce) {
                  if (se = u(he, Te, v, z), !se || se.index >= v.length)
                    break;
                  var pe = se.index, M = se.index + se[0].length, me = Te;
                  for (me += ye.value.length; pe >= me; )
                    ye = ye.next, me += ye.value.length;
                  if (me -= ye.value.length, Te = me, ye.value instanceof l)
                    continue;
                  for (var we = ye; we !== S.tail && (me < M || typeof we.value == "string"); we = we.next)
                    re++, me += we.value.length;
                  re--, A = v.slice(Te, me), se.index -= Te;
                } else if (se = u(he, 0, A, z), !se)
                  continue;
                var pe = se.index, Ie = se[0], Re = A.slice(0, pe), be = A.slice(pe + Ie.length), ve = Te + A.length;
                j && ve > j.reach && (j.reach = ve);
                var He = ye.prev;
                Re && (He = m(S, He, Re), Te += Re.length), f(S, He, re);
                var Se = new l($, Q ? s.tokenize(Ie, Q) : Ie, ae, Ie);
                if (ye = m(S, He, Se), be && m(S, ye, be), re > 1) {
                  var Ke = {
                    cause: $ + "," + w,
                    reach: ve
                  };
                  c(v, S, g, ye.prev, Te, Ke), j && Ke.reach > j.reach && (j.reach = Ke.reach);
                }
              }
            }
          }
        }
    }
    function d() {
      var v = { value: null, prev: null, next: null }, S = { value: null, prev: v, next: null };
      v.next = S, this.head = v, this.tail = S, this.length = 0;
    }
    function m(v, S, g) {
      var y = S.next, T = { value: g, prev: S, next: y };
      return S.next = T, y.prev = T, v.length++, T;
    }
    function f(v, S, g) {
      for (var y = S.next, T = 0; T < g && y !== v.tail; T++)
        y = y.next;
      S.next = y, y.prev = S, v.length -= T;
    }
    function h(v) {
      for (var S = [], g = v.head.next; g !== v.tail; )
        S.push(g.value), g = g.next;
      return S;
    }
    if (!r.document)
      return r.addEventListener && (s.disableWorkerMessageHandler || r.addEventListener("message", function(v) {
        var S = JSON.parse(v.data), g = S.language, y = S.code, T = S.immediateClose;
        r.postMessage(s.highlight(y, s.languages[g], g)), T && r.close();
      }, !1)), s;
    var E = s.util.currentScript();
    E && (s.filename = E.src, E.hasAttribute("data-manual") && (s.manual = !0));
    function I() {
      s.manual || s.highlightAll();
    }
    if (!s.manual) {
      var x = document.readyState;
      x === "loading" || x === "interactive" && E && E.defer ? document.addEventListener("DOMContentLoaded", I) : window.requestAnimationFrame ? window.requestAnimationFrame(I) : window.setTimeout(I, 16);
    }
    return s;
  }(t);
  e.exports && (e.exports = n), typeof mn < "u" && (mn.Prism = n);
})(z1);
var k3 = z1.exports, N3 = Of;
Of.displayName = "markup";
Of.aliases = ["html", "mathml", "svg", "xml", "ssml", "atom", "rss"];
function Of(e) {
  e.languages.markup = {
    comment: {
      pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
      greedy: !0
    },
    prolog: {
      pattern: /<\?[\s\S]+?\?>/,
      greedy: !0
    },
    doctype: {
      // https://www.w3.org/TR/xml/#NT-doctypedecl
      pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
      greedy: !0,
      inside: {
        "internal-subset": {
          pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
          lookbehind: !0,
          greedy: !0,
          inside: null
          // see below
        },
        string: {
          pattern: /"[^"]*"|'[^']*'/,
          greedy: !0
        },
        punctuation: /^<!|>$|[[\]]/,
        "doctype-tag": /^DOCTYPE/i,
        name: /[^\s<>'"]+/
      }
    },
    cdata: {
      pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
      greedy: !0
    },
    tag: {
      pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
      greedy: !0,
      inside: {
        tag: {
          pattern: /^<\/?[^\s>\/]+/,
          inside: {
            punctuation: /^<\/?/,
            namespace: /^[^\s>\/:]+:/
          }
        },
        "special-attr": [],
        "attr-value": {
          pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
          inside: {
            punctuation: [
              {
                pattern: /^=/,
                alias: "attr-equals"
              },
              /"|'/
            ]
          }
        },
        punctuation: /\/?>/,
        "attr-name": {
          pattern: /[^\s>\/]+/,
          inside: {
            namespace: /^[^\s>\/:]+:/
          }
        }
      }
    },
    entity: [
      {
        pattern: /&[\da-z]{1,8};/i,
        alias: "named-entity"
      },
      /&#x?[\da-f]{1,8};/i
    ]
  }, e.languages.markup.tag.inside["attr-value"].inside.entity = e.languages.markup.entity, e.languages.markup.doctype.inside["internal-subset"].inside = e.languages.markup, e.hooks.add("wrap", function(t) {
    t.type === "entity" && (t.attributes.title = t.content.value.replace(/&amp;/, "&"));
  }), Object.defineProperty(e.languages.markup.tag, "addInlined", {
    /**
     * Adds an inlined language to markup.
     *
     * An example of an inlined language is CSS with `<style>` tags.
     *
     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
     * case insensitive.
     * @param {string} lang The language key.
     * @example
     * addInlined('style', 'css');
     */
    value: function(n, r) {
      var a = {};
      a["language-" + r] = {
        pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
        lookbehind: !0,
        inside: e.languages[r]
      }, a.cdata = /^<!\[CDATA\[|\]\]>$/i;
      var i = {
        "included-cdata": {
          pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
          inside: a
        }
      };
      i["language-" + r] = {
        pattern: /[\s\S]+/,
        inside: e.languages[r]
      };
      var o = {};
      o[n] = {
        pattern: RegExp(
          /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(
            /__/g,
            function() {
              return n;
            }
          ),
          "i"
        ),
        lookbehind: !0,
        greedy: !0,
        inside: i
      }, e.languages.insertBefore("markup", "cdata", o);
    }
  }), Object.defineProperty(e.languages.markup.tag, "addAttribute", {
    /**
     * Adds an pattern to highlight languages embedded in HTML attributes.
     *
     * An example of an inlined language is CSS with `style` attributes.
     *
     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as
     * case insensitive.
     * @param {string} lang The language key.
     * @example
     * addAttribute('style', 'css');
     */
    value: function(t, n) {
      e.languages.markup.tag.inside["special-attr"].push({
        pattern: RegExp(
          /(^|["'\s])/.source + "(?:" + t + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,
          "i"
        ),
        lookbehind: !0,
        inside: {
          "attr-name": /^[^\s=]+/,
          "attr-value": {
            pattern: /=[\s\S]+/,
            inside: {
              value: {
                pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                lookbehind: !0,
                alias: [n, "language-" + n],
                inside: e.languages[n]
              },
              punctuation: [
                {
                  pattern: /^=/,
                  alias: "attr-equals"
                },
                /"|'/
              ]
            }
          }
        }
      });
    }
  }), e.languages.html = e.languages.markup, e.languages.mathml = e.languages.markup, e.languages.svg = e.languages.markup, e.languages.xml = e.languages.extend("markup", {}), e.languages.ssml = e.languages.xml, e.languages.atom = e.languages.xml, e.languages.rss = e.languages.xml;
}
var O3 = Lf;
Lf.displayName = "css";
Lf.aliases = [];
function Lf(e) {
  (function(t) {
    var n = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
    t.languages.css = {
      comment: /\/\*[\s\S]*?\*\//,
      atrule: {
        pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
        inside: {
          rule: /^@[\w-]+/,
          "selector-function-argument": {
            pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
            lookbehind: !0,
            alias: "selector"
          },
          keyword: {
            pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
            lookbehind: !0
          }
          // See rest below
        }
      },
      url: {
        // https://drafts.csswg.org/css-values-3/#urls
        pattern: RegExp(
          "\\burl\\((?:" + n.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)",
          "i"
        ),
        greedy: !0,
        inside: {
          function: /^url/i,
          punctuation: /^\(|\)$/,
          string: {
            pattern: RegExp("^" + n.source + "$"),
            alias: "url"
          }
        }
      },
      selector: {
        pattern: RegExp(
          `(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + n.source + ")*(?=\\s*\\{)"
        ),
        lookbehind: !0
      },
      string: {
        pattern: n,
        greedy: !0
      },
      property: {
        pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
        lookbehind: !0
      },
      important: /!important\b/i,
      function: {
        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
        lookbehind: !0
      },
      punctuation: /[(){};:,]/
    }, t.languages.css.atrule.inside.rest = t.languages.css;
    var r = t.languages.markup;
    r && (r.tag.addInlined("style", "css"), r.tag.addAttribute("style", "css"));
  })(e);
}
var L3 = Df;
Df.displayName = "clike";
Df.aliases = [];
function Df(e) {
  e.languages.clike = {
    comment: [
      {
        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
        lookbehind: !0,
        greedy: !0
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: !0,
        greedy: !0
      }
    ],
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: !0
    },
    "class-name": {
      pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
      lookbehind: !0,
      inside: {
        punctuation: /[.\\]/
      }
    },
    keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
    boolean: /\b(?:false|true)\b/,
    function: /\b\w+(?=\()/,
    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
    punctuation: /[{}[\];(),.:]/
  };
}
var D3 = Mf;
Mf.displayName = "javascript";
Mf.aliases = ["js"];
function Mf(e) {
  e.languages.javascript = e.languages.extend("clike", {
    "class-name": [
      e.languages.clike["class-name"],
      {
        pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
        lookbehind: !0
      }
    ],
    keyword: [
      {
        pattern: /((?:^|\})\s*)catch\b/,
        lookbehind: !0
      },
      {
        pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
        lookbehind: !0
      }
    ],
    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
    function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
    number: {
      pattern: RegExp(
        /(^|[^\w$])/.source + "(?:" + // constant
        (/NaN|Infinity/.source + "|" + // binary integer
        /0[bB][01]+(?:_[01]+)*n?/.source + "|" + // octal integer
        /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + // hexadecimal integer
        /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + // decimal bigint
        /\d+(?:_\d+)*n/.source + "|" + // decimal number (integer or float) but no bigint
        /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source
      ),
      lookbehind: !0
    },
    operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
  }), e.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/, e.languages.insertBefore("javascript", "keyword", {
    regex: {
      // eslint-disable-next-line regexp/no-dupe-characters-character-class
      pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
      lookbehind: !0,
      greedy: !0,
      inside: {
        "regex-source": {
          pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
          lookbehind: !0,
          alias: "language-regex",
          inside: e.languages.regex
        },
        "regex-delimiter": /^\/|\/$/,
        "regex-flags": /^[a-z]+$/
      }
    },
    // This must be declared before keyword because we use "function" inside the look-forward
    "function-variable": {
      pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
      alias: "function"
    },
    parameter: [
      {
        pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
        lookbehind: !0,
        inside: e.languages.javascript
      },
      {
        pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
        lookbehind: !0,
        inside: e.languages.javascript
      },
      {
        pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
        lookbehind: !0,
        inside: e.languages.javascript
      },
      {
        pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
        lookbehind: !0,
        inside: e.languages.javascript
      }
    ],
    constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
  }), e.languages.insertBefore("javascript", "string", {
    hashbang: {
      pattern: /^#!.*/,
      greedy: !0,
      alias: "comment"
    },
    "template-string": {
      pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
      greedy: !0,
      inside: {
        "template-punctuation": {
          pattern: /^`|`$/,
          alias: "string"
        },
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
          lookbehind: !0,
          inside: {
            "interpolation-punctuation": {
              pattern: /^\$\{|\}$/,
              alias: "punctuation"
            },
            rest: e.languages.javascript
          }
        },
        string: /[\s\S]+/
      }
    },
    "string-property": {
      pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
      lookbehind: !0,
      greedy: !0,
      alias: "property"
    }
  }), e.languages.insertBefore("javascript", "operator", {
    "literal-property": {
      pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
      lookbehind: !0,
      alias: "property"
    }
  }), e.languages.markup && (e.languages.markup.tag.addInlined("script", "javascript"), e.languages.markup.tag.addAttribute(
    /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,
    "javascript"
  )), e.languages.js = e.languages.javascript;
}
var ka = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof mn == "object" ? mn : {}, M3 = Z3();
ka.Prism = { manual: !0, disableWorkerMessageHandler: !0 };
var P3 = Z2, F3 = f3, G1 = k3, B3 = N3, U3 = O3, j3 = L3, H3 = D3;
M3();
var Pf = {}.hasOwnProperty;
function V1() {
}
V1.prototype = G1;
var Ft = new V1(), q3 = Ft;
Ft.highlight = z3;
Ft.register = ei;
Ft.alias = $3;
Ft.registered = G3;
Ft.listLanguages = V3;
ei(B3);
ei(U3);
ei(j3);
ei(H3);
Ft.util.encode = K3;
Ft.Token.stringify = W3;
function ei(e) {
  if (typeof e != "function" || !e.displayName)
    throw new Error("Expected `function` for `grammar`, got `" + e + "`");
  Ft.languages[e.displayName] === void 0 && e(Ft);
}
function $3(e, t) {
  var n = Ft.languages, r = e, a, i, o, s;
  t && (r = {}, r[e] = t);
  for (a in r)
    for (i = r[a], i = typeof i == "string" ? [i] : i, o = i.length, s = -1; ++s < o; )
      n[i[s]] = n[a];
}
function z3(e, t) {
  var n = G1.highlight, r;
  if (typeof e != "string")
    throw new Error("Expected `string` for `value`, got `" + e + "`");
  if (Ft.util.type(t) === "Object")
    r = t, t = null;
  else {
    if (typeof t != "string")
      throw new Error("Expected `string` for `name`, got `" + t + "`");
    if (Pf.call(Ft.languages, t))
      r = Ft.languages[t];
    else
      throw new Error("Unknown language: `" + t + "` is not registered");
  }
  return n.call(this, e, r, t);
}
function G3(e) {
  if (typeof e != "string")
    throw new Error("Expected `string` for `language`, got `" + e + "`");
  return Pf.call(Ft.languages, e);
}
function V3() {
  var e = Ft.languages, t = [], n;
  for (n in e)
    Pf.call(e, n) && typeof e[n] == "object" && t.push(n);
  return t;
}
function W3(e, t, n) {
  var r;
  return typeof e == "string" ? { type: "text", value: e } : Ft.util.type(e) === "Array" ? Y3(e, t) : (r = {
    type: e.type,
    content: Ft.Token.stringify(e.content, t, n),
    tag: "span",
    classes: ["token", e.type],
    attributes: {},
    language: t,
    parent: n
  }, e.alias && (r.classes = r.classes.concat(e.alias)), Ft.hooks.run("wrap", r), P3(
    r.tag + "." + r.classes.join("."),
    X3(r.attributes),
    r.content
  ));
}
function Y3(e, t) {
  for (var n = [], r = e.length, a = -1, i; ++a < r; )
    i = e[a], i !== "" && i !== null && i !== void 0 && n.push(i);
  for (a = -1, r = n.length; ++a < r; )
    i = n[a], n[a] = Ft.Token.stringify(i, t, n);
  return n;
}
function K3(e) {
  return e;
}
function X3(e) {
  var t;
  for (t in e)
    e[t] = F3(e[t]);
  return e;
}
function Z3() {
  var e = "Prism" in ka, t = e ? ka.Prism : void 0;
  return n;
  function n() {
    e ? ka.Prism = t : delete ka.Prism, e = void 0, t = void 0;
  }
}
const Q3 = {
  'code[class*="language-"]': {
    color: "black",
    background: "none",
    textShadow: "0 1px white",
    fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    fontSize: "1em",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    wordWrap: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none"
  },
  'pre[class*="language-"]': {
    color: "black",
    background: "#f5f2f0",
    textShadow: "0 1px white",
    fontFamily: "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    fontSize: "1em",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    wordWrap: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none",
    padding: "1em",
    margin: ".5em 0",
    overflow: "auto"
  },
  'pre[class*="language-"]::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"] ::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"]::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"] ::-moz-selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"]::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'pre[class*="language-"] ::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"]::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  'code[class*="language-"] ::selection': {
    textShadow: "none",
    background: "#b3d4fc"
  },
  ':not(pre) > code[class*="language-"]': {
    background: "#f5f2f0",
    padding: ".1em",
    borderRadius: ".3em",
    whiteSpace: "normal"
  },
  comment: {
    color: "slategray"
  },
  prolog: {
    color: "slategray"
  },
  doctype: {
    color: "slategray"
  },
  cdata: {
    color: "slategray"
  },
  punctuation: {
    color: "#999"
  },
  namespace: {
    Opacity: ".7"
  },
  property: {
    color: "#905"
  },
  tag: {
    color: "#905"
  },
  boolean: {
    color: "#905"
  },
  number: {
    color: "#905"
  },
  constant: {
    color: "#905"
  },
  symbol: {
    color: "#905"
  },
  deleted: {
    color: "#905"
  },
  selector: {
    color: "#690"
  },
  "attr-name": {
    color: "#690"
  },
  string: {
    color: "#690"
  },
  char: {
    color: "#690"
  },
  builtin: {
    color: "#690"
  },
  inserted: {
    color: "#690"
  },
  operator: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  entity: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)",
    cursor: "help"
  },
  url: {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  ".language-css .token.string": {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  ".style .token.string": {
    color: "#9a6e3a",
    background: "hsla(0, 0%, 100%, .5)"
  },
  atrule: {
    color: "#07a"
  },
  "attr-value": {
    color: "#07a"
  },
  keyword: {
    color: "#07a"
  },
  function: {
    color: "#DD4A68"
  },
  "class-name": {
    color: "#DD4A68"
  },
  regex: {
    color: "#e90"
  },
  important: {
    color: "#e90",
    fontWeight: "bold"
  },
  variable: {
    color: "#e90"
  },
  bold: {
    fontWeight: "bold"
  },
  italic: {
    fontStyle: "italic"
  }
};
var Ko, Yg;
function J3() {
  if (Yg) return Ko;
  Yg = 1, Ko = e, e.displayName = "abap", e.aliases = [];
  function e(t) {
    t.languages.abap = {
      comment: /^\*.*/m,
      string: /(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      "string-template": {
        pattern: /([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/,
        lookbehind: !0,
        alias: "string"
      },
      /* End Of Line comments should not interfere with strings when the
      quote character occurs within them. We assume a string being highlighted
      inside an EOL comment is more acceptable than the opposite.
      */
      "eol-comment": {
        pattern: /(^|\s)".*/m,
        lookbehind: !0,
        alias: "comment"
      },
      keyword: {
        pattern: /(\s|\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\/MM\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\/DD\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\/MM\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\/DD\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\b/i,
        lookbehind: !0
      },
      /* Numbers can be only integers. Decimal or Hex appear only as strings */
      number: /\b\d+\b/,
      /* Operators must always be surrounded by whitespace, they cannot be put
      adjacent to operands.
      */
      operator: {
        pattern: /(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/,
        lookbehind: !0
      },
      "string-operator": {
        pattern: /(\s)&&?(?=\s)/,
        lookbehind: !0,
        /* The official editor highlights */
        alias: "keyword"
      },
      "token-operator": [
        {
          /* Special operators used to access structure components, class methods/attributes, etc. */
          pattern: /(\w)(?:->?|=>|[~|{}])(?=\w)/,
          lookbehind: !0,
          alias: "punctuation"
        },
        {
          /* Special tokens used do delimit string templates */
          pattern: /[|{}]/,
          alias: "punctuation"
        }
      ],
      punctuation: /[,.:()]/
    };
  }
  return Ko;
}
var Xo, Kg;
function eM() {
  if (Kg) return Xo;
  Kg = 1, Xo = e, e.displayName = "abnf", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = "(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";
      n.languages.abnf = {
        comment: /;.*/,
        string: {
          pattern: /(?:%[is])?"[^"\n\r]*"/,
          greedy: !0,
          inside: {
            punctuation: /^%[is]/
          }
        },
        range: {
          pattern: /%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i,
          alias: "number"
        },
        terminal: {
          pattern: /%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i,
          alias: "number"
        },
        repetition: {
          pattern: /(^|[^\w-])(?:\d*\*\d*|\d+)/,
          lookbehind: !0,
          alias: "operator"
        },
        definition: {
          pattern: /(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m,
          lookbehind: !0,
          alias: "keyword",
          inside: {
            punctuation: /<|>/
          }
        },
        "core-rule": {
          pattern: RegExp(
            "(?:(^|[^<\\w-])" + r + "|<" + r + ">)(?![\\w-])",
            "i"
          ),
          lookbehind: !0,
          alias: ["rule", "constant"],
          inside: {
            punctuation: /<|>/
          }
        },
        rule: {
          pattern: /(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i,
          lookbehind: !0,
          inside: {
            punctuation: /<|>/
          }
        },
        operator: /=\/?|\//,
        punctuation: /[()\[\]]/
      };
    })(t);
  }
  return Xo;
}
var Zo, Xg;
function tM() {
  if (Xg) return Zo;
  Xg = 1, Zo = e, e.displayName = "actionscript", e.aliases = [];
  function e(t) {
    t.languages.actionscript = t.languages.extend("javascript", {
      keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,
      operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
    }), t.languages.actionscript["class-name"].alias = "function", delete t.languages.actionscript.parameter, delete t.languages.actionscript["literal-property"], t.languages.markup && t.languages.insertBefore("actionscript", "string", {
      xml: {
        pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
        lookbehind: !0,
        inside: t.languages.markup
      }
    });
  }
  return Zo;
}
var Qo, Zg;
function nM() {
  if (Zg) return Qo;
  Zg = 1, Qo = e, e.displayName = "ada", e.aliases = [];
  function e(t) {
    t.languages.ada = {
      comment: /--.*/,
      string: /"(?:""|[^"\r\f\n])*"/,
      number: [
        {
          pattern: /\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i
        },
        {
          pattern: /\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i
        }
      ],
      "attr-name": /\b'\w+/,
      keyword: /\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,
      boolean: /\b(?:false|true)\b/i,
      operator: /<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,
      punctuation: /\.\.?|[,;():]/,
      char: /'.'/,
      variable: /\b[a-z](?:\w)*\b/i
    };
  }
  return Qo;
}
var Jo, Qg;
function rM() {
  if (Qg) return Jo;
  Qg = 1, Jo = e, e.displayName = "agda", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.agda = {
        comment: /\{-[\s\S]*?(?:-\}|$)|--.*/,
        string: {
          pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
          greedy: !0
        },
        punctuation: /[(){}⦃⦄.;@]/,
        "class-name": {
          pattern: /((?:data|record) +)\S+/,
          lookbehind: !0
        },
        function: {
          pattern: /(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m,
          lookbehind: !0
        },
        operator: {
          pattern: /(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/,
          lookbehind: !0
        },
        keyword: /\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/
      };
    })(t);
  }
  return Jo;
}
var es, Jg;
function aM() {
  if (Jg) return es;
  Jg = 1, es = e, e.displayName = "al", e.aliases = [];
  function e(t) {
    t.languages.al = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
        greedy: !0
      },
      function: {
        pattern: /(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i,
        lookbehind: !0
      },
      keyword: [
        // keywords
        /\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,
        // objects and metadata that are used like keywords
        /\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i
      ],
      number: /\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,
      boolean: /\b(?:false|true)\b/i,
      variable: /\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,
      "class-name": /\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,
      operator: /\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,
      punctuation: /[()\[\]{}:.;,]/
    };
  }
  return es;
}
var ts, eh;
function iM() {
  if (eh) return ts;
  eh = 1, ts = e, e.displayName = "antlr4", e.aliases = ["g4"];
  function e(t) {
    t.languages.antlr4 = {
      comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
      string: {
        pattern: /'(?:\\.|[^\\'\r\n])*'/,
        greedy: !0
      },
      "character-class": {
        pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
        greedy: !0,
        alias: "regex",
        inside: {
          range: {
            pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,
            lookbehind: !0,
            alias: "punctuation"
          },
          escape: /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
          punctuation: /[\[\]]/
        }
      },
      action: {
        pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
        greedy: !0,
        inside: {
          content: {
            // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to
            pattern: /(\{)[\s\S]+(?=\})/,
            lookbehind: !0
          },
          punctuation: /[{}]/
        }
      },
      command: {
        pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
        lookbehind: !0,
        inside: {
          function: /\b\w+(?=\s*(?:[,(]|$))/,
          punctuation: /[,()]/
        }
      },
      annotation: {
        pattern: /@\w+(?:::\w+)*/,
        alias: "keyword"
      },
      label: {
        pattern: /#[ \t]*\w+/,
        alias: "punctuation"
      },
      keyword: /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
      definition: [
        {
          pattern: /\b[a-z]\w*(?=\s*:)/,
          alias: ["rule", "class-name"]
        },
        {
          pattern: /\b[A-Z]\w*(?=\s*:)/,
          alias: ["token", "constant"]
        }
      ],
      constant: /\b[A-Z][A-Z_]*\b/,
      operator: /\.\.|->|[|~]|[*+?]\??/,
      punctuation: /[;:()=]/
    }, t.languages.g4 = t.languages.antlr4;
  }
  return ts;
}
var ns, th;
function oM() {
  if (th) return ns;
  th = 1, ns = e, e.displayName = "apacheconf", e.aliases = [];
  function e(t) {
    t.languages.apacheconf = {
      comment: /#.*/,
      "directive-inline": {
        pattern: /(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,
        lookbehind: !0,
        alias: "property"
      },
      "directive-block": {
        pattern: /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,
        inside: {
          "directive-block": {
            pattern: /^<\/?\w+/,
            inside: {
              punctuation: /^<\/?/
            },
            alias: "tag"
          },
          "directive-block-parameter": {
            pattern: /.*[^>]/,
            inside: {
              punctuation: /:/,
              string: {
                pattern: /("|').*\1/,
                inside: {
                  variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
                }
              }
            },
            alias: "attr-value"
          },
          punctuation: />/
        },
        alias: "tag"
      },
      "directive-flags": {
        pattern: /\[(?:[\w=],?)+\]/,
        alias: "keyword"
      },
      string: {
        pattern: /("|').*\1/,
        inside: {
          variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
        }
      },
      variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/,
      regex: /\^?.*\$|\^.*\$?/
    };
  }
  return ns;
}
var rs, nh;
function Ff() {
  if (nh) return rs;
  nh = 1, rs = e, e.displayName = "sql", e.aliases = [];
  function e(t) {
    t.languages.sql = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
        lookbehind: !0
      },
      variable: [
        {
          pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
          greedy: !0
        },
        /@[\w.$]+/
      ],
      string: {
        pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
        greedy: !0,
        lookbehind: !0
      },
      identifier: {
        pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /^`|`$/
        }
      },
      function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
      // Should we highlight user defined functions too?
      keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
      boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
      number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
      operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
      punctuation: /[;[\]()`,.]/
    };
  }
  return rs;
}
var as, rh;
function sM() {
  if (rh) return as;
  rh = 1;
  var e = Ff();
  as = t, t.displayName = "apex", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = /\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i, i = /\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(
        /<keyword>/g,
        function() {
          return a.source;
        }
      );
      function o(l) {
        return RegExp(
          l.replace(/<CLASS-NAME>/g, function() {
            return i;
          }),
          "i"
        );
      }
      var s = {
        keyword: a,
        punctuation: /[()\[\]{};,:.<>]/
      };
      r.languages.apex = {
        comment: r.languages.clike.comment,
        string: r.languages.clike.string,
        sql: {
          pattern: /((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i,
          lookbehind: !0,
          greedy: !0,
          alias: "language-sql",
          inside: r.languages.sql
        },
        annotation: {
          pattern: /@\w+\b/,
          alias: "punctuation"
        },
        "class-name": [
          {
            pattern: o(
              /(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source
            ),
            lookbehind: !0,
            inside: s
          },
          {
            // cast
            pattern: o(
              /(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source
            ),
            lookbehind: !0,
            inside: s
          },
          {
            // variable/parameter declaration and return types
            pattern: o(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source),
            inside: s
          }
        ],
        trigger: {
          pattern: /(\btrigger\s+)\w+\b/i,
          lookbehind: !0,
          alias: "class-name"
        },
        keyword: a,
        function: /\b[a-z_]\w*(?=\s*\()/i,
        boolean: /\b(?:false|true)\b/i,
        number: /(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,
        operator: /[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,
        punctuation: /[()\[\]{};,.]/
      };
    }(n);
  }
  return as;
}
var is, ah;
function lM() {
  if (ah) return is;
  ah = 1, is = e, e.displayName = "apl", e.aliases = [];
  function e(t) {
    t.languages.apl = {
      comment: /(?:⍝|#[! ]).*$/m,
      string: {
        pattern: /'(?:[^'\r\n]|'')*'/,
        greedy: !0
      },
      number: /¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,
      statement: /:[A-Z][a-z][A-Za-z]*\b/,
      "system-function": {
        pattern: /⎕[A-Z]+/i,
        alias: "function"
      },
      constant: /[⍬⌾#⎕⍞]/,
      function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,
      "monadic-operator": {
        pattern: /[\\\/⌿⍀¨⍨⌶&∥]/,
        alias: "operator"
      },
      "dyadic-operator": {
        pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,
        alias: "operator"
      },
      assignment: {
        pattern: /←/,
        alias: "keyword"
      },
      punctuation: /[\[;\]()◇⋄]/,
      dfn: {
        pattern: /[{}⍺⍵⍶⍹∇⍫:]/,
        alias: "builtin"
      }
    };
  }
  return is;
}
var os, ih;
function uM() {
  if (ih) return os;
  ih = 1, os = e, e.displayName = "applescript", e.aliases = [];
  function e(t) {
    t.languages.applescript = {
      comment: [
        // Allow one level of nesting
        /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
        /--.+/,
        /#.+/
      ],
      string: /"(?:\\.|[^"\\\r\n])*"/,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,
      operator: [
        /[&=≠≤≥*+\-\/÷^]|[<>]=?/,
        /\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/
      ],
      keyword: /\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,
      "class-name": /\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,
      punctuation: /[{}():,¬«»《》]/
    };
  }
  return os;
}
var ss, oh;
function cM() {
  if (oh) return ss;
  oh = 1, ss = e, e.displayName = "aql", e.aliases = [];
  function e(t) {
    t.languages.aql = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      property: {
        pattern: /([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
        greedy: !0
      },
      identifier: {
        pattern: /([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
        greedy: !0
      },
      variable: /@@?\w+/,
      keyword: [
        {
          pattern: /(\bWITH\s+)COUNT(?=\s+INTO\b)/i,
          lookbehind: !0
        },
        /\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,
        // pseudo keywords get a lookbehind to avoid false positives
        {
          pattern: /(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/,
          lookbehind: !0
        },
        {
          pattern: /\bOPTIONS(?=\s*\{)/i
        }
      ],
      function: /\b(?!\d)\w+(?=\s*\()/,
      boolean: /\b(?:false|true)\b/i,
      range: {
        pattern: /\.\./,
        alias: "operator"
      },
      number: [
        /\b0b[01]+/i,
        /\b0x[0-9a-f]+/i,
        /(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i
      ],
      operator: /\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,
      punctuation: /::|[?.:,;()[\]{}]/
    };
  }
  return ss;
}
var ls, sh;
function Mr() {
  if (sh) return ls;
  sh = 1, ls = e, e.displayName = "c", e.aliases = [];
  function e(t) {
    t.languages.c = t.languages.extend("clike", {
      comment: {
        pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
        greedy: !0
      },
      string: {
        // https://en.cppreference.com/w/c/language/string_literal
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
        lookbehind: !0
      },
      keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
      operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
    }), t.languages.insertBefore("c", "string", {
      char: {
        // https://en.cppreference.com/w/c/language/character_constant
        pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
        greedy: !0
      }
    }), t.languages.insertBefore("c", "string", {
      macro: {
        // allow for multiline macro definitions
        // spaces after the # character compile fine with gcc
        pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
        lookbehind: !0,
        greedy: !0,
        alias: "property",
        inside: {
          string: [
            {
              // highlight the path of the include statement as a string
              pattern: /^(#\s*include\s*)<[^>]+>/,
              lookbehind: !0
            },
            t.languages.c.string
          ],
          char: t.languages.c.char,
          comment: t.languages.c.comment,
          "macro-name": [
            {
              pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
              lookbehind: !0
            },
            {
              pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
              lookbehind: !0,
              alias: "function"
            }
          ],
          // highlight macro directives as keywords
          directive: {
            pattern: /^(#\s*)[a-z]+/,
            lookbehind: !0,
            alias: "keyword"
          },
          "directive-hash": /^#/,
          punctuation: /##|\\(?=[\r\n])/,
          expression: {
            pattern: /\S[\s\S]*/,
            inside: t.languages.c
          }
        }
      }
    }), t.languages.insertBefore("c", "function", {
      // highlight predefined macros as constants
      constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
    }), delete t.languages.c.boolean;
  }
  return ls;
}
var us, lh;
function Bf() {
  if (lh) return us;
  lh = 1;
  var e = Mr();
  us = t, t.displayName = "cpp", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, i = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(
        /<keyword>/g,
        function() {
          return a.source;
        }
      );
      r.languages.cpp = r.languages.extend("c", {
        "class-name": [
          {
            pattern: RegExp(
              /(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(
                /<keyword>/g,
                function() {
                  return a.source;
                }
              )
            ),
            lookbehind: !0
          },
          // This is intended to capture the class name of method implementations like:
          //   void foo::bar() const {}
          // However! The `foo` in the above example could also be a namespace, so we only capture the class name if
          // it starts with an uppercase letter. This approximation should give decent results.
          /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
          // This will capture the class name before destructors like:
          //   Foo::~Foo() {}
          /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
          // This also intends to capture the class name of method implementations but here the class has template
          // parameters, so it can't be a namespace (until C++ adds generic namespaces).
          /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
        ],
        keyword: a,
        number: {
          pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
          greedy: !0
        },
        operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
        boolean: /\b(?:false|true)\b/
      }), r.languages.insertBefore("cpp", "string", {
        module: {
          // https://en.cppreference.com/w/cpp/language/modules
          pattern: RegExp(
            /(\b(?:import|module)\s+)/.source + "(?:" + // header-name
            /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + // module name or partition or both
            /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(
              /<mod-name>/g,
              function() {
                return i;
              }
            ) + ")"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            string: /^[<"][\s\S]+/,
            operator: /:/,
            punctuation: /\./
          }
        },
        "raw-string": {
          pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
          alias: "string",
          greedy: !0
        }
      }), r.languages.insertBefore("cpp", "keyword", {
        "generic-function": {
          pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
          inside: {
            function: /^\w+/,
            generic: {
              pattern: /<[\s\S]+/,
              alias: "class-name",
              inside: r.languages.cpp
            }
          }
        }
      }), r.languages.insertBefore("cpp", "operator", {
        "double-colon": {
          pattern: /::/,
          alias: "punctuation"
        }
      }), r.languages.insertBefore("cpp", "class-name", {
        // the base clause is an optional list of parent classes
        // https://en.cppreference.com/w/cpp/language/class
        "base-clause": {
          pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
          lookbehind: !0,
          greedy: !0,
          inside: r.languages.extend("cpp", {})
        }
      }), r.languages.insertBefore(
        "inside",
        "double-colon",
        {
          // All untokenized words that are not namespaces should be class names
          "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
        },
        r.languages.cpp["base-clause"]
      );
    }(n);
  }
  return us;
}
var cs, uh;
function dM() {
  if (uh) return cs;
  uh = 1;
  var e = Bf();
  cs = t, t.displayName = "arduino", t.aliases = ["ino"];
  function t(n) {
    n.register(e), n.languages.arduino = n.languages.extend("cpp", {
      keyword: /\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,
      constant: /\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,
      builtin: /\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/
    }), n.languages.ino = n.languages.arduino;
  }
  return cs;
}
var ds, ch;
function pM() {
  if (ch) return ds;
  ch = 1, ds = e, e.displayName = "arff", e.aliases = [];
  function e(t) {
    t.languages.arff = {
      comment: /%.*/,
      string: {
        pattern: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: /@(?:attribute|data|end|relation)\b/i,
      number: /\b\d+(?:\.\d+)?\b/,
      punctuation: /[{},]/
    };
  }
  return ds;
}
var ps, dh;
function fM() {
  if (dh) return ps;
  dh = 1, ps = e, e.displayName = "asciidoc", e.aliases = ["adoc"];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,
        lookbehind: !0,
        inside: {
          quoted: {
            pattern: /([$`])(?:(?!\1)[^\\]|\\.)*\1/,
            inside: {
              punctuation: /^[$`]|[$`]$/
            }
          },
          interpreted: {
            pattern: /'(?:[^'\\]|\\.)*'/,
            inside: {
              punctuation: /^'|'$/
              // See rest below
            }
          },
          string: /"(?:[^"\\]|\\.)*"/,
          variable: /\w+(?==)/,
          punctuation: /^\[|\]$|,/,
          operator: /=/,
          // The negative look-ahead prevents blank matches
          "attr-value": /(?!^\s+$).+/
        }
      }, a = n.languages.asciidoc = {
        "comment-block": {
          pattern: /^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m,
          alias: "comment"
        },
        table: {
          pattern: /^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,
          inside: {
            specifiers: {
              pattern: /(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,
              alias: "attr-value"
            },
            punctuation: {
              pattern: /(^|[^\\])[|!]=*/,
              lookbehind: !0
            }
            // See rest below
          }
        },
        "passthrough-block": {
          pattern: /^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^\++|\++$/
            // See rest below
          }
        },
        // Literal blocks and listing blocks
        "literal-block": {
          pattern: /^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^(?:-+|\.+)|(?:-+|\.+)$/
            // See rest below
          }
        },
        // Sidebar blocks, quote blocks, example blocks and open blocks
        "other-block": {
          pattern: /^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
          inside: {
            punctuation: /^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/
            // See rest below
          }
        },
        // list-punctuation and list-label must appear before indented-block
        "list-punctuation": {
          pattern: /(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,
          lookbehind: !0,
          alias: "punctuation"
        },
        "list-label": {
          pattern: /(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,
          lookbehind: !0,
          alias: "symbol"
        },
        "indented-block": {
          pattern: /((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,
          lookbehind: !0
        },
        comment: /^\/\/.*/m,
        title: {
          pattern: /^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,
          alias: "important",
          inside: {
            punctuation: /^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/
            // See rest below
          }
        },
        "attribute-entry": {
          pattern: /^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,
          alias: "tag"
        },
        attributes: r,
        hr: {
          pattern: /^'{3,}$/m,
          alias: "punctuation"
        },
        "page-break": {
          pattern: /^<{3,}$/m,
          alias: "punctuation"
        },
        admonition: {
          pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,
          alias: "keyword"
        },
        callout: [
          {
            pattern: /(^[ \t]*)<?\d*>/m,
            lookbehind: !0,
            alias: "symbol"
          },
          {
            pattern: /<\d+>/,
            alias: "symbol"
          }
        ],
        macro: {
          pattern: /\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
          inside: {
            function: /^[a-z\d-]+(?=:)/,
            punctuation: /^::?/,
            attributes: {
              pattern: /(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
              inside: r.inside
            }
          }
        },
        inline: {
          /*
          The initial look-behind prevents the highlighting of escaped quoted text.
          Quoted text can be multi-line but cannot span an empty line.
          All quoted text can have attributes before [foobar, 'foobar', baz="bar"].
          First, we handle the constrained quotes.
          Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.
          They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#
          Then we handle the unconstrained quotes.
          Those do not have the restrictions of the constrained quotes.
          They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))
          */
          pattern: /(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,
          lookbehind: !0,
          inside: {
            attributes: r,
            url: {
              pattern: /^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,
              inside: {
                punctuation: /^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/
              }
            },
            "attribute-ref": {
              pattern: /^\{.+\}$/,
              inside: {
                variable: {
                  pattern: /(^\{)[a-z\d,+_-]+/,
                  lookbehind: !0
                },
                operator: /^[=?!#%@$]|!(?=[:}])/,
                punctuation: /^\{|\}$|::?/
              }
            },
            italic: {
              pattern: /^(['_])[\s\S]+\1$/,
              inside: {
                punctuation: /^(?:''?|__?)|(?:''?|__?)$/
              }
            },
            bold: {
              pattern: /^\*[\s\S]+\*$/,
              inside: {
                punctuation: /^\*\*?|\*\*?$/
              }
            },
            punctuation: /^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/
          }
        },
        replacement: {
          pattern: /\((?:C|R|TM)\)/,
          alias: "builtin"
        },
        entity: /&#?[\da-z]{1,8};/i,
        "line-continuation": {
          pattern: /(^| )\+$/m,
          lookbehind: !0,
          alias: "punctuation"
        }
      };
      function i(o) {
        o = o.split(" ");
        for (var s = {}, l = 0, u = o.length; l < u; l++)
          s[o[l]] = a[o[l]];
        return s;
      }
      r.inside.interpreted.inside.rest = i(
        "macro inline replacement entity"
      ), a["passthrough-block"].inside.rest = i("macro"), a["literal-block"].inside.rest = i("callout"), a.table.inside.rest = i(
        "comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation"
      ), a["other-block"].inside.rest = i(
        "table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation"
      ), a.title.inside.rest = i(
        "macro inline replacement entity"
      ), n.hooks.add("wrap", function(o) {
        o.type === "entity" && (o.attributes.title = o.content.value.replace(/&amp;/, "&"));
      }), n.languages.adoc = n.languages.asciidoc;
    })(t);
  }
  return ps;
}
var fs, ph;
function mM() {
  if (ph) return fs;
  ph = 1, fs = e, e.displayName = "asm6502", e.aliases = [];
  function e(t) {
    t.languages.asm6502 = {
      comment: /;.*/,
      directive: {
        pattern: /\.\w+(?= )/,
        alias: "property"
      },
      string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      "op-code": {
        pattern: /\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,
        alias: "keyword"
      },
      "hex-number": {
        pattern: /#?\$[\da-f]{1,4}\b/i,
        alias: "number"
      },
      "binary-number": {
        pattern: /#?%[01]+\b/,
        alias: "number"
      },
      "decimal-number": {
        pattern: /#?\b\d+\b/,
        alias: "number"
      },
      register: {
        pattern: /\b[xya]\b/i,
        alias: "variable"
      },
      punctuation: /[(),:]/
    };
  }
  return fs;
}
var ms, fh;
function gM() {
  if (fh) return ms;
  fh = 1, ms = e, e.displayName = "asmatmel", e.aliases = [];
  function e(t) {
    t.languages.asmatmel = {
      comment: {
        pattern: /;.*/,
        greedy: !0
      },
      string: {
        pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      constant: /\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,
      directive: {
        pattern: /\.\w+(?= )/,
        alias: "property"
      },
      "r-register": {
        pattern: /\br(?:\d|[12]\d|3[01])\b/,
        alias: "variable"
      },
      "op-code": {
        pattern: /\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,
        alias: "keyword"
      },
      "hex-number": {
        pattern: /#?\$[\da-f]{2,4}\b/i,
        alias: "number"
      },
      "binary-number": {
        pattern: /#?%[01]+\b/,
        alias: "number"
      },
      "decimal-number": {
        pattern: /#?\b\d+\b/,
        alias: "number"
      },
      register: {
        pattern: /\b[acznvshtixy]\b/i,
        alias: "variable"
      },
      operator: />>=?|<<=?|&&?|\|\|?|[-+*/%&|^!=<>?]=?/,
      punctuation: /[(),:]/
    };
  }
  return ms;
}
var gs, mh;
function no() {
  if (mh) return gs;
  mh = 1, gs = e, e.displayName = "csharp", e.aliases = ["dotnet", "cs"];
  function e(t) {
    (function(n) {
      function r(re, se) {
        return re.replace(/<<(\d+)>>/g, function(M, me) {
          return "(?:" + se[+me] + ")";
        });
      }
      function a(re, se, M) {
        return RegExp(r(re, se), "");
      }
      function i(re, se) {
        for (var M = 0; M < se; M++)
          re = re.replace(/<<self>>/g, function() {
            return "(?:" + re + ")";
          });
        return re.replace(/<<self>>/g, "[^\\s\\S]");
      }
      var o = {
        // keywords which represent a return or variable type
        type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
        // keywords which are used to declare a type
        typeDeclaration: "class enum interface record struct",
        // contextual keywords
        // ("var" and "dynamic" are missing because they are used like types)
        contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
        // all other keywords
        other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
      };
      function s(re) {
        return "\\b(?:" + re.trim().replace(/ /g, "|") + ")\\b";
      }
      var l = s(
        o.typeDeclaration
      ), u = RegExp(
        s(
          o.type + " " + o.typeDeclaration + " " + o.contextual + " " + o.other
        )
      ), c = s(
        o.typeDeclaration + " " + o.contextual + " " + o.other
      ), d = s(
        o.type + " " + o.typeDeclaration + " " + o.other
      ), m = i(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2), f = i(/\((?:[^()]|<<self>>)*\)/.source, 2), h = /@?\b[A-Za-z_]\w*\b/.source, E = r(/<<0>>(?:\s*<<1>>)?/.source, [h, m]), I = r(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
        c,
        E
      ]), x = /\[\s*(?:,\s*)*\]/.source, v = r(
        /<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,
        [I, x]
      ), S = r(
        /[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,
        [m, f, x]
      ), g = r(/\(<<0>>+(?:,<<0>>+)+\)/.source, [S]), y = r(
        /(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source,
        [g, I, x]
      ), T = {
        keyword: u,
        punctuation: /[<>()?,.:[\]]/
      }, j = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source, $ = /"(?:\\.|[^\\"\r\n])*"/.source, D = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
      n.languages.csharp = n.languages.extend("clike", {
        string: [
          {
            pattern: a(/(^|[^$\\])<<0>>/.source, [D]),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: a(/(^|[^@$\\])<<0>>/.source, [$]),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "class-name": [
          {
            // Using static
            // using static System.Math;
            pattern: a(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [
              I
            ]),
            lookbehind: !0,
            inside: T
          },
          {
            // Using alias (type)
            // using Project = PC.MyCompany.Project;
            pattern: a(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [
              h,
              y
            ]),
            lookbehind: !0,
            inside: T
          },
          {
            // Using alias (alias)
            // using Project = PC.MyCompany.Project;
            pattern: a(/(\busing\s+)<<0>>(?=\s*=)/.source, [h]),
            lookbehind: !0
          },
          {
            // Type declarations
            // class Foo<A, B>
            // interface Foo<out A, B>
            pattern: a(/(\b<<0>>\s+)<<1>>/.source, [
              l,
              E
            ]),
            lookbehind: !0,
            inside: T
          },
          {
            // Single catch exception declaration
            // catch(Foo)
            // (things like catch(Foo e) is covered by variable declaration)
            pattern: a(/(\bcatch\s*\(\s*)<<0>>/.source, [I]),
            lookbehind: !0,
            inside: T
          },
          {
            // Name of the type parameter of generic constraints
            // where Foo : class
            pattern: a(/(\bwhere\s+)<<0>>/.source, [h]),
            lookbehind: !0
          },
          {
            // Casts and checks via as and is.
            // as Foo<A>, is Bar<B>
            // (things like if(a is Foo b) is covered by variable declaration)
            pattern: a(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [
              v
            ]),
            lookbehind: !0,
            inside: T
          },
          {
            // Variable, field and parameter declaration
            // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)
            pattern: a(
              /\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source,
              [y, d, h]
            ),
            inside: T
          }
        ],
        keyword: u,
        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals
        number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
        operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
        punctuation: /\?\.?|::|[{}[\];(),.:]/
      }), n.languages.insertBefore("csharp", "number", {
        range: {
          pattern: /\.\./,
          alias: "operator"
        }
      }), n.languages.insertBefore("csharp", "punctuation", {
        "named-parameter": {
          pattern: a(/([(,]\s*)<<0>>(?=\s*:)/.source, [h]),
          lookbehind: !0,
          alias: "punctuation"
        }
      }), n.languages.insertBefore("csharp", "class-name", {
        namespace: {
          // namespace Foo.Bar {}
          // using Foo.Bar;
          pattern: a(
            /(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source,
            [h]
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        "type-expression": {
          // default(Foo), typeof(Foo<Bar>), sizeof(int)
          pattern: a(
            /(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source,
            [f]
          ),
          lookbehind: !0,
          alias: "class-name",
          inside: T
        },
        "return-type": {
          // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0
          // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];
          // int Foo => 0; int Foo { get; set } = 0;
          pattern: a(
            /<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source,
            [y, I]
          ),
          inside: T,
          alias: "class-name"
        },
        "constructor-invocation": {
          // new List<Foo<Bar[]>> { }
          pattern: a(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [y]),
          lookbehind: !0,
          inside: T,
          alias: "class-name"
        },
        /*'explicit-implementation': {
        // int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();
        pattern: replace(/\b<<0>>(?=\.<<1>>)/, className, methodOrPropertyDeclaration),
        inside: classNameInside,
        alias: 'class-name'
        },*/
        "generic-method": {
          // foo<Bar>()
          pattern: a(/<<0>>\s*<<1>>(?=\s*\()/.source, [h, m]),
          inside: {
            function: a(/^<<0>>/.source, [h]),
            generic: {
              pattern: RegExp(m),
              alias: "class-name",
              inside: T
            }
          }
        },
        "type-list": {
          // The list of types inherited or of generic constraints
          // class Foo<F> : Bar, IList<FooBar>
          // where F : Bar, IList<int>
          pattern: a(
            /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source,
            [
              l,
              E,
              h,
              y,
              u.source,
              f,
              /\bnew\s*\(\s*\)/.source
            ]
          ),
          lookbehind: !0,
          inside: {
            "record-arguments": {
              pattern: a(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [
                E,
                f
              ]),
              lookbehind: !0,
              greedy: !0,
              inside: n.languages.csharp
            },
            keyword: u,
            "class-name": {
              pattern: RegExp(y),
              greedy: !0,
              inside: T
            },
            punctuation: /[,()]/
          }
        },
        preprocessor: {
          pattern: /(^[\t ]*)#.*/m,
          lookbehind: !0,
          alias: "property",
          inside: {
            // highlight preprocessor directives as keywords
            directive: {
              pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
              lookbehind: !0,
              alias: "keyword"
            }
          }
        }
      });
      var w = $ + "|" + j, G = r(
        /\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source,
        [w]
      ), Q = i(
        r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
          G
        ]),
        2
      ), z = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source, ce = r(/<<0>>(?:\s*\(<<1>>*\))?/.source, [
        I,
        Q
      ]);
      n.languages.insertBefore("csharp", "class-name", {
        attribute: {
          // Attributes
          // [Foo], [Foo(1), Bar(2, Prop = "foo")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]
          pattern: a(
            /((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source,
            [z, ce]
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            target: {
              pattern: a(/^<<0>>(?=\s*:)/.source, [z]),
              alias: "keyword"
            },
            "attribute-arguments": {
              pattern: a(/\(<<0>>*\)/.source, [Q]),
              inside: n.languages.csharp
            },
            "class-name": {
              pattern: RegExp(I),
              inside: {
                punctuation: /\./
              }
            },
            punctuation: /[:,]/
          }
        }
      });
      var ae = /:[^}\r\n]+/.source, K = i(
        r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
          G
        ]),
        2
      ), he = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
        K,
        ae
      ]), ye = i(
        r(
          /[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source,
          [w]
        ),
        2
      ), Te = r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
        ye,
        ae
      ]);
      function A(re, se) {
        return {
          interpolation: {
            pattern: a(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [re]),
            lookbehind: !0,
            inside: {
              "format-string": {
                pattern: a(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [
                  se,
                  ae
                ]),
                lookbehind: !0,
                inside: {
                  punctuation: /^:/
                }
              },
              punctuation: /^\{|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                alias: "language-csharp",
                inside: n.languages.csharp
              }
            }
          },
          string: /[\s\S]+/
        };
      }
      n.languages.insertBefore("csharp", "string", {
        "interpolation-string": [
          {
            pattern: a(
              /(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source,
              [he]
            ),
            lookbehind: !0,
            greedy: !0,
            inside: A(he, K)
          },
          {
            pattern: a(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [
              Te
            ]),
            lookbehind: !0,
            greedy: !0,
            inside: A(Te, ye)
          }
        ],
        char: {
          pattern: RegExp(j),
          greedy: !0
        }
      }), n.languages.dotnet = n.languages.cs = n.languages.csharp;
    })(t);
  }
  return gs;
}
var hs, gh;
function hM() {
  if (gh) return hs;
  gh = 1;
  var e = no();
  hs = t, t.displayName = "aspnet", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.aspnet = n.languages.extend("markup", {
      "page-directive": {
        pattern: /<%\s*@.*%>/,
        alias: "tag",
        inside: {
          "page-directive": {
            pattern: /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
            alias: "tag"
          },
          rest: n.languages.markup.tag.inside
        }
      },
      directive: {
        pattern: /<%.*%>/,
        alias: "tag",
        inside: {
          directive: {
            pattern: /<%\s*?[$=%#:]{0,2}|%>/,
            alias: "tag"
          },
          rest: n.languages.csharp
        }
      }
    }), n.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, n.languages.insertBefore(
      "inside",
      "punctuation",
      {
        directive: n.languages.aspnet.directive
      },
      n.languages.aspnet.tag.inside["attr-value"]
    ), n.languages.insertBefore("aspnet", "comment", {
      "asp-comment": {
        pattern: /<%--[\s\S]*?--%>/,
        alias: ["asp", "comment"]
      }
    }), n.languages.insertBefore(
      "aspnet",
      n.languages.javascript ? "script" : "tag",
      {
        "asp-script": {
          pattern: /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
          lookbehind: !0,
          alias: ["asp", "script"],
          inside: n.languages.csharp || {}
        }
      }
    );
  }
  return hs;
}
var bs, hh;
function bM() {
  if (hh) return bs;
  hh = 1, bs = e, e.displayName = "autohotkey", e.aliases = [];
  function e(t) {
    t.languages.autohotkey = {
      comment: [
        {
          pattern: /(^|\s);.*/,
          lookbehind: !0
        },
        {
          pattern: /(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m,
          lookbehind: !0,
          greedy: !0
        }
      ],
      tag: {
        // labels
        pattern: /^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m,
        lookbehind: !0
      },
      string: /"(?:[^"\n\r]|"")*"/,
      variable: /%\w+%/,
      number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
      operator: /\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,
      boolean: /\b(?:false|true)\b/,
      selector: /\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,
      constant: /\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,
      builtin: /\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,
      symbol: /\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,
      important: /#\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\b/i,
      keyword: /\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,
      function: /[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,
      punctuation: /[{}[\]():,]/
    };
  }
  return bs;
}
var Es, bh;
function EM() {
  if (bh) return Es;
  bh = 1, Es = e, e.displayName = "autoit", e.aliases = [];
  function e(t) {
    t.languages.autoit = {
      comment: [
        /;.*/,
        {
          // The multi-line comments delimiters can actually be commented out with ";"
          pattern: /(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m,
          lookbehind: !0
        }
      ],
      url: {
        pattern: /(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m,
        lookbehind: !0
      },
      string: {
        pattern: /(["'])(?:\1\1|(?!\1)[^\r\n])*\1/,
        greedy: !0,
        inside: {
          variable: /([%$@])\w+\1/
        }
      },
      directive: {
        pattern: /(^[\t ]*)#[\w-]+/m,
        lookbehind: !0,
        alias: "keyword"
      },
      function: /\b\w+(?=\()/,
      // Variables and macros
      variable: /[$@]\w+/,
      keyword: /\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
      boolean: /\b(?:False|True)\b/i,
      operator: /<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,
      punctuation: /[\[\]().,:]/
    };
  }
  return Es;
}
var ys, Eh;
function yM() {
  if (Eh) return ys;
  Eh = 1, ys = e, e.displayName = "avisynth", e.aliases = ["avs"];
  function e(t) {
    (function(n) {
      function r(c, d) {
        return c.replace(/<<(\d+)>>/g, function(m, f) {
          return d[+f];
        });
      }
      function a(c, d, m) {
        return RegExp(r(c, d), m);
      }
      var i = /bool|clip|float|int|string|val/.source, o = [
        // bools
        /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,
        // control
        /apply|assert|default|eval|import|nop|select|undefined/.source,
        // global
        /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,
        // conv
        /hex(?:value)?|value/.source,
        // numeric
        /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,
        // trig
        /a?sinh?|a?cosh?|a?tan[2h]?/.source,
        // bit
        /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,
        // runtime
        /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,
        // script
        /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,
        // string
        /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,
        // version
        /isversionorgreater|version(?:number|string)/.source,
        // helper
        /buildpixeltype|colorspacenametopixeltype/.source,
        // avsplus
        /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source
      ].join("|"), s = [
        // content
        /has(?:audio|video)/.source,
        // resolution
        /height|width/.source,
        // framerate
        /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,
        // interlacing
        /getparity|is(?:field|frame)based/.source,
        // color format
        /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,
        // audio
        /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source
      ].join("|"), l = [
        // source
        /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,
        // color
        /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,
        // overlay
        /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,
        // geometry
        /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,
        // pixel
        /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,
        // timeline
        /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,
        // interlace
        /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,
        // audio
        /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,
        // conditional
        /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,
        // export
        /imagewriter/.source,
        // debug
        /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source
      ].join("|"), u = [o, s, l].join("|");
      n.languages.avisynth = {
        comment: [
          {
            // Matches [* *] nestable block comments, but only supports 1 level of nested comments
            // /\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|<self>)*\*\]/
            pattern: /(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // Matches /* */ block comments
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // Matches # comments
            pattern: /(^|[^\\$])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        // Handle before strings because optional arguments are surrounded by double quotes
        argument: {
          pattern: a(/\b(?:<<0>>)\s+("?)\w+\1/.source, [i], "i"),
          inside: {
            keyword: /^\w+/
          }
        },
        // Optional argument assignment
        "argument-label": {
          pattern: /([,(][\s\\]*)\w+\s*=(?!=)/,
          lookbehind: !0,
          inside: {
            "argument-name": {
              pattern: /^\w+/,
              alias: "punctuation"
            },
            punctuation: /=$/
          }
        },
        string: [
          {
            // triple double-quoted
            pattern: /"""[\s\S]*?"""/,
            greedy: !0
          },
          {
            // single double-quoted
            pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
            greedy: !0,
            inside: {
              constant: {
                // These *are* case-sensitive!
                pattern: /\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/
              }
            }
          }
        ],
        // The special "last" variable that takes the value of the last implicitly returned clip
        variable: /\b(?:last)\b/i,
        boolean: /\b(?:false|no|true|yes)\b/i,
        keyword: /\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,
        constant: /\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,
        // AviSynth's internal functions, filters, and properties
        "builtin-function": {
          pattern: a(/\b(?:<<0>>)\b/.source, [u], "i"),
          alias: "function"
        },
        "type-cast": {
          pattern: a(/\b(?:<<0>>)(?=\s*\()/.source, [i], "i"),
          alias: "keyword"
        },
        // External/user-defined filters
        function: {
          pattern: /\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i,
          lookbehind: !0
        },
        // Matches a \ as the first or last character on a line
        "line-continuation": {
          pattern: /(^[ \t]*)\\|\\(?=[ \t]*$)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        number: /\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,
        operator: /\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,
        punctuation: /[{}\[\]();,.]/
      }, n.languages.avs = n.languages.avisynth;
    })(t);
  }
  return ys;
}
var vs, yh;
function vM() {
  if (yh) return vs;
  yh = 1, vs = e, e.displayName = "avroIdl", e.aliases = [];
  function e(t) {
    t.languages["avro-idl"] = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/,
        lookbehind: !0,
        greedy: !0
      },
      annotation: {
        pattern: /@(?:[$\w.-]|`[^\r\n`]+`)+/,
        greedy: !0,
        alias: "function"
      },
      "function-identifier": {
        pattern: /`[^\r\n`]+`(?=\s*\()/,
        greedy: !0,
        alias: "function"
      },
      identifier: {
        pattern: /`[^\r\n`]+`/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: [
        {
          pattern: /(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,
          lookbehind: !0
        },
        /-?\b(?:Infinity|NaN)\b/
      ],
      operator: /=/,
      punctuation: /[()\[\]{}<>.:,;-]/
    }, t.languages.avdl = t.languages["avro-idl"];
  }
  return vs;
}
var Ts, vh;
function W1() {
  if (vh) return Ts;
  vh = 1, Ts = e, e.displayName = "bash", e.aliases = ["shell"];
  function e(t) {
    (function(n) {
      var r = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b", a = {
        pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
        lookbehind: !0,
        alias: "punctuation",
        // this looks reasonably well in all themes
        inside: null
        // see below
      }, i = {
        bash: a,
        environment: {
          pattern: RegExp("\\$" + r),
          alias: "constant"
        },
        variable: [
          // [0]: Arithmetic Environment
          {
            pattern: /\$?\(\([\s\S]+?\)\)/,
            greedy: !0,
            inside: {
              // If there is a $ sign at the beginning highlight $(( and )) as variable
              variable: [
                {
                  pattern: /(^\$\(\([\s\S]+)\)\)/,
                  lookbehind: !0
                },
                /^\$\(\(/
              ],
              number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
              // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic
              operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
              // If there is no $ sign at the beginning highlight (( and )) as punctuation
              punctuation: /\(\(?|\)\)?|,|;/
            }
          },
          // [1]: Command Substitution
          {
            pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
            greedy: !0,
            inside: {
              variable: /^\$\(|^`|\)$|`$/
            }
          },
          // [2]: Brace expansion
          {
            pattern: /\$\{[^}]+\}/,
            greedy: !0,
            inside: {
              operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
              punctuation: /[\[\]]/,
              environment: {
                pattern: RegExp("(\\{)" + r),
                lookbehind: !0,
                alias: "constant"
              }
            }
          },
          /\$(?:\w+|[#?*!@$])/
        ],
        // Escape sequences from echo and printf's manuals, and escaped quotes.
        entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
      };
      n.languages.bash = {
        shebang: {
          pattern: /^#!\s*\/.*/,
          alias: "important"
        },
        comment: {
          pattern: /(^|[^"{\\$])#.*/,
          lookbehind: !0
        },
        "function-name": [
          // a) function foo {
          // b) foo() {
          // c) function foo() {
          // but not “foo {”
          {
            // a) and c)
            pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
            lookbehind: !0,
            alias: "function"
          },
          {
            // b)
            pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
            alias: "function"
          }
        ],
        // Highlight variable names as variables in for and select beginnings.
        "for-or-select": {
          pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
          alias: "variable",
          lookbehind: !0
        },
        // Highlight variable names as variables in the left-hand part
        // of assignments (“=” and “+=”).
        "assign-left": {
          pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
          inside: {
            environment: {
              pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + r),
              lookbehind: !0,
              alias: "constant"
            }
          },
          alias: "variable",
          lookbehind: !0
        },
        string: [
          // Support for Here-documents https://en.wikipedia.org/wiki/Here_document
          {
            pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
            lookbehind: !0,
            greedy: !0,
            inside: i
          },
          // Here-document with quotes around the tag
          // → No expansion (so no “inside”).
          {
            pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
            lookbehind: !0,
            greedy: !0,
            inside: {
              bash: a
            }
          },
          // “Normal” string
          {
            // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html
            pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
            lookbehind: !0,
            greedy: !0,
            inside: i
          },
          {
            // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html
            pattern: /(^|[^$\\])'[^']*'/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
            pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
            greedy: !0,
            inside: {
              entity: i.entity
            }
          }
        ],
        environment: {
          pattern: RegExp("\\$?" + r),
          alias: "constant"
        },
        variable: i.variable,
        function: {
          pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        keyword: {
          pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
        builtin: {
          pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
          lookbehind: !0,
          // Alias added to make those easier to distinguish from strings.
          alias: "class-name"
        },
        boolean: {
          pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
          lookbehind: !0
        },
        "file-descriptor": {
          pattern: /\B&\d\b/,
          alias: "important"
        },
        operator: {
          // Lots of redirections here, but not just that.
          pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
          inside: {
            "file-descriptor": {
              pattern: /^\d/,
              alias: "important"
            }
          }
        },
        punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
        number: {
          pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
          lookbehind: !0
        }
      }, a.inside = n.languages.bash;
      for (var o = [
        "comment",
        "function-name",
        "for-or-select",
        "assign-left",
        "string",
        "environment",
        "function",
        "keyword",
        "builtin",
        "boolean",
        "file-descriptor",
        "operator",
        "punctuation",
        "number"
      ], s = i.variable[1].inside, l = 0; l < o.length; l++)
        s[o[l]] = n.languages.bash[o[l]];
      n.languages.shell = n.languages.bash;
    })(t);
  }
  return Ts;
}
var Ss, Th;
function Y1() {
  if (Th) return Ss;
  Th = 1, Ss = e, e.displayName = "basic", e.aliases = [];
  function e(t) {
    t.languages.basic = {
      comment: {
        pattern: /(?:!|REM\b).+/i,
        inside: {
          keyword: /^REM/i
        }
      },
      string: {
        pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
        greedy: !0
      },
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      keyword: /\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,
      function: /\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,
      operator: /<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,
      punctuation: /[,;:()]/
    };
  }
  return Ss;
}
var _s, Sh;
function TM() {
  if (Sh) return _s;
  Sh = 1, _s = e, e.displayName = "batch", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /%%?[~:\w]+%?|!\S+!/, a = {
        pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,
        alias: "attr-name",
        inside: {
          punctuation: /:/
        }
      }, i = /"(?:[\\"]"|[^"])*"(?!")/, o = /(?:\b|-)\d+\b/;
      n.languages.batch = {
        comment: [
          /^::.*/m,
          {
            pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
            lookbehind: !0
          }
        ],
        label: {
          pattern: /^:.*/m,
          alias: "property"
        },
        command: [
          {
            // FOR command
            pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
            lookbehind: !0,
            inside: {
              keyword: /\b(?:do|in)\b|^for\b/i,
              string: i,
              parameter: a,
              variable: r,
              number: o,
              punctuation: /[()',]/
            }
          },
          {
            // IF command
            pattern: /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
            lookbehind: !0,
            inside: {
              keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
              string: i,
              parameter: a,
              variable: r,
              number: o,
              operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i
            }
          },
          {
            // ELSE command
            pattern: /((?:^|[&()])[ \t]*)else\b/im,
            lookbehind: !0,
            inside: {
              keyword: /^else\b/i
            }
          },
          {
            // SET command
            pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
            lookbehind: !0,
            inside: {
              keyword: /^set\b/i,
              string: i,
              parameter: a,
              variable: [r, /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/],
              number: o,
              operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
              punctuation: /[()',]/
            }
          },
          {
            // Other commands
            pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
            lookbehind: !0,
            inside: {
              keyword: /^\w+\b/,
              string: i,
              parameter: a,
              label: {
                pattern: /(^\s*):\S+/m,
                lookbehind: !0,
                alias: "property"
              },
              variable: r,
              number: o,
              operator: /\^/
            }
          }
        ],
        operator: /[&@]/,
        punctuation: /[()']/
      };
    })(t);
  }
  return _s;
}
var As, _h;
function SM() {
  if (_h) return As;
  _h = 1, As = e, e.displayName = "bbcode", e.aliases = ["shortcode"];
  function e(t) {
    t.languages.bbcode = {
      tag: {
        pattern: /\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,
        inside: {
          tag: {
            pattern: /^\[\/?[^\s=\]]+/,
            inside: {
              punctuation: /^\[\/?/
            }
          },
          "attr-value": {
            pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,
            inside: {
              punctuation: [
                /^=/,
                {
                  pattern: /^(\s*)["']|["']$/,
                  lookbehind: !0
                }
              ]
            }
          },
          punctuation: /\]/,
          "attr-name": /[^\s=\]]+/
        }
      }
    }, t.languages.shortcode = t.languages.bbcode;
  }
  return As;
}
var xs, Ah;
function _M() {
  if (Ah) return xs;
  Ah = 1, xs = e, e.displayName = "bicep", e.aliases = [];
  function e(t) {
    t.languages.bicep = {
      comment: [
        {
          // multiline comments eg /* ASDF */
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          greedy: !0
        },
        {
          // singleline comments eg // ASDF
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      property: [
        {
          pattern: /([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i,
          lookbehind: !0
        },
        {
          pattern: /([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: [
        {
          pattern: /'''[^'][\s\S]*?'''/,
          greedy: !0
        },
        {
          pattern: /(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      "interpolated-string": {
        pattern: /(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{[^{}\r\n]*\}/,
            inside: {
              expression: {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0
              },
              punctuation: /^\$\{|\}$/
            }
          },
          string: /[\s\S]+/
        }
      },
      datatype: {
        pattern: /(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/,
        lookbehind: !0,
        alias: "class-name"
      },
      boolean: /\b(?:false|true)\b/,
      // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184
      keyword: /\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,
      decorator: /@\w+\b/,
      function: /\b[a-z_]\w*(?=[ \t]*\()/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.bicep["interpolated-string"].inside.interpolation.inside.expression.inside = t.languages.bicep;
  }
  return xs;
}
var Rs, xh;
function AM() {
  if (xh) return Rs;
  xh = 1, Rs = e, e.displayName = "birb", e.aliases = [];
  function e(t) {
    t.languages.birb = t.languages.extend("clike", {
      string: {
        pattern: /r?("|')(?:\\.|(?!\1)[^\\])*\1/,
        greedy: !0
      },
      "class-name": [
        /\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/,
        // matches variable and function return types (parameters as well).
        /\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/
      ],
      keyword: /\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,
      operator: /\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,
      variable: /\b[a-z_]\w*\b/
    }), t.languages.insertBefore("birb", "function", {
      metadata: {
        pattern: /<\w+>/,
        greedy: !0,
        alias: "symbol"
      }
    });
  }
  return Rs;
}
var Is, Rh;
function xM() {
  if (Rh) return Is;
  Rh = 1;
  var e = Mr();
  Is = t, t.displayName = "bison", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.bison = n.languages.extend("c", {}), n.languages.insertBefore("bison", "comment", {
      bison: {
        // This should match all the beginning of the file
        // including the prologue(s), the bison declarations and
        // the grammar rules.
        pattern: /^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,
        inside: {
          c: {
            // Allow for one level of nested braces
            pattern: /%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,
            inside: {
              delimiter: {
                pattern: /^%?\{|%?\}$/,
                alias: "punctuation"
              },
              "bison-variable": {
                pattern: /[$@](?:<[^\s>]+>)?[\w$]+/,
                alias: "variable",
                inside: {
                  punctuation: /<|>/
                }
              },
              rest: n.languages.c
            }
          },
          comment: n.languages.c.comment,
          string: n.languages.c.string,
          property: /\S+(?=:)/,
          keyword: /%\w+/,
          number: {
            pattern: /(^|[^@])\b(?:0x[\da-f]+|\d+)/i,
            lookbehind: !0
          },
          punctuation: /%[%?]|[|:;\[\]<>]/
        }
      }
    });
  }
  return Is;
}
var ws, Ih;
function RM() {
  if (Ih) return ws;
  Ih = 1, ws = e, e.displayName = "bnf", e.aliases = ["rbnf"];
  function e(t) {
    t.languages.bnf = {
      string: {
        pattern: /"[^\r\n"]*"|'[^\r\n']*'/
      },
      definition: {
        pattern: /<[^<>\r\n\t]+>(?=\s*::=)/,
        alias: ["rule", "keyword"],
        inside: {
          punctuation: /^<|>$/
        }
      },
      rule: {
        pattern: /<[^<>\r\n\t]+>/,
        inside: {
          punctuation: /^<|>$/
        }
      },
      operator: /::=|[|()[\]{}*+?]|\.{3}/
    }, t.languages.rbnf = t.languages.bnf;
  }
  return ws;
}
var Cs, wh;
function IM() {
  if (wh) return Cs;
  wh = 1, Cs = e, e.displayName = "brainfuck", e.aliases = [];
  function e(t) {
    t.languages.brainfuck = {
      pointer: {
        pattern: /<|>/,
        alias: "keyword"
      },
      increment: {
        pattern: /\+/,
        alias: "inserted"
      },
      decrement: {
        pattern: /-/,
        alias: "deleted"
      },
      branching: {
        pattern: /\[|\]/,
        alias: "important"
      },
      operator: /[.,]/,
      comment: /\S+/
    };
  }
  return Cs;
}
var ks, Ch;
function wM() {
  if (Ch) return ks;
  Ch = 1, ks = e, e.displayName = "brightscript", e.aliases = [];
  function e(t) {
    t.languages.brightscript = {
      comment: /(?:\brem|').*/i,
      "directive-statement": {
        pattern: /(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,
        lookbehind: !0,
        alias: "property",
        inside: {
          "error-message": {
            pattern: /(^#error).+/,
            lookbehind: !0
          },
          directive: {
            pattern: /^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/,
            alias: "keyword"
          },
          expression: {
            pattern: /[\s\S]+/,
            inside: null
            // see below
          }
        }
      },
      property: {
        pattern: /([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\bAs[\t ]+)\w+/i,
        lookbehind: !0
      },
      keyword: /\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\b(?!\d)\w+(?=[\t ]*\()/,
      number: /(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,
      operator: /--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,
      punctuation: /[.,;()[\]{}]/,
      constant: /\b(?:LINE_NUM)\b/i
    }, t.languages.brightscript["directive-statement"].inside.expression.inside = t.languages.brightscript;
  }
  return ks;
}
var Ns, kh;
function CM() {
  if (kh) return Ns;
  kh = 1, Ns = e, e.displayName = "bro", e.aliases = [];
  function e(t) {
    t.languages.bro = {
      comment: {
        pattern: /(^|[^\\$])#.*/,
        lookbehind: !0,
        inside: {
          italic: /\b(?:FIXME|TODO|XXX)\b/
        }
      },
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      boolean: /\b[TF]\b/,
      function: {
        pattern: /(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/,
        lookbehind: !0
      },
      builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,
      constant: {
        pattern: /(\bconst[ \t]+)\w+/i,
        lookbehind: !0
      },
      keyword: /\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,
      operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return Ns;
}
var Os, Nh;
function kM() {
  if (Nh) return Os;
  Nh = 1, Os = e, e.displayName = "bsl", e.aliases = [];
  function e(t) {
    t.languages.bsl = {
      comment: /\/\/.*/,
      string: [
        // Строки
        // Strings
        {
          pattern: /"(?:[^"]|"")*"(?!")/,
          greedy: !0
        },
        // Дата и время
        // Date & time
        {
          pattern: /'(?:[^'\r\n\\]|\\.)*'/
        }
      ],
      keyword: [
        {
          // RU
          pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
          lookbehind: !0
        },
        {
          // EN
          pattern: /\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i
        }
      ],
      number: {
        pattern: /(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,
        lookbehind: !0
      },
      operator: [
        /[<>+\-*/]=?|[%=]/,
        // RU
        {
          pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
          lookbehind: !0
        },
        // EN
        {
          pattern: /\b(?:and|not|or)\b/i
        }
      ],
      punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
      directive: [
        // Теги препроцессора вида &Клиент, &Сервер, ...
        // Preprocessor tags of the type &Client, &Server, ...
        {
          pattern: /^([ \t]*)&.*/m,
          lookbehind: !0,
          greedy: !0,
          alias: "important"
        },
        // Инструкции препроцессора вида:
        // #Если Сервер Тогда
        // ...
        // #КонецЕсли
        // Preprocessor instructions of the form:
        // #If Server Then
        // ...
        // #EndIf
        {
          pattern: /^([ \t]*)#.*/gm,
          lookbehind: !0,
          greedy: !0,
          alias: "important"
        }
      ]
    }, t.languages.oscript = t.languages.bsl;
  }
  return Os;
}
var Ls, Oh;
function NM() {
  if (Oh) return Ls;
  Oh = 1, Ls = e, e.displayName = "cfscript", e.aliases = [];
  function e(t) {
    t.languages.cfscript = t.languages.extend("clike", {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          inside: {
            annotation: {
              pattern: /(?:^|[^.])@[\w\.]+/,
              alias: "punctuation"
            }
          }
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      keyword: /\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,
      operator: [
        /\+\+|--|&&|\|\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|[?:]/,
        /\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/
      ],
      scope: {
        pattern: /\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,
        alias: "global"
      },
      type: {
        pattern: /\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,
        alias: "builtin"
      }
    }), t.languages.insertBefore("cfscript", "keyword", {
      // This must be declared before keyword because we use "function" inside the lookahead
      "function-variable": {
        pattern: /[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
        alias: "function"
      }
    }), delete t.languages.cfscript["class-name"], t.languages.cfc = t.languages.cfscript;
  }
  return Ls;
}
var Ds, Lh;
function OM() {
  if (Lh) return Ds;
  Lh = 1;
  var e = Bf();
  Ds = t, t.displayName = "chaiscript", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.chaiscript = n.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": [
        {
          // e.g. class Rectangle { ... }
          pattern: /(\bclass\s+)\w+/,
          lookbehind: !0
        },
        {
          // e.g. attr Rectangle::height, def Rectangle::area() { ... }
          pattern: /(\b(?:attr|def)\s+)\w+(?=\s*::)/,
          lookbehind: !0
        }
      ],
      keyword: /\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,
      number: [n.languages.cpp.number, /\b(?:Infinity|NaN)\b/],
      operator: />>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/
    }), n.languages.insertBefore("chaiscript", "operator", {
      "parameter-type": {
        // e.g. def foo(int x, Vector y) {...}
        pattern: /([,(]\s*)\w+(?=\s+\w)/,
        lookbehind: !0,
        alias: "class-name"
      }
    }), n.languages.insertBefore("chaiscript", "string", {
      "string-interpolation": {
        pattern: /(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,
            lookbehind: !0,
            inside: {
              "interpolation-expression": {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0,
                inside: n.languages.chaiscript
              },
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    });
  }
  return Ds;
}
var Ms, Dh;
function LM() {
  if (Dh) return Ms;
  Dh = 1, Ms = e, e.displayName = "cil", e.aliases = [];
  function e(t) {
    t.languages.cil = {
      comment: /\/\/.*/,
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      directive: {
        pattern: /(^|\W)\.[a-z]+(?=\s)/,
        lookbehind: !0,
        alias: "class-name"
      },
      // Actually an assembly reference
      variable: /\[[\w\.]+\]/,
      keyword: /\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,
      function: /\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,
      punctuation: /[{}[\];(),:=]|IL_[0-9A-Za-z]+/
    };
  }
  return Ms;
}
var Ps, Mh;
function DM() {
  if (Mh) return Ps;
  Mh = 1, Ps = e, e.displayName = "clojure", e.aliases = [];
  function e(t) {
    t.languages.clojure = {
      comment: {
        pattern: /;.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\.)*"/,
        greedy: !0
      },
      char: /\\\w+/,
      symbol: {
        pattern: /(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/,
        lookbehind: !0
      },
      keyword: {
        pattern: /(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,
        lookbehind: !0
      },
      boolean: /\b(?:false|nil|true)\b/,
      number: {
        pattern: /(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i,
        lookbehind: !0
      },
      function: {
        pattern: /((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/,
        lookbehind: !0
      },
      operator: /[#@^`~]/,
      punctuation: /[{}\[\](),]/
    };
  }
  return Ps;
}
var Fs, Ph;
function MM() {
  if (Ph) return Fs;
  Ph = 1, Fs = e, e.displayName = "cmake", e.aliases = [];
  function e(t) {
    t.languages.cmake = {
      comment: /#.*/,
      string: {
        pattern: /"(?:[^\\"]|\\.)*"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
            inside: {
              punctuation: /\$\{|\}/,
              variable: /\w+/
            }
          }
        }
      },
      variable: /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\b/,
      property: /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
      keyword: /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
      boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
      namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
      operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
      inserted: {
        pattern: /\b\w+::\w+\b/,
        alias: "class-name"
      },
      number: /\b\d+(?:\.\d+)*\b/,
      function: /\b[a-z_]\w*(?=\s*\()\b/i,
      punctuation: /[()>}]|\$[<{]/
    };
  }
  return Fs;
}
var Bs, Fh;
function PM() {
  if (Fh) return Bs;
  Fh = 1, Bs = e, e.displayName = "cobol", e.aliases = [];
  function e(t) {
    t.languages.cobol = {
      comment: {
        pattern: /\*>.*|(^[ \t]*)\*.*/m,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,
        greedy: !0
      },
      level: {
        pattern: /(^[ \t]*)\d+\b/m,
        lookbehind: !0,
        greedy: !0,
        alias: "number"
      },
      "class-name": {
        // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015
        pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
        lookbehind: !0,
        inside: {
          number: {
            pattern: /(\()\d+/,
            lookbehind: !0
          },
          punctuation: /[()]/
        }
      },
      keyword: {
        pattern: /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
        lookbehind: !0
      },
      boolean: {
        pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i,
        lookbehind: !0
      },
      number: {
        pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,
        lookbehind: !0
      },
      operator: [
        /<>|[<>]=?|[=+*/&]/,
        {
          pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,
          lookbehind: !0
        }
      ],
      punctuation: /[.:,()]/
    };
  }
  return Bs;
}
var Us, Bh;
function FM() {
  if (Bh) return Us;
  Bh = 1, Us = e, e.displayName = "coffeescript", e.aliases = ["coffee"];
  function e(t) {
    (function(n) {
      var r = /#(?!\{).+/, a = {
        pattern: /#\{[^}]+\}/,
        alias: "variable"
      };
      n.languages.coffeescript = n.languages.extend("javascript", {
        comment: r,
        string: [
          // Strings are multiline
          {
            pattern: /'(?:\\[\s\S]|[^\\'])*'/,
            greedy: !0
          },
          {
            // Strings are multiline
            pattern: /"(?:\\[\s\S]|[^\\"])*"/,
            greedy: !0,
            inside: {
              interpolation: a
            }
          }
        ],
        keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
        "class-member": {
          pattern: /@(?!\d)\w+/,
          alias: "variable"
        }
      }), n.languages.insertBefore("coffeescript", "comment", {
        "multiline-comment": {
          pattern: /###[\s\S]+?###/,
          alias: "comment"
        },
        // Block regexp can contain comments and interpolation
        "block-regex": {
          pattern: /\/{3}[\s\S]*?\/{3}/,
          alias: "regex",
          inside: {
            comment: r,
            interpolation: a
          }
        }
      }), n.languages.insertBefore("coffeescript", "string", {
        "inline-javascript": {
          pattern: /`(?:\\[\s\S]|[^\\`])*`/,
          inside: {
            delimiter: {
              pattern: /^`|`$/,
              alias: "punctuation"
            },
            script: {
              pattern: /[\s\S]+/,
              alias: "language-javascript",
              inside: n.languages.javascript
            }
          }
        },
        // Block strings
        "multiline-string": [
          {
            pattern: /'''[\s\S]*?'''/,
            greedy: !0,
            alias: "string"
          },
          {
            pattern: /"""[\s\S]*?"""/,
            greedy: !0,
            alias: "string",
            inside: {
              interpolation: a
            }
          }
        ]
      }), n.languages.insertBefore("coffeescript", "keyword", {
        // Object property
        property: /(?!\d)\w+(?=\s*:(?!:))/
      }), delete n.languages.coffeescript["template-string"], n.languages.coffee = n.languages.coffeescript;
    })(t);
  }
  return Us;
}
var js, Uh;
function BM() {
  if (Uh) return js;
  Uh = 1, js = e, e.displayName = "concurnas", e.aliases = ["conc"];
  function e(t) {
    t.languages.concurnas = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/,
        lookbehind: !0,
        greedy: !0
      },
      langext: {
        pattern: /\b\w+\s*\|\|[\s\S]+?\|\|/,
        greedy: !0,
        inside: {
          "class-name": /^\w+/,
          string: {
            pattern: /(^\s*\|\|)[\s\S]+(?=\|\|$)/,
            lookbehind: !0
          },
          punctuation: /\|\|/
        }
      },
      function: {
        pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/,
        lookbehind: !0
      },
      keyword: /\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,
      punctuation: /[{}[\];(),.:]/,
      operator: /<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,
      annotation: {
        pattern: /@(?:\w+:)?(?:\w+|\[[^\]]+\])?/,
        alias: "builtin"
      }
    }, t.languages.insertBefore("concurnas", "langext", {
      "regex-literal": {
        pattern: /\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: !0,
            inside: t.languages.concurnas
          },
          regex: /[\s\S]+/
        }
      },
      "string-literal": {
        pattern: /(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
            lookbehind: !0,
            inside: t.languages.concurnas
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.conc = t.languages.concurnas;
  }
  return js;
}
var Hs, jh;
function UM() {
  if (jh) return Hs;
  jh = 1, Hs = e, e.displayName = "coq", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source, a = 0; a < 2; a++)
        r = r.replace(/<self>/g, function() {
          return r;
        });
      r = r.replace(/<self>/g, "[]"), n.languages.coq = {
        comment: RegExp(r),
        string: {
          pattern: /"(?:[^"]|"")*"(?!")/,
          greedy: !0
        },
        attribute: [
          {
            pattern: RegExp(
              /#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(
                /<comment>/g,
                function() {
                  return r;
                }
              )
            ),
            greedy: !0,
            alias: "attr-name",
            inside: {
              comment: RegExp(r),
              string: {
                pattern: /"(?:[^"]|"")*"(?!")/,
                greedy: !0
              },
              operator: /=/,
              punctuation: /^#\[|\]$|[,()]/
            }
          },
          {
            pattern: /\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/,
            alias: "attr-name"
          }
        ],
        keyword: /\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,
        number: /\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,
        punct: {
          pattern: /@\{|\{\||\[=|:>/,
          alias: "punctuation"
        },
        operator: /\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,
        punctuation: /\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/
      };
    })(t);
  }
  return Hs;
}
var qs, Hh;
function ro() {
  if (Hh) return qs;
  Hh = 1, qs = e, e.displayName = "ruby", e.aliases = ["rb"];
  function e(t) {
    (function(n) {
      n.languages.ruby = n.languages.extend("clike", {
        comment: {
          pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
          greedy: !0
        },
        "class-name": {
          pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
          lookbehind: !0,
          inside: {
            punctuation: /[.\\]/
          }
        },
        keyword: /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
        operator: /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
        punctuation: /[(){}[\].,;]/
      }), n.languages.insertBefore("ruby", "operator", {
        "double-colon": {
          pattern: /::/,
          alias: "punctuation"
        }
      });
      var r = {
        pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
        lookbehind: !0,
        inside: {
          content: {
            pattern: /^(#\{)[\s\S]+(?=\}$)/,
            lookbehind: !0,
            inside: n.languages.ruby
          },
          delimiter: {
            pattern: /^#\{|\}$/,
            alias: "punctuation"
          }
        }
      };
      delete n.languages.ruby.function;
      var a = "(?:" + [
        /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
        /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
        /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
        /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
        /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source
      ].join("|") + ")", i = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
      n.languages.insertBefore("ruby", "keyword", {
        "regex-literal": [
          {
            pattern: RegExp(
              /%r/.source + a + /[egimnosux]{0,6}/.source
            ),
            greedy: !0,
            inside: {
              interpolation: r,
              regex: /[\s\S]+/
            }
          },
          {
            pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
            lookbehind: !0,
            greedy: !0,
            inside: {
              interpolation: r,
              regex: /[\s\S]+/
            }
          }
        ],
        variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
        symbol: [
          {
            pattern: RegExp(/(^|[^:]):/.source + i),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: RegExp(
              /([\r\n{(,][ \t]*)/.source + i + /(?=:(?!:))/.source
            ),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "method-definition": {
          pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
          lookbehind: !0,
          inside: {
            function: /\b\w+$/,
            keyword: /^self\b/,
            "class-name": /^\w+/,
            punctuation: /\./
          }
        }
      }), n.languages.insertBefore("ruby", "string", {
        "string-literal": [
          {
            pattern: RegExp(/%[qQiIwWs]?/.source + a),
            greedy: !0,
            inside: {
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
            greedy: !0,
            inside: {
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
            alias: "heredoc-string",
            greedy: !0,
            inside: {
              delimiter: {
                pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                inside: {
                  symbol: /\b\w+/,
                  punctuation: /^<<[-~]?/
                }
              },
              interpolation: r,
              string: /[\s\S]+/
            }
          },
          {
            pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
            alias: "heredoc-string",
            greedy: !0,
            inside: {
              delimiter: {
                pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                inside: {
                  symbol: /\b\w+/,
                  punctuation: /^<<[-~]?'|'$/
                }
              },
              string: /[\s\S]+/
            }
          }
        ],
        "command-literal": [
          {
            pattern: RegExp(/%x/.source + a),
            greedy: !0,
            inside: {
              interpolation: r,
              command: {
                pattern: /[\s\S]+/,
                alias: "string"
              }
            }
          },
          {
            pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
            greedy: !0,
            inside: {
              interpolation: r,
              command: {
                pattern: /[\s\S]+/,
                alias: "string"
              }
            }
          }
        ]
      }), delete n.languages.ruby.string, n.languages.insertBefore("ruby", "number", {
        builtin: /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
        constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/
      }), n.languages.rb = n.languages.ruby;
    })(t);
  }
  return qs;
}
var $s, qh;
function jM() {
  if (qh) return $s;
  qh = 1;
  var e = ro();
  $s = t, t.displayName = "crystal", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.crystal = r.languages.extend("ruby", {
        keyword: [
          /\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,
          {
            pattern: /(\.\s*)(?:is_a|responds_to)\?/,
            lookbehind: !0
          }
        ],
        number: /\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,
        operator: [/->/, r.languages.ruby.operator],
        punctuation: /[(){}[\].,;\\]/
      }), r.languages.insertBefore("crystal", "string-literal", {
        attribute: {
          pattern: /@\[.*?\]/,
          inside: {
            delimiter: {
              pattern: /^@\[|\]$/,
              alias: "punctuation"
            },
            attribute: {
              pattern: /^(\s*)\w+/,
              lookbehind: !0,
              alias: "class-name"
            },
            args: {
              pattern: /\S(?:[\s\S]*\S)?/,
              inside: r.languages.crystal
            }
          }
        },
        expansion: {
          pattern: /\{(?:\{.*?\}|%.*?%)\}/,
          inside: {
            content: {
              pattern: /^(\{.)[\s\S]+(?=.\}$)/,
              lookbehind: !0,
              inside: r.languages.crystal
            },
            delimiter: {
              pattern: /^\{[\{%]|[\}%]\}$/,
              alias: "operator"
            }
          }
        },
        char: {
          pattern: /'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/,
          greedy: !0
        }
      });
    }(n);
  }
  return $s;
}
var zs, $h;
function HM() {
  if ($h) return zs;
  $h = 1;
  var e = no();
  zs = t, t.displayName = "cshtml", t.aliases = ["razor"];
  function t(n) {
    n.register(e), function(r) {
      var a = /\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source, i = /@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source + "|" + /'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;
      function o(I, x) {
        for (var v = 0; v < x; v++)
          I = I.replace(/<self>/g, function() {
            return "(?:" + I + ")";
          });
        return I.replace(/<self>/g, "[^\\s\\S]").replace(/<str>/g, "(?:" + i + ")").replace(/<comment>/g, "(?:" + a + ")");
      }
      var s = o(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source, 2), l = o(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source, 2), u = o(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source, 2), c = o(/<(?:[^<>'"@/]|<str>|<comment>|<self>)*>/.source, 2), d = /(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?/.source, m = /(?!\d)[^\s>\/=$<%]+/.source + d + /\s*\/?>/.source, f = /\B@?/.source + "(?:" + /<([a-zA-Z][\w:]*)/.source + d + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + // all tags that are not the start tag
      // eslint-disable-next-line regexp/strict
      /<\/?(?!\1\b)/.source + m + "|" + // nested start tag
      o(
        // eslint-disable-next-line regexp/strict
        /<\1/.source + d + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + // all tags that are not the start tag
        // eslint-disable-next-line regexp/strict
        /<\/?(?!\1\b)/.source + m + "|<self>") + ")*" + // eslint-disable-next-line regexp/strict
        /<\/\1\s*>/.source,
        2
      )) + ")*" + // eslint-disable-next-line regexp/strict
      /<\/\1\s*>/.source + "|" + /</.source + m + ")";
      r.languages.cshtml = r.languages.extend("markup", {});
      var h = r.languages.insertBefore(
        "csharp",
        "string",
        {
          html: {
            pattern: RegExp(f),
            greedy: !0,
            inside: r.languages.cshtml
          }
        },
        {
          csharp: r.languages.extend("csharp", {})
        }
      ), E = {
        pattern: /\S[\s\S]*/,
        alias: "language-csharp",
        inside: h
      };
      r.languages.insertBefore("cshtml", "prolog", {
        "razor-comment": {
          pattern: /@\*[\s\S]*?\*@/,
          greedy: !0,
          alias: "comment"
        },
        block: {
          pattern: RegExp(
            /(^|[^@])@/.source + "(?:" + [
              // @{ ... }
              u,
              // @code{ ... }
              /(?:code|functions)\s*/.source + u,
              // @for (...) { ... }
              /(?:for|foreach|lock|switch|using|while)\s*/.source + s + /\s*/.source + u,
              // @do { ... } while (...);
              /do\s*/.source + u + /\s*while\s*/.source + s + /(?:\s*;)?/.source,
              // @try { ... } catch (...) { ... } finally { ... }
              /try\s*/.source + u + /\s*catch\s*/.source + s + /\s*/.source + u + /\s*finally\s*/.source + u,
              // @if (...) {...} else if (...) {...} else {...}
              /if\s*/.source + s + /\s*/.source + u + "(?:" + /\s*else/.source + "(?:" + /\s+if\s*/.source + s + ")?" + /\s*/.source + u + ")*"
            ].join("|") + ")"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^@\w*/,
            csharp: E
          }
        },
        directive: {
          pattern: /^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^@\w+/,
            csharp: E
          }
        },
        value: {
          pattern: RegExp(
            /(^|[^@])@/.source + /(?:await\b\s*)?/.source + "(?:" + /\w+\b/.source + "|" + s + ")(?:" + /[?!]?\.\w+\b/.source + "|" + s + "|" + l + "|" + c + s + ")*"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "variable",
          inside: {
            keyword: /^@/,
            csharp: E
          }
        },
        "delegate-operator": {
          pattern: /(^|[^@])@(?=<)/,
          lookbehind: !0,
          alias: "operator"
        }
      }), r.languages.razor = r.languages.cshtml;
    }(n);
  }
  return zs;
}
var Gs, zh;
function qM() {
  if (zh) return Gs;
  zh = 1, Gs = e, e.displayName = "csp", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(a) {
        return RegExp(
          /([ \t])/.source + "(?:" + a + ")" + /(?=[\s;]|$)/.source,
          "i"
        );
      }
      n.languages.csp = {
        directive: {
          pattern: /(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,
          lookbehind: !0,
          alias: "property"
        },
        scheme: {
          pattern: r(/[a-z][a-z0-9.+-]*:/.source),
          lookbehind: !0
        },
        none: {
          pattern: r(/'none'/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        nonce: {
          pattern: r(/'nonce-[-+/\w=]+'/.source),
          lookbehind: !0,
          alias: "number"
        },
        hash: {
          pattern: r(/'sha(?:256|384|512)-[-+/\w=]+'/.source),
          lookbehind: !0,
          alias: "number"
        },
        host: {
          pattern: r(
            /[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source + "|" + /\*[^\s;,']*/.source + "|" + /[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source
          ),
          lookbehind: !0,
          alias: "url",
          inside: {
            important: /\*/
          }
        },
        keyword: [
          {
            pattern: r(/'unsafe-[a-z-]+'/.source),
            lookbehind: !0,
            alias: "unsafe"
          },
          {
            pattern: r(/'[a-z-]+'/.source),
            lookbehind: !0,
            alias: "safe"
          }
        ],
        punctuation: /;/
      };
    })(t);
  }
  return Gs;
}
var Vs, Gh;
function $M() {
  if (Gh) return Vs;
  Gh = 1, Vs = e, e.displayName = "cssExtras", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, a;
      n.languages.css.selector = {
        pattern: n.languages.css.selector.pattern,
        lookbehind: !0,
        inside: a = {
          "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
          "pseudo-class": /:[-\w]+/,
          class: /\.[-\w]+/,
          id: /#[-\w]+/,
          attribute: {
            pattern: RegExp(`\\[(?:[^[\\]"']|` + r.source + ")*\\]"),
            greedy: !0,
            inside: {
              punctuation: /^\[|\]$/,
              "case-sensitivity": {
                pattern: /(\s)[si]$/i,
                lookbehind: !0,
                alias: "keyword"
              },
              namespace: {
                pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
                lookbehind: !0,
                inside: {
                  punctuation: /\|$/
                }
              },
              "attr-name": {
                pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
                lookbehind: !0
              },
              "attr-value": [
                r,
                {
                  pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
                  lookbehind: !0
                }
              ],
              operator: /[|~*^$]?=/
            }
          },
          "n-th": [
            {
              pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
              lookbehind: !0,
              inside: {
                number: /[\dn]+/,
                operator: /[+-]/
              }
            },
            {
              pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
              lookbehind: !0
            }
          ],
          combinator: />|\+|~|\|\|/,
          // the `tag` token has been existed and removed.
          // because we can't find a perfect tokenize to match it.
          // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.
          punctuation: /[(),]/
        }
      }, n.languages.css.atrule.inside["selector-function-argument"].inside = a, n.languages.insertBefore("css", "property", {
        variable: {
          pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
          lookbehind: !0
        }
      });
      var i = {
        pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
        lookbehind: !0
      }, o = {
        pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
        lookbehind: !0
      };
      n.languages.insertBefore("css", "function", {
        operator: {
          pattern: /(\s)[+\-*\/](?=\s)/,
          lookbehind: !0
        },
        // CAREFUL!
        // Previewers and Inline color use hexcode and color.
        hexcode: {
          pattern: /\B#[\da-f]{3,8}\b/i,
          alias: "color"
        },
        color: [
          {
            pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
            lookbehind: !0
          },
          {
            pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
            inside: {
              unit: i,
              number: o,
              function: /[\w-]+(?=\()/,
              punctuation: /[(),]/
            }
          }
        ],
        // it's important that there is no boundary assertion after the hex digits
        entity: /\\[\da-f]{1,8}/i,
        unit: i,
        number: o
      });
    })(t);
  }
  return Vs;
}
var Ws, Vh;
function zM() {
  if (Vh) return Ws;
  Vh = 1, Ws = e, e.displayName = "csv", e.aliases = [];
  function e(t) {
    t.languages.csv = {
      value: /[^\r\n,"]+|"(?:[^"]|"")*"(?!")/,
      punctuation: /,/
    };
  }
  return Ws;
}
var Ys, Wh;
function GM() {
  if (Wh) return Ys;
  Wh = 1, Ys = e, e.displayName = "cypher", e.aliases = [];
  function e(t) {
    t.languages.cypher = {
      // https://neo4j.com/docs/cypher-manual/current/syntax/comments/
      comment: /\/\/.*/,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/,
        greedy: !0
      },
      "class-name": {
        pattern: /(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/,
        lookbehind: !0,
        greedy: !0
      },
      relationship: {
        pattern: /(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      identifier: {
        pattern: /`(?:[^`\\\r\n])*`/,
        greedy: !0
      },
      variable: /\$\w+/,
      // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/
      keyword: /\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,
      function: /\b\w+\b(?=\s*\()/,
      boolean: /\b(?:false|null|true)\b/i,
      number: /\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,
      // https://neo4j.com/docs/cypher-manual/current/syntax/operators/
      operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,
      punctuation: /[()[\]{},;.]/
    };
  }
  return Ys;
}
var Ks, Yh;
function VM() {
  if (Yh) return Ks;
  Yh = 1, Ks = e, e.displayName = "d", e.aliases = [];
  function e(t) {
    t.languages.d = t.languages.extend("clike", {
      comment: [
        {
          // Shebang
          pattern: /^\s*#!.+/,
          greedy: !0
        },
        {
          pattern: RegExp(
            /(^|[^\\])/.source + "(?:" + [
              // /+ comment +/
              // Allow one level of nesting
              /\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source,
              // // comment
              /\/\/.*/.source,
              // /* comment */
              /\/\*[\s\S]*?\*\//.source
            ].join("|") + ")"
          ),
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: [
        {
          pattern: RegExp(
            [
              // r"", x""
              /\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,
              // q"[]", q"()", q"<>", q"{}"
              /\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,
              // q"IDENT
              // ...
              // IDENT"
              /\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,
              // q"//", q"||", etc.
              // eslint-disable-next-line regexp/strict
              /\bq"(.)[\s\S]*?\2"/.source,
              // eslint-disable-next-line regexp/strict
              /(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source
            ].join("|"),
            "m"
          ),
          greedy: !0
        },
        {
          pattern: /\bq\{(?:\{[^{}]*\}|[^{}])*\}/,
          greedy: !0,
          alias: "token-string"
        }
      ],
      // In order: $, keywords and special tokens, globally defined symbols
      keyword: /\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,
      number: [
        // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator
        // Hexadecimal numbers must be handled separately to avoid problems with exponent "e"
        /\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,
        {
          pattern: /((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i,
          lookbehind: !0
        }
      ],
      operator: /\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/
    }), t.languages.insertBefore("d", "string", {
      // Characters
      // 'a', '\\', '\n', '\xFF', '\377', '\uFFFF', '\U0010FFFF', '\quot'
      char: /'(?:\\(?:\W|\w+)|[^\\])'/
    }), t.languages.insertBefore("d", "keyword", {
      property: /\B@\w*/
    }), t.languages.insertBefore("d", "function", {
      register: {
        // Iasm registers
        pattern: /\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,
        alias: "variable"
      }
    });
  }
  return Ks;
}
var Xs, Kh;
function WM() {
  if (Kh) return Xs;
  Kh = 1, Xs = e, e.displayName = "dart", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        /\b(?:async|sync|yield)\*/,
        /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/
      ], a = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, i = {
        pattern: RegExp(a + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
        lookbehind: !0,
        inside: {
          namespace: {
            pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
            inside: {
              punctuation: /\./
            }
          }
        }
      };
      n.languages.dart = n.languages.extend("clike", {
        "class-name": [
          i,
          {
            // variables and parameters
            // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
            pattern: RegExp(
              a + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source
            ),
            lookbehind: !0,
            inside: i.inside
          }
        ],
        keyword: r,
        operator: /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/
      }), n.languages.insertBefore("dart", "string", {
        "string-literal": {
          pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
              lookbehind: !0,
              inside: {
                punctuation: /^\$\{?|\}$/,
                expression: {
                  pattern: /[\s\S]+/,
                  inside: n.languages.dart
                }
              }
            },
            string: /[\s\S]+/
          }
        },
        string: void 0
      }), n.languages.insertBefore("dart", "class-name", {
        metadata: {
          pattern: /@\w+/,
          alias: "function"
        }
      }), n.languages.insertBefore("dart", "class-name", {
        generics: {
          pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
          inside: {
            "class-name": i,
            keyword: r,
            punctuation: /[<>(),.:]/,
            operator: /[?&|]/
          }
        }
      });
    })(t);
  }
  return Xs;
}
var Zs, Xh;
function YM() {
  if (Xh) return Zs;
  Xh = 1, Zs = e, e.displayName = "dataweave", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.dataweave = {
        url: /\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,
        property: {
          pattern: /(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/,
          greedy: !0
        },
        string: {
          pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
          greedy: !0
        },
        "mime-type": /\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,
        date: {
          pattern: /\|[\w:+-]+\|/,
          greedy: !0
        },
        comment: [
          {
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        regex: {
          pattern: /\/(?:[^\\\/\r\n]|\\[^\r\n])+\//,
          greedy: !0
        },
        keyword: /\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,
        function: /\b[A-Z_]\w*(?=\s*\()/i,
        number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        punctuation: /[{}[\];(),.:@]/,
        operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,
        boolean: /\b(?:false|true)\b/
      };
    })(t);
  }
  return Zs;
}
var Qs, Zh;
function KM() {
  if (Zh) return Qs;
  Zh = 1, Qs = e, e.displayName = "dax", e.aliases = [];
  function e(t) {
    t.languages.dax = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/,
        lookbehind: !0
      },
      "data-field": {
        pattern: /'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/,
        alias: "symbol"
      },
      measure: {
        pattern: /\[[ \w\xA0-\uFFFF]+\]/,
        alias: "constant"
      },
      string: {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: !0
      },
      function: /\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,
      keyword: /\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,
      boolean: {
        pattern: /\b(?:FALSE|NULL|TRUE)\b/i,
        alias: "constant"
      },
      number: /\b\d+(?:\.\d*)?|\B\.\d+\b/,
      operator: /:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,
      punctuation: /[;\[\](){}`,.]/
    };
  }
  return Qs;
}
var Js, Qh;
function XM() {
  if (Qh) return Js;
  Qh = 1, Js = e, e.displayName = "dhall", e.aliases = [];
  function e(t) {
    t.languages.dhall = {
      // Multi-line comments can be nested. E.g. {- foo {- bar -} -}
      // The multi-line pattern is essentially this:
      //   \{-(?:[^-{]|-(?!\})|\{(?!-)|<SELF>)*-\}
      comment: /--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,
      string: {
        pattern: /"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$\{[^{}]*\}/,
            inside: {
              expression: {
                pattern: /(^\$\{)[\s\S]+(?=\}$)/,
                lookbehind: !0,
                alias: "language-dhall",
                inside: null
                // see blow
              },
              punctuation: /\$\{|\}/
            }
          }
        }
      },
      label: {
        pattern: /`[^`]*`/,
        greedy: !0
      },
      url: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596
        pattern: /\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/,
        greedy: !0
      },
      env: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661
        pattern: /\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/,
        greedy: !0,
        inside: {
          function: /^env/,
          operator: /^:/,
          variable: /[\s\S]+/
        }
      },
      hash: {
        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725
        pattern: /\bsha256:[\da-fA-F]{64}\b/,
        inside: {
          function: /sha256/,
          operator: /:/,
          number: /[\da-fA-F]{64}/
        }
      },
      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359
      keyword: /\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,
      builtin: /\b(?:None|Some)\b/,
      boolean: /\b(?:False|True)\b/,
      number: /\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,
      operator: /\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,
      punctuation: /\.\.|[{}\[\](),./]/,
      // we'll just assume that every capital word left is a type name
      "class-name": /\b[A-Z]\w*\b/
    }, t.languages.dhall.string.inside.interpolation.inside.expression.inside = t.languages.dhall;
  }
  return Js;
}
var el, Jh;
function ZM() {
  if (Jh) return el;
  Jh = 1, el = e, e.displayName = "diff", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.diff = {
        coord: [
          // Match all kinds of coord lines (prefixed by "+++", "---" or "***").
          /^(?:\*{3}|-{3}|\+{3}).*$/m,
          // Match "@@ ... @@" coord lines in unified diff.
          /^@@.*@@$/m,
          // Match coord lines in normal diff (starts with a number).
          /^\d.*$/m
        ]
        // deleted, inserted, unchanged, diff
      };
      var r = {
        "deleted-sign": "-",
        "deleted-arrow": "<",
        "inserted-sign": "+",
        "inserted-arrow": ">",
        unchanged: " ",
        diff: "!"
      };
      Object.keys(r).forEach(function(a) {
        var i = r[a], o = [];
        /^\w+$/.test(a) || o.push(/\w+/.exec(a)[0]), a === "diff" && o.push("bold"), n.languages.diff[a] = {
          pattern: RegExp(
            "^(?:[" + i + `].*(?:\r
?|
|(?![\\s\\S])))+`,
            "m"
          ),
          alias: o,
          inside: {
            line: {
              pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
              lookbehind: !0
            },
            prefix: {
              pattern: /[\s\S]/,
              alias: /\w+/.exec(a)[0]
            }
          }
        };
      }), Object.defineProperty(n.languages.diff, "PREFIXES", {
        value: r
      });
    })(t);
  }
  return el;
}
var tl, eb;
function yn() {
  if (eb) return tl;
  eb = 1, tl = e, e.displayName = "markupTemplating", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(a, i) {
        return "___" + a.toUpperCase() + i + "___";
      }
      Object.defineProperties(n.languages["markup-templating"] = {}, {
        buildPlaceholders: {
          /**
           * Tokenize all inline templating expressions matching `placeholderPattern`.
           *
           * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns
           * `true` will be replaced.
           *
           * @param {object} env The environment of the `before-tokenize` hook.
           * @param {string} language The language id.
           * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.
           * @param {(match: string) => boolean} [replaceFilter]
           */
          value: function(a, i, o, s) {
            if (a.language === i) {
              var l = a.tokenStack = [];
              a.code = a.code.replace(o, function(u) {
                if (typeof s == "function" && !s(u))
                  return u;
                for (var c = l.length, d; a.code.indexOf(d = r(i, c)) !== -1; )
                  ++c;
                return l[c] = u, d;
              }), a.grammar = n.languages.markup;
            }
          }
        },
        tokenizePlaceholders: {
          /**
           * Replace placeholders with proper tokens after tokenizing.
           *
           * @param {object} env The environment of the `after-tokenize` hook.
           * @param {string} language The language id.
           */
          value: function(a, i) {
            if (a.language !== i || !a.tokenStack)
              return;
            a.grammar = n.languages[i];
            var o = 0, s = Object.keys(a.tokenStack);
            function l(u) {
              for (var c = 0; c < u.length && !(o >= s.length); c++) {
                var d = u[c];
                if (typeof d == "string" || d.content && typeof d.content == "string") {
                  var m = s[o], f = a.tokenStack[m], h = typeof d == "string" ? d : d.content, E = r(i, m), I = h.indexOf(E);
                  if (I > -1) {
                    ++o;
                    var x = h.substring(0, I), v = new n.Token(
                      i,
                      n.tokenize(f, a.grammar),
                      "language-" + i,
                      f
                    ), S = h.substring(I + E.length), g = [];
                    x && g.push.apply(g, l([x])), g.push(v), S && g.push.apply(g, l([S])), typeof d == "string" ? u.splice.apply(u, [c, 1].concat(g)) : d.content = g;
                  }
                } else d.content && l(d.content);
              }
              return u;
            }
            l(a.tokens);
          }
        }
      });
    })(t);
  }
  return tl;
}
var nl, tb;
function QM() {
  if (tb) return nl;
  tb = 1;
  var e = yn();
  nl = t, t.displayName = "django", t.aliases = ["jinja2"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.django = {
        comment: /^\{#[\s\S]*?#\}$/,
        tag: {
          pattern: /(^\{%[+-]?\s*)\w+/,
          lookbehind: !0,
          alias: "keyword"
        },
        delimiter: {
          pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
          alias: "punctuation"
        },
        string: {
          pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: !0
        },
        filter: {
          pattern: /(\|)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        test: {
          pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        function: /\b[a-z_]\w+(?=\s*\()/i,
        keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
        operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
        number: /\b\d+(?:\.\d+)?\b/,
        boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
        variable: /\b\w+\b/,
        punctuation: /[{}[\](),.:;]/
      };
      var a = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g, i = r.languages["markup-templating"];
      r.hooks.add("before-tokenize", function(o) {
        i.buildPlaceholders(o, "django", a);
      }), r.hooks.add("after-tokenize", function(o) {
        i.tokenizePlaceholders(o, "django");
      }), r.languages.jinja2 = r.languages.django, r.hooks.add("before-tokenize", function(o) {
        i.buildPlaceholders(o, "jinja2", a);
      }), r.hooks.add("after-tokenize", function(o) {
        i.tokenizePlaceholders(o, "jinja2");
      });
    }(n);
  }
  return nl;
}
var rl, nb;
function JM() {
  if (nb) return rl;
  nb = 1, rl = e, e.displayName = "dnsZoneFile", e.aliases = [];
  function e(t) {
    t.languages["dns-zone-file"] = {
      comment: /;.*/,
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"/,
        greedy: !0
      },
      variable: [
        {
          pattern: /(^\$ORIGIN[ \t]+)\S+/m,
          lookbehind: !0
        },
        {
          pattern: /(^|\s)@(?=\s|$)/,
          lookbehind: !0
        }
      ],
      keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
      class: {
        // https://tools.ietf.org/html/rfc1035#page-13
        pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,
        lookbehind: !0,
        alias: "keyword"
      },
      type: {
        // https://en.wikipedia.org/wiki/List_of_DNS_record_types
        pattern: /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
        lookbehind: !0,
        alias: "keyword"
      },
      punctuation: /[()]/
    }, t.languages["dns-zone"] = t.languages["dns-zone-file"];
  }
  return rl;
}
var al, rb;
function eP() {
  if (rb) return al;
  rb = 1, al = e, e.displayName = "docker", e.aliases = ["dockerfile"];
  function e(t) {
    (function(n) {
      var r = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source, a = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(
        /<SP_BS>/g,
        function() {
          return r;
        }
      ), i = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source, o = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(
        /<STR>/g,
        function() {
          return i;
        }
      ), s = {
        pattern: RegExp(i),
        greedy: !0
      }, l = {
        pattern: /(^[ \t]*)#.*/m,
        lookbehind: !0,
        greedy: !0
      };
      function u(c, d) {
        return c = c.replace(/<OPT>/g, function() {
          return o;
        }).replace(/<SP>/g, function() {
          return a;
        }), RegExp(c, d);
      }
      n.languages.docker = {
        instruction: {
          pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
          lookbehind: !0,
          greedy: !0,
          inside: {
            options: {
              pattern: u(
                /(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,
                "i"
              ),
              lookbehind: !0,
              greedy: !0,
              inside: {
                property: {
                  pattern: /(^|\s)--[\w-]+/,
                  lookbehind: !0
                },
                string: [
                  s,
                  {
                    pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                    lookbehind: !0
                  }
                ],
                operator: /\\$/m,
                punctuation: /=/
              }
            },
            keyword: [
              {
                // https://docs.docker.com/engine/reference/builder/#healthcheck
                pattern: u(
                  /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source,
                  "i"
                ),
                lookbehind: !0,
                greedy: !0
              },
              {
                // https://docs.docker.com/engine/reference/builder/#from
                pattern: u(
                  /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source,
                  "i"
                ),
                lookbehind: !0,
                greedy: !0
              },
              {
                // https://docs.docker.com/engine/reference/builder/#onbuild
                pattern: u(/(^ONBUILD<SP>)\w+/.source, "i"),
                lookbehind: !0,
                greedy: !0
              },
              {
                pattern: /^\w+/,
                greedy: !0
              }
            ],
            comment: l,
            string: s,
            variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
            operator: /\\$/m
          }
        },
        comment: l
      }, n.languages.dockerfile = n.languages.docker;
    })(t);
  }
  return al;
}
var il, ab;
function tP() {
  if (ab) return il;
  ab = 1, il = e, e.displayName = "dot", e.aliases = ["gv"];
  function e(t) {
    (function(n) {
      var r = "(?:" + [
        // an identifier
        /[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,
        // a number
        /-?(?:\.\d+|\d+(?:\.\d*)?)/.source,
        // a double-quoted string
        /"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,
        // HTML-like string
        /<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source
      ].join("|") + ")", a = {
        markup: {
          pattern: /(^<)[\s\S]+(?=>$)/,
          lookbehind: !0,
          alias: ["language-markup", "language-html", "language-xml"],
          inside: n.languages.markup
        }
      };
      function i(o, s) {
        return RegExp(
          o.replace(/<ID>/g, function() {
            return r;
          }),
          s
        );
      }
      n.languages.dot = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m,
          greedy: !0
        },
        "graph-name": {
          pattern: i(
            /(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source,
            "i"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "class-name",
          inside: a
        },
        "attr-value": {
          pattern: i(/(=[ \t\r\n]*)<ID>/.source),
          lookbehind: !0,
          greedy: !0,
          inside: a
        },
        "attr-name": {
          pattern: i(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source),
          lookbehind: !0,
          greedy: !0,
          inside: a
        },
        keyword: /\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,
        "compass-point": {
          pattern: /(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/,
          lookbehind: !0,
          alias: "builtin"
        },
        node: {
          pattern: i(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source),
          lookbehind: !0,
          greedy: !0,
          inside: a
        },
        operator: /[=:]|-[->]/,
        punctuation: /[\[\]{};,]/
      }, n.languages.gv = n.languages.dot;
    })(t);
  }
  return il;
}
var ol, ib;
function nP() {
  if (ib) return ol;
  ib = 1, ol = e, e.displayName = "ebnf", e.aliases = [];
  function e(t) {
    t.languages.ebnf = {
      comment: /\(\*[\s\S]*?\*\)/,
      string: {
        pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
        greedy: !0
      },
      special: {
        pattern: /\?[^?\r\n]*\?/,
        greedy: !0,
        alias: "class-name"
      },
      definition: {
        pattern: /^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im,
        lookbehind: !0,
        alias: ["rule", "keyword"]
      },
      rule: /\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,
      punctuation: /\([:/]|[:/]\)|[.,;()[\]{}]/,
      operator: /[-=|*/!]/
    };
  }
  return ol;
}
var sl, ob;
function rP() {
  if (ob) return sl;
  ob = 1, sl = e, e.displayName = "editorconfig", e.aliases = [];
  function e(t) {
    t.languages.editorconfig = {
      // https://editorconfig-specification.readthedocs.io
      comment: /[;#].*/,
      section: {
        pattern: /(^[ \t]*)\[.+\]/m,
        lookbehind: !0,
        alias: "selector",
        inside: {
          regex: /\\\\[\[\]{},!?.*]/,
          // Escape special characters with '\\'
          operator: /[!?]|\.\.|\*{1,2}/,
          punctuation: /[\[\]{},]/
        }
      },
      key: {
        pattern: /(^[ \t]*)[^\s=]+(?=[ \t]*=)/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      value: {
        pattern: /=.*/,
        alias: "attr-value",
        inside: {
          punctuation: /^=/
        }
      }
    };
  }
  return sl;
}
var ll, sb;
function aP() {
  if (sb) return ll;
  sb = 1, ll = e, e.displayName = "eiffel", e.aliases = [];
  function e(t) {
    t.languages.eiffel = {
      comment: /--.*/,
      string: [
        // Aligned-verbatim-strings
        {
          pattern: /"([^[]*)\[[\s\S]*?\]\1"/,
          greedy: !0
        },
        // Non-aligned-verbatim-strings
        {
          pattern: /"([^{]*)\{[\s\S]*?\}\1"/,
          greedy: !0
        },
        // Single-line string
        {
          pattern: /"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/,
          greedy: !0
        }
      ],
      // normal char | special char | char code
      char: /'(?:%.|[^%'\r\n])+'/,
      keyword: /\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,
      boolean: /\b(?:False|True)\b/i,
      // Convention: class-names are always all upper-case characters
      "class-name": /\b[A-Z][\dA-Z_]*\b/,
      number: [
        // hexa | octal | bin
        /\b0[xcb][\da-f](?:_*[\da-f])*\b/i,
        // Decimal
        /(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i
      ],
      punctuation: /:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,
      operator: /\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/
    };
  }
  return ll;
}
var ul, lb;
function iP() {
  if (lb) return ul;
  lb = 1;
  var e = yn();
  ul = t, t.displayName = "ejs", t.aliases = ["eta"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.ejs = {
        delimiter: {
          pattern: /^<%[-_=]?|[-_]?%>$/,
          alias: "punctuation"
        },
        comment: /^#[\s\S]*/,
        "language-javascript": {
          pattern: /[\s\S]+/,
          inside: r.languages.javascript
        }
      }, r.hooks.add("before-tokenize", function(a) {
        var i = /<%(?!%)[\s\S]+?%>/g;
        r.languages["markup-templating"].buildPlaceholders(
          a,
          "ejs",
          i
        );
      }), r.hooks.add("after-tokenize", function(a) {
        r.languages["markup-templating"].tokenizePlaceholders(a, "ejs");
      }), r.languages.eta = r.languages.ejs;
    }(n);
  }
  return ul;
}
var cl, ub;
function oP() {
  if (ub) return cl;
  ub = 1, cl = e, e.displayName = "elixir", e.aliases = [];
  function e(t) {
    t.languages.elixir = {
      doc: {
        pattern: /@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,
        inside: {
          attribute: /^@\w+/,
          string: /['"][\s\S]+/
        }
      },
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      // ~r"""foo""" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r"foo", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>
      regex: {
        pattern: /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
        greedy: !0
      },
      string: [
        {
          // ~s"""foo""" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s"foo", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>
          pattern: /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        },
        {
          pattern: /("""|''')[\s\S]*?\1/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        },
        {
          // Multi-line strings are allowed
          pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          greedy: !0,
          inside: {
            // See interpolation below
          }
        }
      ],
      atom: {
        // Look-behind prevents bad highlighting of the :: operator
        pattern: /(^|[^:]):\w+/,
        lookbehind: !0,
        alias: "symbol"
      },
      module: {
        pattern: /\b[A-Z]\w*\b/,
        alias: "class-name"
      },
      // Look-ahead prevents bad highlighting of the :: operator
      "attr-name": /\b\w+\??:(?!:)/,
      argument: {
        // Look-behind prevents bad highlighting of the && operator
        pattern: /(^|[^&])&\d+/,
        lookbehind: !0,
        alias: "variable"
      },
      attribute: {
        pattern: /@\w+/,
        alias: "variable"
      },
      function: /\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,
      number: /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
      keyword: /\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,
      boolean: /\b(?:false|nil|true)\b/,
      operator: [
        /\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
        {
          // We don't want to match <<
          pattern: /([^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /([^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      punctuation: /<<|>>|[.,%\[\]{}()]/
    }, t.languages.elixir.string.forEach(function(n) {
      n.inside = {
        interpolation: {
          pattern: /#\{[^}]+\}/,
          inside: {
            delimiter: {
              pattern: /^#\{|\}$/,
              alias: "punctuation"
            },
            rest: t.languages.elixir
          }
        }
      };
    });
  }
  return cl;
}
var dl, cb;
function sP() {
  if (cb) return dl;
  cb = 1, dl = e, e.displayName = "elm", e.aliases = [];
  function e(t) {
    t.languages.elm = {
      comment: /--.*|\{-[\s\S]*?-\}/,
      char: {
        pattern: /'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/,
        greedy: !0
      },
      string: [
        {
          // Multiline strings are wrapped in triple ". Quotes may appear unescaped.
          pattern: /"""[\s\S]*?"""/,
          greedy: !0
        },
        {
          pattern: /"(?:[^\\"\r\n]|\\.)*"/,
          greedy: !0
        }
      ],
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|exposing|import)\b/
        }
      },
      keyword: /\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,
      // These are builtin variables only. Constructors are highlighted later as a constant.
      builtin: /\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,
      // decimal integers and floating point numbers | hexadecimal integers
      number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,
      // Most of this is needed because of the meaning of a single '.'.
      // If it stands alone freely, it is the function composition.
      // It may also be a separator between a module name and an identifier => no
      // operator. If it comes together with other special characters it is an
      // operator too.
      // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!
      // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ
      operator: /\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,
      // In Elm, nearly everything is a variable, do not highlight these.
      hvariable: /\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,
      constant: /\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,
      punctuation: /[{}[\]|(),.:]/
    };
  }
  return dl;
}
var pl, db;
function lP() {
  if (db) return pl;
  db = 1;
  var e = ro(), t = yn();
  pl = n, n.displayName = "erb", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      a.languages.erb = {
        delimiter: {
          pattern: /^(\s*)<%=?|%>(?=\s*$)/,
          lookbehind: !0,
          alias: "punctuation"
        },
        ruby: {
          pattern: /\s*\S[\s\S]*/,
          alias: "language-ruby",
          inside: a.languages.ruby
        }
      }, a.hooks.add("before-tokenize", function(i) {
        var o = /<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;
        a.languages["markup-templating"].buildPlaceholders(
          i,
          "erb",
          o
        );
      }), a.hooks.add("after-tokenize", function(i) {
        a.languages["markup-templating"].tokenizePlaceholders(i, "erb");
      });
    }(r);
  }
  return pl;
}
var fl, pb;
function uP() {
  if (pb) return fl;
  pb = 1, fl = e, e.displayName = "erlang", e.aliases = [];
  function e(t) {
    t.languages.erlang = {
      comment: /%.+/,
      string: {
        pattern: /"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      "quoted-function": {
        pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
        alias: "function"
      },
      "quoted-atom": {
        pattern: /'(?:\\.|[^\\'\r\n])+'/,
        alias: "atom"
      },
      boolean: /\b(?:false|true)\b/,
      keyword: /\b(?:after|case|catch|end|fun|if|of|receive|try|when)\b/,
      number: [
        /\$\\?./,
        /\b\d+#[a-z0-9]+/i,
        /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
      ],
      function: /\b[a-z][\w@]*(?=\()/,
      variable: {
        // Look-behind is used to prevent wrong highlighting of atoms containing "@"
        pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
        lookbehind: !0
      },
      operator: [
        /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
        {
          // We don't want to match <<
          pattern: /(^|[^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /(^|[^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      atom: /\b[a-z][\w@]*/,
      punctuation: /[()[\]{}:;,.#|]|<<|>>/
    };
  }
  return fl;
}
var ml, fb;
function K1() {
  if (fb) return ml;
  fb = 1, ml = e, e.displayName = "lua", e.aliases = [];
  function e(t) {
    t.languages.lua = {
      comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
      // \z may be used to skip the following space
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
        greedy: !0
      },
      number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
      keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
      function: /(?!\d)\w+(?=\s*(?:[({]))/,
      operator: [
        /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
        {
          // Match ".." but don't break "..."
          pattern: /(^|[^.])\.\.(?!\.)/,
          lookbehind: !0
        }
      ],
      punctuation: /[\[\](){},;]|\.+|:+/
    };
  }
  return ml;
}
var gl, mb;
function cP() {
  if (mb) return gl;
  mb = 1;
  var e = K1(), t = yn();
  gl = n, n.displayName = "etlua", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      a.languages.etlua = {
        delimiter: {
          pattern: /^<%[-=]?|-?%>$/,
          alias: "punctuation"
        },
        "language-lua": {
          pattern: /[\s\S]+/,
          inside: a.languages.lua
        }
      }, a.hooks.add("before-tokenize", function(i) {
        var o = /<%[\s\S]+?%>/g;
        a.languages["markup-templating"].buildPlaceholders(
          i,
          "etlua",
          o
        );
      }), a.hooks.add("after-tokenize", function(i) {
        a.languages["markup-templating"].tokenizePlaceholders(i, "etlua");
      });
    }(r);
  }
  return gl;
}
var hl, gb;
function dP() {
  if (gb) return hl;
  gb = 1, hl = e, e.displayName = "excelFormula", e.aliases = [];
  function e(t) {
    t.languages["excel-formula"] = {
      comment: {
        pattern: /(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: !0
      },
      reference: {
        // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/
        // Sales!B2
        // 'Winter sales'!B2
        // [Sales.xlsx]Jan!B2:B5
        // D:\Reports\[Sales.xlsx]Jan!B2:B5
        // '[Sales.xlsx]Jan sales'!B2:B5
        // 'D:\Reports\[Sales.xlsx]Jan sales'!B2:B5
        pattern: /(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,
        greedy: !0,
        alias: "string",
        inside: {
          operator: /!$/,
          punctuation: /'/,
          sheet: {
            pattern: /[^[\]]+$/,
            alias: "function"
          },
          file: {
            pattern: /\[[^[\]]+\]$/,
            inside: {
              punctuation: /[[\]]/
            }
          },
          path: /[\s\S]+/
        }
      },
      "function-name": {
        pattern: /\b[A-Z]\w*(?=\()/i,
        alias: "keyword"
      },
      range: {
        pattern: /\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,
        alias: "property",
        inside: {
          operator: /:/,
          cell: /\$?[A-Z]+\$?\d+/i,
          column: /\$?[A-Z]+/i,
          row: /\$?\d+/
        }
      },
      cell: {
        // Excel is case insensitive, so the string "foo1" could be either a variable or a cell.
        // To combat this, we match cells case insensitive, if the contain at least one "$", and case sensitive otherwise.
        pattern: /\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/,
        alias: "property"
      },
      number: /(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,
      boolean: /\b(?:FALSE|TRUE)\b/i,
      operator: /[-+*/^%=&,]|<[=>]?|>=?/,
      punctuation: /[[\]();{}|]/
    }, t.languages.xlsx = t.languages.xls = t.languages["excel-formula"];
  }
  return hl;
}
var bl, hb;
function pP() {
  if (hb) return bl;
  hb = 1, bl = e, e.displayName = "factor", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        function: /\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/
      }, a = {
        number: /\\[^\s']|%\w/
      }, i = {
        comment: [
          {
            // ! single-line exclamation point comments with whitespace after/around the !
            pattern: /(^|\s)(?:! .*|!$)/,
            lookbehind: !0,
            inside: r
          },
          /* from basis/multiline: */
          {
            // /* comment */, /* comment*/
            pattern: /(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            inside: r
          },
          {
            // ![[ comment ]] , ![===[ comment]===]
            pattern: /(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            inside: r
          }
        ],
        number: [
          {
            // basic base 10 integers 9, -9
            pattern: /(^|\s)[+-]?\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9
            pattern: /(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i,
            lookbehind: !0
          },
          {
            // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.
            pattern: /(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/,
            lookbehind: !0
          },
          {
            // positive mixed numbers 23+1/5 +23+1/5
            pattern: /(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // negative mixed numbers -23-1/5
            pattern: /(^|\s)-\d+-\d+\/\d+(?=\s|$)/,
            lookbehind: !0
          },
          {
            // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13
            // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4
            pattern: /(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i,
            lookbehind: !0
          },
          {
            // NAN literal syntax NAN: 80000deadbeef, NAN: a
            pattern: /(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/,
            lookbehind: !0
          },
          {
            /*
            base prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...
            "The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.
            The values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation."
            <https://docs.factorcode.org/content/article-syntax-floats.html>
            */
            pattern: /(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i,
            lookbehind: !0
          }
        ],
        // R/ regexp?\/\\/
        regexp: {
          pattern: /(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,
          lookbehind: !0,
          alias: "number",
          inside: {
            variable: /\\\S/,
            keyword: /[+?*\[\]^$(){}.|]/,
            operator: {
              pattern: /(\/)[idmsr]+(?:-[idmsr]+)?/,
              lookbehind: !0
            }
          }
        },
        boolean: {
          pattern: /(^|\s)[tf](?=\s|$)/,
          lookbehind: !0
        },
        // SBUF" asd", URL" ://...", P" /etc/"
        "custom-string": {
          pattern: /(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,
          lookbehind: !0,
          greedy: !0,
          alias: "string",
          inside: {
            number: /\\\S|%\w|\//
          }
        },
        "multiline-string": [
          {
            // STRING: name \n content \n ; -> CONSTANT: name "content" (symbol)
            pattern: /(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: {
              number: a.number,
              // trailing semicolon on its own line
              "semicolon-or-setlocal": {
                pattern: /([\r\n][ \t]*);(?=\s|$)/,
                lookbehind: !0,
                alias: "function"
              }
            }
          },
          {
            // HEREDOC: marker \n content \n marker ; -> "content" (immediate)
            pattern: /(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: a
          },
          {
            // [[ string ]], [==[ string]==]
            pattern: /(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: a
          }
        ],
        "special-using": {
          pattern: /(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,
          lookbehind: !0,
          alias: "function",
          inside: {
            // this is essentially a regex for vocab names, which i don't want to specify
            // but the USING: gets picked up as a vocab name
            string: {
              pattern: /(\s)[^:\s]+/,
              lookbehind: !0
            }
          }
        },
        /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible
        trying to do better is more work and regex-computation-time than it's worth though.
        - we'd like to have the "delimiter" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents
        - we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)
        - we'd like if the following variable name conventions were recognised specifically:
        special row variables = ..a b..
        type and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )
        word throws unconditional error = *
        any other word-like variable name = a ? q' etc
        https://docs.factorcode.org/content/article-effects.html
        these are pretty complicated to highlight properly without a real parser, and therefore out of scope
        the old pattern, which may be later useful, was: (^|\s)(?:call|execute|eval)?\((?:\s+[^"\r\n\t ]\S*)*?\s+--(?:\s+[^"\n\t ]\S*)*?\s+\)(?=\s|$)
        */
        // current solution is not great
        "stack-effect-delimiter": [
          {
            // opening parenthesis
            pattern: /(^|\s)(?:call|eval|execute)?\((?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // middle --
            pattern: /(\s)--(?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing parenthesis
            pattern: /(\s)\)(?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        combinators: {
          pattern: null,
          lookbehind: !0,
          alias: "keyword"
        },
        "kernel-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "sequences-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "math-builtin": {
          pattern: null,
          lookbehind: !0,
          alias: "variable"
        },
        "constructor-word": {
          // <array> but not <=>
          pattern: /(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/,
          lookbehind: !0,
          alias: "keyword"
        },
        "other-builtin-syntax": {
          pattern: null,
          lookbehind: !0,
          alias: "operator"
        },
        /*
        full list of supported word naming conventions: (the convention appears outside of the [brackets])
        set-[x]
        change-[x]
        with-[x]
        new-[x]
        >[string]
        [base]>
        [string]>[number]
        +[symbol]+
        [boolean-word]?
        ?[of]
        [slot-reader]>>
        >>[slot-setter]
        [slot-writer]<<
        ([implementation-detail])
        [mutater]!
        [variant]*
        [prettyprint].
        $[help-markup]
        <constructors>, SYNTAX:, etc are supported by their own patterns.
        `with` and `new` from `kernel` are their own builtins.
        see <https://docs.factorcode.org/content/article-conventions.html>
        */
        "conventionally-named-word": {
          pattern: /(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,
          lookbehind: !0,
          alias: "keyword"
        },
        "colon-syntax": {
          pattern: /(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/,
          lookbehind: !0,
          greedy: !0,
          alias: "function"
        },
        "semicolon-or-setlocal": {
          pattern: /(\s)(?:;|:>)(?=\s|$)/,
          lookbehind: !0,
          alias: "function"
        },
        // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax
        "curly-brace-literal-delimiter": [
          {
            // opening
            pattern: /(^|\s)[a-z]*\{(?=\s)/i,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing
            pattern: /(\s)\}(?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax
        "quotation-delimiter": [
          {
            // opening
            pattern: /(^|\s)\[(?=\s)/,
            lookbehind: !0,
            alias: "operator"
          },
          {
            // closing
            pattern: /(\s)\](?=\s|$)/,
            lookbehind: !0,
            alias: "operator"
          }
        ],
        "normal-word": {
          pattern: /(^|\s)[^"\s]\S*(?=\s|$)/,
          lookbehind: !0
        },
        /*
        basic first-class string "a"
        with escaped double-quote "a\""
        escaped backslash "\\"
        and general escapes since Factor has so many "\N"
        syntax that works in the reference implementation that isn't fully
        supported because it's an implementation detail:
        "string 1""string 2" -> 2 strings (works anyway)
        "string"5 -> string, 5
        "string"[ ] -> string, quotation
        { "a"} -> array<string>
        the rest of those examples all properly recognise the string, but not
        the other object (number, quotation, etc)
        this is fine for a regex-only implementation.
        */
        string: {
          pattern: /"(?:\\\S|[^"\\])*"/,
          greedy: !0,
          inside: a
        }
      }, o = function(c) {
        return (c + "").replace(/([.?*+\^$\[\]\\(){}|\-])/g, "\\$1");
      }, s = function(c) {
        return new RegExp("(^|\\s)(?:" + c.map(o).join("|") + ")(?=\\s|$)");
      }, l = {
        "kernel-builtin": [
          "or",
          "2nipd",
          "4drop",
          "tuck",
          "wrapper",
          "nip",
          "wrapper?",
          "callstack>array",
          "die",
          "dupd",
          "callstack",
          "callstack?",
          "3dup",
          "hashcode",
          "pick",
          "4nip",
          "build",
          ">boolean",
          "nipd",
          "clone",
          "5nip",
          "eq?",
          "?",
          "=",
          "swapd",
          "2over",
          "clear",
          "2dup",
          "get-retainstack",
          "not",
          "tuple?",
          "dup",
          "3nipd",
          "call",
          "-rotd",
          "object",
          "drop",
          "assert=",
          "assert?",
          "-rot",
          "execute",
          "boa",
          "get-callstack",
          "curried?",
          "3drop",
          "pickd",
          "overd",
          "over",
          "roll",
          "3nip",
          "swap",
          "and",
          "2nip",
          "rotd",
          "throw",
          "(clone)",
          "hashcode*",
          "spin",
          "reach",
          "4dup",
          "equal?",
          "get-datastack",
          "assert",
          "2drop",
          "<wrapper>",
          "boolean?",
          "identity-hashcode",
          "identity-tuple?",
          "null",
          "composed?",
          "new",
          "5drop",
          "rot",
          "-roll",
          "xor",
          "identity-tuple",
          "boolean"
        ],
        "other-builtin-syntax": [
          // syntax
          "=======",
          "recursive",
          "flushable",
          ">>",
          "<<<<<<",
          "M\\",
          "B",
          "PRIVATE>",
          "\\",
          "======",
          "final",
          "inline",
          "delimiter",
          "deprecated",
          "<PRIVATE",
          ">>>>>>",
          "<<<<<<<",
          "parse-complex",
          "malformed-complex",
          "read-only",
          ">>>>>>>",
          "call-next-method",
          "<<",
          "foldable",
          // literals
          "$",
          "$[",
          "${"
        ],
        "sequences-builtin": [
          "member-eq?",
          "mismatch",
          "append",
          "assert-sequence=",
          "longer",
          "repetition",
          "clone-like",
          "3sequence",
          "assert-sequence?",
          "last-index-from",
          "reversed",
          "index-from",
          "cut*",
          "pad-tail",
          "join-as",
          "remove-eq!",
          "concat-as",
          "but-last",
          "snip",
          "nths",
          "nth",
          "sequence",
          "longest",
          "slice?",
          "<slice>",
          "remove-nth",
          "tail-slice",
          "empty?",
          "tail*",
          "member?",
          "virtual-sequence?",
          "set-length",
          "drop-prefix",
          "iota",
          "unclip",
          "bounds-error?",
          "unclip-last-slice",
          "non-negative-integer-expected",
          "non-negative-integer-expected?",
          "midpoint@",
          "longer?",
          "?set-nth",
          "?first",
          "rest-slice",
          "prepend-as",
          "prepend",
          "fourth",
          "sift",
          "subseq-start",
          "new-sequence",
          "?last",
          "like",
          "first4",
          "1sequence",
          "reverse",
          "slice",
          "virtual@",
          "repetition?",
          "set-last",
          "index",
          "4sequence",
          "max-length",
          "set-second",
          "immutable-sequence",
          "first2",
          "first3",
          "supremum",
          "unclip-slice",
          "suffix!",
          "insert-nth",
          "tail",
          "3append",
          "short",
          "suffix",
          "concat",
          "flip",
          "immutable?",
          "reverse!",
          "2sequence",
          "sum",
          "delete-all",
          "indices",
          "snip-slice",
          "<iota>",
          "check-slice",
          "sequence?",
          "head",
          "append-as",
          "halves",
          "sequence=",
          "collapse-slice",
          "?second",
          "slice-error?",
          "product",
          "bounds-check?",
          "bounds-check",
          "immutable",
          "virtual-exemplar",
          "harvest",
          "remove",
          "pad-head",
          "last",
          "set-fourth",
          "cartesian-product",
          "remove-eq",
          "shorten",
          "shorter",
          "reversed?",
          "shorter?",
          "shortest",
          "head-slice",
          "pop*",
          "tail-slice*",
          "but-last-slice",
          "iota?",
          "append!",
          "cut-slice",
          "new-resizable",
          "head-slice*",
          "sequence-hashcode",
          "pop",
          "set-nth",
          "?nth",
          "second",
          "join",
          "immutable-sequence?",
          "<reversed>",
          "3append-as",
          "virtual-sequence",
          "subseq?",
          "remove-nth!",
          "length",
          "last-index",
          "lengthen",
          "assert-sequence",
          "copy",
          "move",
          "third",
          "first",
          "tail?",
          "set-first",
          "prefix",
          "bounds-error",
          "<repetition>",
          "exchange",
          "surround",
          "cut",
          "min-length",
          "set-third",
          "push-all",
          "head?",
          "subseq-start-from",
          "delete-slice",
          "rest",
          "sum-lengths",
          "head*",
          "infimum",
          "remove!",
          "glue",
          "slice-error",
          "subseq",
          "push",
          "replace-slice",
          "subseq-as",
          "unclip-last"
        ],
        "math-builtin": [
          "number=",
          "next-power-of-2",
          "?1+",
          "fp-special?",
          "imaginary-part",
          "float>bits",
          "number?",
          "fp-infinity?",
          "bignum?",
          "fp-snan?",
          "denominator",
          "gcd",
          "*",
          "+",
          "fp-bitwise=",
          "-",
          "u>=",
          "/",
          ">=",
          "bitand",
          "power-of-2?",
          "log2-expects-positive",
          "neg?",
          "<",
          "log2",
          ">",
          "integer?",
          "number",
          "bits>double",
          "2/",
          "zero?",
          "bits>float",
          "float?",
          "shift",
          "ratio?",
          "rect>",
          "even?",
          "ratio",
          "fp-sign",
          "bitnot",
          ">fixnum",
          "complex?",
          "/i",
          "integer>fixnum",
          "/f",
          "sgn",
          ">bignum",
          "next-float",
          "u<",
          "u>",
          "mod",
          "recip",
          "rational",
          ">float",
          "2^",
          "integer",
          "fixnum?",
          "neg",
          "fixnum",
          "sq",
          "bignum",
          ">rect",
          "bit?",
          "fp-qnan?",
          "simple-gcd",
          "complex",
          "<fp-nan>",
          "real",
          ">fraction",
          "double>bits",
          "bitor",
          "rem",
          "fp-nan-payload",
          "real-part",
          "log2-expects-positive?",
          "prev-float",
          "align",
          "unordered?",
          "float",
          "fp-nan?",
          "abs",
          "bitxor",
          "integer>fixnum-strict",
          "u<=",
          "odd?",
          "<=",
          "/mod",
          ">integer",
          "real?",
          "rational?",
          "numerator"
        ]
        // that's all for now
      };
      Object.keys(l).forEach(function(c) {
        i[c].pattern = s(l[c]);
      });
      var u = [
        // kernel
        "2bi",
        "while",
        "2tri",
        "bi*",
        "4dip",
        "both?",
        "same?",
        "tri@",
        "curry",
        "prepose",
        "3bi",
        "?if",
        "tri*",
        "2keep",
        "3keep",
        "curried",
        "2keepd",
        "when",
        "2bi*",
        "2tri*",
        "4keep",
        "bi@",
        "keepdd",
        "do",
        "unless*",
        "tri-curry",
        "if*",
        "loop",
        "bi-curry*",
        "when*",
        "2bi@",
        "2tri@",
        "with",
        "2with",
        "either?",
        "bi",
        "until",
        "3dip",
        "3curry",
        "tri-curry*",
        "tri-curry@",
        "bi-curry",
        "keepd",
        "compose",
        "2dip",
        "if",
        "3tri",
        "unless",
        "tuple",
        "keep",
        "2curry",
        "tri",
        "most",
        "while*",
        "dip",
        "composed",
        "bi-curry@",
        // sequences
        "find-last-from",
        "trim-head-slice",
        "map-as",
        "each-from",
        "none?",
        "trim-tail",
        "partition",
        "if-empty",
        "accumulate*",
        "reject!",
        "find-from",
        "accumulate-as",
        "collector-for-as",
        "reject",
        "map",
        "map-sum",
        "accumulate!",
        "2each-from",
        "follow",
        "supremum-by",
        "map!",
        "unless-empty",
        "collector",
        "padding",
        "reduce-index",
        "replicate-as",
        "infimum-by",
        "trim-tail-slice",
        "count",
        "find-index",
        "filter",
        "accumulate*!",
        "reject-as",
        "map-integers",
        "map-find",
        "reduce",
        "selector",
        "interleave",
        "2map",
        "filter-as",
        "binary-reduce",
        "map-index-as",
        "find",
        "produce",
        "filter!",
        "replicate",
        "cartesian-map",
        "cartesian-each",
        "find-index-from",
        "map-find-last",
        "3map-as",
        "3map",
        "find-last",
        "selector-as",
        "2map-as",
        "2map-reduce",
        "accumulate",
        "each",
        "each-index",
        "accumulate*-as",
        "when-empty",
        "all?",
        "collector-as",
        "push-either",
        "new-like",
        "collector-for",
        "2selector",
        "push-if",
        "2all?",
        "map-reduce",
        "3each",
        "any?",
        "trim-slice",
        "2reduce",
        "change-nth",
        "produce-as",
        "2each",
        "trim",
        "trim-head",
        "cartesian-find",
        "map-index",
        // math
        "if-zero",
        "each-integer",
        "unless-zero",
        "(find-integer)",
        "when-zero",
        "find-last-integer",
        "(all-integers?)",
        "times",
        "(each-integer)",
        "find-integer",
        "all-integers?",
        // math.combinators
        "unless-negative",
        "if-positive",
        "when-positive",
        "when-negative",
        "unless-positive",
        "if-negative",
        // combinators
        "case",
        "2cleave",
        "cond>quot",
        "case>quot",
        "3cleave",
        "wrong-values",
        "to-fixed-point",
        "alist>quot",
        "cond",
        "cleave",
        "call-effect",
        "recursive-hashcode",
        "spread",
        "deep-spread>quot",
        // combinators.short-circuit
        "2||",
        "0||",
        "n||",
        "0&&",
        "2&&",
        "3||",
        "1||",
        "1&&",
        "n&&",
        "3&&",
        // combinators.smart
        "smart-unless*",
        "keep-inputs",
        "reduce-outputs",
        "smart-when*",
        "cleave>array",
        "smart-with",
        "smart-apply",
        "smart-if",
        "inputs/outputs",
        "output>sequence-n",
        "map-outputs",
        "map-reduce-outputs",
        "dropping",
        "output>array",
        "smart-map-reduce",
        "smart-2map-reduce",
        "output>array-n",
        "nullary",
        "input<sequence",
        "append-outputs",
        "drop-inputs",
        "inputs",
        "smart-2reduce",
        "drop-outputs",
        "smart-reduce",
        "preserving",
        "smart-when",
        "outputs",
        "append-outputs-as",
        "smart-unless",
        "smart-if*",
        "sum-outputs",
        "input<sequence-unsafe",
        "output>sequence"
        // tafn
      ];
      i.combinators.pattern = s(u), n.languages.factor = i;
    })(t);
  }
  return bl;
}
var El, bb;
function fP() {
  if (bb) return El;
  bb = 1, El = e, e.displayName = "$false", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.false = {
        comment: {
          pattern: /\{[^}]*\}/
        },
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        "character-code": {
          pattern: /'(?:[^\r]|\r\n?)/,
          alias: "number"
        },
        "assembler-code": {
          pattern: /\d+`/,
          alias: "important"
        },
        number: /\d+/,
        operator: /[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,
        punctuation: /\[|\]/,
        variable: /[a-z]/,
        "non-standard": {
          pattern: /[()<BDO®]/,
          alias: "bold"
        }
      };
    })(t);
  }
  return El;
}
var yl, Eb;
function mP() {
  if (Eb) return yl;
  Eb = 1, yl = e, e.displayName = "firestoreSecurityRules", e.aliases = [];
  function e(t) {
    t.languages["firestore-security-rules"] = t.languages.extend(
      "clike",
      {
        comment: /\/\/.*/,
        keyword: /\b(?:allow|function|if|match|null|return|rules_version|service)\b/,
        operator: /&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/
      }
    ), delete t.languages["firestore-security-rules"]["class-name"], t.languages.insertBefore("firestore-security-rules", "keyword", {
      path: {
        pattern: /(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          variable: {
            pattern: /\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,
            inside: {
              operator: /=/,
              keyword: /\*\*/,
              punctuation: /[.$(){}]/
            }
          },
          punctuation: /\//
        }
      },
      method: {
        // to make the pattern shorter, the actual method names are omitted
        pattern: /(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/,
        lookbehind: !0,
        alias: "builtin",
        inside: {
          punctuation: /,/
        }
      }
    });
  }
  return yl;
}
var vl, yb;
function gP() {
  if (yb) return vl;
  yb = 1, vl = e, e.displayName = "flow", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.flow = n.languages.extend("javascript", {}), n.languages.insertBefore("flow", "keyword", {
        type: [
          {
            pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\b/,
            alias: "tag"
          }
        ]
      }), n.languages.flow["function-variable"].pattern = /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i, delete n.languages.flow.parameter, n.languages.insertBefore("flow", "operator", {
        "flow-punctuation": {
          pattern: /\{\||\|\}/,
          alias: "punctuation"
        }
      }), Array.isArray(n.languages.flow.keyword) || (n.languages.flow.keyword = [n.languages.flow.keyword]), n.languages.flow.keyword.unshift(
        {
          pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,
          lookbehind: !0
        }
      );
    })(t);
  }
  return vl;
}
var Tl, vb;
function hP() {
  if (vb) return Tl;
  vb = 1, Tl = e, e.displayName = "fortran", e.aliases = [];
  function e(t) {
    t.languages.fortran = {
      "quoted-number": {
        pattern: /[BOZ](['"])[A-F0-9]+\1/i,
        alias: "number"
      },
      string: {
        pattern: /(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,
        inside: {
          comment: {
            pattern: /(&(?:\r\n?|\n)\s*)!.*/,
            lookbehind: !0
          }
        }
      },
      comment: {
        pattern: /!.*/,
        greedy: !0
      },
      boolean: /\.(?:FALSE|TRUE)\.(?:_\w+)?/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,
      keyword: [
        // Types
        /\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,
        // END statements
        /\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,
        // Statements
        /\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,
        // Others
        /\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i
      ],
      operator: [
        /\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i,
        {
          // Use lookbehind to prevent confusion with (/ /)
          pattern: /(^|(?!\().)\/(?!\))/,
          lookbehind: !0
        }
      ],
      punctuation: /\(\/|\/\)|[(),;:&]/
    };
  }
  return Tl;
}
var Sl, Tb;
function bP() {
  if (Tb) return Sl;
  Tb = 1, Sl = e, e.displayName = "fsharp", e.aliases = [];
  function e(t) {
    t.languages.fsharp = t.languages.extend("clike", {
      comment: [
        {
          pattern: /(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,
        lookbehind: !0,
        inside: {
          operator: /->|\*/,
          punctuation: /\./
        }
      },
      keyword: /\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,
      number: [
        /\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,
        /\b0b[01]+(?:uy|y)?\b/,
        /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,
        /\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/
      ],
      operator: /([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/
    }), t.languages.insertBefore("fsharp", "keyword", {
      preprocessor: {
        pattern: /(^[\t ]*)#.*/m,
        lookbehind: !0,
        alias: "property",
        inside: {
          directive: {
            pattern: /(^#)\b(?:else|endif|if|light|line|nowarn)\b/,
            lookbehind: !0,
            alias: "keyword"
          }
        }
      }
    }), t.languages.insertBefore("fsharp", "punctuation", {
      "computation-expression": {
        pattern: /\b[_a-z]\w*(?=\s*\{)/i,
        alias: "keyword"
      }
    }), t.languages.insertBefore("fsharp", "string", {
      annotation: {
        pattern: /\[<.+?>\]/,
        greedy: !0,
        inside: {
          punctuation: /^\[<|>\]$/,
          "class-name": {
            pattern: /^\w+$|(^|;\s*)[A-Z]\w*(?=\()/,
            lookbehind: !0
          },
          "annotation-content": {
            pattern: /[\s\S]+/,
            inside: t.languages.fsharp
          }
        }
      },
      char: {
        pattern: /'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/,
        greedy: !0
      }
    });
  }
  return Sl;
}
var _l, Sb;
function EP() {
  if (Sb) return _l;
  Sb = 1;
  var e = yn();
  _l = t, t.displayName = "ftl", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      for (var a = /[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source, i = 0; i < 2; i++)
        a = a.replace(/<expr>/g, function() {
          return a;
        });
      a = a.replace(/<expr>/g, /[^\s\S]/.source);
      var o = {
        comment: /<#--[\s\S]*?-->/,
        string: [
          {
            // raw string
            pattern: /\br("|')(?:(?!\1)[^\\]|\\.)*\1/,
            greedy: !0
          },
          {
            pattern: RegExp(
              /("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(
                /<expr>/g,
                function() {
                  return a;
                }
              )
            ),
            greedy: !0,
            inside: {
              interpolation: {
                pattern: RegExp(
                  /((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(
                    /<expr>/g,
                    function() {
                      return a;
                    }
                  )
                ),
                lookbehind: !0,
                inside: {
                  "interpolation-punctuation": {
                    pattern: /^\$\{|\}$/,
                    alias: "punctuation"
                  },
                  rest: null
                }
              }
            }
          }
        ],
        keyword: /\b(?:as)\b/,
        boolean: /\b(?:false|true)\b/,
        "builtin-function": {
          pattern: /((?:^|[^?])\?\s*)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        function: /\b\w+(?=\s*\()/,
        number: /\b\d+(?:\.\d+)?\b/,
        operator: /\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,
        punctuation: /[,;.:()[\]{}]/
      };
      o.string[1].inside.interpolation.inside.rest = o, r.languages.ftl = {
        "ftl-comment": {
          // the pattern is shortened to be more efficient
          pattern: /^<#--[\s\S]*/,
          alias: "comment"
        },
        "ftl-directive": {
          pattern: /^<[\s\S]+>$/,
          inside: {
            directive: {
              pattern: /(^<\/?)[#@][a-z]\w*/i,
              lookbehind: !0,
              alias: "keyword"
            },
            punctuation: /^<\/?|\/?>$/,
            content: {
              pattern: /\s*\S[\s\S]*/,
              alias: "ftl",
              inside: o
            }
          }
        },
        "ftl-interpolation": {
          pattern: /^\$\{[\s\S]*\}$/,
          inside: {
            punctuation: /^\$\{|\}$/,
            content: {
              pattern: /\s*\S[\s\S]*/,
              alias: "ftl",
              inside: o
            }
          }
        }
      }, r.hooks.add("before-tokenize", function(s) {
        var l = RegExp(
          /<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(
            /<expr>/g,
            function() {
              return a;
            }
          ),
          "gi"
        );
        r.languages["markup-templating"].buildPlaceholders(
          s,
          "ftl",
          l
        );
      }), r.hooks.add("after-tokenize", function(s) {
        r.languages["markup-templating"].tokenizePlaceholders(s, "ftl");
      });
    }(n);
  }
  return _l;
}
var Al, _b;
function yP() {
  if (_b) return Al;
  _b = 1, Al = e, e.displayName = "gap", e.aliases = [];
  function e(t) {
    t.languages.gap = {
      shell: {
        pattern: /^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,
        greedy: !0,
        inside: {
          gap: {
            pattern: /^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/,
            lookbehind: !0,
            inside: null
            // see below
          },
          punctuation: /^gap>/
        }
      },
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          continuation: {
            pattern: /([\r\n])>/,
            lookbehind: !0,
            alias: "punctuation"
          }
        }
      },
      keyword: /\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,
      boolean: /\b(?:false|true)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: {
        pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
        lookbehind: !0
      },
      continuation: {
        pattern: /([\r\n])>/,
        lookbehind: !0,
        alias: "punctuation"
      },
      operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,
      punctuation: /[()[\]{},;.:]/
    }, t.languages.gap.shell.inside.gap.inside = t.languages.gap;
  }
  return Al;
}
var xl, Ab;
function vP() {
  if (Ab) return xl;
  Ab = 1, xl = e, e.displayName = "gcode", e.aliases = [];
  function e(t) {
    t.languages.gcode = {
      comment: /;.*|\B\(.*?\)\B/,
      string: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      keyword: /\b[GM]\d+(?:\.\d+)?\b/,
      property: /\b[A-Z]/,
      checksum: {
        pattern: /(\*)\d+/,
        lookbehind: !0,
        alias: "number"
      },
      // T0:0:0
      punctuation: /[:*]/
    };
  }
  return xl;
}
var Rl, xb;
function TP() {
  if (xb) return Rl;
  xb = 1, Rl = e, e.displayName = "gdscript", e.aliases = [];
  function e(t) {
    t.languages.gdscript = {
      comment: /#.*/,
      string: {
        pattern: /@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/,
        greedy: !0
      },
      "class-name": {
        // class_name Foo, extends Bar, class InnerClass
        // export(int) var baz, export(int, 0) var i
        // as Node
        // const FOO: int = 9, var bar: bool = true
        // func add(reference: Item, amount: int) -> Item:
        pattern: /(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,
        lookbehind: !0
      },
      keyword: /\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,
      function: /\b[a-z_]\w*(?=[ \t]*\()/i,
      variable: /\$\w+/,
      number: [
        /\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/,
        /\b(?:INF|NAN|PI|TAU)\b/
      ],
      constant: /\b[A-Z][A-Z_\d]*\b/,
      boolean: /\b(?:false|true)\b/,
      operator: /->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,
      punctuation: /[.:,;()[\]{}]/
    };
  }
  return Rl;
}
var Il, Rb;
function SP() {
  if (Rb) return Il;
  Rb = 1, Il = e, e.displayName = "gedcom", e.aliases = [];
  function e(t) {
    t.languages.gedcom = {
      "line-value": {
        // Preceded by level, optional pointer, and tag
        pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,
        lookbehind: !0,
        inside: {
          pointer: {
            pattern: /^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/,
            alias: "variable"
          }
        }
      },
      tag: {
        // Preceded by level and optional pointer
        pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m,
        lookbehind: !0,
        alias: "string"
      },
      level: {
        pattern: /(^[\t ]*)\d+/m,
        lookbehind: !0,
        alias: "number"
      },
      pointer: {
        pattern: /@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/,
        alias: "variable"
      }
    };
  }
  return Il;
}
var wl, Ib;
function _P() {
  if (Ib) return wl;
  Ib = 1, wl = e, e.displayName = "gherkin", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;
      n.languages.gherkin = {
        pystring: {
          pattern: /("""|''')[\s\S]+?\1/,
          alias: "string"
        },
        comment: {
          pattern: /(^[ \t]*)#.*/m,
          lookbehind: !0
        },
        tag: {
          pattern: /(^[ \t]*)@\S*/m,
          lookbehind: !0
        },
        feature: {
          pattern: /((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,
          lookbehind: !0,
          inside: {
            important: {
              pattern: /(:)[^\r\n]+/,
              lookbehind: !0
            },
            keyword: /[^:\r\n]+:/
          }
        },
        scenario: {
          pattern: /(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,
          lookbehind: !0,
          inside: {
            important: {
              pattern: /(:)[^\r\n]*/,
              lookbehind: !0
            },
            keyword: /[^:\r\n]+:/
          }
        },
        "table-body": {
          // Look-behind is used to skip the table head, which has the same format as any table row
          pattern: RegExp("(" + r + ")(?:" + r + ")+"),
          lookbehind: !0,
          inside: {
            outline: {
              pattern: /<[^>]+>/,
              alias: "variable"
            },
            td: {
              pattern: /\s*[^\s|][^|]*/,
              alias: "string"
            },
            punctuation: /\|/
          }
        },
        "table-head": {
          pattern: RegExp(r),
          inside: {
            th: {
              pattern: /\s*[^\s|][^|]*/,
              alias: "variable"
            },
            punctuation: /\|/
          }
        },
        atrule: {
          pattern: /(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,
          lookbehind: !0
        },
        string: {
          pattern: /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,
          inside: {
            outline: {
              pattern: /<[^>]+>/,
              alias: "variable"
            }
          }
        },
        outline: {
          pattern: /<[^>]+>/,
          alias: "variable"
        }
      };
    })(t);
  }
  return wl;
}
var Cl, wb;
function AP() {
  if (wb) return Cl;
  wb = 1, Cl = e, e.displayName = "git", e.aliases = [];
  function e(t) {
    t.languages.git = {
      /*
       * A simple one line comment like in a git status command
       * For instance:
       * $ git status
       * # On branch infinite-scroll
       * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
       * # and have 1 and 2 different commits each, respectively.
       * nothing to commit (working directory clean)
       */
      comment: /^#.*/m,
      /*
       * Regexp to match the changed lines in a git diff output. Check the example below.
       */
      deleted: /^[-–].*/m,
      inserted: /^\+.*/m,
      /*
       * a string (double and simple quote)
       */
      string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      /*
       * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
       * For instance:
       * $ git add file.txt
       */
      command: {
        pattern: /^.*\$ git .*$/m,
        inside: {
          /*
           * A git command can contain a parameter starting by a single or a double dash followed by a string
           * For instance:
           * $ git diff --cached
           * $ git log -p
           */
          parameter: /\s--?\w+/
        }
      },
      /*
       * Coordinates displayed in a git diff command
       * For instance:
       * $ git diff
       * diff --git file.txt file.txt
       * index 6214953..1d54a52 100644
       * --- file.txt
       * +++ file.txt
       * @@ -1 +1,2 @@
       * -Here's my tetx file
       * +Here's my text file
       * +And this is the second line
       */
      coord: /^@@.*@@$/m,
      /*
       * Match a "commit [SHA1]" line in a git log output.
       * For instance:
       * $ git log
       * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
       * Author: lgiraudel
       * Date:   Mon Feb 17 11:18:34 2014 +0100
       *
       *     Add of a new line
       */
      "commit-sha1": /^commit \w{40}$/m
    };
  }
  return Cl;
}
var kl, Cb;
function xP() {
  if (Cb) return kl;
  Cb = 1;
  var e = Mr();
  kl = t, t.displayName = "glsl", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.glsl = n.languages.extend("c", {
      keyword: /\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/
    });
  }
  return kl;
}
var Nl, kb;
function RP() {
  if (kb) return Nl;
  kb = 1, Nl = e, e.displayName = "gml", e.aliases = [];
  function e(t) {
    t.languages.gamemakerlanguage = t.languages.gml = t.languages.extend("clike", {
      keyword: /\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,
      number: /(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,
      operator: /--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,
      constant: /\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,
      variable: /\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/
    });
  }
  return Nl;
}
var Ol, Nb;
function IP() {
  if (Nb) return Ol;
  Nb = 1, Ol = e, e.displayName = "gn", e.aliases = ["gni"];
  function e(t) {
    t.languages.gn = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      "string-literal": {
        pattern: /(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,
            lookbehind: !0,
            inside: {
              number: /^\$0x[\s\S]{2}$/,
              variable: /^\$\w+$/,
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              expression: {
                pattern: /[\s\S]+/,
                inside: null
                // see below
              }
            }
          },
          string: /[\s\S]+/
        }
      },
      keyword: /\b(?:else|if)\b/,
      boolean: /\b(?:false|true)\b/,
      "builtin-function": {
        // a few functions get special highlighting to improve readability
        pattern: /\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i,
        alias: "keyword"
      },
      function: /\b[a-z_]\w*(?=\s*\()/i,
      constant: /\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,
      number: /-?\b\d+\b/,
      operator: /[-+!=<>]=?|&&|\|\|/,
      punctuation: /[(){}[\],.]/
    }, t.languages.gn["string-literal"].inside.interpolation.inside.expression.inside = t.languages.gn, t.languages.gni = t.languages.gn;
  }
  return Ol;
}
var Ll, Ob;
function wP() {
  if (Ob) return Ll;
  Ob = 1, Ll = e, e.displayName = "goModule", e.aliases = [];
  function e(t) {
    t.languages["go-mod"] = t.languages["go-module"] = {
      comment: {
        pattern: /\/\/.*/,
        greedy: !0
      },
      version: {
        pattern: /(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/,
        lookbehind: !0,
        alias: "number"
      },
      "go-version": {
        pattern: /((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/,
        lookbehind: !0,
        alias: "number"
      },
      keyword: {
        pattern: /^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m,
        lookbehind: !0
      },
      operator: /=>/,
      punctuation: /[()[\],]/
    };
  }
  return Ll;
}
var Dl, Lb;
function CP() {
  if (Lb) return Dl;
  Lb = 1, Dl = e, e.displayName = "go", e.aliases = [];
  function e(t) {
    t.languages.go = t.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
      boolean: /\b(?:_|false|iota|nil|true)\b/,
      number: [
        // binary and octal integers
        /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
        // hexadecimal integers and floats
        /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
        // decimal integers and floats
        /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
      ],
      operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
      builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
    }), t.languages.insertBefore("go", "string", {
      char: {
        pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
        greedy: !0
      }
    }), delete t.languages.go["class-name"];
  }
  return Dl;
}
var Ml, Db;
function kP() {
  if (Db) return Ml;
  Db = 1, Ml = e, e.displayName = "graphql", e.aliases = [];
  function e(t) {
    t.languages.graphql = {
      comment: /#.*/,
      description: {
        pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
        greedy: !0,
        alias: "string",
        inside: {
          "language-markdown": {
            pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
            lookbehind: !0,
            inside: t.languages.markdown
          }
        }
      },
      string: {
        pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      boolean: /\b(?:false|true)\b/,
      variable: /\$[a-z_]\w*/i,
      directive: {
        pattern: /@[a-z_]\w*/i,
        alias: "function"
      },
      "attr-name": {
        pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
        greedy: !0
      },
      "atom-input": {
        pattern: /\b[A-Z]\w*Input\b/,
        alias: "class-name"
      },
      scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
      constant: /\b[A-Z][A-Z_\d]*\b/,
      "class-name": {
        pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
        lookbehind: !0
      },
      fragment: {
        pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      "definition-mutation": {
        pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      "definition-query": {
        pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
        lookbehind: !0,
        alias: "function"
      },
      keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
      operator: /[!=|&]|\.{3}/,
      "property-query": /\w+(?=\s*\()/,
      object: /\w+(?=\s*\{)/,
      punctuation: /[!(){}\[\]:=,]/,
      property: /\w+/
    }, t.hooks.add("after-tokenize", function(r) {
      if (r.language !== "graphql")
        return;
      var a = r.tokens.filter(function(x) {
        return typeof x != "string" && x.type !== "comment" && x.type !== "scalar";
      }), i = 0;
      function o(x) {
        return a[i + x];
      }
      function s(x, v) {
        v = v || 0;
        for (var S = 0; S < x.length; S++) {
          var g = o(S + v);
          if (!g || g.type !== x[S])
            return !1;
        }
        return !0;
      }
      function l(x, v) {
        for (var S = 1, g = i; g < a.length; g++) {
          var y = a[g], T = y.content;
          if (y.type === "punctuation" && typeof T == "string") {
            if (x.test(T))
              S++;
            else if (v.test(T) && (S--, S === 0))
              return g;
          }
        }
        return -1;
      }
      function u(x, v) {
        var S = x.alias;
        S ? Array.isArray(S) || (x.alias = S = [S]) : x.alias = S = [], S.push(v);
      }
      for (; i < a.length; ) {
        var c = a[i++];
        if (c.type === "keyword" && c.content === "mutation") {
          var d = [];
          if (s(["definition-mutation", "punctuation"]) && o(1).content === "(") {
            i += 2;
            var m = l(/^\($/, /^\)$/);
            if (m === -1)
              continue;
            for (; i < m; i++) {
              var f = o(0);
              f.type === "variable" && (u(f, "variable-input"), d.push(f.content));
            }
            i = m + 1;
          }
          if (s(["punctuation", "property-query"]) && o(0).content === "{" && (i++, u(o(0), "property-mutation"), d.length > 0)) {
            var h = l(/^\{$/, /^\}$/);
            if (h === -1)
              continue;
            for (var E = i; E < h; E++) {
              var I = a[E];
              I.type === "variable" && d.indexOf(I.content) >= 0 && u(I, "variable-input");
            }
          }
        }
      }
    });
  }
  return Ml;
}
var Pl, Mb;
function NP() {
  if (Mb) return Pl;
  Mb = 1, Pl = e, e.displayName = "groovy", e.aliases = [];
  function e(t) {
    t.languages.groovy = t.languages.extend("clike", {
      string: [
        {
          // https://groovy-lang.org/syntax.html#_dollar_slashy_string
          pattern: /("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
          greedy: !0
        },
        {
          // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with
          // simple division (see JS regex), so find a fix maybe?
          pattern: /(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: !0
        }
      ],
      keyword: /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
      number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
      operator: {
        pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
        lookbehind: !0
      },
      punctuation: /\.+|[{}[\];(),:$]/
    }), t.languages.insertBefore("groovy", "string", {
      shebang: {
        pattern: /#!.+/,
        alias: "comment"
      }
    }), t.languages.insertBefore("groovy", "punctuation", {
      "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
    }), t.languages.insertBefore("groovy", "function", {
      annotation: {
        pattern: /(^|[^.])@\w+/,
        lookbehind: !0,
        alias: "punctuation"
      }
    }), t.hooks.add("wrap", function(n) {
      if (n.language === "groovy" && n.type === "string") {
        var r = n.content.value[0];
        if (r != "'") {
          var a = /([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;
          r === "$" && (a = /([^\$])(?:\$(?:\{.*?\}|[\w.]+))/), n.content.value = n.content.value.replace(/&lt;/g, "<").replace(/&amp;/g, "&"), n.content = t.highlight(n.content.value, {
            expression: {
              pattern: a,
              lookbehind: !0,
              inside: t.languages.groovy
            }
          }), n.classes.push(r === "/" ? "regex" : "gstring");
        }
      }
    });
  }
  return Pl;
}
var Fl, Pb;
function OP() {
  if (Pb) return Fl;
  Pb = 1;
  var e = ro();
  Fl = t, t.displayName = "haml", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.haml = {
        // Multiline stuff should appear before the rest
        "multiline-comment": {
          pattern: /((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/,
          lookbehind: !0,
          alias: "comment"
        },
        "multiline-code": [
          {
            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,
            lookbehind: !0,
            inside: r.languages.ruby
          },
          {
            pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,
            lookbehind: !0,
            inside: r.languages.ruby
          }
        ],
        // See at the end of the file for known filters
        filter: {
          pattern: /((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "symbol"
            }
          }
        },
        markup: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)<.+/,
          lookbehind: !0,
          inside: r.languages.markup
        },
        doctype: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/,
          lookbehind: !0
        },
        tag: {
          // Allows for one nested group of braces
          pattern: /((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,
          lookbehind: !0,
          inside: {
            attributes: [
              {
                // Lookbehind tries to prevent interpolations from breaking it all
                // Allows for one nested group of braces
                pattern: /(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/,
                lookbehind: !0,
                inside: r.languages.ruby
              },
              {
                pattern: /\([^)]+\)/,
                inside: {
                  "attr-value": {
                    pattern: /(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/,
                    lookbehind: !0
                  },
                  "attr-name": /[\w:-]+(?=\s*!?=|\s*[,)])/,
                  punctuation: /[=(),]/
                }
              },
              {
                pattern: /\[[^\]]+\]/,
                inside: r.languages.ruby
              }
            ],
            punctuation: /[<>]/
          }
        },
        code: {
          pattern: /((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/,
          lookbehind: !0,
          inside: r.languages.ruby
        },
        // Interpolations in plain text
        interpolation: {
          pattern: /#\{[^}]+\}/,
          inside: {
            delimiter: {
              pattern: /^#\{|\}$/,
              alias: "punctuation"
            },
            ruby: {
              pattern: /[\s\S]+/,
              inside: r.languages.ruby
            }
          }
        },
        punctuation: {
          pattern: /((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/,
          lookbehind: !0
        }
      };
      for (var a = "((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+", i = [
        "css",
        {
          filter: "coffee",
          language: "coffeescript"
        },
        "erb",
        "javascript",
        "less",
        "markdown",
        "ruby",
        "scss",
        "textile"
      ], o = {}, s = 0, l = i.length; s < l; s++) {
        var u = i[s];
        u = typeof u == "string" ? {
          filter: u,
          language: u
        } : u, r.languages[u.language] && (o["filter-" + u.filter] = {
          pattern: RegExp(
            a.replace("{{filter_name}}", function() {
              return u.filter;
            })
          ),
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "symbol"
            },
            text: {
              pattern: /[\s\S]+/,
              alias: [u.language, "language-" + u.language],
              inside: r.languages[u.language]
            }
          }
        });
      }
      r.languages.insertBefore("haml", "filter", o);
    }(n);
  }
  return Fl;
}
var Bl, Fb;
function LP() {
  if (Fb) return Bl;
  Fb = 1;
  var e = yn();
  Bl = t, t.displayName = "handlebars", t.aliases = ["hbs"];
  function t(n) {
    n.register(e), function(r) {
      r.languages.handlebars = {
        comment: /\{\{![\s\S]*?\}\}/,
        delimiter: {
          pattern: /^\{\{\{?|\}\}\}?$/,
          alias: "punctuation"
        },
        string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
        boolean: /\b(?:false|true)\b/,
        block: {
          pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,
          lookbehind: !0,
          alias: "keyword"
        },
        brackets: {
          pattern: /\[[^\]]+\]/,
          inside: {
            punctuation: /\[|\]/,
            variable: /[\s\S]+/
          }
        },
        punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
        variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
      }, r.hooks.add("before-tokenize", function(a) {
        var i = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
        r.languages["markup-templating"].buildPlaceholders(
          a,
          "handlebars",
          i
        );
      }), r.hooks.add("after-tokenize", function(a) {
        r.languages["markup-templating"].tokenizePlaceholders(
          a,
          "handlebars"
        );
      }), r.languages.hbs = r.languages.handlebars;
    }(n);
  }
  return Bl;
}
var Ul, Bb;
function Uf() {
  if (Bb) return Ul;
  Bb = 1, Ul = e, e.displayName = "haskell", e.aliases = ["hs"];
  function e(t) {
    t.languages.haskell = {
      comment: {
        pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m,
        lookbehind: !0
      },
      char: {
        pattern: /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
        alias: "string"
      },
      string: {
        pattern: /"(?:[^\\"]|\\(?:\S|\s+\\))*"/,
        greedy: !0
      },
      keyword: /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|hiding|import|qualified)\b/,
          punctuation: /\./
        }
      },
      // These are builtin variables only. Constructors are highlighted later as a constant.
      builtin: /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
      // decimal integers and floating point numbers | octal integers | hexadecimal integers
      number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
      operator: [
        {
          // infix operator
          pattern: /`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/,
          greedy: !0
        },
        {
          // function composition
          pattern: /(\s)\.(?=\s)/,
          lookbehind: !0
        },
        // Most of this is needed because of the meaning of a single '.'.
        // If it stands alone freely, it is the function composition.
        // It may also be a separator between a module name and an identifier => no
        // operator. If it comes together with other special characters it is an
        // operator too.
        //
        // This regex means: /[-!#$%*+=?&@|~.:<>^\\\/]+/ without /\./.
        /[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/
      ],
      // In Haskell, nearly everything is a variable, do not highlight these.
      hvariable: {
        pattern: /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/,
        inside: {
          punctuation: /\./
        }
      },
      constant: {
        pattern: /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/,
        inside: {
          punctuation: /\./
        }
      },
      punctuation: /[{}[\];(),.:]/
    }, t.languages.hs = t.languages.haskell;
  }
  return Ul;
}
var jl, Ub;
function DP() {
  if (Ub) return jl;
  Ub = 1, jl = e, e.displayName = "haxe", e.aliases = [];
  function e(t) {
    t.languages.haxe = t.languages.extend("clike", {
      string: {
        // Strings can be multi-line
        pattern: /"(?:[^"\\]|\\[\s\S])*"/,
        greedy: !0
      },
      "class-name": [
        {
          pattern: /(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/,
          lookbehind: !0
        },
        // based on naming convention
        /\b[A-Z]\w*/
      ],
      // The final look-ahead prevents highlighting of keywords if expressions such as "haxe.macro.Expr"
      keyword: /\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,
      function: {
        pattern: /\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i,
        greedy: !0
      },
      operator: /\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/
    }), t.languages.insertBefore("haxe", "string", {
      "string-interpolation": {
        pattern: /'(?:[^'\\]|\\[\s\S])*'/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /(^|[^\\])\$(?:\w+|\{[^{}]+\})/,
            lookbehind: !0,
            inside: {
              "interpolation-punctuation": {
                pattern: /^\$\{?|\}$/,
                alias: "punctuation"
              },
              expression: {
                pattern: /[\s\S]+/,
                inside: t.languages.haxe
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.insertBefore("haxe", "class-name", {
      regex: {
        pattern: /~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,
        greedy: !0,
        inside: {
          "regex-flags": /\b[a-z]+$/,
          "regex-source": {
            pattern: /^(~\/)[\s\S]+(?=\/$)/,
            lookbehind: !0,
            alias: "language-regex",
            inside: t.languages.regex
          },
          "regex-delimiter": /^~\/|\/$/
        }
      }
    }), t.languages.insertBefore("haxe", "keyword", {
      preprocessor: {
        pattern: /#(?:else|elseif|end|if)\b.*/,
        alias: "property"
      },
      metadata: {
        pattern: /@:?[\w.]+/,
        alias: "symbol"
      },
      reification: {
        pattern: /\$(?:\w+|(?=\{))/,
        alias: "important"
      }
    });
  }
  return jl;
}
var Hl, jb;
function MP() {
  if (jb) return Hl;
  jb = 1, Hl = e, e.displayName = "hcl", e.aliases = [];
  function e(t) {
    t.languages.hcl = {
      comment: /(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,
      heredoc: {
        pattern: /<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m,
        greedy: !0,
        alias: "string"
      },
      keyword: [
        {
          pattern: /(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,
          inside: {
            type: {
              pattern: /(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i,
              lookbehind: !0,
              alias: "variable"
            }
          }
        },
        {
          pattern: /(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,
          inside: {
            type: {
              pattern: /(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,
              lookbehind: !0,
              alias: "variable"
            }
          }
        },
        /[\w-]+(?=\s+\{)/
      ],
      property: [/[-\w\.]+(?=\s*=(?!=))/, /"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/],
      string: {
        pattern: /"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,
            lookbehind: !0,
            inside: {
              type: {
                pattern: /(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i,
                lookbehind: !0,
                alias: "variable"
              },
              keyword: /\b(?:count|data|local|module|path|self|terraform|var)\b/i,
              function: /\w+(?=\()/,
              string: {
                pattern: /"(?:\\[\s\S]|[^\\"])*"/,
                greedy: !0
              },
              number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
              punctuation: /[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/
            }
          }
        }
      },
      number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
      boolean: /\b(?:false|true)\b/i,
      punctuation: /[=\[\]{}]/
    };
  }
  return Hl;
}
var ql, Hb;
function PP() {
  if (Hb) return ql;
  Hb = 1;
  var e = Mr();
  ql = t, t.displayName = "hlsl", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.hlsl = n.languages.extend("c", {
      // Regarding keywords and class names:
      // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words
      "class-name": [
        n.languages.c["class-name"],
        /\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/
      ],
      keyword: [
        // HLSL keyword
        /\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,
        // scalar, vector, and matrix types
        /\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/
      ],
      // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers
      number: /(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,
      boolean: /\b(?:false|true)\b/
    });
  }
  return ql;
}
var $l, qb;
function FP() {
  if (qb) return $l;
  qb = 1, $l = e, e.displayName = "hoon", e.aliases = [];
  function e(t) {
    t.languages.hoon = {
      comment: {
        pattern: /::.*/,
        greedy: !0
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      constant: /%(?:\.[ny]|[\w-]+)/,
      "class-name": /@(?:[a-z0-9-]*[a-z0-9])?|\*/i,
      function: /(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,
      keyword: /\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/
    };
  }
  return $l;
}
var zl, $b;
function BP() {
  if ($b) return zl;
  $b = 1, zl = e, e.displayName = "hpkp", e.aliases = [];
  function e(t) {
    t.languages.hpkp = {
      directive: {
        pattern: /\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i,
        alias: "property"
      },
      operator: /=/,
      punctuation: /;/
    };
  }
  return zl;
}
var Gl, zb;
function UP() {
  if (zb) return Gl;
  zb = 1, Gl = e, e.displayName = "hsts", e.aliases = [];
  function e(t) {
    t.languages.hsts = {
      directive: {
        pattern: /\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i,
        alias: "property"
      },
      operator: /=/,
      punctuation: /;/
    };
  }
  return Gl;
}
var Vl, Gb;
function jP() {
  if (Gb) return Vl;
  Gb = 1, Vl = e, e.displayName = "http", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(d) {
        return RegExp("(^(?:" + d + "):[ 	]*(?![ 	]))[^]+", "i");
      }
      n.languages.http = {
        "request-line": {
          pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
          inside: {
            // HTTP Method
            method: {
              pattern: /^[A-Z]+\b/,
              alias: "property"
            },
            // Request Target e.g. http://example.com, /path/to/file
            "request-target": {
              pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,
              lookbehind: !0,
              alias: "url",
              inside: n.languages.uri
            },
            // HTTP Version
            "http-version": {
              pattern: /^(\s)HTTP\/[\d.]+/,
              lookbehind: !0,
              alias: "property"
            }
          }
        },
        "response-status": {
          pattern: /^HTTP\/[\d.]+ \d+ .+/m,
          inside: {
            // HTTP Version
            "http-version": {
              pattern: /^HTTP\/[\d.]+/,
              alias: "property"
            },
            // Status Code
            "status-code": {
              pattern: /^(\s)\d+(?=\s)/,
              lookbehind: !0,
              alias: "number"
            },
            // Reason Phrase
            "reason-phrase": {
              pattern: /^(\s).+/,
              lookbehind: !0,
              alias: "string"
            }
          }
        },
        header: {
          pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
          inside: {
            "header-value": [
              {
                pattern: r(/Content-Security-Policy/.source),
                lookbehind: !0,
                alias: ["csp", "languages-csp"],
                inside: n.languages.csp
              },
              {
                pattern: r(/Public-Key-Pins(?:-Report-Only)?/.source),
                lookbehind: !0,
                alias: ["hpkp", "languages-hpkp"],
                inside: n.languages.hpkp
              },
              {
                pattern: r(/Strict-Transport-Security/.source),
                lookbehind: !0,
                alias: ["hsts", "languages-hsts"],
                inside: n.languages.hsts
              },
              {
                pattern: r(/[^:]+/.source),
                lookbehind: !0
              }
            ],
            "header-name": {
              pattern: /^[^:]+/,
              alias: "keyword"
            },
            punctuation: /^:/
          }
        }
      };
      var a = n.languages, i = {
        "application/javascript": a.javascript,
        "application/json": a.json || a.javascript,
        "application/xml": a.xml,
        "text/xml": a.xml,
        "text/html": a.html,
        "text/css": a.css,
        "text/plain": a.plain
      }, o = {
        "application/json": !0,
        "application/xml": !0
      };
      function s(d) {
        var m = d.replace(/^[a-z]+\//, ""), f = "\\w+/(?:[\\w.-]+\\+)+" + m + "(?![+\\w.-])";
        return "(?:" + d + "|" + f + ")";
      }
      var l;
      for (var u in i)
        if (i[u]) {
          l = l || {};
          var c = o[u] ? s(u) : u;
          l[u.replace(/\//g, "-")] = {
            pattern: RegExp(
              "(" + /content-type:\s*/.source + c + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + // This is a little interesting:
              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.
              // However, when writing code by hand (e.g. to display on a website) people can forget about this,
              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of
              // the body does not start with a [\w-] character (as headers do).
              /[^ \t\w-][\s\S]*/.source,
              "i"
            ),
            lookbehind: !0,
            inside: i[u]
          };
        }
      l && n.languages.insertBefore("http", "header", l);
    })(t);
  }
  return Vl;
}
var Wl, Vb;
function HP() {
  if (Vb) return Wl;
  Vb = 1, Wl = e, e.displayName = "ichigojam", e.aliases = [];
  function e(t) {
    t.languages.ichigojam = {
      comment: /(?:\B'|REM)(?:[^\n\r]*)/i,
      string: {
        pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
        greedy: !0
      },
      number: /\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
      keyword: /\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,
      function: /\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,
      label: /(?:\B@\S+)/,
      operator: /<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,
      punctuation: /[\[,;:()\]]/
    };
  }
  return Wl;
}
var Yl, Wb;
function qP() {
  if (Wb) return Yl;
  Wb = 1, Yl = e, e.displayName = "icon", e.aliases = [];
  function e(t) {
    t.languages.icon = {
      comment: /#.*/,
      string: {
        pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,
        greedy: !0
      },
      number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
      "builtin-keyword": {
        pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
        alias: "variable"
      },
      directive: {
        pattern: /\$\w+/,
        alias: "builtin"
      },
      keyword: /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
      function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
      operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
      punctuation: /[\[\](){},;]/
    };
  }
  return Yl;
}
var Kl, Yb;
function $P() {
  if (Yb) return Kl;
  Yb = 1, Kl = e, e.displayName = "icuMessageFormat", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(u, c) {
        return c <= 0 ? /[]/.source : u.replace(/<SELF>/g, function() {
          return r(u, c - 1);
        });
      }
      var a = /'[{}:=,](?:[^']|'')*'(?!')/, i = {
        pattern: /''/,
        greedy: !0,
        alias: "operator"
      }, o = {
        pattern: a,
        greedy: !0,
        inside: {
          escape: i
        }
      }, s = r(
        /\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(
          /<STR>/g,
          function() {
            return a.source;
          }
        ),
        8
      ), l = {
        pattern: RegExp(s),
        inside: {
          message: {
            pattern: /^(\{)[\s\S]+(?=\}$)/,
            lookbehind: !0,
            inside: null
            // see below
          },
          "message-delimiter": {
            pattern: /./,
            alias: "punctuation"
          }
        }
      };
      n.languages["icu-message-format"] = {
        argument: {
          pattern: RegExp(s),
          greedy: !0,
          inside: {
            content: {
              pattern: /^(\{)[\s\S]+(?=\}$)/,
              lookbehind: !0,
              inside: {
                "argument-name": {
                  pattern: /^(\s*)[^{}:=,\s]+/,
                  lookbehind: !0
                },
                "choice-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details
                  pattern: /^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    punctuation: /\|/,
                    range: {
                      pattern: /^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,
                      lookbehind: !0,
                      inside: {
                        operator: /[<#\u2264]/,
                        number: /\S+/
                      }
                    },
                    rest: null
                    // see below
                  }
                },
                "plural-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation
                  pattern: /^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    offset: /^offset:\s*\d+/,
                    "nested-message": l,
                    selector: {
                      pattern: /=\d+|[^{}:=,\s]+/,
                      inside: {
                        keyword: /^(?:few|many|one|other|two|zero)$/
                      }
                    }
                  }
                },
                "select-style": {
                  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation
                  pattern: /^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,
                  lookbehind: !0,
                  inside: {
                    "nested-message": l,
                    selector: {
                      pattern: /[^{}:=,\s]+/,
                      inside: {
                        keyword: /^other$/
                      }
                    }
                  }
                },
                keyword: /\b(?:choice|plural|select|selectordinal)\b/,
                "arg-type": {
                  pattern: /\b(?:date|duration|number|ordinal|spellout|time)\b/,
                  alias: "keyword"
                },
                "arg-skeleton": {
                  pattern: /(,\s*)::[^{}:=,\s]+/,
                  lookbehind: !0
                },
                "arg-style": {
                  pattern: /(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/,
                  lookbehind: !0
                },
                "arg-style-text": {
                  pattern: RegExp(
                    /(^\s*,\s*(?=\S))/.source + r(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source, 8) + "$"
                  ),
                  lookbehind: !0,
                  alias: "string"
                },
                punctuation: /,/
              }
            },
            "argument-delimiter": {
              pattern: /./,
              alias: "operator"
            }
          }
        },
        escape: i,
        string: o
      }, l.inside.message.inside = n.languages["icu-message-format"], n.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest = n.languages["icu-message-format"];
    })(t);
  }
  return Kl;
}
var Xl, Kb;
function zP() {
  if (Kb) return Xl;
  Kb = 1;
  var e = Uf();
  Xl = t, t.displayName = "idris", t.aliases = ["idr"];
  function t(n) {
    n.register(e), n.languages.idris = n.languages.extend("haskell", {
      comment: {
        pattern: /(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m
      },
      keyword: /\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,
      builtin: void 0
    }), n.languages.insertBefore("idris", "keyword", {
      "import-statement": {
        pattern: /(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /\./
        }
      }
    }), n.languages.idr = n.languages.idris;
  }
  return Xl;
}
var Zl, Xb;
function GP() {
  if (Xb) return Zl;
  Xb = 1, Zl = e, e.displayName = "iecst", e.aliases = [];
  function e(t) {
    t.languages.iecst = {
      comment: [
        {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: [
        /\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,
        /\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/
      ],
      "class-name": /\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,
      address: {
        pattern: /%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/,
        alias: "symbol"
      },
      number: /\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      boolean: /\b(?:FALSE|NULL|TRUE)\b/,
      operator: /S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      punctuation: /[()[\].,;]/
    };
  }
  return Zl;
}
var Ql, Zb;
function VP() {
  if (Zb) return Ql;
  Zb = 1, Ql = e, e.displayName = "ignore", e.aliases = ["gitignore", "hgignore", "npmignore"];
  function e(t) {
    (function(n) {
      n.languages.ignore = {
        // https://git-scm.com/docs/gitignore
        comment: /^#.*/m,
        entry: {
          pattern: /\S(?:.*(?:(?:\\ )|\S))?/,
          alias: "string",
          inside: {
            operator: /^!|\*\*?|\?/,
            regex: {
              pattern: /(^|[^\\])\[[^\[\]]*\]/,
              lookbehind: !0
            },
            punctuation: /\//
          }
        }
      }, n.languages.gitignore = n.languages.ignore, n.languages.hgignore = n.languages.ignore, n.languages.npmignore = n.languages.ignore;
    })(t);
  }
  return Ql;
}
var Jl, Qb;
function WP() {
  if (Qb) return Jl;
  Qb = 1, Jl = e, e.displayName = "inform7", e.aliases = [];
  function e(t) {
    t.languages.inform7 = {
      string: {
        pattern: /"[^"]*"/,
        inside: {
          substitution: {
            pattern: /\[[^\[\]]+\]/,
            inside: {
              delimiter: {
                pattern: /\[|\]/,
                alias: "punctuation"
              }
              // See rest below
            }
          }
        }
      },
      comment: {
        pattern: /\[[^\[\]]+\]/,
        greedy: !0
      },
      title: {
        pattern: /^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im,
        alias: "important"
      },
      number: {
        pattern: /(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,
        lookbehind: !0
      },
      verb: {
        pattern: /(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,
        lookbehind: !0,
        alias: "operator"
      },
      keyword: {
        pattern: /(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,
        lookbehind: !0
      },
      property: {
        pattern: /(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,
        lookbehind: !0,
        alias: "symbol"
      },
      position: {
        pattern: /(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,
        lookbehind: !0,
        alias: "keyword"
      },
      type: {
        pattern: /(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,
        lookbehind: !0,
        alias: "variable"
      },
      punctuation: /[.,:;(){}]/
    }, t.languages.inform7.string.inside.substitution.inside.rest = t.languages.inform7, t.languages.inform7.string.inside.substitution.inside.rest.text = {
      pattern: /\S(?:\s*\S)*/,
      alias: "comment"
    };
  }
  return Jl;
}
var eu, Jb;
function YP() {
  if (Jb) return eu;
  Jb = 1, eu = e, e.displayName = "ini", e.aliases = [];
  function e(t) {
    t.languages.ini = {
      /**
       * The component mimics the behavior of the Win32 API parser.
       *
       * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}
       */
      comment: {
        pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m,
        lookbehind: !0
      },
      section: {
        pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
        lookbehind: !0,
        inside: {
          "section-name": {
            pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,
            lookbehind: !0,
            alias: "selector"
          },
          punctuation: /\[|\]/
        }
      },
      key: {
        pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      value: {
        pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
        lookbehind: !0,
        alias: "attr-value",
        inside: {
          "inner-value": {
            pattern: /^("|').+(?=\1$)/,
            lookbehind: !0
          }
        }
      },
      punctuation: /=/
    };
  }
  return eu;
}
var tu, eE;
function KP() {
  if (eE) return tu;
  eE = 1, tu = e, e.displayName = "io", e.aliases = [];
  function e(t) {
    t.languages.io = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/,
        lookbehind: !0,
        greedy: !0
      },
      "triple-quoted-string": {
        pattern: /"""(?:\\[\s\S]|(?!""")[^\\])*"""/,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /"(?:\\.|[^\\\r\n"])*"/,
        greedy: !0
      },
      keyword: /\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,
      builtin: /\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,
      boolean: /\b(?:false|nil|true)\b/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,
      operator: /[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return tu;
}
var nu, tE;
function XP() {
  if (tE) return nu;
  tE = 1, nu = e, e.displayName = "j", e.aliases = [];
  function e(t) {
    t.languages.j = {
      comment: {
        pattern: /\bNB\..*/,
        greedy: !0
      },
      string: {
        pattern: /'(?:''|[^'\r\n])*'/,
        greedy: !0
      },
      keyword: /\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,
      verb: {
        // Negative look-ahead prevents bad highlighting
        // of ^: ;. =. =: !. !:
        pattern: /(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,
        alias: "keyword"
      },
      number: /\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,
      adverb: {
        pattern: /[~}]|[\/\\]\.?|[bfM]\.|t[.:]/,
        alias: "builtin"
      },
      operator: /[=a][.:]|_\./,
      conjunction: {
        pattern: /&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/,
        alias: "variable"
      },
      punctuation: /[()]/
    };
  }
  return nu;
}
var ru, nE;
function jf() {
  if (nE) return ru;
  nE = 1, ru = e, e.displayName = "java", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/, a = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, i = {
        pattern: RegExp(a + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
        lookbehind: !0,
        inside: {
          namespace: {
            pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /\./
        }
      };
      n.languages.java = n.languages.extend("clike", {
        string: {
          pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
          lookbehind: !0,
          greedy: !0
        },
        "class-name": [
          i,
          {
            // variables and parameters
            // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
            pattern: RegExp(
              a + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source
            ),
            lookbehind: !0,
            inside: i.inside
          }
        ],
        keyword: r,
        function: [
          n.languages.clike.function,
          {
            pattern: /(::\s*)[a-z_]\w*/,
            lookbehind: !0
          }
        ],
        number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
        operator: {
          pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
          lookbehind: !0
        }
      }), n.languages.insertBefore("java", "string", {
        "triple-quoted-string": {
          // http://openjdk.java.net/jeps/355#Description
          pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
          greedy: !0,
          alias: "string"
        },
        char: {
          pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
          greedy: !0
        }
      }), n.languages.insertBefore("java", "class-name", {
        annotation: {
          pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
          lookbehind: !0,
          alias: "punctuation"
        },
        generics: {
          pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
          inside: {
            "class-name": i,
            keyword: r,
            punctuation: /[<>(),.:]/,
            operator: /[?&|]/
          }
        },
        namespace: {
          pattern: RegExp(
            /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(
              /<keyword>/g,
              function() {
                return r.source;
              }
            )
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      });
    })(t);
  }
  return ru;
}
var au, rE;
function ao() {
  if (rE) return au;
  rE = 1, au = e, e.displayName = "javadoclike", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.javadoclike = {
        parameter: {
          pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,
          lookbehind: !0
        },
        keyword: {
          // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.
          // @word, {@word}
          pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
          lookbehind: !0
        },
        punctuation: /[{}]/
      };
      function a(o, s) {
        var l = "doc-comment", u = n.languages[o];
        if (u) {
          var c = u[l];
          if (!c) {
            var d = {};
            d[l] = {
              pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
              lookbehind: !0,
              alias: "comment"
            }, u = n.languages.insertBefore(o, "comment", d), c = u[l];
          }
          if (c instanceof RegExp && (c = u[l] = {
            pattern: c
          }), Array.isArray(c))
            for (var m = 0, f = c.length; m < f; m++)
              c[m] instanceof RegExp && (c[m] = {
                pattern: c[m]
              }), s(c[m]);
          else
            s(c);
        }
      }
      function i(o, s) {
        typeof o == "string" && (o = [o]), o.forEach(function(l) {
          a(l, function(u) {
            u.inside || (u.inside = {}), u.inside.rest = s;
          });
        });
      }
      Object.defineProperty(r, "addSupport", {
        value: i
      }), r.addSupport(["java", "javascript", "php"], r);
    })(t);
  }
  return au;
}
var iu, aE;
function ZP() {
  if (aE) return iu;
  aE = 1;
  var e = jf(), t = ao();
  iu = n, n.displayName = "javadoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      var i = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m, o = /#\s*\w+(?:\s*\([^()]*\))?/.source, s = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(
        /<mem>/g,
        function() {
          return o;
        }
      );
      a.languages.javadoc = a.languages.extend("javadoclike", {}), a.languages.insertBefore("javadoc", "keyword", {
        reference: {
          pattern: RegExp(
            /(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + s + ")"
          ),
          lookbehind: !0,
          inside: {
            function: {
              pattern: /(#\s*)\w+(?=\s*\()/,
              lookbehind: !0
            },
            field: {
              pattern: /(#\s*)\w+/,
              lookbehind: !0
            },
            namespace: {
              pattern: /\b(?:[a-z]\w*\s*\.\s*)+/,
              inside: {
                punctuation: /\./
              }
            },
            "class-name": /\b[A-Z]\w*/,
            keyword: a.languages.java.keyword,
            punctuation: /[#()[\],.]/
          }
        },
        "class-name": {
          // @param <T> the first generic type parameter
          pattern: /(@param\s+)<[A-Z]\w*>/,
          lookbehind: !0,
          inside: {
            punctuation: /[.<>]/
          }
        },
        "code-section": [
          {
            pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
            lookbehind: !0,
            inside: {
              code: {
                // there can't be any HTML inside of {@code} tags
                pattern: i,
                lookbehind: !0,
                inside: a.languages.java,
                alias: "language-java"
              }
            }
          },
          {
            pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
            lookbehind: !0,
            inside: {
              line: {
                pattern: i,
                lookbehind: !0,
                inside: {
                  // highlight HTML tags and entities
                  tag: a.languages.markup.tag,
                  entity: a.languages.markup.entity,
                  code: {
                    // everything else is Java code
                    pattern: /.+/,
                    inside: a.languages.java,
                    alias: "language-java"
                  }
                }
              }
            }
          }
        ],
        tag: a.languages.markup.tag,
        entity: a.languages.markup.entity
      }), a.languages.javadoclike.addSupport("java", a.languages.javadoc);
    }(r);
  }
  return iu;
}
var ou, iE;
function QP() {
  if (iE) return ou;
  iE = 1, ou = e, e.displayName = "javastacktrace", e.aliases = [];
  function e(t) {
    t.languages.javastacktrace = {
      // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]
      // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]
      // Caused by: com.example.myproject.MyProjectServletException
      // Caused by: MidLevelException: LowLevelException
      // Suppressed: Resource$CloseFailException: Resource ID = 0
      summary: {
        pattern: /^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,
        lookbehind: !0,
        inside: {
          keyword: {
            pattern: /^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,
            lookbehind: !0
          },
          // the current thread if the summary starts with 'Exception in thread'
          string: {
            pattern: /^(\s*)"[^"]*"/,
            lookbehind: !0
          },
          exceptions: {
            pattern: /^(:?\s*)[\w$.]+(?=:|$)/,
            lookbehind: !0,
            inside: {
              "class-name": /[\w$]+$/,
              namespace: /\b[a-z]\w*\b/,
              punctuation: /\./
            }
          },
          message: {
            pattern: /(:\s*)\S.*/,
            lookbehind: !0,
            alias: "string"
          },
          punctuation: /:/
        }
      },
      // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
      // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes
      // at java.base/java.lang.Class.forName0(Native Method)
      // at Util.<init>(Unknown Source)
      // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)
      // at com.foo.loader//com.foo.bar.App.run(App.java:12)
      // at acme@2.1/org.acme.Lib.test(Lib.java:80)
      // at MyClass.mash(MyClass.java:9)
      //
      // More information:
      // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()
      //
      // A valid Java module name is defined as:
      //   "A module name consists of one or more Java identifiers (§3.8) separated by "." tokens."
      // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName
      //
      // A Java module version is defined by this class:
      // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html
      // This is the implementation of the `parse` method in JDK13:
      // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108
      // However, to keep this simple, a version will be matched by the pattern /@[\w$.+-]*/.
      "stack-frame": {
        pattern: /^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,
        lookbehind: !0,
        inside: {
          keyword: {
            pattern: /^(\s*)at(?= )/,
            lookbehind: !0
          },
          source: [
            // (Main.java:15)
            // (Main.scala:15)
            {
              pattern: /(\()\w+\.\w+:\d+(?=\))/,
              lookbehind: !0,
              inside: {
                file: /^\w+\.\w+/,
                punctuation: /:/,
                "line-number": {
                  pattern: /\b\d+\b/,
                  alias: "number"
                }
              }
            },
            // (Unknown Source)
            // (Native Method)
            // (...something...)
            {
              pattern: /(\()[^()]*(?=\))/,
              lookbehind: !0,
              inside: {
                keyword: /^(?:Native Method|Unknown Source)$/
              }
            }
          ],
          "class-name": /[\w$]+(?=\.(?:<init>|[\w$]+)\()/,
          function: /(?:<init>|[\w$]+)(?=\()/,
          "class-loader": {
            pattern: /(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,
            lookbehind: !0,
            alias: "namespace",
            inside: {
              punctuation: /\./
            }
          },
          module: {
            pattern: /([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,
            lookbehind: !0,
            inside: {
              version: {
                pattern: /(@)[\s\S]+/,
                lookbehind: !0,
                alias: "number"
              },
              punctuation: /[@.]/
            }
          },
          namespace: {
            pattern: /(?:\b[a-z]\w*\.)+/,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /[()/.]/
        }
      },
      // ... 32 more
      // ... 32 common frames omitted
      more: {
        pattern: /^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /\.{3}/,
          number: /\d+/,
          keyword: /\b[a-z]+(?: [a-z]+)*\b/
        }
      }
    };
  }
  return ou;
}
var su, oE;
function JP() {
  if (oE) return su;
  oE = 1, su = e, e.displayName = "jexl", e.aliases = [];
  function e(t) {
    t.languages.jexl = {
      string: /(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
      transform: {
        pattern: /(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,
        alias: "function",
        lookbehind: !0
      },
      function: /[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,
      number: /\b\d+(?:\.\d+)?\b|\B\.\d+\b/,
      operator: /[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,
      boolean: /\b(?:false|true)\b/,
      keyword: /\bin\b/,
      punctuation: /[{}[\](),.]/
    };
  }
  return su;
}
var lu, sE;
function eF() {
  if (sE) return lu;
  sE = 1, lu = e, e.displayName = "jolie", e.aliases = [];
  function e(t) {
    t.languages.jolie = t.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": {
        pattern: /((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/,
        lookbehind: !0
      },
      keyword: /\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,
      function: /\b[a-z_]\w*(?=[ \t]*[@(])/i,
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,
      operator: /-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,
      punctuation: /[()[\]{},;.:]/,
      builtin: /\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/
    }), t.languages.insertBefore("jolie", "keyword", {
      aggregates: {
        pattern: /(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,
        lookbehind: !0,
        inside: {
          keyword: /\bwith\b/,
          "class-name": /\w+/,
          punctuation: /,/
        }
      },
      redirects: {
        pattern: /(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,
        lookbehind: !0,
        inside: {
          punctuation: /,/,
          "class-name": /\w+/,
          operator: /=>/
        }
      },
      property: {
        pattern: /\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/
      }
    });
  }
  return lu;
}
var uu, lE;
function tF() {
  if (lE) return uu;
  lE = 1, uu = e, e.displayName = "jq", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\\\((?:[^()]|\([^()]*\))*\)/.source, a = RegExp(
        /(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(
          /__/g,
          function() {
            return r;
          }
        )
      ), i = {
        interpolation: {
          pattern: RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + r),
          lookbehind: !0,
          inside: {
            content: {
              pattern: /^(\\\()[\s\S]+(?=\)$)/,
              lookbehind: !0,
              inside: null
              // see below
            },
            punctuation: /^\\\(|\)$/
          }
        }
      }, o = n.languages.jq = {
        comment: /#.*/,
        property: {
          pattern: RegExp(a.source + /(?=\s*:(?!:))/.source),
          lookbehind: !0,
          greedy: !0,
          inside: i
        },
        string: {
          pattern: a,
          lookbehind: !0,
          greedy: !0,
          inside: i
        },
        function: {
          pattern: /(\bdef\s+)[a-z_]\w+/i,
          lookbehind: !0
        },
        variable: /\B\$\w+/,
        "property-literal": {
          pattern: /\b[a-z_]\w*(?=\s*:(?!:))/i,
          alias: "property"
        },
        keyword: /\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,
        boolean: /\b(?:false|true)\b/,
        number: /(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,
        operator: [
          {
            pattern: /\|=?/,
            alias: "pipe"
          },
          /\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/
        ],
        "c-style-function": {
          pattern: /\b[a-z_]\w*(?=\s*\()/i,
          alias: "function"
        },
        punctuation: /::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,
        dot: {
          pattern: /\./,
          alias: "important"
        }
      };
      i.interpolation.inside.content.inside = o;
    })(t);
  }
  return uu;
}
var cu, uE;
function nF() {
  if (uE) return cu;
  uE = 1, cu = e, e.displayName = "jsExtras", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.insertBefore("javascript", "function-variable", {
        "method-variable": {
          pattern: RegExp(
            "(\\.\\s*)" + n.languages.javascript["function-variable"].pattern.source
          ),
          lookbehind: !0,
          alias: ["function-variable", "method", "function", "property-access"]
        }
      }), n.languages.insertBefore("javascript", "function", {
        method: {
          pattern: RegExp(
            "(\\.\\s*)" + n.languages.javascript.function.source
          ),
          lookbehind: !0,
          alias: ["function", "property-access"]
        }
      }), n.languages.insertBefore("javascript", "constant", {
        "known-class-name": [
          {
            // standard built-ins
            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
            pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
            alias: "class-name"
          },
          {
            // errors
            pattern: /\b(?:[A-Z]\w*)Error\b/,
            alias: "class-name"
          }
        ]
      });
      function r(u, c) {
        return RegExp(
          u.replace(/<ID>/g, function() {
            return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
          }),
          c
        );
      }
      n.languages.insertBefore("javascript", "keyword", {
        imports: {
          // https://tc39.es/ecma262/#sec-imports
          pattern: r(
            /(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source
          ),
          lookbehind: !0,
          inside: n.languages.javascript
        },
        exports: {
          // https://tc39.es/ecma262/#sec-exports
          pattern: r(
            /(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source
          ),
          lookbehind: !0,
          inside: n.languages.javascript
        }
      }), n.languages.javascript.keyword.unshift(
        {
          pattern: /\b(?:as|default|export|from|import)\b/,
          alias: "module"
        },
        {
          pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
          alias: "control-flow"
        },
        {
          pattern: /\bnull\b/,
          alias: ["null", "nil"]
        },
        {
          pattern: /\bundefined\b/,
          alias: "nil"
        }
      ), n.languages.insertBefore("javascript", "operator", {
        spread: {
          pattern: /\.{3}/,
          alias: "operator"
        },
        arrow: {
          pattern: /=>/,
          alias: "operator"
        }
      }), n.languages.insertBefore("javascript", "punctuation", {
        "property-access": {
          pattern: r(/(\.\s*)#?<ID>/.source),
          lookbehind: !0
        },
        "maybe-class-name": {
          pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
          lookbehind: !0
        },
        dom: {
          // this contains only a few commonly used DOM variables
          pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
          alias: "variable"
        },
        console: {
          pattern: /\bconsole(?=\s*\.)/,
          alias: "class-name"
        }
      });
      for (var a = [
        "function",
        "function-variable",
        "method",
        "method-variable",
        "property-access"
      ], i = 0; i < a.length; i++) {
        var o = a[i], s = n.languages.javascript[o];
        n.util.type(s) === "RegExp" && (s = n.languages.javascript[o] = {
          pattern: s
        });
        var l = s.inside || {};
        s.inside = l, l["maybe-class-name"] = /^[A-Z][\s\S]*/;
      }
    })(t);
  }
  return cu;
}
var du, cE;
function rF() {
  if (cE) return du;
  cE = 1, du = e, e.displayName = "jsTemplates", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.javascript["template-string"], a = r.pattern.source, i = r.inside.interpolation, o = i.inside["interpolation-punctuation"], s = i.pattern.source;
      function l(E, I) {
        if (n.languages[E])
          return {
            pattern: RegExp("((?:" + I + ")\\s*)" + a),
            lookbehind: !0,
            greedy: !0,
            inside: {
              "template-punctuation": {
                pattern: /^`|`$/,
                alias: "string"
              },
              "embedded-code": {
                pattern: /[\s\S]+/,
                alias: E
              }
            }
          };
      }
      n.languages.javascript["template-string"] = [
        // styled-jsx:
        //   css`a { color: #25F; }`
        // styled-components:
        //   styled.h1`color: red;`
        l(
          "css",
          /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source
        ),
        // html`<p></p>`
        // div.innerHTML = `<p></p>`
        l("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
        // svg`<path fill="#fff" d="M55.37 ..."/>`
        l("svg", /\bsvg/.source),
        // md`# h1`, markdown`## h2`
        l("markdown", /\b(?:markdown|md)/.source),
        // gql`...`, graphql`...`, graphql.experimental`...`
        l(
          "graphql",
          /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source
        ),
        // sql`...`
        l("sql", /\bsql/.source),
        // vanilla template string
        r
      ].filter(Boolean);
      function u(E, I) {
        return "___" + I.toUpperCase() + "_" + E + "___";
      }
      function c(E, I, x) {
        var v = {
          code: E,
          grammar: I,
          language: x
        };
        return n.hooks.run("before-tokenize", v), v.tokens = n.tokenize(v.code, v.grammar), n.hooks.run("after-tokenize", v), v.tokens;
      }
      function d(E) {
        var I = {};
        I["interpolation-punctuation"] = o;
        var x = n.tokenize(E, I);
        if (x.length === 3) {
          var v = [1, 1];
          v.push.apply(
            v,
            c(x[1], n.languages.javascript, "javascript")
          ), x.splice.apply(x, v);
        }
        return new n.Token(
          "interpolation",
          x,
          i.alias,
          E
        );
      }
      function m(E, I, x) {
        var v = n.tokenize(E, {
          interpolation: {
            pattern: RegExp(s),
            lookbehind: !0
          }
        }), S = 0, g = {}, y = v.map(function(D) {
          if (typeof D == "string")
            return D;
          for (var w = D.content, G; E.indexOf(
            G = u(S++, x)
          ) !== -1; )
            ;
          return g[G] = w, G;
        }).join(""), T = c(y, I, x), j = Object.keys(g);
        S = 0;
        function $(D) {
          for (var w = 0; w < D.length; w++) {
            if (S >= j.length)
              return;
            var G = D[w];
            if (typeof G == "string" || typeof G.content == "string") {
              var Q = j[S], z = typeof G == "string" ? G : (
                /** @type {string} */
                G.content
              ), ce = z.indexOf(Q);
              if (ce !== -1) {
                ++S;
                var ae = z.substring(0, ce), K = d(
                  g[Q]
                ), he = z.substring(ce + Q.length), ye = [];
                if (ae && ye.push(ae), ye.push(K), he) {
                  var Te = [he];
                  $(Te), ye.push.apply(ye, Te);
                }
                typeof G == "string" ? (D.splice.apply(D, [w, 1].concat(ye)), w += ye.length - 1) : G.content = ye;
              }
            } else {
              var A = G.content;
              Array.isArray(A) ? $(A) : $([A]);
            }
          }
        }
        return $(T), new n.Token(
          x,
          T,
          "language-" + x,
          E
        );
      }
      var f = {
        javascript: !0,
        js: !0,
        typescript: !0,
        ts: !0,
        jsx: !0,
        tsx: !0
      };
      n.hooks.add("after-tokenize", function(E) {
        if (!(E.language in f))
          return;
        function I(x) {
          for (var v = 0, S = x.length; v < S; v++) {
            var g = x[v];
            if (typeof g != "string") {
              var y = g.content;
              if (!Array.isArray(y)) {
                typeof y != "string" && I([y]);
                continue;
              }
              if (g.type === "template-string") {
                var T = y[1];
                if (y.length === 3 && typeof T != "string" && T.type === "embedded-code") {
                  var j = h(T), $ = T.alias, D = Array.isArray($) ? $[0] : $, w = n.languages[D];
                  if (!w)
                    continue;
                  y[1] = m(j, w, D);
                }
              } else
                I(y);
            }
          }
        }
        I(E.tokens);
      });
      function h(E) {
        return typeof E == "string" ? E : Array.isArray(E) ? E.map(h).join("") : h(E.content);
      }
    })(t);
  }
  return du;
}
var pu, dE;
function Hf() {
  if (dE) return pu;
  dE = 1, pu = e, e.displayName = "typescript", e.aliases = ["ts"];
  function e(t) {
    (function(n) {
      n.languages.typescript = n.languages.extend("javascript", {
        "class-name": {
          pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
          lookbehind: !0,
          greedy: !0,
          inside: null
          // see below
        },
        builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
      }), n.languages.typescript.keyword.push(
        /\b(?:abstract|declare|is|keyof|readonly|require)\b/,
        // keywords that have to be followed by an identifier
        /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,
        // This is for `import type *, {}`
        /\btype\b(?=\s*(?:[\{*]|$))/
      ), delete n.languages.typescript.parameter, delete n.languages.typescript["literal-property"];
      var r = n.languages.extend("typescript", {});
      delete r["class-name"], n.languages.typescript["class-name"].inside = r, n.languages.insertBefore("typescript", "function", {
        decorator: {
          pattern: /@[$\w\xA0-\uFFFF]+/,
          inside: {
            at: {
              pattern: /^@/,
              alias: "operator"
            },
            function: /^[\s\S]+/
          }
        },
        "generic-function": {
          // e.g. foo<T extends "bar" | "baz">( ...
          pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
          greedy: !0,
          inside: {
            function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
            generic: {
              pattern: /<[\s\S]+/,
              // everything after the first <
              alias: "class-name",
              inside: r
            }
          }
        }
      }), n.languages.ts = n.languages.typescript;
    })(t);
  }
  return pu;
}
var fu, pE;
function aF() {
  if (pE) return fu;
  pE = 1;
  var e = ao(), t = Hf();
  fu = n, n.displayName = "jsdoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      var i = a.languages.javascript, o = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source, s = "(@(?:arg|argument|param|property)\\s+(?:" + o + "\\s+)?)";
      a.languages.jsdoc = a.languages.extend("javadoclike", {
        parameter: {
          // @param {string} foo - foo bar
          pattern: RegExp(
            s + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source
          ),
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      }), a.languages.insertBefore("jsdoc", "keyword", {
        "optional-parameter": {
          // @param {string} [baz.foo="bar"] foo bar
          pattern: RegExp(
            s + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source
          ),
          lookbehind: !0,
          inside: {
            parameter: {
              pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/,
              lookbehind: !0,
              inside: {
                punctuation: /\./
              }
            },
            code: {
              pattern: /(=)[\s\S]*(?=\]$)/,
              lookbehind: !0,
              inside: i,
              alias: "language-javascript"
            },
            punctuation: /[=[\]]/
          }
        },
        "class-name": [
          {
            pattern: RegExp(
              /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(
                /<TYPE>/g,
                function() {
                  return o;
                }
              )
            ),
            lookbehind: !0,
            inside: {
              punctuation: /\./
            }
          },
          {
            pattern: RegExp("(@[a-z]+\\s+)" + o),
            lookbehind: !0,
            inside: {
              string: i.string,
              number: i.number,
              boolean: i.boolean,
              keyword: a.languages.typescript.keyword,
              operator: /=>|\.\.\.|[&|?:*]/,
              punctuation: /[.,;=<>{}()[\]]/
            }
          }
        ],
        example: {
          pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
          lookbehind: !0,
          inside: {
            code: {
              pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m,
              lookbehind: !0,
              inside: i,
              alias: "language-javascript"
            }
          }
        }
      }), a.languages.javadoclike.addSupport("javascript", a.languages.jsdoc);
    }(r);
  }
  return fu;
}
var mu, fE;
function qf() {
  if (fE) return mu;
  fE = 1, mu = e, e.displayName = "json", e.aliases = ["webmanifest"];
  function e(t) {
    t.languages.json = {
      property: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
        lookbehind: !0,
        greedy: !0
      },
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
        greedy: !0
      },
      number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      punctuation: /[{}[\],]/,
      operator: /:/,
      boolean: /\b(?:false|true)\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      }
    }, t.languages.webmanifest = t.languages.json;
  }
  return mu;
}
var gu, mE;
function iF() {
  if (mE) return gu;
  mE = 1;
  var e = qf();
  gu = t, t.displayName = "json5", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
      r.languages.json5 = r.languages.extend("json", {
        property: [
          {
            pattern: RegExp(a.source + "(?=\\s*:)"),
            greedy: !0
          },
          {
            pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,
            alias: "unquoted"
          }
        ],
        string: {
          pattern: a,
          greedy: !0
        },
        number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/
      });
    }(n);
  }
  return gu;
}
var hu, gE;
function oF() {
  if (gE) return hu;
  gE = 1;
  var e = qf();
  hu = t, t.displayName = "jsonp", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.jsonp = n.languages.extend("json", {
      punctuation: /[{}[\]();,.]/
    }), n.languages.insertBefore("jsonp", "punctuation", {
      function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/
    });
  }
  return hu;
}
var bu, hE;
function sF() {
  if (hE) return bu;
  hE = 1, bu = e, e.displayName = "jsstacktrace", e.aliases = [];
  function e(t) {
    t.languages.jsstacktrace = {
      "error-message": {
        pattern: /^\S.*/m,
        alias: "string"
      },
      "stack-frame": {
        pattern: /(^[ \t]+)at[ \t].*/m,
        lookbehind: !0,
        inside: {
          "not-my-code": {
            pattern: /^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,
            alias: "comment"
          },
          filename: {
            pattern: /(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/,
            lookbehind: !0,
            alias: "url"
          },
          function: {
            pattern: /(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,
            lookbehind: !0,
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /[()]/,
          keyword: /\b(?:at|new)\b/,
          alias: {
            pattern: /\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/,
            alias: "variable"
          },
          "line-number": {
            pattern: /:\d+(?::\d+)?\b/,
            alias: "number",
            inside: {
              punctuation: /:/
            }
          }
        }
      }
    };
  }
  return bu;
}
var Eu, bE;
function X1() {
  if (bE) return Eu;
  bE = 1, Eu = e, e.displayName = "jsx", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.util.clone(n.languages.javascript), a = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source, i = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source, o = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
      function s(c, d) {
        return c = c.replace(/<S>/g, function() {
          return a;
        }).replace(/<BRACES>/g, function() {
          return i;
        }).replace(/<SPREAD>/g, function() {
          return o;
        }), RegExp(c, d);
      }
      o = s(o).source, n.languages.jsx = n.languages.extend("markup", r), n.languages.jsx.tag.pattern = s(
        /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source
      ), n.languages.jsx.tag.inside.tag.pattern = /^<\/?[^\s>\/]*/, n.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/, n.languages.jsx.tag.inside.tag.inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/, n.languages.jsx.tag.inside.comment = r.comment, n.languages.insertBefore(
        "inside",
        "attr-name",
        {
          spread: {
            pattern: s(/<SPREAD>/.source),
            inside: n.languages.jsx
          }
        },
        n.languages.jsx.tag
      ), n.languages.insertBefore(
        "inside",
        "special-attr",
        {
          script: {
            // Allow for two levels of nesting
            pattern: s(/=<BRACES>/.source),
            alias: "language-javascript",
            inside: {
              "script-punctuation": {
                pattern: /^=(?=\{)/,
                alias: "punctuation"
              },
              rest: n.languages.jsx
            }
          }
        },
        n.languages.jsx.tag
      );
      var l = function(c) {
        return c ? typeof c == "string" ? c : typeof c.content == "string" ? c.content : c.content.map(l).join("") : "";
      }, u = function(c) {
        for (var d = [], m = 0; m < c.length; m++) {
          var f = c[m], h = !1;
          if (typeof f != "string" && (f.type === "tag" && f.content[0] && f.content[0].type === "tag" ? f.content[0].content[0].content === "</" ? d.length > 0 && d[d.length - 1].tagName === l(f.content[0].content[1]) && d.pop() : f.content[f.content.length - 1].content === "/>" || d.push({
            tagName: l(f.content[0].content[1]),
            openedBraces: 0
          }) : d.length > 0 && f.type === "punctuation" && f.content === "{" ? d[d.length - 1].openedBraces++ : d.length > 0 && d[d.length - 1].openedBraces > 0 && f.type === "punctuation" && f.content === "}" ? d[d.length - 1].openedBraces-- : h = !0), (h || typeof f == "string") && d.length > 0 && d[d.length - 1].openedBraces === 0) {
            var E = l(f);
            m < c.length - 1 && (typeof c[m + 1] == "string" || c[m + 1].type === "plain-text") && (E += l(c[m + 1]), c.splice(m + 1, 1)), m > 0 && (typeof c[m - 1] == "string" || c[m - 1].type === "plain-text") && (E = l(c[m - 1]) + E, c.splice(m - 1, 1), m--), c[m] = new n.Token(
              "plain-text",
              E,
              null,
              E
            );
          }
          f.content && typeof f.content != "string" && u(f.content);
        }
      };
      n.hooks.add("after-tokenize", function(c) {
        c.language !== "jsx" && c.language !== "tsx" || u(c.tokens);
      });
    })(t);
  }
  return Eu;
}
var yu, EE;
function lF() {
  if (EE) return yu;
  EE = 1, yu = e, e.displayName = "julia", e.aliases = [];
  function e(t) {
    t.languages.julia = {
      comment: {
        // support one level of nested comments
        // https://github.com/JuliaLang/julia/pull/6128
        pattern: /(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,
        lookbehind: !0
      },
      regex: {
        // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1
        pattern: /r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/,
        greedy: !0
      },
      string: {
        // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1
        // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1
        // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1
        pattern: /"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/,
        greedy: !0
      },
      char: {
        // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1
        pattern: /(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,
      // https://docs.julialang.org/en/v1/manual/mathematical-operations/
      // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1
      operator: /&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,
      punctuation: /::?|[{}[\]();,.?]/,
      // https://docs.julialang.org/en/v1/base/numbers/#Base.im
      constant: /\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/
    };
  }
  return yu;
}
var vu, yE;
function uF() {
  if (yE) return vu;
  yE = 1, vu = e, e.displayName = "keepalived", e.aliases = [];
  function e(t) {
    t.languages.keepalived = {
      comment: {
        pattern: /[#!].*/,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/,
        lookbehind: !0,
        greedy: !0
      },
      // support IPv4, IPv6, subnet mask
      ip: {
        pattern: RegExp(
          /\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(
            /<ipv4>/g,
            function() {
              return /(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source;
            }
          ),
          "i"
        ),
        alias: "number"
      },
      // support *nix / Windows, directory / file
      path: {
        pattern: /(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/,
        lookbehind: !0,
        alias: "string"
      },
      variable: /\$\{?\w+\}?/,
      email: {
        pattern: /[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/,
        alias: "string"
      },
      "conditional-configuration": {
        pattern: /@\^?[\w-]+/,
        alias: "variable"
      },
      operator: /=/,
      property: /\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,
      constant: /\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,
      number: {
        pattern: /(^|[^\w.-])-?\d+(?:\.\d+)?/,
        lookbehind: !0
      },
      boolean: /\b(?:false|no|off|on|true|yes)\b/,
      punctuation: /[\{\}]/
    };
  }
  return vu;
}
var Tu, vE;
function cF() {
  if (vE) return Tu;
  vE = 1, Tu = e, e.displayName = "keyman", e.aliases = [];
  function e(t) {
    t.languages.keyman = {
      comment: {
        pattern: /\bc .*/i,
        greedy: !0
      },
      string: {
        pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
        greedy: !0
      },
      "virtual-key": {
        pattern: /\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,
        greedy: !0,
        alias: "function"
        // alias for styles
      },
      // https://help.keyman.com/developer/language/guide/headers
      "header-keyword": {
        pattern: /&\w+/,
        alias: "bold"
        // alias for styles
      },
      "header-statement": {
        pattern: /\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,
        alias: "bold"
        // alias for styles
      },
      "rule-keyword": {
        pattern: /\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,
        alias: "keyword"
      },
      "structural-keyword": {
        pattern: /\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\b/i,
        alias: "keyword"
      },
      "compile-target": {
        pattern: /\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,
        alias: "property"
      },
      // U+####, x###, d### characters and numbers
      number: /\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,
      operator: /[+>\\$]|\.\./,
      punctuation: /[()=,]/
    };
  }
  return Tu;
}
var Su, TE;
function dF() {
  if (TE) return Su;
  TE = 1, Su = e, e.displayName = "kotlin", e.aliases = ["kt", "kts"];
  function e(t) {
    (function(n) {
      n.languages.kotlin = n.languages.extend("clike", {
        keyword: {
          // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get
          pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
          lookbehind: !0
        },
        function: [
          {
            pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
            greedy: !0
          },
          {
            pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
        operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
      }), delete n.languages.kotlin["class-name"];
      var r = {
        "interpolation-punctuation": {
          pattern: /^\$\{?|\}$/,
          alias: "punctuation"
        },
        expression: {
          pattern: /[\s\S]+/,
          inside: n.languages.kotlin
        }
      };
      n.languages.insertBefore("kotlin", "string", {
        // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions
        "string-literal": [
          {
            pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
            alias: "multiline",
            inside: {
              interpolation: {
                pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                inside: r
              },
              string: /[\s\S]+/
            }
          },
          {
            pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
            alias: "singleline",
            inside: {
              interpolation: {
                pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                lookbehind: !0,
                inside: r
              },
              string: /[\s\S]+/
            }
          }
        ],
        char: {
          // https://kotlinlang.org/spec/expressions.html#character-literals
          pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
          greedy: !0
        }
      }), delete n.languages.kotlin.string, n.languages.insertBefore("kotlin", "keyword", {
        annotation: {
          pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
          alias: "builtin"
        }
      }), n.languages.insertBefore("kotlin", "function", {
        label: {
          pattern: /\b\w+@|@\w+\b/,
          alias: "symbol"
        }
      }), n.languages.kt = n.languages.kotlin, n.languages.kts = n.languages.kotlin;
    })(t);
  }
  return Su;
}
var _u, SE;
function pF() {
  if (SE) return _u;
  SE = 1, _u = e, e.displayName = "kumir", e.aliases = ["kum"];
  function e(t) {
    (function(n) {
      var r = /\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;
      function a(i, o) {
        return RegExp(i.replace(/<nonId>/g, r), o);
      }
      n.languages.kumir = {
        comment: {
          pattern: /\|.*/
        },
        prolog: {
          pattern: /#.*/,
          greedy: !0
        },
        string: {
          pattern: /"[^\n\r"]*"|'[^\n\r']*'/,
          greedy: !0
        },
        boolean: {
          pattern: a(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),
          lookbehind: !0
        },
        "operator-word": {
          pattern: a(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        "system-variable": {
          pattern: a(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        type: [
          {
            pattern: a(
              /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source
            ),
            lookbehind: !0,
            alias: "builtin"
          },
          {
            pattern: a(
              /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source
            ),
            lookbehind: !0,
            alias: "important"
          }
        ],
        /**
         * Should be performed after searching for type names because of "таб".
         * "таб" is a reserved word, but never used without a preceding type name.
         * "НАЗНАЧИТЬ", "Фввод", and "Фвывод" are not reserved words.
         */
        keyword: {
          pattern: a(
            /(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for reserved words. */
        name: {
          // eslint-disable-next-line regexp/no-super-linear-backtracking
          pattern: a(
            /(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for names. */
        number: {
          pattern: a(
            /(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source,
            "i"
          ),
          lookbehind: !0
        },
        /** Should be performed after searching for words. */
        punctuation: /:=|[(),:;\[\]]/,
        /**
         * Should be performed after searching for
         * - numeric constants (because of "+" and "-");
         * - punctuation marks (because of ":=" and "=").
         */
        "operator-char": {
          pattern: /\*\*?|<[=>]?|>=?|[-+/=]/,
          alias: "operator"
        }
      }, n.languages.kum = n.languages.kumir;
    })(t);
  }
  return _u;
}
var Au, _E;
function fF() {
  if (_E) return Au;
  _E = 1, Au = e, e.displayName = "kusto", e.aliases = [];
  function e(t) {
    t.languages.kusto = {
      comment: {
        pattern: /\/\/.*/,
        greedy: !0
      },
      string: {
        pattern: /```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/,
        greedy: !0
      },
      verb: {
        pattern: /(\|\s*)[a-z][\w-]*/i,
        lookbehind: !0,
        alias: "keyword"
      },
      command: {
        pattern: /\.[a-z][a-z\d-]*\b/,
        alias: "keyword"
      },
      "class-name": /\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,
      keyword: /\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,
      boolean: /\b(?:false|null|true)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/,
      datetime: [
        {
          // RFC 822 + RFC 850
          pattern: /\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,
          alias: "number"
        },
        {
          // ISO 8601
          pattern: /[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/,
          alias: "number"
        }
      ],
      number: /\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,
      operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,
      punctuation: /[()\[\]{},;.:]/
    };
  }
  return Au;
}
var xu, AE;
function mF() {
  if (AE) return xu;
  AE = 1, xu = e, e.displayName = "latex", e.aliases = ["tex", "context"];
  function e(t) {
    (function(n) {
      var r = /\\(?:[^a-z()[\]]|[a-z*]+)/i, a = {
        "equation-command": {
          pattern: r,
          alias: "regex"
        }
      };
      n.languages.latex = {
        comment: /%.*/,
        // the verbatim environment prints whitespace to the document
        cdata: {
          pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
          lookbehind: !0
        },
        /*
         * equations can be between $$ $$ or $ $ or \( \) or \[ \]
         * (all are multiline)
         */
        equation: [
          {
            pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
            inside: a,
            alias: "string"
          },
          {
            pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
            lookbehind: !0,
            inside: a,
            alias: "string"
          }
        ],
        /*
         * arguments which are keywords or references are highlighted
         * as keywords
         */
        keyword: {
          pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
          lookbehind: !0
        },
        url: {
          pattern: /(\\url\{)[^}]+(?=\})/,
          lookbehind: !0
        },
        /*
         * section or chapter headlines are highlighted as bold so that
         * they stand out more
         */
        headline: {
          pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
          lookbehind: !0,
          alias: "class-name"
        },
        function: {
          pattern: r,
          alias: "selector"
        },
        punctuation: /[[\]{}&]/
      }, n.languages.tex = n.languages.latex, n.languages.context = n.languages.latex;
    })(t);
  }
  return xu;
}
var Ru, xE;
function io() {
  if (xE) return Ru;
  xE = 1;
  var e = yn();
  Ru = t, t.displayName = "php", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/, i = [
        {
          pattern: /\b(?:false|true)\b/i,
          alias: "boolean"
        },
        {
          pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
          greedy: !0,
          lookbehind: !0
        },
        {
          pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
          greedy: !0,
          lookbehind: !0
        },
        /\b(?:null)\b/i,
        /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
      ], o = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i, s = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/, l = /[{}\[\](),:;]/;
      r.languages.php = {
        delimiter: {
          pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
          alias: "important"
        },
        comment: a,
        variable: /\$+(?:\w+\b|(?=\{))/,
        package: {
          pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
          lookbehind: !0,
          inside: {
            punctuation: /\\/
          }
        },
        "class-name-definition": {
          pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
          lookbehind: !0,
          alias: "class-name"
        },
        "function-definition": {
          pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
          lookbehind: !0,
          alias: "function"
        },
        keyword: [
          {
            pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
            alias: "type-casting",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
            alias: "type-hint",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string|void)\b/i,
            alias: "return-type",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
            alias: "type-declaration",
            greedy: !0
          },
          {
            pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
            alias: "type-declaration",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b(?:parent|self|static)(?=\s*::)/i,
            alias: "static-context",
            greedy: !0
          },
          {
            // yield from
            pattern: /(\byield\s+)from\b/i,
            lookbehind: !0
          },
          // `class` is always a keyword unlike other keywords
          /\bclass\b/i,
          {
            // https://www.php.net/manual/en/reserved.keywords.php
            //
            // keywords cannot be preceded by "->"
            // the complex lookbehind means `(?<!(?:->|::)\s*)`
            pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
            lookbehind: !0
          }
        ],
        "argument-name": {
          pattern: /([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,
          lookbehind: !0
        },
        "class-name": [
          {
            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
            greedy: !0
          },
          {
            pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
            alias: "class-name-fully-qualified",
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /\b[a-z_]\w*(?=\s*\$)/i,
            alias: "type-declaration",
            greedy: !0
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
            alias: ["class-name-fully-qualified", "type-declaration"],
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /\b[a-z_]\w*(?=\s*::)/i,
            alias: "static-context",
            greedy: !0
          },
          {
            pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
            alias: ["class-name-fully-qualified", "static-context"],
            greedy: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
            alias: "type-hint",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
            alias: ["class-name-fully-qualified", "type-hint"],
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
            alias: "return-type",
            greedy: !0,
            lookbehind: !0
          },
          {
            pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
            alias: ["class-name-fully-qualified", "return-type"],
            greedy: !0,
            lookbehind: !0,
            inside: {
              punctuation: /\\/
            }
          }
        ],
        constant: i,
        function: {
          pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
          lookbehind: !0,
          inside: {
            punctuation: /\\/
          }
        },
        property: {
          pattern: /(->\s*)\w+/,
          lookbehind: !0
        },
        number: o,
        operator: s,
        punctuation: l
      };
      var u = {
        pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
        lookbehind: !0,
        inside: r.languages.php
      }, c = [
        {
          pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
          alias: "nowdoc-string",
          greedy: !0,
          inside: {
            delimiter: {
              pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
              alias: "symbol",
              inside: {
                punctuation: /^<<<'?|[';]$/
              }
            }
          }
        },
        {
          pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
          alias: "heredoc-string",
          greedy: !0,
          inside: {
            delimiter: {
              pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
              alias: "symbol",
              inside: {
                punctuation: /^<<<"?|[";]$/
              }
            },
            interpolation: u
          }
        },
        {
          pattern: /`(?:\\[\s\S]|[^\\`])*`/,
          alias: "backtick-quoted-string",
          greedy: !0
        },
        {
          pattern: /'(?:\\[\s\S]|[^\\'])*'/,
          alias: "single-quoted-string",
          greedy: !0
        },
        {
          pattern: /"(?:\\[\s\S]|[^\\"])*"/,
          alias: "double-quoted-string",
          greedy: !0,
          inside: {
            interpolation: u
          }
        }
      ];
      r.languages.insertBefore("php", "variable", {
        string: c,
        attribute: {
          pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
          greedy: !0,
          inside: {
            "attribute-content": {
              pattern: /^(#\[)[\s\S]+(?=\]$)/,
              lookbehind: !0,
              // inside can appear subset of php
              inside: {
                comment: a,
                string: c,
                "attribute-class-name": [
                  {
                    pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                    alias: "class-name",
                    greedy: !0,
                    lookbehind: !0
                  },
                  {
                    pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                    alias: ["class-name", "class-name-fully-qualified"],
                    greedy: !0,
                    lookbehind: !0,
                    inside: {
                      punctuation: /\\/
                    }
                  }
                ],
                constant: i,
                number: o,
                operator: s,
                punctuation: l
              }
            },
            delimiter: {
              pattern: /^#\[|\]$/,
              alias: "punctuation"
            }
          }
        }
      }), r.hooks.add("before-tokenize", function(d) {
        if (/<\?/.test(d.code)) {
          var m = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
          r.languages["markup-templating"].buildPlaceholders(
            d,
            "php",
            m
          );
        }
      }), r.hooks.add("after-tokenize", function(d) {
        r.languages["markup-templating"].tokenizePlaceholders(d, "php");
      });
    }(n);
  }
  return Ru;
}
var Iu, RE;
function gF() {
  if (RE) return Iu;
  RE = 1;
  var e = yn(), t = io();
  Iu = n, n.displayName = "latte", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      a.languages.latte = {
        comment: /^\{\*[\s\S]*/,
        "latte-tag": {
          // https://latte.nette.org/en/tags
          pattern: /(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i,
          lookbehind: !0,
          alias: "important"
        },
        delimiter: {
          pattern: /^\{\/?|\}$/,
          alias: "punctuation"
        },
        php: {
          pattern: /\S(?:[\s\S]*\S)?/,
          alias: "language-php",
          inside: a.languages.php
        }
      };
      var i = a.languages.extend("markup", {});
      a.languages.insertBefore(
        "inside",
        "attr-value",
        {
          "n-attr": {
            pattern: /n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,
            inside: {
              "attr-name": {
                pattern: /^[^\s=]+/,
                alias: "important"
              },
              "attr-value": {
                pattern: /=[\s\S]+/,
                inside: {
                  punctuation: [
                    /^=/,
                    {
                      pattern: /^(\s*)["']|["']$/,
                      lookbehind: !0
                    }
                  ],
                  php: {
                    pattern: /\S(?:[\s\S]*\S)?/,
                    inside: a.languages.php
                  }
                }
              }
            }
          }
        },
        i.tag
      ), a.hooks.add("before-tokenize", function(o) {
        if (o.language === "latte") {
          var s = /\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;
          a.languages["markup-templating"].buildPlaceholders(
            o,
            "latte",
            s
          ), o.grammar = i;
        }
      }), a.hooks.add("after-tokenize", function(o) {
        a.languages["markup-templating"].tokenizePlaceholders(o, "latte");
      });
    }(r);
  }
  return Iu;
}
var wu, IE;
function hF() {
  if (IE) return wu;
  IE = 1, wu = e, e.displayName = "less", e.aliases = [];
  function e(t) {
    t.languages.less = t.languages.extend("css", {
      comment: [
        /\/\*[\s\S]*?\*\//,
        {
          pattern: /(^|[^\\])\/\/.*/,
          lookbehind: !0
        }
      ],
      atrule: {
        pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
        inside: {
          punctuation: /[:()]/
        }
      },
      // selectors and mixins are considered the same
      selector: {
        pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
        inside: {
          // mixin parameters
          variable: /@+[\w-]+/
        }
      },
      property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
      operator: /[+\-*\/]/
    }), t.languages.insertBefore("less", "property", {
      variable: [
        // Variable declaration (the colon must be consumed!)
        {
          pattern: /@[\w-]+\s*:/,
          inside: {
            punctuation: /:/
          }
        },
        // Variable usage
        /@@?[\w-]+/
      ],
      "mixin-usage": {
        pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
        lookbehind: !0,
        alias: "function"
      }
    });
  }
  return wu;
}
var Cu, wE;
function $f() {
  if (wE) return Cu;
  wE = 1, Cu = e, e.displayName = "scheme", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.scheme = {
        // this supports "normal" single-line comments:
        //   ; comment
        // and (potentially nested) multiline comments:
        //   #| comment #| nested |# still comment |#
        // (only 1 level of nesting is supported)
        comment: /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        symbol: {
          pattern: /'[^()\[\]#'\s]+/,
          greedy: !0
        },
        char: {
          pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
          greedy: !0
        },
        "lambda-parameter": [
          // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30
          {
            pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
            lookbehind: !0
          },
          {
            pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
            lookbehind: !0
          }
        ],
        keyword: {
          pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        builtin: {
          // all functions of the base library of R7RS plus some of built-ins of R5Rs
          pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        operator: {
          pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        number: {
          // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).
          //
          // <number>      := <num 2>|<num 8>|<num 10>|<num 16>
          // <num R>       := <prefix R><complex R>
          // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>
          // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\.0)?i
          // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\.0
          // <ureal R>     := <uint R>(?:\/<uint R>)?
          //                | <decimal R>
          //
          // <decimal 10>  := (?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?
          // <uint R>      := <digit R>+
          // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>
          // <radix 2>     := #b
          // <radix 8>     := #o
          // <radix 10>    := (?:#d)?
          // <radix 16>    := #x
          // <digit 2>     := [01]
          // <digit 8>     := [0-7]
          // <digit 10>    := \d
          // <digit 16>    := [0-9a-f]
          //
          // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all
          // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)
          // pattern:
          pattern: RegExp(
            r({
              "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
              "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
              "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
              "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
              "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
              "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
              "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
              "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
              "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
              "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
              "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
            }),
            "i"
          ),
          lookbehind: !0
        },
        boolean: {
          pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        function: {
          pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
          lookbehind: !0
        },
        identifier: {
          pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
          lookbehind: !0,
          greedy: !0
        },
        punctuation: /[()\[\]']/
      };
      function r(a) {
        for (var i in a)
          a[i] = a[i].replace(/<[\w\s]+>/g, function(o) {
            return "(?:" + a[o].trim() + ")";
          });
        return a[i];
      }
    })(t);
  }
  return Cu;
}
var ku, CE;
function bF() {
  if (CE) return ku;
  CE = 1;
  var e = $f();
  ku = t, t.displayName = "lilypond", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      for (var a = /\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source, i = 5, o = 0; o < i; o++)
        a = a.replace(/<expr>/g, function() {
          return a;
        });
      a = a.replace(/<expr>/g, /[^\s\S]/.source);
      var s = r.languages.lilypond = {
        comment: /%(?:(?!\{).*|\{[\s\S]*?%\})/,
        "embedded-scheme": {
          pattern: RegExp(
            /(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(
              /<expr>/g,
              function() {
                return a;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            scheme: {
              pattern: /^(#)[\s\S]+$/,
              lookbehind: !0,
              alias: "language-scheme",
              inside: {
                "embedded-lilypond": {
                  pattern: /#\{[\s\S]*?#\}/,
                  greedy: !0,
                  inside: {
                    punctuation: /^#\{|#\}$/,
                    lilypond: {
                      pattern: /[\s\S]+/,
                      alias: "language-lilypond",
                      inside: null
                      // see below
                    }
                  }
                },
                rest: r.languages.scheme
              }
            },
            punctuation: /#/
          }
        },
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        "class-name": {
          pattern: /(\\new\s+)[\w-]+/,
          lookbehind: !0
        },
        keyword: {
          pattern: /\\[a-z][-\w]*/i,
          inside: {
            punctuation: /^\\/
          }
        },
        operator: /[=|]|<<|>>/,
        punctuation: {
          pattern: /(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,
          lookbehind: !0
        },
        number: /\b\d+(?:\/\d+)?\b/
      };
      s["embedded-scheme"].inside.scheme.inside["embedded-lilypond"].inside.lilypond.inside = s, r.languages.ly = s;
    }(n);
  }
  return ku;
}
var Nu, kE;
function EF() {
  if (kE) return Nu;
  kE = 1;
  var e = yn();
  Nu = t, t.displayName = "liquid", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.liquid = {
      comment: {
        pattern: /(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/,
        lookbehind: !0
      },
      delimiter: {
        pattern: /^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/,
        alias: "punctuation"
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      keyword: /\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,
      object: /\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,
      function: [
        {
          pattern: /(\|\s*)\w+/,
          lookbehind: !0,
          alias: "filter"
        },
        {
          // array functions
          pattern: /(\.\s*)(?:first|last|size)/,
          lookbehind: !0
        }
      ],
      boolean: /\b(?:false|nil|true)\b/,
      range: {
        pattern: /\.\./,
        alias: "operator"
      },
      // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21
      number: /\b\d+(?:\.\d+)?\b/,
      operator: /[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,
      punctuation: /[.,\[\]()]/,
      empty: {
        pattern: /\bempty\b/,
        alias: "keyword"
      }
    }, n.hooks.add("before-tokenize", function(r) {
      var a = /\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g, i = !1;
      n.languages["markup-templating"].buildPlaceholders(
        r,
        "liquid",
        a,
        function(o) {
          var s = /^\{%-?\s*(\w+)/.exec(o);
          if (s) {
            var l = s[1];
            if (l === "raw" && !i)
              return i = !0, !0;
            if (l === "endraw")
              return i = !1, !0;
          }
          return !i;
        }
      );
    }), n.hooks.add("after-tokenize", function(r) {
      n.languages["markup-templating"].tokenizePlaceholders(r, "liquid");
    });
  }
  return Nu;
}
var Ou, NE;
function yF() {
  if (NE) return Ou;
  NE = 1, Ou = e, e.displayName = "lisp", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(E) {
        return RegExp(/(\()/.source + "(?:" + E + ")" + /(?=[\s\)])/.source);
      }
      function a(E) {
        return RegExp(
          /([\s([])/.source + "(?:" + E + ")" + /(?=[\s)])/.source
        );
      }
      var i = /(?!\d)[-+*/~!@$%^=<>{}\w]+/.source, o = "&" + i, s = "(\\()", l = "(?=\\))", u = "(?=\\s)", c = /(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source, d = {
        // Three or four semicolons are considered a heading.
        // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html
        heading: {
          pattern: /;;;.*/,
          alias: ["comment", "title"]
        },
        comment: /;.*/,
        string: {
          pattern: /"(?:[^"\\]|\\.)*"/,
          greedy: !0,
          inside: {
            argument: /[-A-Z]+(?=[.,\s])/,
            symbol: RegExp("`" + i + "'")
          }
        },
        "quoted-symbol": {
          pattern: RegExp("#?'" + i),
          alias: ["variable", "symbol"]
        },
        "lisp-property": {
          pattern: RegExp(":" + i),
          alias: "property"
        },
        splice: {
          pattern: RegExp(",@?" + i),
          alias: ["symbol", "variable"]
        },
        keyword: [
          {
            pattern: RegExp(
              s + "(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)" + u
            ),
            lookbehind: !0
          },
          {
            pattern: RegExp(
              s + "(?:append|by|collect|concat|do|finally|for|in|return)" + u
            ),
            lookbehind: !0
          }
        ],
        declare: {
          pattern: r(/declare/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        interactive: {
          pattern: r(/interactive/.source),
          lookbehind: !0,
          alias: "keyword"
        },
        boolean: {
          pattern: a(/nil|t/.source),
          lookbehind: !0
        },
        number: {
          pattern: a(/[-+]?\d+(?:\.\d*)?/.source),
          lookbehind: !0
        },
        defvar: {
          pattern: RegExp(s + "def(?:const|custom|group|var)\\s+" + i),
          lookbehind: !0,
          inside: {
            keyword: /^def[a-z]+/,
            variable: RegExp(i)
          }
        },
        defun: {
          pattern: RegExp(
            s + /(?:cl-)?(?:defmacro|defun\*?)\s+/.source + i + /\s+\(/.source + c + /\)/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^(?:cl-)?def\S+/,
            // See below, this property needs to be defined later so that it can
            // reference the language object.
            arguments: null,
            function: {
              pattern: RegExp("(^\\s)" + i),
              lookbehind: !0
            },
            punctuation: /[()]/
          }
        },
        lambda: {
          pattern: RegExp(
            s + "lambda\\s+\\(\\s*(?:&?" + i + "(?:\\s+&?" + i + ")*\\s*)?\\)"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            keyword: /^lambda/,
            // See below, this property needs to be defined later so that it can
            // reference the language object.
            arguments: null,
            punctuation: /[()]/
          }
        },
        car: {
          pattern: RegExp(s + i),
          lookbehind: !0
        },
        punctuation: [
          // open paren, brackets, and close paren
          /(?:['`,]?\(|[)\[\]])/,
          // cons
          {
            pattern: /(\s)\.(?=\s)/,
            lookbehind: !0
          }
        ]
      }, m = {
        "lisp-marker": RegExp(o),
        varform: {
          pattern: RegExp(
            /\(/.source + i + /\s+(?=\S)/.source + c + /\)/.source
          ),
          inside: d
        },
        argument: {
          pattern: RegExp(/(^|[\s(])/.source + i),
          lookbehind: !0,
          alias: "variable"
        },
        rest: d
      }, f = "\\S+(?:\\s+\\S+)*", h = {
        pattern: RegExp(s + c + l),
        lookbehind: !0,
        inside: {
          "rest-vars": {
            pattern: RegExp("&(?:body|rest)\\s+" + f),
            inside: m
          },
          "other-marker-vars": {
            pattern: RegExp("&(?:aux|optional)\\s+" + f),
            inside: m
          },
          keys: {
            pattern: RegExp("&key\\s+" + f + "(?:\\s+&allow-other-keys)?"),
            inside: m
          },
          argument: {
            pattern: RegExp(i),
            alias: "variable"
          },
          punctuation: /[()]/
        }
      };
      d.lambda.inside.arguments = h, d.defun.inside.arguments = n.util.clone(h), d.defun.inside.arguments.inside.sublist = h, n.languages.lisp = d, n.languages.elisp = d, n.languages.emacs = d, n.languages["emacs-lisp"] = d;
    })(t);
  }
  return Ou;
}
var Lu, OE;
function vF() {
  if (OE) return Lu;
  OE = 1, Lu = e, e.displayName = "livescript", e.aliases = [];
  function e(t) {
    t.languages.livescript = {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\\])#.*/,
          lookbehind: !0
        }
      ],
      "interpolated-string": {
        /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern
         * forcing it to match """-quoted string when it would otherwise match "-quoted first. */
        pattern: /(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          variable: {
            pattern: /(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m,
            lookbehind: !0
          },
          interpolation: {
            pattern: /(^|[^\\])#\{[^}]+\}/m,
            lookbehind: !0,
            inside: {
              "interpolation-punctuation": {
                pattern: /^#\{|\}$/,
                alias: "variable"
              }
              // See rest below
            }
          },
          string: /[\s\S]+/
        }
      },
      string: [
        {
          pattern: /('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
          greedy: !0
        },
        {
          pattern: /<\[[\s\S]*?\]>/,
          greedy: !0
        },
        /\\[^\s,;\])}]+/
      ],
      regex: [
        {
          pattern: /\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,
          greedy: !0,
          inside: {
            comment: {
              pattern: /(^|[^\\])#.*/,
              lookbehind: !0
            }
          }
        },
        {
          pattern: /\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/,
          greedy: !0
        }
      ],
      keyword: {
        pattern: /(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,
        lookbehind: !0
      },
      "keyword-operator": {
        pattern: /(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,
        lookbehind: !0,
        alias: "operator"
      },
      boolean: {
        pattern: /(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m,
        lookbehind: !0
      },
      argument: {
        // Don't match .&. nor &&
        pattern: /(^|(?!\.&\.)[^&])&(?!&)\d*/m,
        lookbehind: !0,
        alias: "variable"
      },
      number: /\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,
      identifier: /[a-z_](?:-?[a-z]|[\d_])*/i,
      operator: [
        // Spaced .
        {
          pattern: /( )\.(?= )/,
          lookbehind: !0
        },
        // Full list, in order:
        // .= .~ .. ...
        // .&. .^. .<<. .>>. .>>>.
        // := :: ::=
        // &&
        // || |>
        // < << <<< <<<<
        // <- <-- <-! <--!
        // <~ <~~ <~! <~~!
        // <| <= <?
        // > >> >= >?
        // - -- -> -->
        // + ++
        // @ @@
        // % %%
        // * **
        // ! != !~=
        // !~> !~~>
        // !-> !-->
        // ~ ~> ~~> ~=
        // = ==
        // ^ ^^
        // / ?
        /\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/
      ],
      punctuation: /[(){}\[\]|.,:;`]/
    }, t.languages.livescript["interpolated-string"].inside.interpolation.inside.rest = t.languages.livescript;
  }
  return Lu;
}
var Du, LE;
function TF() {
  if (LE) return Du;
  LE = 1, Du = e, e.displayName = "llvm", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.llvm = {
        comment: /;.*/,
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        boolean: /\b(?:false|true)\b/,
        variable: /[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,
        label: /(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,
        type: {
          pattern: /\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/,
          alias: "class-name"
        },
        keyword: /\b[a-z_][a-z_0-9]*\b/,
        number: /[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,
        punctuation: /[{}[\];(),.!*=<>]/
      };
    })(t);
  }
  return Du;
}
var Mu, DE;
function SF() {
  if (DE) return Mu;
  DE = 1, Mu = e, e.displayName = "log", e.aliases = [];
  function e(t) {
    t.languages.log = {
      string: {
        // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,
        greedy: !0
      },
      exception: {
        pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
        lookbehind: !0,
        greedy: !0,
        alias: ["javastacktrace", "language-javastacktrace"],
        inside: t.languages.javastacktrace || {
          keyword: /\bat\b/,
          function: /[a-z_][\w$]*(?=\()/,
          punctuation: /[.:()]/
        }
      },
      level: [
        {
          pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,
          alias: ["error", "important"]
        },
        {
          pattern: /\b(?:WARN|WARNING|WRN)\b/,
          alias: ["warning", "important"]
        },
        {
          pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,
          alias: ["info", "keyword"]
        },
        {
          pattern: /\b(?:DBG|DEBUG|FINE)\b/,
          alias: ["debug", "keyword"]
        },
        {
          pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,
          alias: ["trace", "comment"]
        }
      ],
      property: {
        pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,
        lookbehind: !0
      },
      separator: {
        pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,
        lookbehind: !0,
        alias: "comment"
      },
      url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
      email: {
        pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,
        lookbehind: !0,
        alias: "url"
      },
      "ip-address": {
        pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,
        alias: "constant"
      },
      "mac-address": {
        pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,
        alias: "constant"
      },
      domain: {
        pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,
        lookbehind: !0,
        alias: "constant"
      },
      uuid: {
        pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,
        alias: "constant"
      },
      hash: {
        pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i,
        alias: "constant"
      },
      "file-path": {
        pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
        lookbehind: !0,
        greedy: !0,
        alias: "string"
      },
      date: {
        pattern: RegExp(
          /\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source + "|" + /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source + "|" + /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source,
          "i"
        ),
        alias: "number"
      },
      time: {
        pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,
        alias: "number"
      },
      boolean: /\b(?:false|null|true)\b/i,
      number: {
        pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,
        lookbehind: !0
      },
      operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
      punctuation: /[\[\].,]/
    };
  }
  return Mu;
}
var Pu, ME;
function _F() {
  if (ME) return Pu;
  ME = 1, Pu = e, e.displayName = "lolcode", e.aliases = [];
  function e(t) {
    t.languages.lolcode = {
      comment: [/\bOBTW\s[\s\S]*?\sTLDR\b/, /\bBTW.+/],
      string: {
        pattern: /"(?::.|[^":])*"/,
        inside: {
          variable: /:\{[^}]+\}/,
          symbol: [/:\([a-f\d]+\)/i, /:\[[^\]]+\]/, /:[)>o":]/]
        },
        greedy: !0
      },
      number: /(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,
      symbol: {
        pattern: /(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/,
        lookbehind: !0,
        inside: {
          keyword: /A(?=\s)/
        }
      },
      label: {
        pattern: /((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/,
        lookbehind: !0,
        alias: "string"
      },
      function: {
        pattern: /((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/,
        lookbehind: !0
      },
      keyword: [
        {
          pattern: /(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,
          lookbehind: !0
        },
        /'Z(?=\s|,|$)/
      ],
      boolean: {
        pattern: /(^|\s)(?:FAIL|WIN)(?=\s|,|$)/,
        lookbehind: !0
      },
      variable: {
        pattern: /(^|\s)IT(?=\s|,|$)/,
        lookbehind: !0
      },
      operator: {
        pattern: /(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,
        lookbehind: !0
      },
      punctuation: /\.{3}|…|,|!/
    };
  }
  return Pu;
}
var Fu, PE;
function AF() {
  if (PE) return Fu;
  PE = 1, Fu = e, e.displayName = "magma", e.aliases = [];
  function e(t) {
    t.languages.magma = {
      output: {
        pattern: /^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,
        lookbehind: !0,
        greedy: !0
      },
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/,
        lookbehind: !0,
        greedy: !0
      },
      // http://magma.maths.usyd.edu.au/magma/handbook/text/82
      keyword: /\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,
      boolean: /\b(?:false|true)\b/,
      generator: {
        pattern: /\b[a-z_]\w*(?=\s*<)/i,
        alias: "class-name"
      },
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: {
        pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
        lookbehind: !0
      },
      operator: /->|[-+*/^~!|#=]|:=|\.\./,
      punctuation: /[()[\]{}<>,;.:]/
    };
  }
  return Fu;
}
var Bu, FE;
function xF() {
  if (FE) return Bu;
  FE = 1, Bu = e, e.displayName = "makefile", e.aliases = [];
  function e(t) {
    t.languages.makefile = {
      comment: {
        pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
        lookbehind: !0
      },
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      "builtin-target": {
        pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
        alias: "builtin"
      },
      target: {
        pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
        alias: "symbol",
        inside: {
          variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
        }
      },
      variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
      // Directives
      keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
      function: {
        pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
        lookbehind: !0
      },
      operator: /(?:::|[?:+!])?=|[|@]/,
      punctuation: /[:;(){}]/
    };
  }
  return Bu;
}
var Uu, BE;
function RF() {
  if (BE) return Uu;
  BE = 1, Uu = e, e.displayName = "markdown", e.aliases = ["md"];
  function e(t) {
    (function(n) {
      var r = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
      function a(m) {
        return m = m.replace(/<inner>/g, function() {
          return r;
        }), RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + m + ")");
      }
      var i = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source, o = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(
        /__/g,
        function() {
          return i;
        }
      ), s = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
      n.languages.markdown = n.languages.extend("markup", {}), n.languages.insertBefore("markdown", "prolog", {
        "front-matter-block": {
          pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            punctuation: /^---|---$/,
            "front-matter": {
              pattern: /\S+(?:\s+\S+)*/,
              alias: ["yaml", "language-yaml"],
              inside: n.languages.yaml
            }
          }
        },
        blockquote: {
          // > ...
          pattern: /^>(?:[\t ]*>)*/m,
          alias: "punctuation"
        },
        table: {
          pattern: RegExp(
            "^" + o + s + "(?:" + o + ")*",
            "m"
          ),
          inside: {
            "table-data-rows": {
              pattern: RegExp(
                "^(" + o + s + ")(?:" + o + ")*$"
              ),
              lookbehind: !0,
              inside: {
                "table-data": {
                  pattern: RegExp(i),
                  inside: n.languages.markdown
                },
                punctuation: /\|/
              }
            },
            "table-line": {
              pattern: RegExp("^(" + o + ")" + s + "$"),
              lookbehind: !0,
              inside: {
                punctuation: /\||:?-{3,}:?/
              }
            },
            "table-header-row": {
              pattern: RegExp("^" + o + "$"),
              inside: {
                "table-header": {
                  pattern: RegExp(i),
                  alias: "important",
                  inside: n.languages.markdown
                },
                punctuation: /\|/
              }
            }
          }
        },
        code: [
          {
            // Prefixed by 4 spaces or 1 tab and preceded by an empty line
            pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
            lookbehind: !0,
            alias: "keyword"
          },
          {
            // ```optional language
            // code block
            // ```
            pattern: /^```[\s\S]*?^```$/m,
            greedy: !0,
            inside: {
              "code-block": {
                pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
                lookbehind: !0
              },
              "code-language": {
                pattern: /^(```).+/,
                lookbehind: !0
              },
              punctuation: /```/
            }
          }
        ],
        title: [
          {
            // title 1
            // =======
            // title 2
            // -------
            pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
            alias: "important",
            inside: {
              punctuation: /==+$|--+$/
            }
          },
          {
            // # title 1
            // ###### title 6
            pattern: /(^\s*)#.+/m,
            lookbehind: !0,
            alias: "important",
            inside: {
              punctuation: /^#+|#+$/
            }
          }
        ],
        hr: {
          // ***
          // ---
          // * * *
          // -----------
          pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        list: {
          // * item
          // + item
          // - item
          // 1. item
          pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
          lookbehind: !0,
          alias: "punctuation"
        },
        "url-reference": {
          // [id]: http://example.com "Optional title"
          // [id]: http://example.com 'Optional title'
          // [id]: http://example.com (Optional title)
          // [id]: <http://example.com> "Optional title"
          pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
          inside: {
            variable: {
              pattern: /^(!?\[)[^\]]+/,
              lookbehind: !0
            },
            string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
            punctuation: /^[\[\]!:]|[<>]/
          },
          alias: "url"
        },
        bold: {
          // **strong**
          // __strong__
          // allow one nested instance of italic text using the same delimiter
          pattern: a(
            /\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^..)[\s\S]+(?=..$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /\*\*|__/
          }
        },
        italic: {
          // *em*
          // _em_
          // allow one nested instance of bold text using the same delimiter
          pattern: a(
            /\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^.)[\s\S]+(?=.$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /[*_]/
          }
        },
        strike: {
          // ~~strike through~~
          // ~strike~
          // eslint-disable-next-line regexp/strict
          pattern: a(/(~~?)(?:(?!~)<inner>)+\2/.source),
          lookbehind: !0,
          greedy: !0,
          inside: {
            content: {
              pattern: /(^~~?)[\s\S]+(?=\1$)/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            punctuation: /~~?/
          }
        },
        "code-snippet": {
          // `code`
          // ``code``
          pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
          lookbehind: !0,
          greedy: !0,
          alias: ["code", "keyword"]
        },
        url: {
          // [example](http://example.com "Optional title")
          // [example][id]
          // [example] [id]
          pattern: a(
            /!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            operator: /^!/,
            content: {
              pattern: /(^\[)[^\]]+(?=\])/,
              lookbehind: !0,
              inside: {}
              // see below
            },
            variable: {
              pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
              lookbehind: !0
            },
            url: {
              pattern: /(^\]\()[^\s)]+/,
              lookbehind: !0
            },
            string: {
              pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
              lookbehind: !0
            }
          }
        }
      }), ["url", "bold", "italic", "strike"].forEach(function(m) {
        ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(f) {
          m !== f && (n.languages.markdown[m].inside.content.inside[f] = n.languages.markdown[f]);
        });
      }), n.hooks.add("after-tokenize", function(m) {
        if (m.language !== "markdown" && m.language !== "md")
          return;
        function f(h) {
          if (!(!h || typeof h == "string"))
            for (var E = 0, I = h.length; E < I; E++) {
              var x = h[E];
              if (x.type !== "code") {
                f(x.content);
                continue;
              }
              var v = x.content[1], S = x.content[3];
              if (v && S && v.type === "code-language" && S.type === "code-block" && typeof v.content == "string") {
                var g = v.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                g = (/[a-z][\w-]*/i.exec(g) || [""])[0].toLowerCase();
                var y = "language-" + g;
                S.alias ? typeof S.alias == "string" ? S.alias = [S.alias, y] : S.alias.push(y) : S.alias = [y];
              }
            }
        }
        f(m.tokens);
      }), n.hooks.add("wrap", function(m) {
        if (m.type === "code-block") {
          for (var f = "", h = 0, E = m.classes.length; h < E; h++) {
            var I = m.classes[h], x = /language-(.+)/.exec(I);
            if (x) {
              f = x[1];
              break;
            }
          }
          var v = n.languages[f];
          if (v)
            m.content = n.highlight(
              d(m.content.value),
              v,
              f
            );
          else if (f && f !== "none" && n.plugins.autoloader) {
            var S = "md-" + (/* @__PURE__ */ new Date()).valueOf() + "-" + Math.floor(Math.random() * 1e16);
            m.attributes.id = S, n.plugins.autoloader.loadLanguages(f, function() {
              var g = document.getElementById(S);
              g && (g.innerHTML = n.highlight(
                g.textContent,
                n.languages[f],
                f
              ));
            });
          }
        }
      });
      var l = RegExp(n.languages.markup.tag.pattern.source, "gi"), u = {
        amp: "&",
        lt: "<",
        gt: ">",
        quot: '"'
      }, c = String.fromCodePoint || String.fromCharCode;
      function d(m) {
        var f = m.replace(l, "");
        return f = f.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(h, E) {
          if (E = E.toLowerCase(), E[0] === "#") {
            var I;
            return E[1] === "x" ? I = parseInt(E.slice(2), 16) : I = Number(E.slice(1)), c(I);
          } else {
            var x = u[E];
            return x || h;
          }
        }), f;
      }
      n.languages.md = n.languages.markdown;
    })(t);
  }
  return Uu;
}
var ju, UE;
function IF() {
  if (UE) return ju;
  UE = 1, ju = e, e.displayName = "matlab", e.aliases = [];
  function e(t) {
    t.languages.matlab = {
      comment: [/%\{[\s\S]*?\}%/, /%.+/],
      string: {
        pattern: /\B'(?:''|[^'\r\n])*'/,
        greedy: !0
      },
      // FIXME We could handle imaginary numbers as a whole
      number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
      keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
      function: /\b(?!\d)\w+(?=\s*\()/,
      operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
      punctuation: /\.{3}|[.,;\[\](){}!]/
    };
  }
  return ju;
}
var Hu, jE;
function wF() {
  if (jE) return Hu;
  jE = 1, Hu = e, e.displayName = "maxscript", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;
      n.languages.maxscript = {
        comment: {
          pattern: /\/\*[\s\S]*?(?:\*\/|$)|--.*/,
          greedy: !0
        },
        string: {
          pattern: /(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/,
          lookbehind: !0,
          greedy: !0
        },
        path: {
          pattern: /\$(?:[\w/\\.*?]|'[^']*')*/,
          greedy: !0,
          alias: "string"
        },
        "function-call": {
          pattern: RegExp(
            "((?:" + // start of line
            (/^/.source + "|" + // operators and other language constructs
            /[;=<>+\-*/^({\[]/.source + "|" + // keywords as part of statements
            /\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source) + ")[ 	]*)(?!" + r.source + ")" + /[a-z_]\w*\b/.source + "(?=[ 	]*(?:" + // variable
            ("(?!" + r.source + ")" + /[a-z_]/.source + "|" + // number
            /\d|-\.?\d/.source + "|" + // other expressions or literals
            /[({'"$@#?]/.source) + "))",
            "im"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "function"
        },
        "function-definition": {
          pattern: /(\b(?:fn|function)\s+)\w+\b/i,
          lookbehind: !0,
          alias: "function"
        },
        argument: {
          pattern: /\b[a-z_]\w*(?=:)/i,
          alias: "attr-name"
        },
        keyword: r,
        boolean: /\b(?:false|true)\b/,
        time: {
          pattern: /(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,
          lookbehind: !0,
          alias: "number"
        },
        number: [
          {
            pattern: /(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/,
            lookbehind: !0
          },
          /\b(?:e|pi)\b/
        ],
        constant: /\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,
        color: {
          pattern: /\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i,
          alias: "constant"
        },
        operator: /[-+*/<>=!]=?|[&^?]|#(?!\()/,
        punctuation: /[()\[\]{}.:,;]|#(?=\()|\\$/m
      };
    })(t);
  }
  return Hu;
}
var qu, HE;
function CF() {
  if (HE) return qu;
  HE = 1, qu = e, e.displayName = "mel", e.aliases = [];
  function e(t) {
    t.languages.mel = {
      comment: /\/\/.*/,
      code: {
        pattern: /`(?:\\.|[^\\`\r\n])*`/,
        greedy: !0,
        alias: "italic",
        inside: {
          delimiter: {
            pattern: /^`|`$/,
            alias: "punctuation"
          }
          // See rest below
        }
      },
      string: {
        pattern: /"(?:\\.|[^\\"\r\n])*"/,
        greedy: !0
      },
      variable: /\$\w+/,
      number: /\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,
      flag: {
        pattern: /-[^\d\W]\w*/,
        alias: "operator"
      },
      keyword: /\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,
      function: /\b\w+(?=\()|\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\b/,
      operator: [
        /\+[+=]?|-[-=]?|&&|\|\||[<>]=|[*\/!=]=?|[%^]/,
        {
          // We don't want to match <<
          pattern: /(^|[^<])<(?!<)/,
          lookbehind: !0
        },
        {
          // We don't want to match >>
          pattern: /(^|[^>])>(?!>)/,
          lookbehind: !0
        }
      ],
      punctuation: /<<|>>|[.,:;?\[\](){}]/
    }, t.languages.mel.code.inside.rest = t.languages.mel;
  }
  return qu;
}
var $u, qE;
function kF() {
  if (qE) return $u;
  qE = 1, $u = e, e.displayName = "mermaid", e.aliases = [];
  function e(t) {
    t.languages.mermaid = {
      comment: {
        pattern: /%%.*/,
        greedy: !0
      },
      style: {
        pattern: /^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,
        lookbehind: !0,
        inside: {
          property: /\b\w[\w-]*(?=[ \t]*:)/,
          operator: /:/,
          punctuation: /,/
        }
      },
      "inter-arrow-label": {
        pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          arrow: {
            pattern: /(?:\.+->?|--+[->]|==+[=>])$/,
            alias: "operator"
          },
          label: {
            pattern: /^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/,
            lookbehind: !0,
            alias: "property"
          },
          "arrow-head": {
            pattern: /^\S+/,
            alias: ["arrow", "operator"]
          }
        }
      },
      arrow: [
        // This might look complex but it really isn't.
        // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The
        // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow
        // characters in the one lookbehind because that would create too many false negatives. So we have to split the
        // arrows into different patterns.
        {
          // ER diagram
          pattern: /(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // flow chart
          // (?:==+|--+|-\.*-)
          pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // sequence diagram
          pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,
          lookbehind: !0,
          alias: "operator"
        },
        {
          // class diagram
          pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/,
          lookbehind: !0,
          alias: "operator"
        }
      ],
      label: {
        pattern: /(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      text: {
        pattern: /(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/,
        alias: "string"
      },
      string: {
        pattern: /"[^"\r\n]*"/,
        greedy: !0
      },
      annotation: {
        pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i,
        alias: "important"
      },
      keyword: [
        // This language has both case-sensitive and case-insensitive keywords
        {
          pattern: /(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,
          lookbehind: !0,
          greedy: !0
        },
        {
          pattern: /(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,
          lookbehind: !0,
          greedy: !0
        }
      ],
      entity: /#[a-z0-9]+;/,
      operator: {
        pattern: /(\w[ \t]*)&(?=[ \t]*\w)|:::|:/,
        lookbehind: !0
      },
      punctuation: /[(){};]/
    };
  }
  return $u;
}
var zu, $E;
function NF() {
  if ($E) return zu;
  $E = 1, zu = e, e.displayName = "mizar", e.aliases = [];
  function e(t) {
    t.languages.mizar = {
      comment: /::.+/,
      keyword: /@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,
      parameter: {
        pattern: /\$(?:10|\d)/,
        alias: "variable"
      },
      variable: /\b\w+(?=:)/,
      number: /(?:\b|-)\d+\b/,
      operator: /\.\.\.|->|&|\.?=/,
      punctuation: /\(#|#\)|[,:;\[\](){}]/
    };
  }
  return zu;
}
var Gu, zE;
function OF() {
  if (zE) return Gu;
  zE = 1, Gu = e, e.displayName = "mongodb", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        // query and projection
        "$eq",
        "$gt",
        "$gte",
        "$in",
        "$lt",
        "$lte",
        "$ne",
        "$nin",
        "$and",
        "$not",
        "$nor",
        "$or",
        "$exists",
        "$type",
        "$expr",
        "$jsonSchema",
        "$mod",
        "$regex",
        "$text",
        "$where",
        "$geoIntersects",
        "$geoWithin",
        "$near",
        "$nearSphere",
        "$all",
        "$elemMatch",
        "$size",
        "$bitsAllClear",
        "$bitsAllSet",
        "$bitsAnyClear",
        "$bitsAnySet",
        "$comment",
        "$elemMatch",
        "$meta",
        "$slice",
        // update
        "$currentDate",
        "$inc",
        "$min",
        "$max",
        "$mul",
        "$rename",
        "$set",
        "$setOnInsert",
        "$unset",
        "$addToSet",
        "$pop",
        "$pull",
        "$push",
        "$pullAll",
        "$each",
        "$position",
        "$slice",
        "$sort",
        "$bit",
        // aggregation pipeline stages
        "$addFields",
        "$bucket",
        "$bucketAuto",
        "$collStats",
        "$count",
        "$currentOp",
        "$facet",
        "$geoNear",
        "$graphLookup",
        "$group",
        "$indexStats",
        "$limit",
        "$listLocalSessions",
        "$listSessions",
        "$lookup",
        "$match",
        "$merge",
        "$out",
        "$planCacheStats",
        "$project",
        "$redact",
        "$replaceRoot",
        "$replaceWith",
        "$sample",
        "$set",
        "$skip",
        "$sort",
        "$sortByCount",
        "$unionWith",
        "$unset",
        "$unwind",
        "$setWindowFields",
        // aggregation pipeline operators
        "$abs",
        "$accumulator",
        "$acos",
        "$acosh",
        "$add",
        "$addToSet",
        "$allElementsTrue",
        "$and",
        "$anyElementTrue",
        "$arrayElemAt",
        "$arrayToObject",
        "$asin",
        "$asinh",
        "$atan",
        "$atan2",
        "$atanh",
        "$avg",
        "$binarySize",
        "$bsonSize",
        "$ceil",
        "$cmp",
        "$concat",
        "$concatArrays",
        "$cond",
        "$convert",
        "$cos",
        "$dateFromParts",
        "$dateToParts",
        "$dateFromString",
        "$dateToString",
        "$dayOfMonth",
        "$dayOfWeek",
        "$dayOfYear",
        "$degreesToRadians",
        "$divide",
        "$eq",
        "$exp",
        "$filter",
        "$first",
        "$floor",
        "$function",
        "$gt",
        "$gte",
        "$hour",
        "$ifNull",
        "$in",
        "$indexOfArray",
        "$indexOfBytes",
        "$indexOfCP",
        "$isArray",
        "$isNumber",
        "$isoDayOfWeek",
        "$isoWeek",
        "$isoWeekYear",
        "$last",
        "$last",
        "$let",
        "$literal",
        "$ln",
        "$log",
        "$log10",
        "$lt",
        "$lte",
        "$ltrim",
        "$map",
        "$max",
        "$mergeObjects",
        "$meta",
        "$min",
        "$millisecond",
        "$minute",
        "$mod",
        "$month",
        "$multiply",
        "$ne",
        "$not",
        "$objectToArray",
        "$or",
        "$pow",
        "$push",
        "$radiansToDegrees",
        "$range",
        "$reduce",
        "$regexFind",
        "$regexFindAll",
        "$regexMatch",
        "$replaceOne",
        "$replaceAll",
        "$reverseArray",
        "$round",
        "$rtrim",
        "$second",
        "$setDifference",
        "$setEquals",
        "$setIntersection",
        "$setIsSubset",
        "$setUnion",
        "$size",
        "$sin",
        "$slice",
        "$split",
        "$sqrt",
        "$stdDevPop",
        "$stdDevSamp",
        "$strcasecmp",
        "$strLenBytes",
        "$strLenCP",
        "$substr",
        "$substrBytes",
        "$substrCP",
        "$subtract",
        "$sum",
        "$switch",
        "$tan",
        "$toBool",
        "$toDate",
        "$toDecimal",
        "$toDouble",
        "$toInt",
        "$toLong",
        "$toObjectId",
        "$toString",
        "$toLower",
        "$toUpper",
        "$trim",
        "$trunc",
        "$type",
        "$week",
        "$year",
        "$zip",
        "$count",
        "$dateAdd",
        "$dateDiff",
        "$dateSubtract",
        "$dateTrunc",
        "$getField",
        "$rand",
        "$sampleRate",
        "$setField",
        "$unsetField",
        // aggregation pipeline query modifiers
        "$comment",
        "$explain",
        "$hint",
        "$max",
        "$maxTimeMS",
        "$min",
        "$orderby",
        "$query",
        "$returnKey",
        "$showDiskLoc",
        "$natural"
      ], a = [
        "ObjectId",
        "Code",
        "BinData",
        "DBRef",
        "Timestamp",
        "NumberLong",
        "NumberDecimal",
        "MaxKey",
        "MinKey",
        "RegExp",
        "ISODate",
        "UUID"
      ];
      r = r.map(function(o) {
        return o.replace("$", "\\$");
      });
      var i = "(?:" + r.join("|") + ")\\b";
      n.languages.mongodb = n.languages.extend("javascript", {}), n.languages.insertBefore("mongodb", "string", {
        property: {
          pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
          greedy: !0,
          inside: {
            keyword: RegExp(`^(['"])?` + i + "(?:\\1)?$")
          }
        }
      }), n.languages.mongodb.string.inside = {
        url: {
          // url pattern
          pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,
          greedy: !0
        },
        entity: {
          // ipv4
          pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,
          greedy: !0
        }
      }, n.languages.insertBefore("mongodb", "constant", {
        builtin: {
          pattern: RegExp("\\b(?:" + a.join("|") + ")\\b"),
          alias: "keyword"
        }
      });
    })(t);
  }
  return Gu;
}
var Vu, GE;
function LF() {
  if (GE) return Vu;
  GE = 1, Vu = e, e.displayName = "monkey", e.aliases = [];
  function e(t) {
    t.languages.monkey = {
      comment: {
        pattern: /^#Rem\s[\s\S]*?^#End|'.+/im,
        greedy: !0
      },
      string: {
        pattern: /"[^"\r\n]*"/,
        greedy: !0
      },
      preprocessor: {
        pattern: /(^[ \t]*)#.+/m,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      function: /\b\w+(?=\()/,
      "type-char": {
        pattern: /\b[?%#$]/,
        alias: "class-name"
      },
      number: {
        pattern: /((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i,
        lookbehind: !0
      },
      keyword: /\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,
      operator: /\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,
      punctuation: /[.,:;()\[\]]/
    };
  }
  return Vu;
}
var Wu, VE;
function DF() {
  if (VE) return Wu;
  VE = 1, Wu = e, e.displayName = "moonscript", e.aliases = ["moon"];
  function e(t) {
    t.languages.moonscript = {
      comment: /--.*/,
      string: [
        {
          pattern: /'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/,
          greedy: !0
        },
        {
          pattern: /"[^"]*"/,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /#\{[^{}]*\}/,
              inside: {
                moonscript: {
                  pattern: /(^#\{)[\s\S]+(?=\})/,
                  lookbehind: !0,
                  inside: null
                  // see beow
                },
                "interpolation-punctuation": {
                  pattern: /#\{|\}/,
                  alias: "punctuation"
                }
              }
            }
          }
        }
      ],
      "class-name": [
        {
          pattern: /(\b(?:class|extends)[ \t]+)\w+/,
          lookbehind: !0
        },
        // class-like names start with a capital letter
        /\b[A-Z]\w*/
      ],
      keyword: /\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,
      variable: /@@?\w*/,
      property: {
        pattern: /\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/,
        lookbehind: !0
      },
      function: {
        pattern: /\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,
        inside: {
          punctuation: /\./
        }
      },
      boolean: /\b(?:false|true)\b/,
      number: /(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,
      operator: /\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,
      punctuation: /[.,()[\]{}\\]/
    }, t.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = t.languages.moonscript, t.languages.moon = t.languages.moonscript;
  }
  return Wu;
}
var Yu, WE;
function MF() {
  if (WE) return Yu;
  WE = 1, Yu = e, e.displayName = "n1ql", e.aliases = [];
  function e(t) {
    t.languages.n1ql = {
      comment: {
        pattern: /\/\*[\s\S]*?(?:$|\*\/)|--.*/,
        greedy: !0
      },
      string: {
        pattern: /(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/,
        greedy: !0
      },
      identifier: {
        pattern: /`(?:\\[\s\S]|[^\\`]|``)*`/,
        greedy: !0
      },
      parameter: /\$[\w.]+/,
      // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words
      keyword: /\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      boolean: /\b(?:FALSE|TRUE)\b/i,
      number: /(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
      operator: /[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,
      punctuation: /[;[\](),.{}:]/
    };
  }
  return Yu;
}
var Ku, YE;
function PF() {
  if (YE) return Ku;
  YE = 1, Ku = e, e.displayName = "n4js", e.aliases = ["n4jsd"];
  function e(t) {
    t.languages.n4js = t.languages.extend("javascript", {
      // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html
      keyword: /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/
    }), t.languages.insertBefore("n4js", "constant", {
      // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations
      annotation: {
        pattern: /@+\w+/,
        alias: "operator"
      }
    }), t.languages.n4jsd = t.languages.n4js;
  }
  return Ku;
}
var Xu, KE;
function FF() {
  if (KE) return Xu;
  KE = 1, Xu = e, e.displayName = "nand2tetrisHdl", e.aliases = [];
  function e(t) {
    t.languages["nand2tetris-hdl"] = {
      comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
      keyword: /\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,
      boolean: /\b(?:false|true)\b/,
      function: /\b[A-Za-z][A-Za-z0-9]*(?=\()/,
      number: /\b\d+\b/,
      operator: /=|\.\./,
      punctuation: /[{}[\];(),:]/
    };
  }
  return Xu;
}
var Zu, XE;
function BF() {
  if (XE) return Zu;
  XE = 1, Zu = e, e.displayName = "naniscript", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\{[^\r\n\[\]{}]*\}/, a = {
        "quoted-string": {
          pattern: /"(?:[^"\\]|\\.)*"/,
          alias: "operator"
        },
        "command-param-id": {
          pattern: /(\s)\w+:/,
          lookbehind: !0,
          alias: "property"
        },
        "command-param-value": [
          {
            pattern: r,
            alias: "selector"
          },
          {
            pattern: /([\t ])\S+/,
            lookbehind: !0,
            greedy: !0,
            alias: "operator"
          },
          {
            pattern: /\S(?:.*\S)?/,
            alias: "operator"
          }
        ]
      };
      n.languages.naniscript = {
        // ; ...
        comment: {
          pattern: /^([\t ]*);.*/m,
          lookbehind: !0
        },
        // > ...
        // Define is a control line starting with '>' followed by a word, a space and a text.
        define: {
          pattern: /^>.+/m,
          alias: "tag",
          inside: {
            value: {
              pattern: /(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/,
              lookbehind: !0,
              alias: "operator"
            },
            key: {
              pattern: /(^>)\w+/,
              lookbehind: !0
            }
          }
        },
        // # ...
        label: {
          pattern: /^([\t ]*)#[\t ]*\w+[\t ]*$/m,
          lookbehind: !0,
          alias: "regex"
        },
        command: {
          pattern: /^([\t ]*)@\w+(?=[\t ]|$).*/m,
          lookbehind: !0,
          alias: "function",
          inside: {
            "command-name": /^@\w+/,
            expression: {
              pattern: r,
              greedy: !0,
              alias: "selector"
            },
            "command-params": {
              pattern: /\s*\S[\s\S]*/,
              inside: a
            }
          }
        },
        // Generic is any line that doesn't start with operators: ;>#@
        "generic-text": {
          pattern: /(^[ \t]*)[^#@>;\s].*/m,
          lookbehind: !0,
          alias: "punctuation",
          inside: {
            // \{ ... \} ... \[ ... \] ... \"
            "escaped-char": /\\[{}\[\]"]/,
            expression: {
              pattern: r,
              greedy: !0,
              alias: "selector"
            },
            "inline-command": {
              pattern: /\[[\t ]*\w[^\r\n\[\]]*\]/,
              greedy: !0,
              alias: "function",
              inside: {
                "command-params": {
                  pattern: /(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/,
                  lookbehind: !0,
                  inside: a
                },
                "command-param-name": {
                  pattern: /^(\[[\t ]*)\w+/,
                  lookbehind: !0,
                  alias: "name"
                },
                "start-stop-char": /[\[\]]/
              }
            }
          }
        }
      }, n.languages.nani = n.languages.naniscript, n.hooks.add("after-tokenize", function(s) {
        var l = s.tokens;
        l.forEach(function(u) {
          if (typeof u != "string" && u.type === "generic-text") {
            var c = o(u);
            i(c) || (u.type = "bad-line", u.content = c);
          }
        });
      });
      function i(s) {
        for (var l = "[]{}", u = [], c = 0; c < s.length; c++) {
          var d = s[c], m = l.indexOf(d);
          if (m !== -1) {
            if (m % 2 === 0)
              u.push(m + 1);
            else if (u.pop() !== m)
              return !1;
          }
        }
        return u.length === 0;
      }
      function o(s) {
        return typeof s == "string" ? s : Array.isArray(s) ? s.map(o).join("") : o(s.content);
      }
    })(t);
  }
  return Zu;
}
var Qu, ZE;
function UF() {
  if (ZE) return Qu;
  ZE = 1, Qu = e, e.displayName = "nasm", e.aliases = [];
  function e(t) {
    t.languages.nasm = {
      comment: /;.*$/m,
      string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      label: {
        pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,
        lookbehind: !0,
        alias: "function"
      },
      keyword: [
        /\[?BITS (?:16|32|64)\]?/,
        {
          pattern: /(^\s*)section\s*[a-z.]+:?/im,
          lookbehind: !0
        },
        /(?:extern|global)[^;\r\n]*/i,
        /(?:CPU|DEFAULT|FLOAT).*$/m
      ],
      register: {
        pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i,
        alias: "variable"
      },
      number: /(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
      operator: /[\[\]*+\-\/%<>=&|$!]/
    };
  }
  return Qu;
}
var Ju, QE;
function jF() {
  if (QE) return Ju;
  QE = 1, Ju = e, e.displayName = "neon", e.aliases = [];
  function e(t) {
    t.languages.neon = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      datetime: {
        pattern: /(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,
        lookbehind: !0,
        alias: "number"
      },
      key: {
        pattern: /(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/,
        lookbehind: !0,
        alias: "atrule"
      },
      number: {
        pattern: /(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,
        lookbehind: !0
      },
      boolean: {
        pattern: /(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i,
        lookbehind: !0
      },
      null: {
        pattern: /(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i,
        lookbehind: !0,
        alias: "keyword"
      },
      string: {
        pattern: /(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,
        lookbehind: !0,
        greedy: !0
      },
      literal: {
        pattern: /(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,
        lookbehind: !0,
        alias: "string"
      },
      punctuation: /[,:=[\]{}()-]/
    };
  }
  return Ju;
}
var ec, JE;
function HF() {
  if (JE) return ec;
  JE = 1, ec = e, e.displayName = "nevod", e.aliases = [];
  function e(t) {
    t.languages.nevod = {
      comment: /\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,
      string: {
        pattern: /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/,
        greedy: !0,
        inside: {
          "string-attrs": /!$|!\*$|\*$/
        }
      },
      namespace: {
        pattern: /(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/,
        lookbehind: !0
      },
      pattern: {
        pattern: /(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,
        lookbehind: !0,
        inside: {
          "pattern-name": {
            pattern: /^#?[a-zA-Z0-9\-.]+/,
            alias: "class-name"
          },
          fields: {
            pattern: /\(.*\)/,
            inside: {
              "field-name": {
                pattern: /[a-zA-Z0-9\-.]+/,
                alias: "variable"
              },
              punctuation: /[,()]/,
              operator: {
                pattern: /~/,
                alias: "field-hidden-mark"
              }
            }
          }
        }
      },
      search: {
        pattern: /(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/,
        alias: "function",
        lookbehind: !0
      },
      keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,
      "standard-pattern": {
        pattern: /\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,
        inside: {
          "standard-pattern-name": {
            pattern: /^[a-zA-Z0-9\-.]+/,
            alias: "builtin"
          },
          quantifier: {
            pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
            alias: "number"
          },
          "standard-pattern-attr": {
            pattern: /[a-zA-Z0-9\-.]+/,
            alias: "builtin"
          },
          punctuation: /[,()]/
        }
      },
      quantifier: {
        pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
        alias: "number"
      },
      operator: [
        {
          pattern: /=/,
          alias: "pattern-def"
        },
        {
          pattern: /&/,
          alias: "conjunction"
        },
        {
          pattern: /~/,
          alias: "exception"
        },
        {
          pattern: /\?/,
          alias: "optionality"
        },
        {
          pattern: /[[\]]/,
          alias: "repetition"
        },
        {
          pattern: /[{}]/,
          alias: "variation"
        },
        {
          pattern: /[+_]/,
          alias: "sequence"
        },
        {
          pattern: /\.{2,3}/,
          alias: "span"
        }
      ],
      "field-capture": [
        {
          pattern: /([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,
          lookbehind: !0,
          inside: {
            "field-name": {
              pattern: /[a-zA-Z0-9\-.]+/,
              alias: "variable"
            },
            colon: /:/
          }
        },
        {
          pattern: /[a-zA-Z0-9\-.]+\s*:/,
          inside: {
            "field-name": {
              pattern: /[a-zA-Z0-9\-.]+/,
              alias: "variable"
            },
            colon: /:/
          }
        }
      ],
      punctuation: /[:;,()]/,
      name: /[a-zA-Z0-9\-.]+/
    };
  }
  return ec;
}
var tc, e0;
function qF() {
  if (e0) return tc;
  e0 = 1, tc = e, e.displayName = "nginx", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;
      n.languages.nginx = {
        comment: {
          pattern: /(^|[\s{};])#.*/,
          lookbehind: !0,
          greedy: !0
        },
        directive: {
          pattern: /(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            string: {
              pattern: /((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,
              lookbehind: !0,
              greedy: !0,
              inside: {
                escape: {
                  pattern: /\\["'\\nrt]/,
                  alias: "entity"
                },
                variable: r
              }
            },
            comment: {
              pattern: /(\s)#.*/,
              lookbehind: !0,
              greedy: !0
            },
            keyword: {
              pattern: /^\S+/,
              greedy: !0
            },
            // other patterns
            boolean: {
              pattern: /(\s)(?:off|on)(?!\S)/,
              lookbehind: !0
            },
            number: {
              pattern: /(\s)\d+[a-z]*(?!\S)/i,
              lookbehind: !0
            },
            variable: r
          }
        },
        punctuation: /[{};]/
      };
    })(t);
  }
  return tc;
}
var nc, t0;
function $F() {
  if (t0) return nc;
  t0 = 1, nc = e, e.displayName = "nim", e.aliases = [];
  function e(t) {
    t.languages.nim = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)
        pattern: /(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/,
        greedy: !0
      },
      char: {
        // Character literals are handled specifically to prevent issues with numeric type suffixes
        pattern: /'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/,
        greedy: !0
      },
      function: {
        pattern: /(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/,
        greedy: !0,
        inside: {
          operator: /\*$/
        }
      },
      // We don't want to highlight operators (and anything really) inside backticks
      identifier: {
        pattern: /`[^`\r\n]+`/,
        greedy: !0,
        inside: {
          punctuation: /`/
        }
      },
      // The negative look ahead prevents wrong highlighting of the .. operator
      number: /\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,
      keyword: /\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,
      operator: {
        // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)
        // but allow the slice operator .. to take precedence over them
        // One can define his own operators in Nim so all combination of operators might be an operator.
        pattern: /(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,
        lookbehind: !0
      },
      punctuation: /[({\[]\.|\.[)}\]]|[`(){}\[\],:]/
    };
  }
  return nc;
}
var rc, n0;
function zF() {
  if (n0) return rc;
  n0 = 1, rc = e, e.displayName = "nix", e.aliases = [];
  function e(t) {
    t.languages.nix = {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|#.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,
        greedy: !0,
        inside: {
          interpolation: {
            // The lookbehind ensures the ${} is not preceded by \ or ''
            pattern: /(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/,
            lookbehind: !0,
            inside: null
            // see below
          }
        }
      },
      url: [
        /\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,
        {
          pattern: /([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/,
          lookbehind: !0
        }
      ],
      antiquotation: {
        pattern: /\$(?=\{)/,
        alias: "important"
      },
      number: /\b\d+\b/,
      keyword: /\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,
      function: /\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,
      boolean: /\b(?:false|true)\b/,
      operator: /[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,
      punctuation: /[{}()[\].,:;]/
    }, t.languages.nix.string.inside.interpolation.inside = t.languages.nix;
  }
  return rc;
}
var ac, r0;
function GF() {
  if (r0) return ac;
  r0 = 1, ac = e, e.displayName = "nsis", e.aliases = [];
  function e(t) {
    t.languages.nsis = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: {
        pattern: /(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,
        lookbehind: !0
      },
      property: /\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,
      constant: /\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,
      variable: /\$\w[\w\.]*/,
      number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
      operator: /--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,
      punctuation: /[{}[\];(),.:]/,
      important: {
        pattern: /(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,
        lookbehind: !0
      }
    };
  }
  return ac;
}
var ic, a0;
function VF() {
  if (a0) return ic;
  a0 = 1;
  var e = Mr();
  ic = t, t.displayName = "objectivec", t.aliases = ["objc"];
  function t(n) {
    n.register(e), n.languages.objectivec = n.languages.extend("c", {
      string: {
        pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
      operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
    }), delete n.languages.objectivec["class-name"], n.languages.objc = n.languages.objectivec;
  }
  return ic;
}
var oc, i0;
function WF() {
  if (i0) return oc;
  i0 = 1, oc = e, e.displayName = "ocaml", e.aliases = [];
  function e(t) {
    t.languages.ocaml = {
      comment: {
        pattern: /\(\*[\s\S]*?\*\)/,
        greedy: !0
      },
      char: {
        pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,
        greedy: !0
      },
      string: [
        {
          pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,
          greedy: !0
        },
        {
          pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/,
          greedy: !0
        }
      ],
      number: [
        // binary and octal
        /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,
        // hexadecimal
        /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,
        // decimal
        /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i
      ],
      directive: {
        pattern: /\B#\w+/,
        alias: "property"
      },
      label: {
        pattern: /\B~\w+/,
        alias: "property"
      },
      "type-variable": {
        pattern: /\B'\w+/,
        alias: "function"
      },
      variant: {
        pattern: /`\w+/,
        alias: "symbol"
      },
      // For the list of keywords and operators,
      // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84
      keyword: /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
      boolean: /\b(?:false|true)\b/,
      "operator-like-punctuation": {
        pattern: /\[[<>|]|[>|]\]|\{<|>\}/,
        alias: "punctuation"
      },
      // Custom operators are allowed
      operator: /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
      punctuation: /;;|::|[(){}\[\].,:;#]|\b_\b/
    };
  }
  return oc;
}
var sc, o0;
function YF() {
  if (o0) return sc;
  o0 = 1;
  var e = Mr();
  sc = t, t.displayName = "opencl", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.opencl = r.languages.extend("c", {
        // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)
        keyword: /\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,
        // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)
        // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html
        // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html
        number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,
        boolean: /\b(?:false|true)\b/,
        "constant-opencl-kernel": {
          pattern: /\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,
          alias: "constant"
        }
      }), r.languages.insertBefore("opencl", "class-name", {
        // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html
        // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html
        "builtin-type": {
          pattern: /\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,
          alias: "keyword"
        }
      });
      var a = {
        // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)
        "type-opencl-host": {
          pattern: /\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,
          alias: "keyword"
        },
        "boolean-opencl-host": {
          pattern: /\bCL_(?:FALSE|TRUE)\b/,
          alias: "boolean"
        },
        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)
        "constant-opencl-host": {
          pattern: /\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,
          alias: "constant"
        },
        // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)
        "function-opencl-host": {
          pattern: /\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,
          alias: "function"
        }
      };
      r.languages.insertBefore("c", "keyword", a), r.languages.cpp && (a["type-opencl-host-cpp"] = {
        pattern: /\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,
        alias: "keyword"
      }, r.languages.insertBefore("cpp", "keyword", a));
    }(n);
  }
  return sc;
}
var lc, s0;
function KF() {
  if (s0) return lc;
  s0 = 1, lc = e, e.displayName = "openqasm", e.aliases = ["qasm"];
  function e(t) {
    t.languages.openqasm = {
      comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
      string: {
        pattern: /"[^"\r\n\t]*"|'[^'\r\n\t]*'/,
        greedy: !0
      },
      keyword: /\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,
      "class-name": /\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,
      function: /\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,
      constant: /\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,
      number: {
        pattern: /(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i,
        lookbehind: !0
      },
      operator: /->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,
      punctuation: /[(){}\[\];,:.]/
    }, t.languages.qasm = t.languages.openqasm;
  }
  return lc;
}
var uc, l0;
function XF() {
  if (l0) return uc;
  l0 = 1, uc = e, e.displayName = "oz", e.aliases = [];
  function e(t) {
    t.languages.oz = {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|%.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:[^"\\]|\\[\s\S])*"/,
        greedy: !0
      },
      atom: {
        pattern: /'(?:[^'\\]|\\[\s\S])*'/,
        greedy: !0,
        alias: "builtin"
      },
      keyword: /\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,
      function: [
        /\b[a-z][A-Za-z\d]*(?=\()/,
        {
          pattern: /(\{)[A-Z][A-Za-z\d]*\b/,
          lookbehind: !0
        }
      ],
      number: /\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,
      variable: /`(?:[^`\\]|\\.)+`/,
      "attr-name": /\b\w+(?=[ \t]*:(?![:=]))/,
      operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,
      punctuation: /[\[\](){}.:;?]/
    };
  }
  return uc;
}
var cc, u0;
function ZF() {
  if (u0) return cc;
  u0 = 1, cc = e, e.displayName = "parigp", e.aliases = [];
  function e(t) {
    t.languages.parigp = {
      comment: /\/\*[\s\S]*?\*\/|\\\\.*/,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"/,
        greedy: !0
      },
      // PARI/GP does not care about white spaces at all
      // so let's process the keywords to build an appropriate regexp
      // (e.g. "b *r *e *a *k", etc.)
      keyword: function() {
        var n = [
          "breakpoint",
          "break",
          "dbg_down",
          "dbg_err",
          "dbg_up",
          "dbg_x",
          "forcomposite",
          "fordiv",
          "forell",
          "forpart",
          "forprime",
          "forstep",
          "forsubgroup",
          "forvec",
          "for",
          "iferr",
          "if",
          "local",
          "my",
          "next",
          "return",
          "until",
          "while"
        ];
        return n = n.map(function(r) {
          return r.split("").join(" *");
        }).join("|"), RegExp("\\b(?:" + n + ")\\b");
      }(),
      function: /\b\w(?:[\w ]*\w)?(?= *\()/,
      number: {
        // The lookbehind and the negative lookahead prevent from breaking the .. operator
        pattern: /((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,
        lookbehind: !0
      },
      operator: /\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,
      punctuation: /[\[\]{}().,:;|]/
    };
  }
  return cc;
}
var dc, c0;
function QF() {
  if (c0) return dc;
  c0 = 1, dc = e, e.displayName = "parser", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.parser = n.languages.extend("markup", {
        keyword: {
          pattern: /(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,
          lookbehind: !0
        },
        variable: {
          pattern: /(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
          lookbehind: !0,
          inside: {
            punctuation: /\.|:+/
          }
        },
        function: {
          pattern: /(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
          lookbehind: !0,
          inside: {
            keyword: {
              pattern: /(^@)(?:GET_|SET_)/,
              lookbehind: !0
            },
            punctuation: /\.|:+/
          }
        },
        escape: {
          pattern: /\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i,
          alias: "builtin"
        },
        punctuation: /[\[\](){};]/
      });
      r = n.languages.insertBefore("parser", "keyword", {
        "parser-comment": {
          pattern: /(\s)#.*/,
          lookbehind: !0,
          alias: "comment"
        },
        expression: {
          // Allow for 3 levels of depth
          pattern: /(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,
          greedy: !0,
          lookbehind: !0,
          inside: {
            string: {
              pattern: /(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/,
              lookbehind: !0
            },
            keyword: r.keyword,
            variable: r.variable,
            function: r.function,
            boolean: /\b(?:false|true)\b/,
            number: /\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,
            escape: r.escape,
            operator: /[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,
            punctuation: r.punctuation
          }
        }
      }), n.languages.insertBefore(
        "inside",
        "punctuation",
        {
          expression: r.expression,
          keyword: r.keyword,
          variable: r.variable,
          function: r.function,
          escape: r.escape,
          "parser-punctuation": {
            pattern: r.punctuation,
            alias: "punctuation"
          }
        },
        r.tag.inside["attr-value"]
      );
    })(t);
  }
  return dc;
}
var pc, d0;
function JF() {
  if (d0) return pc;
  d0 = 1, pc = e, e.displayName = "pascal", e.aliases = ["objectpascal"];
  function e(t) {
    t.languages.pascal = {
      directive: {
        pattern: /\{\$[\s\S]*?\}/,
        greedy: !0,
        alias: ["marco", "property"]
      },
      comment: {
        pattern: /\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/,
        greedy: !0
      },
      string: {
        pattern: /(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i,
        greedy: !0
      },
      asm: {
        pattern: /(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i,
        lookbehind: !0,
        greedy: !0,
        inside: null
        // see below
      },
      keyword: [
        {
          // Turbo Pascal
          pattern: /(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,
          lookbehind: !0
        },
        {
          // Free Pascal
          pattern: /(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,
          lookbehind: !0
        },
        {
          // Object Pascal
          pattern: /(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,
          lookbehind: !0
        },
        {
          // Modifiers
          pattern: /(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,
          lookbehind: !0
        }
      ],
      number: [
        // Hexadecimal, octal and binary
        /(?:[&%]\d+|\$[a-f\d]+)/i,
        // Decimal
        /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i
      ],
      operator: [
        /\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,
        {
          pattern: /(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,
          lookbehind: !0
        }
      ],
      punctuation: /\(\.|\.\)|[()\[\]:;,.]/
    }, t.languages.pascal.asm.inside = t.languages.extend("pascal", {
      asm: void 0,
      keyword: void 0,
      operator: void 0
    }), t.languages.objectpascal = t.languages.pascal;
  }
  return pc;
}
var fc, p0;
function e4() {
  if (p0) return fc;
  p0 = 1, fc = e, e.displayName = "pascaligo", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source, a = /(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(
        /<braces>/g,
        function() {
          return r;
        }
      ), i = n.languages.pascaligo = {
        comment: /\(\*[\s\S]+?\*\)|\/\/.*/,
        string: {
          pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i,
          greedy: !0
        },
        "class-name": [
          {
            pattern: RegExp(
              /(\btype\s+\w+\s+is\s+)<type>/.source.replace(
                /<type>/g,
                function() {
                  return a;
                }
              ),
              "i"
            ),
            lookbehind: !0,
            inside: null
            // see below
          },
          {
            pattern: RegExp(
              /<type>(?=\s+is\b)/.source.replace(/<type>/g, function() {
                return a;
              }),
              "i"
            ),
            inside: null
            // see below
          },
          {
            pattern: RegExp(
              /(:\s*)<type>/.source.replace(/<type>/g, function() {
                return a;
              })
            ),
            lookbehind: !0,
            inside: null
            // see below
          }
        ],
        keyword: {
          pattern: /(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,
          lookbehind: !0
        },
        boolean: {
          pattern: /(^|[^&])\b(?:False|True)\b/i,
          lookbehind: !0
        },
        builtin: {
          pattern: /(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i,
          lookbehind: !0
        },
        function: /\b\w+(?=\s*\()/,
        number: [
          // Hexadecimal, octal and binary
          /%[01]+|&[0-7]+|\$[a-f\d]+/i,
          // Decimal
          /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i
        ],
        operator: /->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,
        punctuation: /\(\.|\.\)|[()\[\]:;,.{}]/
      }, o = [
        "comment",
        "keyword",
        "builtin",
        "operator",
        "punctuation"
      ].reduce(function(s, l) {
        return s[l] = i[l], s;
      }, {});
      i["class-name"].forEach(function(s) {
        s.inside = o;
      });
    })(t);
  }
  return fc;
}
var mc, f0;
function t4() {
  if (f0) return mc;
  f0 = 1, mc = e, e.displayName = "pcaxis", e.aliases = ["px"];
  function e(t) {
    t.languages.pcaxis = {
      string: /"[^"]*"/,
      keyword: {
        pattern: /((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          keyword: /^[-A-Z\d]+/,
          language: {
            pattern: /^(\s*)\[[-\w]+\]/,
            lookbehind: !0,
            inside: {
              punctuation: /^\[|\]$/,
              property: /[-\w]+/
            }
          },
          "sub-key": {
            pattern: /^(\s*)\S[\s\S]*/,
            lookbehind: !0,
            inside: {
              parameter: {
                pattern: /"[^"]*"/,
                alias: "property"
              },
              punctuation: /^\(|\)$|,/
            }
          }
        }
      },
      operator: /=/,
      tlist: {
        pattern: /TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,
        greedy: !0,
        inside: {
          function: /^TLIST/,
          property: {
            pattern: /^(\s*\(\s*)\w+/,
            lookbehind: !0
          },
          string: /"[^"]*"/,
          punctuation: /[(),]/,
          operator: /-/
        }
      },
      punctuation: /[;,]/,
      number: {
        pattern: /(^|\s)\d+(?:\.\d+)?(?!\S)/,
        lookbehind: !0
      },
      boolean: /NO|YES/
    }, t.languages.px = t.languages.pcaxis;
  }
  return mc;
}
var gc, m0;
function n4() {
  if (m0) return gc;
  m0 = 1, gc = e, e.displayName = "peoplecode", e.aliases = ["pcode"];
  function e(t) {
    t.languages.peoplecode = {
      comment: RegExp(
        [
          // C-style multiline comments
          /\/\*[\s\S]*?\*\//.source,
          // REM comments
          /\bREM[^;]*;/.source,
          // Nested <* *> comments
          /<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,
          // /+ +/ comments
          /\/\+[\s\S]*?\+\//.source
        ].join("|")
      ),
      string: {
        pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
        greedy: !0
      },
      variable: /%\w+/,
      "function-definition": {
        pattern: /((?:^|[^\w-])(?:function|method)\s+)\w+/i,
        lookbehind: !0,
        alias: "function"
      },
      "class-name": {
        pattern: /((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,
        lookbehind: !0,
        inside: {
          punctuation: /:/
        }
      },
      keyword: /\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,
      "operator-keyword": {
        pattern: /\b(?:and|not|or)\b/i,
        alias: "operator"
      },
      function: /[_a-z]\w*(?=\s*\()/i,
      boolean: /\b(?:false|true)\b/i,
      number: /\b\d+(?:\.\d+)?\b/,
      operator: /<>|[<>]=?|!=|\*\*|[-+*/|=@]/,
      punctuation: /[:.;,()[\]]/
    }, t.languages.pcode = t.languages.peoplecode;
  }
  return gc;
}
var hc, g0;
function r4() {
  if (g0) return hc;
  g0 = 1, hc = e, e.displayName = "perl", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
      n.languages.perl = {
        comment: [
          {
            // POD
            pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\$])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        // TODO Could be nice to handle Heredoc too.
        string: [
          {
            pattern: RegExp(
              /\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // q/.../
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                // q a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // q(...)
                // q{...}
                // q[...]
                // q<...>
                r
              ].join("|") + ")"
            ),
            greedy: !0
          },
          // "...", `...`
          {
            pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
            greedy: !0
          },
          // '...'
          // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '
          {
            pattern: /'(?:[^'\\\r\n]|\\.)*'/,
            greedy: !0
          }
        ],
        regex: [
          {
            pattern: RegExp(
              /\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // m/.../
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                // m a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // m(...)
                // m{...}
                // m[...]
                // m<...>
                r
              ].join("|") + ")" + /[msixpodualngc]*/.source
            ),
            greedy: !0
          },
          // The lookbehinds prevent -s from breaking
          {
            pattern: RegExp(
              /(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                // s/.../.../
                // eslint-disable-next-line regexp/strict
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                // s a...a...a
                // eslint-disable-next-line regexp/strict
                /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
                // s(...)(...)
                // s{...}{...}
                // s[...][...]
                // s<...><...>
                // s(...)[...]
                r + /\s*/.source + r
              ].join("|") + ")" + /[msixpodualngcer]*/.source
            ),
            lookbehind: !0,
            greedy: !0
          },
          // /.../
          // The look-ahead tries to prevent two divisions on
          // the same line from being highlighted as regex.
          // This does not support multi-line regex.
          {
            pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
            greedy: !0
          }
        ],
        // FIXME Not sure about the handling of ::, ', and #
        variable: [
          // ${^POSTMATCH}
          /[&*$@%]\{\^[A-Z]+\}/,
          // $^V
          /[&*$@%]\^[A-Z_]/,
          // ${...}
          /[&*$@%]#?(?=\{)/,
          // $foo
          /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
          // $1
          /[&*$@%]\d+/,
          // $_, @_, %!
          // The negative lookahead prevents from breaking the %= operator
          /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
        ],
        filehandle: {
          // <>, <FOO>, _
          pattern: /<(?![<=])\S*?>|\b_\b/,
          alias: "symbol"
        },
        "v-string": {
          // v1.2, 1.2.3
          pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
          alias: "string"
        },
        function: {
          pattern: /(\bsub[ \t]+)\w+/,
          lookbehind: !0
        },
        keyword: /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
        number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
        operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
        punctuation: /[{}[\];(),:]/
      };
    })(t);
  }
  return hc;
}
var bc, h0;
function a4() {
  if (h0) return bc;
  h0 = 1;
  var e = io();
  bc = t, t.displayName = "phpExtras", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.insertBefore("php", "variable", {
      this: {
        pattern: /\$this\b/,
        alias: "keyword"
      },
      global: /\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,
      scope: {
        pattern: /\b[\w\\]+::/,
        inside: {
          keyword: /\b(?:parent|self|static)\b/,
          punctuation: /::|\\/
        }
      }
    });
  }
  return bc;
}
var Ec, b0;
function i4() {
  if (b0) return Ec;
  b0 = 1;
  var e = io(), t = ao();
  Ec = n, n.displayName = "phpdoc", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      var i = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
      a.languages.phpdoc = a.languages.extend("javadoclike", {
        parameter: {
          pattern: RegExp(
            "(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + i + "\\s+)?)\\$\\w+"
          ),
          lookbehind: !0
        }
      }), a.languages.insertBefore("phpdoc", "keyword", {
        "class-name": [
          {
            pattern: RegExp(
              "(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + i
            ),
            lookbehind: !0,
            inside: {
              keyword: /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
              punctuation: /[|\\[\]()]/
            }
          }
        ]
      }), a.languages.javadoclike.addSupport("php", a.languages.phpdoc);
    }(r);
  }
  return Ec;
}
var yc, E0;
function o4() {
  if (E0) return yc;
  E0 = 1;
  var e = Ff();
  yc = t, t.displayName = "plsql", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.plsql = n.languages.extend("sql", {
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|--.*/,
        greedy: !0
      },
      // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html
      keyword: /\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,
      // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E
      operator: /:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/
    }), n.languages.insertBefore("plsql", "operator", {
      label: {
        pattern: /<<\s*\w+\s*>>/,
        alias: "symbol"
      }
    });
  }
  return yc;
}
var vc, y0;
function s4() {
  if (y0) return vc;
  y0 = 1, vc = e, e.displayName = "powerquery", e.aliases = [];
  function e(t) {
    t.languages.powerquery = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: !0,
        greedy: !0
      },
      "quoted-identifier": {
        pattern: /#"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      string: {
        pattern: /(?:#!)?"(?:[^"\r\n]|"")*"(?!")/,
        greedy: !0
      },
      constant: [
        /\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,
        /\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,
        /\bOccurrence\.(?:All|First|Last)\b/,
        /\bOrder\.(?:Ascending|Descending)\b/,
        /\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,
        /\bMissingField\.(?:Error|Ignore|UseNull)\b/,
        /\bQuoteStyle\.(?:Csv|None)\b/,
        /\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,
        /\bGroupKind\.(?:Global|Local)\b/,
        /\bExtraValues\.(?:Error|Ignore|List)\b/,
        /\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,
        /\bJoinSide\.(?:Left|Right)\b/,
        /\bPrecision\.(?:Decimal|Double)\b/,
        /\bRelativePosition\.From(?:End|Start)\b/,
        /\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,
        /\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,
        /\bnull\b/
      ],
      boolean: /\b(?:false|true)\b/,
      keyword: /\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,
      function: {
        pattern: /(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i,
        lookbehind: !0
      },
      "data-type": {
        pattern: /\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,
        alias: "class-name"
      },
      number: {
        pattern: /\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i,
        lookbehind: !0
      },
      operator: /[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,
      punctuation: /[,;\[\](){}]/
    }, t.languages.pq = t.languages.powerquery, t.languages.mscript = t.languages.powerquery;
  }
  return vc;
}
var Tc, v0;
function l4() {
  if (v0) return Tc;
  v0 = 1, Tc = e, e.displayName = "powershell", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = n.languages.powershell = {
        comment: [
          {
            pattern: /(^|[^`])<#[\s\S]*?#>/,
            lookbehind: !0
          },
          {
            pattern: /(^|[^`])#.*/,
            lookbehind: !0
          }
        ],
        string: [
          {
            pattern: /"(?:`[\s\S]|[^`"])*"/,
            greedy: !0,
            inside: null
            // see below
          },
          {
            pattern: /'(?:[^']|'')*'/,
            greedy: !0
          }
        ],
        // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices
        // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)
        namespace: /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
        boolean: /\$(?:false|true)\b/i,
        variable: /\$\w+\b/,
        // Cmdlets and aliases. Aliases should come last, otherwise "write" gets preferred over "write-host" for example
        // Get-Command | ?{ $_.ModuleName -match "Microsoft.PowerShell.(Util|Core|Management)" }
        // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match "Microsoft.PowerShell.(Util|Core|Management)" }
        function: [
          /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
          /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i
        ],
        // per http://technet.microsoft.com/en-us/library/hh847744.aspx
        keyword: /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
        operator: {
          pattern: /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
          lookbehind: !0
        },
        punctuation: /[|{}[\];(),.]/
      };
      r.string[0].inside = {
        function: {
          // Allow for one level of nesting
          pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,
          lookbehind: !0,
          inside: r
        },
        boolean: r.boolean,
        variable: r.variable
      };
    })(t);
  }
  return Tc;
}
var Sc, T0;
function u4() {
  if (T0) return Sc;
  T0 = 1, Sc = e, e.displayName = "processing", e.aliases = [];
  function e(t) {
    t.languages.processing = t.languages.extend("clike", {
      keyword: /\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,
      // Spaces are allowed between function name and parenthesis
      function: /\b\w+(?=\s*\()/,
      operator: /<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/
    }), t.languages.insertBefore("processing", "number", {
      // Special case: XML is a type
      constant: /\b(?!XML\b)[A-Z][A-Z\d_]+\b/,
      type: {
        pattern: /\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/,
        alias: "class-name"
      }
    });
  }
  return Sc;
}
var _c, S0;
function c4() {
  if (S0) return _c;
  S0 = 1, _c = e, e.displayName = "prolog", e.aliases = [];
  function e(t) {
    t.languages.prolog = {
      // Syntax depends on the implementation
      comment: {
        pattern: /\/\*[\s\S]*?\*\/|%.*/,
        greedy: !0
      },
      // Depending on the implementation, strings may allow escaped newlines and quote-escape
      string: {
        pattern: /(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/,
        greedy: !0
      },
      builtin: /\b(?:fx|fy|xf[xy]?|yfx?)\b/,
      // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?
      function: /\b[a-z]\w*(?:(?=\()|\/\d+)/,
      number: /\b\d+(?:\.\d*)?/,
      // Custom operators are allowed
      operator: /[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,
      punctuation: /[(){}\[\],]/
    };
  }
  return _c;
}
var Ac, _0;
function d4() {
  if (_0) return Ac;
  _0 = 1, Ac = e, e.displayName = "promql", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = [
        "sum",
        "min",
        "max",
        "avg",
        "group",
        "stddev",
        "stdvar",
        "count",
        "count_values",
        "bottomk",
        "topk",
        "quantile"
      ], a = [
        "on",
        "ignoring",
        "group_right",
        "group_left",
        "by",
        "without"
      ], i = ["offset"], o = r.concat(a, i);
      n.languages.promql = {
        comment: {
          pattern: /(^[ \t]*)#.*/m,
          lookbehind: !0
        },
        "vector-match": {
          // Match the comma-separated label lists inside vector matching:
          pattern: new RegExp(
            "((?:" + a.join("|") + ")\\s*)\\([^)]*\\)"
          ),
          lookbehind: !0,
          inside: {
            "label-key": {
              pattern: /\b[^,]+\b/,
              alias: "attr-name"
            },
            punctuation: /[(),]/
          }
        },
        "context-labels": {
          pattern: /\{[^{}]*\}/,
          inside: {
            "label-key": {
              pattern: /\b[a-z_]\w*(?=\s*(?:=|![=~]))/,
              alias: "attr-name"
            },
            "label-value": {
              pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
              greedy: !0,
              alias: "attr-value"
            },
            punctuation: /\{|\}|=~?|![=~]|,/
          }
        },
        "context-range": [
          {
            pattern: /\[[\w\s:]+\]/,
            // [1m]
            inside: {
              punctuation: /\[|\]|:/,
              "range-duration": {
                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                alias: "number"
              }
            }
          },
          {
            pattern: /(\boffset\s+)\w+/,
            // offset 1m
            lookbehind: !0,
            inside: {
              "range-duration": {
                pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
                alias: "number"
              }
            }
          }
        ],
        keyword: new RegExp("\\b(?:" + o.join("|") + ")\\b", "i"),
        function: /\b[a-z_]\w*(?=\s*\()/i,
        number: /[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,
        operator: /[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,
        punctuation: /[{};()`,.[\]]/
      };
    })(t);
  }
  return Ac;
}
var xc, A0;
function p4() {
  if (A0) return xc;
  A0 = 1, xc = e, e.displayName = "properties", e.aliases = [];
  function e(t) {
    t.languages.properties = {
      comment: /^[ \t]*[#!].*$/m,
      "attr-value": {
        pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,
        lookbehind: !0
      },
      "attr-name": /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
      punctuation: /[=:]/
    };
  }
  return xc;
}
var Rc, x0;
function f4() {
  if (x0) return Rc;
  x0 = 1, Rc = e, e.displayName = "protobuf", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
      n.languages.protobuf = n.languages.extend("clike", {
        "class-name": [
          {
            pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,
            lookbehind: !0
          },
          {
            pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,
            lookbehind: !0
          }
        ],
        keyword: /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
        function: /\b[a-z_]\w*(?=\s*\()/i
      }), n.languages.insertBefore("protobuf", "operator", {
        map: {
          pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
          alias: "class-name",
          inside: {
            punctuation: /[<>.,]/,
            builtin: r
          }
        },
        builtin: r,
        "positional-class-name": {
          pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
          alias: "class-name",
          inside: {
            punctuation: /\./
          }
        },
        annotation: {
          pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i,
          lookbehind: !0
        }
      });
    })(t);
  }
  return Rc;
}
var Ic, R0;
function m4() {
  if (R0) return Ic;
  R0 = 1, Ic = e, e.displayName = "psl", e.aliases = [];
  function e(t) {
    t.languages.psl = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      string: {
        pattern: /"(?:\\.|[^\\"])*"/,
        greedy: !0,
        inside: {
          symbol: /\\[ntrbA-Z"\\]/
        }
      },
      "heredoc-string": {
        pattern: /<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/,
        alias: "string",
        greedy: !0
      },
      keyword: /\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,
      constant: /\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,
      boolean: /\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,
      variable: /\b(?:PslDebug|errno|exit_status)\b/,
      builtin: {
        pattern: /\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,
        alias: "builtin-function"
      },
      "foreach-variable": {
        pattern: /(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/,
        lookbehind: !0,
        greedy: !0
      },
      function: /\b[_a-z]\w*\b(?=\s*\()/i,
      number: /\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,
      operator: /--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,
      punctuation: /[(){}\[\];,]/
    };
  }
  return Ic;
}
var wc, I0;
function g4() {
  if (I0) return wc;
  I0 = 1, wc = e, e.displayName = "pug", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.pug = {
        // Multiline stuff should appear before the rest
        // This handles both single-line and multi-line comments
        comment: {
          pattern: /(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m,
          lookbehind: !0
        },
        // All the tag-related part is in lookbehind
        // so that it can be highlighted by the "tag" pattern
        "multiline-script": {
          pattern: /(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0,
          inside: n.languages.javascript
        },
        // See at the end of the file for known filters
        filter: {
          pattern: /(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "variable"
            },
            text: /\S[\s\S]*/
          }
        },
        "multiline-plain-text": {
          pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
          lookbehind: !0
        },
        markup: {
          pattern: /(^[\t ]*)<.+/m,
          lookbehind: !0,
          inside: n.languages.markup
        },
        doctype: {
          pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/,
          lookbehind: !0
        },
        // This handle all conditional and loop keywords
        "flow-control": {
          pattern: /(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,
          lookbehind: !0,
          inside: {
            each: {
              pattern: /^each .+? in\b/,
              inside: {
                keyword: /\b(?:each|in)\b/,
                punctuation: /,/
              }
            },
            branch: {
              pattern: /^(?:case|default|else|if|unless|when|while)\b/,
              alias: "keyword"
            },
            rest: n.languages.javascript
          }
        },
        keyword: {
          pattern: /(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m,
          lookbehind: !0
        },
        mixin: [
          // Declaration
          {
            pattern: /(^[\t ]*)mixin .+/m,
            lookbehind: !0,
            inside: {
              keyword: /^mixin/,
              function: /\w+(?=\s*\(|\s*$)/,
              punctuation: /[(),.]/
            }
          },
          // Usage
          {
            pattern: /(^[\t ]*)\+.+/m,
            lookbehind: !0,
            inside: {
              name: {
                pattern: /^\+\w+/,
                alias: "function"
              },
              rest: n.languages.javascript
            }
          }
        ],
        script: {
          pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m,
          lookbehind: !0,
          inside: n.languages.javascript
        },
        "plain-text": {
          pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m,
          lookbehind: !0
        },
        tag: {
          pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,
          lookbehind: !0,
          inside: {
            attributes: [
              {
                pattern: /&[^(]+\([^)]+\)/,
                inside: n.languages.javascript
              },
              {
                pattern: /\([^)]+\)/,
                inside: {
                  "attr-value": {
                    pattern: /(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/,
                    lookbehind: !0,
                    inside: n.languages.javascript
                  },
                  "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/,
                  punctuation: /[!=(),]+/
                }
              }
            ],
            punctuation: /:/,
            "attr-id": /#[\w\-]+/,
            "attr-class": /\.[\w\-]+/
          }
        },
        code: [
          {
            pattern: /(^[\t ]*(?:-|!?=)).+/m,
            lookbehind: !0,
            inside: n.languages.javascript
          }
        ],
        punctuation: /[.\-!=|]+/
      };
      for (var r = /(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source, a = [
        {
          filter: "atpl",
          language: "twig"
        },
        {
          filter: "coffee",
          language: "coffeescript"
        },
        "ejs",
        "handlebars",
        "less",
        "livescript",
        "markdown",
        {
          filter: "sass",
          language: "scss"
        },
        "stylus"
      ], i = {}, o = 0, s = a.length; o < s; o++) {
        var l = a[o];
        l = typeof l == "string" ? {
          filter: l,
          language: l
        } : l, n.languages[l.language] && (i["filter-" + l.filter] = {
          pattern: RegExp(
            r.replace("<filter_name>", function() {
              return l.filter;
            }),
            "m"
          ),
          lookbehind: !0,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "variable"
            },
            text: {
              pattern: /\S[\s\S]*/,
              alias: [l.language, "language-" + l.language],
              inside: n.languages[l.language]
            }
          }
        });
      }
      n.languages.insertBefore("pug", "filter", i);
    })(t);
  }
  return wc;
}
var Cc, w0;
function h4() {
  if (w0) return Cc;
  w0 = 1, Cc = e, e.displayName = "puppet", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.puppet = {
        heredoc: [
          // Matches the content of a quoted heredoc string (subject to interpolation)
          {
            pattern: /(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
            lookbehind: !0,
            alias: "string",
            inside: {
              // Matches the end tag
              punctuation: /(?=\S).*\S(?= *$)/
              // See interpolation below
            }
          },
          // Matches the content of an unquoted heredoc string (no interpolation)
          {
            pattern: /(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
            lookbehind: !0,
            greedy: !0,
            alias: "string",
            inside: {
              // Matches the end tag
              punctuation: /(?=\S).*\S(?= *$)/
            }
          },
          // Matches the start tag of heredoc strings
          {
            pattern: /@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,
            alias: "string",
            inside: {
              punctuation: {
                pattern: /(\().+?(?=\))/,
                lookbehind: !0
              }
            }
          }
        ],
        "multiline-comment": {
          pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
          lookbehind: !0,
          greedy: !0,
          alias: "comment"
        },
        regex: {
          // Must be prefixed with the keyword "node" or a non-word char
          pattern: /((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            // Extended regexes must have the x flag. They can contain single-line comments.
            "extended-regex": {
              pattern: /^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/,
              inside: {
                comment: /#.*/
              }
            }
          }
        },
        comment: {
          pattern: /(^|[^\\])#.*/,
          lookbehind: !0,
          greedy: !0
        },
        string: {
          // Allow for one nested level of double quotes inside interpolation
          pattern: /(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,
          greedy: !0,
          inside: {
            "double-quoted": {
              pattern: /^"[\s\S]*"$/,
              inside: {
                // See interpolation below
              }
            }
          }
        },
        variable: {
          pattern: /\$(?:::)?\w+(?:::\w+)*/,
          inside: {
            punctuation: /::/
          }
        },
        "attr-name": /(?:\b\w+|\*)(?=\s*=>)/,
        function: [
          {
            pattern: /(\.)(?!\d)\w+/,
            lookbehind: !0
          },
          /\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/
        ],
        number: /\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,
        boolean: /\b(?:false|true)\b/,
        // Includes words reserved for future use
        keyword: /\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,
        datatype: {
          pattern: /\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,
          alias: "symbol"
        },
        operator: /=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,
        punctuation: /[\[\]{}().,;]|:+/
      };
      var r = [
        {
          // Allow for one nested level of braces inside interpolation
          pattern: /(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,
          lookbehind: !0,
          inside: {
            "short-variable": {
              // Negative look-ahead prevent wrong highlighting of functions
              pattern: /(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/,
              lookbehind: !0,
              alias: "variable",
              inside: {
                punctuation: /::/
              }
            },
            delimiter: {
              pattern: /^\$/,
              alias: "variable"
            },
            rest: n.languages.puppet
          }
        },
        {
          pattern: /(^|[^\\])\$(?:::)?\w+(?:::\w+)*/,
          lookbehind: !0,
          alias: "variable",
          inside: {
            punctuation: /::/
          }
        }
      ];
      n.languages.puppet.heredoc[0].inside.interpolation = r, n.languages.puppet.string.inside["double-quoted"].inside.interpolation = r;
    })(t);
  }
  return Cc;
}
var kc, C0;
function b4() {
  if (C0) return kc;
  C0 = 1, kc = e, e.displayName = "pure", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.pure = {
        comment: [
          {
            pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
            lookbehind: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0
          },
          /#!.+/
        ],
        "inline-lang": {
          pattern: /%<[\s\S]+?%>/,
          greedy: !0,
          inside: {
            lang: {
              pattern: /(^%< *)-\*-.+?-\*-/,
              lookbehind: !0,
              alias: "comment"
            },
            delimiter: {
              pattern: /^%<.*|%>$/,
              alias: "punctuation"
            }
          }
        },
        string: {
          pattern: /"(?:\\.|[^"\\\r\n])*"/,
          greedy: !0
        },
        number: {
          // The look-behind prevents wrong highlighting of the .. operator
          pattern: /((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i,
          lookbehind: !0
        },
        keyword: /\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,
        function: /\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,
        special: {
          pattern: /\b__[a-z]+__\b/i,
          alias: "builtin"
        },
        // Any combination of operator chars can be an operator
        // eslint-disable-next-line no-misleading-character-class
        operator: /(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,
        // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?
        punctuation: /[(){}\[\];,|]/
      };
      var r = [
        "c",
        {
          lang: "c++",
          alias: "cpp"
        },
        "fortran"
      ], a = /%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;
      r.forEach(function(i) {
        var o = i;
        if (typeof i != "string" && (o = i.alias, i = i.lang), n.languages[o]) {
          var s = {};
          s["inline-lang-" + o] = {
            pattern: RegExp(
              a.replace(
                "<lang>",
                i.replace(/([.+*?\/\\(){}\[\]])/g, "\\$1")
              ),
              "i"
            ),
            inside: n.util.clone(n.languages.pure["inline-lang"].inside)
          }, s["inline-lang-" + o].inside.rest = n.util.clone(
            n.languages[o]
          ), n.languages.insertBefore("pure", "inline-lang", s);
        }
      }), n.languages.c && (n.languages.pure["inline-lang"].inside.rest = n.util.clone(
        n.languages.c
      ));
    })(t);
  }
  return kc;
}
var Nc, k0;
function E4() {
  if (k0) return Nc;
  k0 = 1, Nc = e, e.displayName = "purebasic", e.aliases = [];
  function e(t) {
    t.languages.purebasic = t.languages.extend("clike", {
      comment: /;.*/,
      keyword: /\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,
      function: /\b\w+(?:\.\w+)?\s*(?=\()/,
      number: /(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,
      operator: /(?:@\*?|\?|\*)\w+|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/
    }), t.languages.insertBefore("purebasic", "keyword", {
      tag: /#\w+\$?/,
      asm: {
        pattern: /(^[\t ]*)!.*/m,
        lookbehind: !0,
        alias: "tag",
        inside: {
          comment: /;.*/,
          string: {
            pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
            greedy: !0
          },
          // Anonymous label references, i.e.: jmp @b
          "label-reference-anonymous": {
            pattern: /(!\s*j[a-z]+\s+)@[fb]/i,
            lookbehind: !0,
            alias: "fasm-label"
          },
          // Named label reference, i.e.: jne label1
          "label-reference-addressed": {
            pattern: /(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i,
            lookbehind: !0,
            alias: "fasm-label"
          },
          keyword: [
            /\b(?:extern|global)\b[^;\r\n]*/i,
            /\b(?:CPU|DEFAULT|FLOAT)\b.*/
          ],
          function: {
            pattern: /^([\t ]*!\s*)[\da-z]+(?=\s|$)/im,
            lookbehind: !0
          },
          "function-inline": {
            pattern: /(:\s*)[\da-z]+(?=\s)/i,
            lookbehind: !0,
            alias: "function"
          },
          label: {
            pattern: /^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m,
            lookbehind: !0,
            alias: "fasm-label"
          },
          register: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,
          number: /(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
          operator: /[\[\]*+\-/%<>=&|$!,.:]/
        }
      }
    }), delete t.languages.purebasic["class-name"], delete t.languages.purebasic.boolean, t.languages.pbfasm = t.languages.purebasic;
  }
  return Nc;
}
var Oc, N0;
function y4() {
  if (N0) return Oc;
  N0 = 1;
  var e = Uf();
  Oc = t, t.displayName = "purescript", t.aliases = ["purs"];
  function t(n) {
    n.register(e), n.languages.purescript = n.languages.extend("haskell", {
      keyword: /\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,
      "import-statement": {
        // The imported or hidden names are not included in this import
        // statement. This is because we want to highlight those exactly like
        // we do for the names in the program.
        pattern: /(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:as|hiding|import)\b/,
          punctuation: /\./
        }
      },
      // These are builtin functions only. Constructors are highlighted later as a constant.
      builtin: /\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,
      operator: [
        // Infix operators
        n.languages.haskell.operator[0],
        // ASCII operators
        n.languages.haskell.operator[2],
        // All UTF16 Unicode operator symbols
        // This regex is equivalent to /(?=[\x80-\uFFFF])[\p{gc=Math_Symbol}\p{gc=Currency_Symbol}\p{Modifier_Symbol}\p{Other_Symbol}]/u
        // See https://github.com/PrismJS/prism/issues/3006 for more details.
        /[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/
      ]
    }), n.languages.purs = n.languages.purescript;
  }
  return Oc;
}
var Lc, O0;
function v4() {
  if (O0) return Lc;
  O0 = 1, Lc = e, e.displayName = "python", e.aliases = ["py"];
  function e(t) {
    t.languages.python = {
      comment: {
        pattern: /(^|[^\\])#.*/,
        lookbehind: !0,
        greedy: !0
      },
      "string-interpolation": {
        pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
        greedy: !0,
        inside: {
          interpolation: {
            // "{" <expression> <optional "!s", "!r", or "!a"> <optional ":" format specifier> "}"
            pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
            lookbehind: !0,
            inside: {
              "format-spec": {
                pattern: /(:)[^:(){}]+(?=\}$)/,
                lookbehind: !0
              },
              "conversion-option": {
                pattern: /![sra](?=[:}]$)/,
                alias: "punctuation"
              },
              rest: null
            }
          },
          string: /[\s\S]+/
        }
      },
      "triple-quoted-string": {
        pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
        greedy: !0
      },
      function: {
        pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
        lookbehind: !0
      },
      "class-name": {
        pattern: /(\bclass\s+)\w+/i,
        lookbehind: !0
      },
      decorator: {
        pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
        lookbehind: !0,
        alias: ["annotation", "punctuation"],
        inside: {
          punctuation: /\./
        }
      },
      keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
      builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
      boolean: /\b(?:False|None|True)\b/,
      number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
      operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.python["string-interpolation"].inside.interpolation.inside.rest = t.languages.python, t.languages.py = t.languages.python;
  }
  return Lc;
}
var Dc, L0;
function T4() {
  if (L0) return Dc;
  L0 = 1, Dc = e, e.displayName = "q", e.aliases = [];
  function e(t) {
    t.languages.q = {
      string: /"(?:\\.|[^"\\\r\n])*"/,
      comment: [
        // From http://code.kx.com/wiki/Reference/Slash:
        // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.
        {
          pattern: /([\t )\]}])\/.*/,
          lookbehind: !0,
          greedy: !0
        },
        // From http://code.kx.com/wiki/Reference/Slash:
        // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.
        // A / on a line by itself begins a multiline comment which is terminated by the next \ on a line by itself.
        // If a / is not matched by a \, the multiline comment is unterminated and continues to end of file.
        // The / and \ must be the first char on the line, but may be followed by any amount of whitespace.
        {
          pattern: /(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,
          lookbehind: !0,
          greedy: !0
        },
        // From http://code.kx.com/wiki/Reference/Slash:
        // A \ on a line by itself with no preceding matching / will comment to end of file.
        {
          pattern: /^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,
          greedy: !0
        },
        {
          pattern: /^#!.+/m,
          greedy: !0
        }
      ],
      symbol: /`(?::\S+|[\w.]*)/,
      datetime: {
        pattern: /0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,
        alias: "number"
      },
      // The negative look-ahead prevents bad highlighting
      // of verbs 0: and 1:
      number: /\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,
      keyword: /\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,
      adverb: {
        pattern: /['\/\\]:?|\beach\b/,
        alias: "function"
      },
      verb: {
        pattern: /(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/,
        alias: "operator"
      },
      punctuation: /[(){}\[\];.]/
    };
  }
  return Dc;
}
var Mc, D0;
function S4() {
  if (D0) return Mc;
  D0 = 1, Mc = e, e.displayName = "qml", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source, a = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source, i = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g, function() {
        return r;
      }).replace(/<comment>/g, function() {
        return a;
      }), o = 0; o < 2; o++)
        i = i.replace(/<expr>/g, function() {
          return i;
        });
      i = i.replace(/<expr>/g, "[^\\s\\S]"), n.languages.qml = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
          greedy: !0
        },
        "javascript-function": {
          pattern: RegExp(
            /((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(
              /<js>/g,
              function() {
                return i;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "language-javascript",
          inside: n.languages.javascript
        },
        "class-name": {
          pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,
          lookbehind: !0
        },
        property: [
          {
            pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
            lookbehind: !0
          },
          {
            pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
            lookbehind: !0,
            inside: {
              keyword: /^property/,
              property: /\w+(?:\.\w+)*/
            }
          }
        ],
        "javascript-expression": {
          pattern: RegExp(
            /(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(
              /<js>/g,
              function() {
                return i;
              }
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "language-javascript",
          inside: n.languages.javascript
        },
        string: {
          pattern: /"(?:\\.|[^\\"\r\n])*"/,
          greedy: !0
        },
        keyword: /\b(?:as|import|on)\b/,
        punctuation: /[{}[\]:;,]/
      };
    })(t);
  }
  return Mc;
}
var Pc, M0;
function _4() {
  if (M0) return Pc;
  M0 = 1, Pc = e, e.displayName = "qore", e.aliases = [];
  function e(t) {
    t.languages.qore = t.languages.extend("clike", {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/,
        lookbehind: !0
      },
      // Overridden to allow unescaped multi-line strings
      string: {
        pattern: /("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
        greedy: !0
      },
      keyword: /\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,
      boolean: /\b(?:false|true)\b/i,
      function: /\$?\b(?!\d)\w+(?=\()/,
      number: /\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,
      operator: {
        pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/,
        lookbehind: !0
      },
      variable: /\$(?!\d)\w+\b/
    });
  }
  return Pc;
}
var Fc, P0;
function A4() {
  if (P0) return Fc;
  P0 = 1, Fc = e, e.displayName = "qsharp", e.aliases = ["qs"];
  function e(t) {
    (function(n) {
      function r(h, E) {
        return h.replace(/<<(\d+)>>/g, function(I, x) {
          return "(?:" + E[+x] + ")";
        });
      }
      function a(h, E, I) {
        return RegExp(r(h, E), "");
      }
      function i(h, E) {
        for (var I = 0; I < E; I++)
          h = h.replace(/<<self>>/g, function() {
            return "(?:" + h + ")";
          });
        return h.replace(/<<self>>/g, "[^\\s\\S]");
      }
      var o = {
        // keywords which represent a return or variable type
        type: "Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",
        // all other keywords
        other: "Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within"
      };
      function s(h) {
        return "\\b(?:" + h.trim().replace(/ /g, "|") + ")\\b";
      }
      var l = RegExp(
        s(o.type + " " + o.other)
      ), u = /\b[A-Za-z_]\w*\b/.source, c = r(/<<0>>(?:\s*\.\s*<<0>>)*/.source, [u]), d = {
        keyword: l,
        punctuation: /[<>()?,.:[\]]/
      }, m = /"(?:\\.|[^\\"])*"/.source;
      n.languages.qsharp = n.languages.extend("clike", {
        comment: /\/\/.*/,
        string: [
          {
            pattern: a(/(^|[^$\\])<<0>>/.source, [m]),
            lookbehind: !0,
            greedy: !0
          }
        ],
        "class-name": [
          {
            // open Microsoft.Quantum.Canon;
            // open Microsoft.Quantum.Canon as CN;
            pattern: a(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source, [
              c
            ]),
            lookbehind: !0,
            inside: d
          },
          {
            // namespace Quantum.App1;
            pattern: a(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source, [c]),
            lookbehind: !0,
            inside: d
          }
        ],
        keyword: l,
        number: /(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,
        operator: /\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,
        punctuation: /::|[{}[\];(),.:]/
      }), n.languages.insertBefore("qsharp", "number", {
        range: {
          pattern: /\.\./,
          alias: "operator"
        }
      });
      var f = i(
        r(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source, [m]),
        2
      );
      n.languages.insertBefore("qsharp", "string", {
        "interpolation-string": {
          pattern: a(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source, [f]),
          greedy: !0,
          inside: {
            interpolation: {
              pattern: a(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source, [
                f
              ]),
              lookbehind: !0,
              inside: {
                punctuation: /^\{|\}$/,
                expression: {
                  pattern: /[\s\S]+/,
                  alias: "language-qsharp",
                  inside: n.languages.qsharp
                }
              }
            },
            string: /[\s\S]+/
          }
        }
      });
    })(t), t.languages.qs = t.languages.qsharp;
  }
  return Fc;
}
var Bc, F0;
function x4() {
  if (F0) return Bc;
  F0 = 1, Bc = e, e.displayName = "r", e.aliases = [];
  function e(t) {
    t.languages.r = {
      comment: /#.*/,
      string: {
        pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      "percent-operator": {
        // Includes user-defined operators
        // and %%, %*%, %/%, %in%, %o%, %x%
        pattern: /%[^%\s]*%/,
        alias: "operator"
      },
      boolean: /\b(?:FALSE|TRUE)\b/,
      ellipsis: /\.\.(?:\.|\d+)/,
      number: [
        /\b(?:Inf|NaN)\b/,
        /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
      ],
      keyword: /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
      operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
      punctuation: /[(){}\[\],;]/
    };
  }
  return Bc;
}
var Uc, B0;
function R4() {
  if (B0) return Uc;
  B0 = 1;
  var e = $f();
  Uc = t, t.displayName = "racket", t.aliases = ["rkt"];
  function t(n) {
    n.register(e), n.languages.racket = n.languages.extend("scheme", {
      "lambda-parameter": {
        // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.
        // this will just prevent false positives of the `function` pattern
        pattern: /([(\[]lambda\s+[(\[])[^()\[\]'\s]+/,
        lookbehind: !0
      }
    }), n.languages.insertBefore("racket", "string", {
      lang: {
        pattern: /^#lang.+/m,
        greedy: !0,
        alias: "keyword"
      }
    }), n.languages.rkt = n.languages.racket;
  }
  return Uc;
}
var jc, U0;
function I4() {
  if (U0) return jc;
  U0 = 1, jc = e, e.displayName = "reason", e.aliases = [];
  function e(t) {
    t.languages.reason = t.languages.extend("clike", {
      string: {
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
        greedy: !0
      },
      // 'class-name' must be matched *after* 'constructor' defined below
      "class-name": /\b[A-Z]\w*/,
      keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
      operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/
    }), t.languages.insertBefore("reason", "class-name", {
      char: {
        pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
        greedy: !0
      },
      // Negative look-ahead prevents from matching things like String.capitalize
      constructor: /\b[A-Z]\w*\b(?!\s*\.)/,
      label: {
        pattern: /\b[a-z]\w*(?=::)/,
        alias: "symbol"
      }
    }), delete t.languages.reason.function;
  }
  return jc;
}
var Hc, j0;
function w4() {
  if (j0) return Hc;
  j0 = 1, Hc = e, e.displayName = "regex", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /\\[\\(){}[\]^$+*?|.]/,
        alias: "escape"
      }, a = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, i = {
        pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i,
        alias: "class-name"
      }, o = {
        pattern: /\\[wsd]|\\p\{[^{}]+\}/i,
        alias: "class-name"
      }, s = "(?:[^\\\\-]|" + a.source + ")", l = RegExp(s + "-" + s), u = {
        pattern: /(<|')[^<>']+(?=[>']$)/,
        lookbehind: !0,
        alias: "variable"
      };
      n.languages.regex = {
        "char-class": {
          pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,
          lookbehind: !0,
          inside: {
            "char-class-negation": {
              pattern: /(^\[)\^/,
              lookbehind: !0,
              alias: "operator"
            },
            "char-class-punctuation": {
              pattern: /^\[|\]$/,
              alias: "punctuation"
            },
            range: {
              pattern: l,
              inside: {
                escape: a,
                "range-punctuation": {
                  pattern: /-/,
                  alias: "operator"
                }
              }
            },
            "special-escape": r,
            "char-set": o,
            escape: a
          }
        },
        "special-escape": r,
        "char-set": i,
        backreference: [
          {
            // a backreference which is not an octal escape
            pattern: /\\(?![123][0-7]{2})[1-9]/,
            alias: "keyword"
          },
          {
            pattern: /\\k<[^<>']+>/,
            alias: "keyword",
            inside: {
              "group-name": u
            }
          }
        ],
        anchor: {
          pattern: /[$^]|\\[ABbGZz]/,
          alias: "function"
        },
        escape: a,
        group: [
          {
            // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html
            // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs
            // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)
            pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,
            alias: "punctuation",
            inside: {
              "group-name": u
            }
          },
          {
            pattern: /\)/,
            alias: "punctuation"
          }
        ],
        quantifier: {
          pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,
          alias: "number"
        },
        alternation: {
          pattern: /\|/,
          alias: "keyword"
        }
      };
    })(t);
  }
  return Hc;
}
var qc, H0;
function C4() {
  if (H0) return qc;
  H0 = 1, qc = e, e.displayName = "rego", e.aliases = [];
  function e(t) {
    t.languages.rego = {
      comment: /#.*/,
      property: {
        pattern: /(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i,
        lookbehind: !0,
        greedy: !0
      },
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,
      boolean: /\b(?:false|true)\b/,
      function: {
        pattern: /\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i,
        inside: {
          namespace: /\b\w+\b(?=\s*\.)/,
          punctuation: /\./
        }
      },
      number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      operator: /[-+*/%|&]|[<>:=]=?|!=|\b_\b/,
      punctuation: /[,;.\[\]{}()]/
    };
  }
  return qc;
}
var $c, q0;
function k4() {
  if (q0) return $c;
  q0 = 1, $c = e, e.displayName = "renpy", e.aliases = ["rpy"];
  function e(t) {
    t.languages.renpy = {
      comment: {
        pattern: /(^|[^\\])#.+/,
        lookbehind: !0
      },
      string: {
        pattern: /("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,
        greedy: !0
      },
      function: /\b[a-z_]\w*(?=\()/i,
      property: /\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,
      tag: /\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,
      keyword: /\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,
      boolean: /\b(?:[Ff]alse|[Tt]rue)\b/,
      number: /(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,
      operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.rpy = t.languages.renpy;
  }
  return $c;
}
var zc, $0;
function N4() {
  if ($0) return zc;
  $0 = 1, zc = e, e.displayName = "rest", e.aliases = [];
  function e(t) {
    t.languages.rest = {
      table: [
        {
          pattern: /(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,
          lookbehind: !0,
          inside: {
            punctuation: /\||(?:\+[=-]+)+\+/
          }
        },
        {
          pattern: /(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,
          lookbehind: !0,
          inside: {
            punctuation: /[=-]+/
          }
        }
      ],
      // Directive-like patterns
      "substitution-def": {
        pattern: /(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,
        lookbehind: !0,
        inside: {
          substitution: {
            pattern: /^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/,
            alias: "attr-value",
            inside: {
              punctuation: /^\||\|$/
            }
          },
          directive: {
            pattern: /( )(?! )[^:]+::/,
            lookbehind: !0,
            alias: "function",
            inside: {
              punctuation: /::$/
            }
          }
        }
      },
      "link-target": [
        {
          pattern: /(^[\t ]*\.\. )\[[^\]]+\]/m,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /^\[|\]$/
          }
        },
        {
          pattern: /(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /^_|:$/
          }
        }
      ],
      directive: {
        pattern: /(^[\t ]*\.\. )[^:]+::/m,
        lookbehind: !0,
        alias: "function",
        inside: {
          punctuation: /::$/
        }
      },
      comment: {
        // The two alternatives try to prevent highlighting of blank comments
        pattern: /(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m,
        lookbehind: !0
      },
      title: [
        // Overlined and underlined
        {
          pattern: /^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,
          inside: {
            punctuation: /^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
            important: /.+/
          }
        },
        // Underlined only
        {
          pattern: /(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,
          lookbehind: !0,
          inside: {
            punctuation: /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
            important: /.+/
          }
        }
      ],
      hr: {
        pattern: /((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/,
        lookbehind: !0,
        alias: "punctuation"
      },
      field: {
        pattern: /(^[\t ]*):[^:\r\n]+:(?= )/m,
        lookbehind: !0,
        alias: "attr-name"
      },
      "command-line-option": {
        pattern: /(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,
        lookbehind: !0,
        alias: "symbol"
      },
      "literal-block": {
        pattern: /::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,
        inside: {
          "literal-block-punctuation": {
            pattern: /^::/,
            alias: "punctuation"
          }
        }
      },
      "quoted-literal-block": {
        pattern: /::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,
        inside: {
          "literal-block-punctuation": {
            pattern: /^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m,
            alias: "punctuation"
          }
        }
      },
      "list-bullet": {
        pattern: /(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,
        lookbehind: !0,
        alias: "punctuation"
      },
      "doctest-block": {
        pattern: /(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m,
        lookbehind: !0,
        inside: {
          punctuation: /^>>>/
        }
      },
      inline: [
        {
          pattern: /(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,
          lookbehind: !0,
          inside: {
            bold: {
              pattern: /(^\*\*).+(?=\*\*$)/,
              lookbehind: !0
            },
            italic: {
              pattern: /(^\*).+(?=\*$)/,
              lookbehind: !0
            },
            "inline-literal": {
              pattern: /(^``).+(?=``$)/,
              lookbehind: !0,
              alias: "symbol"
            },
            role: {
              pattern: /^:[^:]+:|:[^:]+:$/,
              alias: "function",
              inside: {
                punctuation: /^:|:$/
              }
            },
            "interpreted-text": {
              pattern: /(^`).+(?=`$)/,
              lookbehind: !0,
              alias: "attr-value"
            },
            substitution: {
              pattern: /(^\|).+(?=\|$)/,
              lookbehind: !0,
              alias: "attr-value"
            },
            punctuation: /\*\*?|``?|\|/
          }
        }
      ],
      link: [
        {
          pattern: /\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/,
          alias: "string",
          inside: {
            punctuation: /^\[|\]_$/
          }
        },
        {
          pattern: /(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,
          alias: "string",
          inside: {
            punctuation: /^_?`|`$|`?_?_$/
          }
        }
      ],
      // Line block start,
      // quote attribution,
      // explicit markup start,
      // and anonymous hyperlink target shortcut (__)
      punctuation: {
        pattern: /(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m,
        lookbehind: !0
      }
    };
  }
  return zc;
}
var Gc, z0;
function O4() {
  if (z0) return Gc;
  z0 = 1, Gc = e, e.displayName = "rip", e.aliases = [];
  function e(t) {
    t.languages.rip = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      char: {
        pattern: /\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/,
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      regex: {
        pattern: /(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,
      builtin: /@|\bSystem\b/,
      boolean: /\b(?:false|true)\b/,
      date: /\b\d{4}-\d{2}-\d{2}\b/,
      time: /\b\d{2}:\d{2}:\d{2}\b/,
      datetime: /\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,
      symbol: /:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
      number: /[+-]?\b(?:\d+\.\d+|\d+)\b/,
      punctuation: /(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,
      reference: /[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/
    };
  }
  return Gc;
}
var Vc, G0;
function L4() {
  if (G0) return Vc;
  G0 = 1, Vc = e, e.displayName = "roboconf", e.aliases = [];
  function e(t) {
    t.languages.roboconf = {
      comment: /#.*/,
      keyword: {
        pattern: /(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/,
        lookbehind: !0
      },
      component: {
        pattern: /[\w-]+(?=[ \t]*\{)/,
        alias: "variable"
      },
      property: /[\w.-]+(?=[ \t]*:)/,
      value: {
        pattern: /(=[ \t]*(?![ \t]))[^,;]+/,
        lookbehind: !0,
        alias: "attr-value"
      },
      optional: {
        pattern: /\(optional\)/,
        alias: "builtin"
      },
      wildcard: {
        pattern: /(\.)\*/,
        lookbehind: !0,
        alias: "operator"
      },
      punctuation: /[{},.;:=]/
    };
  }
  return Vc;
}
var Wc, V0;
function D4() {
  if (V0) return Wc;
  V0 = 1, Wc = e, e.displayName = "robotframework", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(^[ \t]*| {2}|\t)#.*/m,
        lookbehind: !0,
        greedy: !0
      }, a = {
        pattern: /((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/,
        lookbehind: !0,
        inside: {
          punctuation: /^[$@&%]\{|\}$/
        }
      };
      function i(u, c) {
        var d = {};
        d["section-header"] = {
          pattern: /^ ?\*{3}.+?\*{3}/,
          alias: "keyword"
        };
        for (var m in c)
          d[m] = c[m];
        return d.tag = {
          pattern: /([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/,
          lookbehind: !0,
          inside: {
            punctuation: /\[|\]/
          }
        }, d.variable = a, d.comment = r, {
          pattern: RegExp(
            /^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(
              /<name>/g,
              function() {
                return u;
              }
            ),
            "im"
          ),
          alias: "section",
          inside: d
        };
      }
      var o = {
        pattern: /(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
        lookbehind: !0,
        alias: "string"
      }, s = {
        pattern: /([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/,
        lookbehind: !0,
        alias: "function",
        inside: {
          variable: a
        }
      }, l = {
        pattern: /([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
        lookbehind: !0,
        inside: {
          variable: a
        }
      };
      n.languages.robotframework = {
        settings: i("Settings", {
          documentation: {
            pattern: /([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
            lookbehind: !0,
            alias: "string"
          },
          property: {
            pattern: /([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
            lookbehind: !0
          }
        }),
        variables: i("Variables"),
        "test-cases": i("Test Cases", {
          "test-name": s,
          documentation: o,
          property: l
        }),
        keywords: i("Keywords", {
          "keyword-name": s,
          documentation: o,
          property: l
        }),
        tasks: i("Tasks", {
          "task-name": s,
          documentation: o,
          property: l
        }),
        comment: r
      }, n.languages.robot = n.languages.robotframework;
    })(t);
  }
  return Wc;
}
var Yc, W0;
function M4() {
  if (W0) return Yc;
  W0 = 1, Yc = e, e.displayName = "rust", e.aliases = [];
  function e(t) {
    (function(n) {
      for (var r = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, a = 0; a < 2; a++)
        r = r.replace(/<self>/g, function() {
          return r;
        });
      r = r.replace(/<self>/g, function() {
        return /[^\s\S]/.source;
      }), n.languages.rust = {
        comment: [
          {
            pattern: RegExp(/(^|[^\\])/.source + r),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        string: {
          pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,
          greedy: !0
        },
        char: {
          pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,
          greedy: !0
        },
        attribute: {
          pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,
          greedy: !0,
          alias: "attr-name",
          inside: {
            string: null
            // see below
          }
        },
        // Closure params should not be confused with bitwise OR |
        "closure-params": {
          pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            "closure-punctuation": {
              pattern: /^\||\|$/,
              alias: "punctuation"
            },
            rest: null
            // see below
          }
        },
        "lifetime-annotation": {
          pattern: /'\w+/,
          alias: "symbol"
        },
        "fragment-specifier": {
          pattern: /(\$\w+:)[a-z]+/,
          lookbehind: !0,
          alias: "punctuation"
        },
        variable: /\$\w+/,
        "function-definition": {
          pattern: /(\bfn\s+)\w+/,
          lookbehind: !0,
          alias: "function"
        },
        "type-definition": {
          pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/,
          lookbehind: !0,
          alias: "class-name"
        },
        "module-declaration": [
          {
            pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,
            lookbehind: !0,
            alias: "namespace"
          },
          {
            pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
            lookbehind: !0,
            alias: "namespace",
            inside: {
              punctuation: /::/
            }
          }
        ],
        keyword: [
          // https://github.com/rust-lang/reference/blob/master/src/keywords.md
          /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
          // primitives and str
          // https://doc.rust-lang.org/stable/rust-by-example/primitives.html
          /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/
        ],
        // functions can technically start with an upper-case letter, but this will introduce a lot of false positives
        // and Rust's naming conventions recommend snake_case anyway.
        // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html
        function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
        macro: {
          pattern: /\b\w+!/,
          alias: "property"
        },
        constant: /\b[A-Z_][A-Z_\d]+\b/,
        "class-name": /\b[A-Z]\w*\b/,
        namespace: {
          pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,
          inside: {
            punctuation: /::/
          }
        },
        // Hex, oct, bin, dec numbers with visual separators and type suffix
        number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
        boolean: /\b(?:false|true)\b/,
        punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
        operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/
      }, n.languages.rust["closure-params"].inside.rest = n.languages.rust, n.languages.rust.attribute.inside.string = n.languages.rust.string;
    })(t);
  }
  return Yc;
}
var Kc, Y0;
function P4() {
  if (Y0) return Kc;
  Y0 = 1, Kc = e, e.displayName = "sas", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source, a = /\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i, i = {
        pattern: RegExp(r + "[bx]"),
        alias: "number"
      }, o = {
        pattern: /&[a-z_]\w*/i
      }, s = {
        pattern: /((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, l = {
        pattern: /(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i,
        alias: "keyword",
        lookbehind: !0
      }, u = [
        /\/\*[\s\S]*?\*\//,
        {
          pattern: /(^[ \t]*|;\s*)\*[^;]*;/m,
          lookbehind: !0
        }
      ], c = {
        pattern: RegExp(r),
        greedy: !0
      }, d = /[$%@.(){}\[\];,\\]/, m = {
        pattern: /%?\b\w+(?=\()/,
        alias: "keyword"
      }, f = {
        function: m,
        "arg-value": {
          pattern: /(=\s*)[A-Z\.]+/i,
          lookbehind: !0
        },
        operator: /=/,
        "macro-variable": o,
        arg: {
          pattern: /[A-Z]+/i,
          alias: "keyword"
        },
        number: a,
        "numeric-constant": i,
        punctuation: d,
        string: c
      }, h = {
        pattern: /\b(?:format|put)\b=?[\w'$.]+/i,
        inside: {
          keyword: /^(?:format|put)(?==)/i,
          equals: /=/,
          format: {
            pattern: /(?:\w|\$\d)+\.\d?/,
            alias: "number"
          }
        }
      }, E = {
        pattern: /\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,
        inside: {
          keyword: /^(?:format|put)/i,
          format: {
            pattern: /[\w$]+\.\d?/,
            alias: "number"
          }
        }
      }, I = {
        pattern: /((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, x = {
        pattern: /(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i,
        lookbehind: !0,
        alias: "keyword"
      }, v = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source, S = {
        pattern: RegExp(
          /(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(
            /<act>/g,
            function() {
              return v;
            }
          ),
          "i"
        ),
        lookbehind: !0,
        inside: {
          keyword: RegExp(
            /(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g, function() {
              return v;
            }),
            "i"
          ),
          action: {
            pattern: /(?:action)/i,
            alias: "keyword"
          },
          comment: u,
          function: m,
          "arg-value": f["arg-value"],
          operator: f.operator,
          argument: f.arg,
          number: a,
          "numeric-constant": i,
          punctuation: d,
          string: c
        }
      }, g = {
        pattern: /((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,
        lookbehind: !0
      };
      n.languages.sas = {
        datalines: {
          pattern: /^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,
          lookbehind: !0,
          alias: "string",
          inside: {
            keyword: {
              pattern: /^(?:cards|(?:data)?lines)/i
            },
            punctuation: /;/
          }
        },
        "proc-sql": {
          pattern: /(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            sql: {
              pattern: RegExp(
                /^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              alias: "language-sql",
              inside: n.languages.sql
            },
            "global-statements": I,
            "sql-statements": {
              pattern: /(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,
              lookbehind: !0,
              alias: "keyword"
            },
            number: a,
            "numeric-constant": i,
            punctuation: d,
            string: c
          }
        },
        "proc-groovy": {
          pattern: /(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: u,
            groovy: {
              pattern: RegExp(
                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              lookbehind: !0,
              alias: "language-groovy",
              inside: n.languages.groovy
            },
            keyword: g,
            "submit-statement": x,
            "global-statements": I,
            number: a,
            "numeric-constant": i,
            punctuation: d,
            string: c
          }
        },
        "proc-lua": {
          pattern: /(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: u,
            lua: {
              pattern: RegExp(
                /(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(
                  /<str>/g,
                  function() {
                    return r;
                  }
                ),
                "im"
              ),
              lookbehind: !0,
              alias: "language-lua",
              inside: n.languages.lua
            },
            keyword: g,
            "submit-statement": x,
            "global-statements": I,
            number: a,
            "numeric-constant": i,
            punctuation: d,
            string: c
          }
        },
        "proc-cas": {
          pattern: /(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,
          lookbehind: !0,
          inside: {
            comment: u,
            "statement-var": {
              pattern: /((?:^|\s)=?)saveresult\s[^;]+/im,
              lookbehind: !0,
              inside: {
                statement: {
                  pattern: /^saveresult\s+\S+/i,
                  inside: {
                    keyword: /^(?:saveresult)/i
                  }
                },
                rest: f
              }
            },
            "cas-actions": S,
            statement: {
              pattern: /((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,
              lookbehind: !0,
              inside: f
            },
            step: l,
            keyword: g,
            function: m,
            format: h,
            altformat: E,
            "global-statements": I,
            number: a,
            "numeric-constant": i,
            punctuation: d,
            string: c
          }
        },
        "proc-args": {
          pattern: RegExp(
            /(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(
              /<str>/g,
              function() {
                return r;
              }
            ),
            "im"
          ),
          lookbehind: !0,
          inside: f
        },
        /*Special keywords within macros*/
        "macro-keyword": s,
        "macro-variable": o,
        "macro-string-functions": {
          pattern: /((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,
          lookbehind: !0,
          inside: {
            function: {
              pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,
              alias: "keyword"
            },
            "macro-keyword": s,
            "macro-variable": o,
            "escaped-char": {
              pattern: /%['"()<>=¬^~;,#]/
            },
            punctuation: d
          }
        },
        "macro-declaration": {
          pattern: /^%macro[^;]+(?=;)/im,
          inside: {
            keyword: /%macro/i
          }
        },
        "macro-end": {
          pattern: /^%mend[^;]+(?=;)/im,
          inside: {
            keyword: /%mend/i
          }
        },
        /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */
        macro: {
          pattern: /%_\w+(?=\()/,
          alias: "keyword"
        },
        input: {
          pattern: /\binput\s[-\w\s/*.$&]+;/i,
          inside: {
            input: {
              alias: "keyword",
              pattern: /^input/i
            },
            comment: u,
            number: a,
            "numeric-constant": i
          }
        },
        "options-args": {
          pattern: /(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im,
          lookbehind: !0,
          inside: f
        },
        "cas-actions": S,
        comment: u,
        function: m,
        format: h,
        altformat: E,
        "numeric-constant": i,
        datetime: {
          // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt
          pattern: RegExp(r + "(?:dt?|t)"),
          alias: "number"
        },
        string: c,
        step: l,
        keyword: g,
        // In SAS Studio syntax highlighting, these operators are styled like keywords
        "operator-keyword": {
          pattern: /\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i,
          alias: "operator"
        },
        // Decimal (1.2e23), hexadecimal (0c1x)
        number: a,
        operator: /\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,
        punctuation: d
      };
    })(t);
  }
  return Kc;
}
var Xc, K0;
function F4() {
  if (K0) return Xc;
  K0 = 1, Xc = e, e.displayName = "sass", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.sass = n.languages.extend("css", {
        // Sass comments don't need to be closed, only indented
        comment: {
          pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
          lookbehind: !0,
          greedy: !0
        }
      }), n.languages.insertBefore("sass", "atrule", {
        // We want to consume the whole line
        "atrule-line": {
          // Includes support for = and + shortcuts
          pattern: /^(?:[ \t]*)[@+=].+/m,
          greedy: !0,
          inside: {
            atrule: /(?:@[\w-]+|[+=])/
          }
        }
      }), delete n.languages.sass.atrule;
      var r = /\$[-\w]+|#\{\$[-\w]+\}/, a = [
        /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
        {
          pattern: /(\s)-(?=\s)/,
          lookbehind: !0
        }
      ];
      n.languages.insertBefore("sass", "property", {
        // We want to consume the whole line
        "variable-line": {
          pattern: /^[ \t]*\$.+/m,
          greedy: !0,
          inside: {
            punctuation: /:/,
            variable: r,
            operator: a
          }
        },
        // We want to consume the whole line
        "property-line": {
          pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
          greedy: !0,
          inside: {
            property: [
              /[^:\s]+(?=\s*:)/,
              {
                pattern: /(:)[^:\s]+/,
                lookbehind: !0
              }
            ],
            punctuation: /:/,
            variable: r,
            operator: a,
            important: n.languages.sass.important
          }
        }
      }), delete n.languages.sass.property, delete n.languages.sass.important, n.languages.insertBefore("sass", "punctuation", {
        selector: {
          pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
          lookbehind: !0,
          greedy: !0
        }
      });
    })(t);
  }
  return Xc;
}
var Zc, X0;
function B4() {
  if (X0) return Zc;
  X0 = 1;
  var e = jf();
  Zc = t, t.displayName = "scala", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.scala = n.languages.extend("java", {
      "triple-quoted-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      keyword: /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
      number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
      builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
      symbol: /'[^\d\s\\]\w*/
    }), n.languages.insertBefore("scala", "triple-quoted-string", {
      "string-interpolation": {
        pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
        greedy: !0,
        inside: {
          id: {
            pattern: /^\w+/,
            greedy: !0,
            alias: "function"
          },
          escape: {
            pattern: /\\\$"|\$[$"]/,
            greedy: !0,
            alias: "symbol"
          },
          interpolation: {
            pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
            greedy: !0,
            inside: {
              punctuation: /^\$\{?|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                inside: n.languages.scala
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    }), delete n.languages.scala["class-name"], delete n.languages.scala.function;
  }
  return Zc;
}
var Qc, Z0;
function U4() {
  if (Z0) return Qc;
  Z0 = 1, Qc = e, e.displayName = "scss", e.aliases = [];
  function e(t) {
    t.languages.scss = t.languages.extend("css", {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: !0
      },
      atrule: {
        pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
        inside: {
          rule: /@[\w-]+/
          // See rest below
        }
      },
      // url, compassified
      url: /(?:[-a-z]+-)?url(?=\()/i,
      // CSS selector regex is not appropriate for Sass
      // since there can be lot more things (var, @ directive, nesting..)
      // a selector must start at the end of a property or after a brace (end of other rules or nesting)
      // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
      // the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
      // can "pass" as a selector- e.g: proper#{$erty})
      // this one was hard to do, so please be careful if you edit this one :)
      selector: {
        // Initial look-ahead is used to prevent matching of blank selectors
        pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
        inside: {
          parent: {
            pattern: /&/,
            alias: "important"
          },
          placeholder: /%[-\w]+/,
          variable: /\$[-\w]+|#\{\$[-\w]+\}/
        }
      },
      property: {
        pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
        inside: {
          variable: /\$[-\w]+|#\{\$[-\w]+\}/
        }
      }
    }), t.languages.insertBefore("scss", "atrule", {
      keyword: [
        /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
        {
          pattern: /( )(?:from|through)(?= )/,
          lookbehind: !0
        }
      ]
    }), t.languages.insertBefore("scss", "important", {
      // var and interpolated vars
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }), t.languages.insertBefore("scss", "function", {
      "module-modifier": {
        pattern: /\b(?:as|hide|show|with)\b/i,
        alias: "keyword"
      },
      placeholder: {
        pattern: /%[-\w]+/,
        alias: "selector"
      },
      statement: {
        pattern: /\B!(?:default|optional)\b/i,
        alias: "keyword"
      },
      boolean: /\b(?:false|true)\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      },
      operator: {
        pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
        lookbehind: !0
      }
    }), t.languages.scss.atrule.inside.rest = t.languages.scss;
  }
  return Qc;
}
var Jc, Q0;
function j4() {
  if (Q0) return Jc;
  Q0 = 1;
  var e = W1();
  Jc = t, t.displayName = "shellSession", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = [
        // normal string
        /"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,
        /'[^']*'/.source,
        /\$'(?:[^'\\]|\\[\s\S])*'/.source,
        // here doc
        // 2 capturing groups
        /<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source
      ].join("|");
      r.languages["shell-session"] = {
        command: {
          pattern: RegExp(
            // user info
            /^/.source + "(?:" + // <user> ":" ( <path> )?
            (/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source + "|" + // <path>
            // Since the path pattern is quite general, we will require it to start with a special character to
            // prevent false positives.
            /[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source) + ")?" + // shell symbol
            /[$#%](?=\s)/.source + // bash command
            /(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(
              /<<str>>/g,
              function() {
                return a;
              }
            ),
            "m"
          ),
          greedy: !0,
          inside: {
            info: {
              // foo@bar:~/files$ exit
              // foo@bar$ exit
              // ~/files$ exit
              pattern: /^[^#$%]+/,
              alias: "punctuation",
              inside: {
                user: /^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,
                punctuation: /:/,
                path: /[\s\S]+/
              }
            },
            bash: {
              pattern: /(^[$#%]\s*)\S[\s\S]*/,
              lookbehind: !0,
              alias: "language-bash",
              inside: r.languages.bash
            },
            "shell-symbol": {
              pattern: /^[$#%]/,
              alias: "important"
            }
          }
        },
        output: /.(?:.*(?:[\r\n]|.$))*/
      }, r.languages["sh-session"] = r.languages.shellsession = r.languages["shell-session"];
    }(n);
  }
  return Jc;
}
var ed, J0;
function H4() {
  if (J0) return ed;
  J0 = 1, ed = e, e.displayName = "smali", e.aliases = [];
  function e(t) {
    t.languages.smali = {
      comment: /#.*/,
      string: {
        pattern: /"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/,
        greedy: !0
      },
      "class-name": {
        pattern: /(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,
        lookbehind: !0,
        inside: {
          "class-name": {
            pattern: /(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/,
            lookbehind: !0
          },
          namespace: {
            pattern: /^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/,
            lookbehind: !0,
            inside: {
              punctuation: /\//
            }
          },
          builtin: /^L/
        }
      },
      builtin: [
        {
          // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types
          pattern: /([();\[])[BCDFIJSVZ]+/,
          lookbehind: !0
        },
        {
          // e.g. .field mWifiOnUid:I
          pattern: /([\w$>]:)[BCDFIJSVZ]/,
          lookbehind: !0
        }
      ],
      keyword: [
        {
          pattern: /(\.end\s+)[\w-]+/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.-])\.(?!\d)[\w-]+/,
          lookbehind: !0
        },
        {
          pattern: /(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,
          lookbehind: !0
        }
      ],
      function: {
        pattern: /(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/,
        lookbehind: !0
      },
      field: {
        pattern: /[\w$]+(?=:)/,
        alias: "variable"
      },
      register: {
        pattern: /(^|[^\w.-])[vp]\d(?![\w.-])/,
        lookbehind: !0,
        alias: "variable"
      },
      boolean: {
        pattern: /(^|[^\w.-])(?:false|true)(?![\w.-])/,
        lookbehind: !0
      },
      number: {
        pattern: /(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,
        lookbehind: !0
      },
      label: {
        pattern: /(:)\w+/,
        lookbehind: !0,
        alias: "property"
      },
      operator: /->|\.\.|[\[=]/,
      punctuation: /[{}(),;:]/
    };
  }
  return ed;
}
var td, ey;
function q4() {
  if (ey) return td;
  ey = 1, td = e, e.displayName = "smalltalk", e.aliases = [];
  function e(t) {
    t.languages.smalltalk = {
      comment: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      char: {
        pattern: /\$./,
        greedy: !0
      },
      string: {
        pattern: /'(?:''|[^'])*'/,
        greedy: !0
      },
      symbol: /#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,
      "block-arguments": {
        pattern: /(\[\s*):[^\[|]*\|/,
        lookbehind: !0,
        inside: {
          variable: /:[\da-z]+/i,
          punctuation: /\|/
        }
      },
      "temporary-variables": {
        pattern: /\|[^|]+\|/,
        inside: {
          variable: /[\da-z]+/i,
          punctuation: /\|/
        }
      },
      keyword: /\b(?:new|nil|self|super)\b/,
      boolean: /\b(?:false|true)\b/,
      number: [
        /\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,
        /\b\d+(?:\.\d+)?(?:e-?\d+)?/
      ],
      operator: /[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,
      punctuation: /[.;:?\[\](){}]/
    };
  }
  return td;
}
var nd, ty;
function $4() {
  if (ty) return nd;
  ty = 1;
  var e = yn();
  nd = t, t.displayName = "smarty", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.smarty = {
        comment: {
          pattern: /^\{\*[\s\S]*?\*\}/,
          greedy: !0
        },
        "embedded-php": {
          pattern: /^\{php\}[\s\S]*?\{\/php\}/,
          greedy: !0,
          inside: {
            smarty: {
              pattern: /^\{php\}|\{\/php\}$/,
              inside: null
              // see below
            },
            php: {
              pattern: /[\s\S]+/,
              alias: "language-php",
              inside: r.languages.php
            }
          }
        },
        string: [
          {
            pattern: /"(?:\\.|[^"\\\r\n])*"/,
            greedy: !0,
            inside: {
              interpolation: {
                pattern: /\{[^{}]*\}|`[^`]*`/,
                inside: {
                  "interpolation-punctuation": {
                    pattern: /^[{`]|[`}]$/,
                    alias: "punctuation"
                  },
                  expression: {
                    pattern: /[\s\S]+/,
                    inside: null
                    // see below
                  }
                }
              },
              variable: /\$\w+/
            }
          },
          {
            pattern: /'(?:\\.|[^'\\\r\n])*'/,
            greedy: !0
          }
        ],
        keyword: {
          pattern: /(^\{\/?)[a-z_]\w*\b(?!\()/i,
          lookbehind: !0,
          greedy: !0
        },
        delimiter: {
          pattern: /^\{\/?|\}$/,
          greedy: !0,
          alias: "punctuation"
        },
        number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
        variable: [
          /\$(?!\d)\w+/,
          /#(?!\d)\w+#/,
          {
            pattern: /(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,
            lookbehind: !0
          },
          {
            pattern: /(\[)(?!\d)\w+(?=\])/,
            lookbehind: !0
          }
        ],
        function: {
          pattern: /(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,
          lookbehind: !0
        },
        "attr-name": /\b[a-z_]\w*(?=\s*=)/i,
        boolean: /\b(?:false|no|off|on|true|yes)\b/,
        punctuation: /[\[\](){}.,:`]|->/,
        operator: [
          /[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,
          /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,
          /\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/
        ]
      }, r.languages.smarty["embedded-php"].inside.smarty.inside = r.languages.smarty, r.languages.smarty.string[0].inside.interpolation.inside.expression.inside = r.languages.smarty;
      var a = /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/, i = RegExp(
        // comments
        /\{\*[\s\S]*?\*\}/.source + "|" + // php tags
        /\{php\}[\s\S]*?\{\/php\}/.source + "|" + // smarty blocks
        /\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(
          /<str>/g,
          function() {
            return a.source;
          }
        ),
        "g"
      );
      r.hooks.add("before-tokenize", function(o) {
        var s = "{literal}", l = "{/literal}", u = !1;
        r.languages["markup-templating"].buildPlaceholders(
          o,
          "smarty",
          i,
          function(c) {
            return c === l && (u = !1), u ? !1 : (c === s && (u = !0), !0);
          }
        );
      }), r.hooks.add("after-tokenize", function(o) {
        r.languages["markup-templating"].tokenizePlaceholders(o, "smarty");
      });
    }(n);
  }
  return nd;
}
var rd, ny;
function z4() {
  if (ny) return rd;
  ny = 1, rd = e, e.displayName = "sml", e.aliases = ["smlnj"];
  function e(t) {
    (function(n) {
      var r = /\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;
      n.languages.sml = {
        // allow one level of nesting
        comment: /\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,
        string: {
          pattern: /#?"(?:[^"\\]|\\.)*"/,
          greedy: !0
        },
        "class-name": [
          {
            // This is only an approximation since the real grammar is context-free
            //
            // Why the main loop so complex?
            // The main loop is approximately the same as /(?:\s*(?:[*,]|->)\s*<TERMINAL>)*/ which is, obviously, a lot
            // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be
            // followed by a long identifier.
            pattern: RegExp(
              /((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {
                return /\s*(?:[*,]|->)/.source;
              }).replace(/<TERMINAL>/g, function() {
                return /(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source;
              }).replace(/<LONG-ID>/g, function() {
                return /(?!<KEYWORD>)[a-z\d_][\w'.]*/.source;
              }).replace(/<KEYWORD>/g, function() {
                return r.source;
              }),
              "i"
            ),
            lookbehind: !0,
            greedy: !0,
            inside: null
            // see below
          },
          {
            pattern: /((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i,
            lookbehind: !0
          }
        ],
        function: {
          pattern: /((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i,
          lookbehind: !0
        },
        keyword: r,
        variable: {
          pattern: /(^|[^\w'])'[\w']*/,
          lookbehind: !0
        },
        number: /~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,
        word: {
          pattern: /\b0w(?:\d+|x[\da-f]+)\b/i,
          alias: "constant"
        },
        boolean: /\b(?:false|true)\b/i,
        operator: /\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,
        punctuation: /[(){}\[\].:,;]/
      }, n.languages.sml["class-name"][0].inside = n.languages.sml, n.languages.smlnj = n.languages.sml;
    })(t);
  }
  return rd;
}
var ad, ry;
function G4() {
  if (ry) return ad;
  ry = 1, ad = e, e.displayName = "solidity", e.aliases = ["sol"];
  function e(t) {
    t.languages.solidity = t.languages.extend("clike", {
      "class-name": {
        pattern: /(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/,
        lookbehind: !0
      },
      keyword: /\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,
      operator: /=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/
    }), t.languages.insertBefore("solidity", "keyword", {
      builtin: /\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/
    }), t.languages.insertBefore("solidity", "number", {
      version: {
        pattern: /([<>]=?|\^)\d+\.\d+\.\d+\b/,
        lookbehind: !0,
        alias: "number"
      }
    }), t.languages.sol = t.languages.solidity;
  }
  return ad;
}
var id, ay;
function V4() {
  if (ay) return id;
  ay = 1, id = e, e.displayName = "solutionFile", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format
        pattern: /\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i,
        alias: "constant",
        inside: {
          punctuation: /[{}]/
        }
      };
      n.languages["solution-file"] = {
        comment: {
          pattern: /#.*/,
          greedy: !0
        },
        string: {
          pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
          greedy: !0,
          inside: {
            guid: r
          }
        },
        object: {
          // Foo
          //   Bar("abs") = 9
          //   EndBar
          //   Prop = TRUE
          // EndFoo
          pattern: /^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,
          lookbehind: !0,
          greedy: !0,
          alias: "keyword"
        },
        property: {
          pattern: /^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m,
          lookbehind: !0,
          inside: {
            guid: r
          }
        },
        guid: r,
        number: /\b\d+(?:\.\d+)*\b/,
        boolean: /\b(?:FALSE|TRUE)\b/,
        operator: /=/,
        punctuation: /[(),]/
      }, n.languages.sln = n.languages["solution-file"];
    })(t);
  }
  return id;
}
var od, iy;
function W4() {
  if (iy) return od;
  iy = 1;
  var e = yn();
  od = t, t.displayName = "soy", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      var a = /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, i = /\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;
      r.languages.soy = {
        comment: [
          /\/\*[\s\S]*?\*\//,
          {
            pattern: /(\s)\/\/.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        "command-arg": {
          pattern: /(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,
          lookbehind: !0,
          alias: "string",
          inside: {
            punctuation: /\./
          }
        },
        parameter: {
          pattern: /(\{+\/?\s*@?param\??\s+)\.?[\w.]+/,
          lookbehind: !0,
          alias: "variable"
        },
        keyword: [
          {
            pattern: /(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,
            lookbehind: !0
          },
          /\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/
        ],
        delimiter: {
          pattern: /^\{+\/?|\/?\}+$/,
          alias: "punctuation"
        },
        property: /\w+(?==)/,
        variable: {
          pattern: /\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,
          inside: {
            string: {
              pattern: a,
              greedy: !0
            },
            number: i,
            punctuation: /[\[\].?]/
          }
        },
        string: {
          pattern: a,
          greedy: !0
        },
        function: [
          /\w+(?=\()/,
          {
            pattern: /(\|[^\S\r\n]*)\w+/,
            lookbehind: !0
          }
        ],
        boolean: /\b(?:false|true)\b/,
        number: i,
        operator: /\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,
        punctuation: /[{}()\[\]|.,:]/
      }, r.hooks.add("before-tokenize", function(o) {
        var s = /\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g, l = "{literal}", u = "{/literal}", c = !1;
        r.languages["markup-templating"].buildPlaceholders(
          o,
          "soy",
          s,
          function(d) {
            return d === u && (c = !1), c ? !1 : (d === l && (c = !0), !0);
          }
        );
      }), r.hooks.add("after-tokenize", function(o) {
        r.languages["markup-templating"].tokenizePlaceholders(o, "soy");
      });
    }(n);
  }
  return od;
}
var sd, oy;
function Z1() {
  if (oy) return sd;
  oy = 1, sd = e, e.displayName = "turtle", e.aliases = [];
  function e(t) {
    t.languages.turtle = {
      comment: {
        pattern: /#.*/,
        greedy: !0
      },
      "multiline-string": {
        pattern: /"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,
        greedy: !0,
        alias: "string",
        inside: {
          comment: /#.*/
        }
      },
      string: {
        pattern: /"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/,
        greedy: !0
      },
      url: {
        pattern: /<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/,
        greedy: !0,
        inside: {
          punctuation: /[<>]/
        }
      },
      function: {
        pattern: /(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,
        inside: {
          "local-name": {
            pattern: /([^:]*:)[\s\S]+/,
            lookbehind: !0
          },
          prefix: {
            pattern: /[\s\S]+/,
            inside: {
              punctuation: /:/
            }
          }
        }
      },
      number: /[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
      punctuation: /[{}.,;()[\]]|\^\^/,
      boolean: /\b(?:false|true)\b/,
      keyword: [/(?:\ba|@prefix|@base)\b|=/, /\b(?:base|graph|prefix)\b/i],
      tag: {
        pattern: /@[a-z]+(?:-[a-z\d]+)*/i,
        inside: {
          punctuation: /@/
        }
      }
    }, t.languages.trig = t.languages.turtle;
  }
  return sd;
}
var ld, sy;
function Y4() {
  if (sy) return ld;
  sy = 1;
  var e = Z1();
  ld = t, t.displayName = "sparql", t.aliases = ["rq"];
  function t(n) {
    n.register(e), n.languages.sparql = n.languages.extend("turtle", {
      boolean: /\b(?:false|true)\b/i,
      variable: {
        pattern: /[?$]\w+/,
        greedy: !0
      }
    }), n.languages.insertBefore("sparql", "punctuation", {
      keyword: [
        /\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,
        /\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,
        /\b(?:BASE|GRAPH|PREFIX)\b/i
      ]
    }), n.languages.rq = n.languages.sparql;
  }
  return ld;
}
var ud, ly;
function K4() {
  if (ly) return ud;
  ly = 1, ud = e, e.displayName = "splunkSpl", e.aliases = [];
  function e(t) {
    t.languages["splunk-spl"] = {
      comment: /`comment\("(?:\\.|[^\\"])*"\)`/,
      string: {
        pattern: /"(?:\\.|[^\\"])*"/,
        greedy: !0
      },
      // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands
      keyword: /\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,
      "operator-word": {
        pattern: /\b(?:and|as|by|not|or|xor)\b/i,
        alias: "operator"
      },
      function: /\b\w+(?=\s*\()/,
      property: /\b\w+(?=\s*=(?!=))/,
      date: {
        // MM/DD/YYYY(:HH:MM:SS)?
        pattern: /\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/,
        alias: "number"
      },
      number: /\b\d+(?:\.\d+)?\b/,
      boolean: /\b(?:f|false|t|true)\b/i,
      operator: /[<>=]=?|[-+*/%|]/,
      punctuation: /[()[\],]/
    };
  }
  return ud;
}
var cd, uy;
function X4() {
  if (uy) return cd;
  uy = 1, cd = e, e.displayName = "sqf", e.aliases = [];
  function e(t) {
    t.languages.sqf = t.languages.extend("clike", {
      string: {
        pattern: /"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/,
        greedy: !0
      },
      keyword: /\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,
      number: /(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,
      operator: /##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,
      "magic-variable": {
        pattern: /\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,
        alias: "keyword"
      },
      constant: /\bDIK(?:_[a-z\d]+)+\b/i
    }), t.languages.insertBefore("sqf", "string", {
      macro: {
        pattern: /(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
        lookbehind: !0,
        greedy: !0,
        alias: "property",
        inside: {
          directive: {
            pattern: /#[a-z]+\b/i,
            alias: "keyword"
          },
          comment: t.languages.sqf.comment
        }
      }
    }), delete t.languages.sqf["class-name"];
  }
  return cd;
}
var dd, cy;
function Z4() {
  if (cy) return dd;
  cy = 1, dd = e, e.displayName = "squirrel", e.aliases = [];
  function e(t) {
    t.languages.squirrel = t.languages.extend("clike", {
      comment: [
        t.languages.clike.comment[0],
        {
          pattern: /(^|[^\\:])(?:\/\/|#).*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/,
        lookbehind: !0,
        greedy: !0
      },
      "class-name": {
        pattern: /(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/,
        lookbehind: !0,
        inside: {
          punctuation: /\./
        }
      },
      keyword: /\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,
      number: /\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,
      operator: /\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,
      punctuation: /[(){}\[\],;.]/
    }), t.languages.insertBefore("squirrel", "string", {
      char: {
        pattern: /(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/,
        lookbehind: !0,
        greedy: !0
      }
    }), t.languages.insertBefore("squirrel", "operator", {
      "attribute-punctuation": {
        pattern: /<\/|\/>/,
        alias: "important"
      },
      lambda: {
        pattern: /@(?=\()/,
        alias: "operator"
      }
    });
  }
  return dd;
}
var pd, dy;
function Q4() {
  if (dy) return pd;
  dy = 1, pd = e, e.displayName = "stan", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;
      n.languages.stan = {
        comment: /\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,
        string: {
          // String literals can contain spaces and any printable ASCII characters except for " and \
          // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals
          pattern: /"[\x20\x21\x23-\x5B\x5D-\x7E]*"/,
          greedy: !0
        },
        directive: {
          pattern: /^([ \t]*)#include\b.*/m,
          lookbehind: !0,
          alias: "property"
        },
        "function-arg": {
          pattern: RegExp(
            "(" + r.source + /\s*\(\s*/.source + ")" + /[a-zA-Z]\w*/.source
          ),
          lookbehind: !0,
          alias: "function"
        },
        constraint: {
          pattern: /(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,
          lookbehind: !0,
          inside: {
            expression: {
              pattern: /(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            property: /\b[a-z]\w*(?=\s*=)/i,
            operator: /=/,
            punctuation: /^<|>$|,/
          }
        },
        keyword: [
          {
            pattern: /\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/,
            alias: "program-block"
          },
          /\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,
          // these are functions that are known to take another function as their first argument.
          r
        ],
        function: /\b[a-z]\w*(?=\s*\()/i,
        number: /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
        boolean: /\b(?:false|true)\b/,
        operator: /<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,
        punctuation: /[()\[\]{},;]/
      }, n.languages.stan.constraint.inside.expression.inside = n.languages.stan;
    })(t);
  }
  return pd;
}
var fd, py;
function J4() {
  if (py) return fd;
  py = 1, fd = e, e.displayName = "stylus", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /(\b\d+)(?:%|[a-z]+)/,
        lookbehind: !0
      }, a = {
        pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
        lookbehind: !0
      }, i = {
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
          lookbehind: !0
        },
        url: {
          pattern: /\burl\((["']?).*?\1\)/i,
          greedy: !0
        },
        string: {
          pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
          greedy: !0
        },
        interpolation: null,
        // See below
        func: null,
        // See below
        important: /\B!(?:important|optional)\b/i,
        keyword: {
          pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,
          lookbehind: !0
        },
        hexcode: /#[\da-f]{3,6}/i,
        color: [
          /\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
          {
            pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
            inside: {
              unit: r,
              number: a,
              function: /[\w-]+(?=\()/,
              punctuation: /[(),]/
            }
          }
        ],
        entity: /\\[\da-f]{1,8}/i,
        unit: r,
        boolean: /\b(?:false|true)\b/,
        operator: [
          // We want non-word chars around "-" because it is
          // accepted in property names.
          /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
        ],
        number: a,
        punctuation: /[{}()\[\];:,]/
      };
      i.interpolation = {
        pattern: /\{[^\r\n}:]+\}/,
        alias: "variable",
        inside: {
          delimiter: {
            pattern: /^\{|\}$/,
            alias: "punctuation"
          },
          rest: i
        }
      }, i.func = {
        pattern: /[\w-]+\([^)]*\).*/,
        inside: {
          function: /^[^(]+/,
          rest: i
        }
      }, n.languages.stylus = {
        "atrule-declaration": {
          pattern: /(^[ \t]*)@.+/m,
          lookbehind: !0,
          inside: {
            atrule: /^@[\w-]+/,
            rest: i
          }
        },
        "variable-declaration": {
          pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
          lookbehind: !0,
          inside: {
            variable: /^\S+/,
            rest: i
          }
        },
        statement: {
          pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,
          lookbehind: !0,
          inside: {
            keyword: /^\S+/,
            rest: i
          }
        },
        // A property/value pair cannot end with a comma or a brace
        // It cannot have indented content unless it ended with a semicolon
        "property-declaration": {
          pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
          lookbehind: !0,
          inside: {
            property: {
              pattern: /^[^\s:]+/,
              inside: {
                interpolation: i.interpolation
              }
            },
            rest: i
          }
        },
        // A selector can contain parentheses only as part of a pseudo-element
        // It can span multiple lines.
        // It must end with a comma or an accolade or have indented content.
        selector: {
          pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
          lookbehind: !0,
          inside: {
            interpolation: i.interpolation,
            comment: i.comment,
            punctuation: /[{},]/
          }
        },
        func: i.func,
        string: i.string,
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
          lookbehind: !0,
          greedy: !0
        },
        interpolation: i.interpolation,
        punctuation: /[{}()\[\];:.]/
      };
    })(t);
  }
  return fd;
}
var md, fy;
function e6() {
  if (fy) return md;
  fy = 1, md = e, e.displayName = "swift", e.aliases = [];
  function e(t) {
    t.languages.swift = {
      comment: {
        // Nested comments are supported up to 2 levels
        pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
        lookbehind: !0,
        greedy: !0
      },
      "string-literal": [
        // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html
        {
          pattern: RegExp(
            /(^|[^"#])/.source + "(?:" + // single-line string
            /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + // multi-line string
            /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            "interpolation-punctuation": {
              pattern: /^\)|\\\($/,
              alias: "punctuation"
            },
            punctuation: /\\(?=[\r\n])/,
            string: /[\s\S]+/
          }
        },
        {
          pattern: RegExp(
            /(^|[^"#])(#+)/.source + "(?:" + // single-line string
            /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + // multi-line string
            /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"
          ),
          lookbehind: !0,
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
              lookbehind: !0,
              inside: null
              // see below
            },
            "interpolation-punctuation": {
              pattern: /^\)|\\#+\($/,
              alias: "punctuation"
            },
            string: /[\s\S]+/
          }
        }
      ],
      directive: {
        // directives with conditions
        pattern: RegExp(
          /#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + // This regex is a little complex. It's equivalent to this:
          //   (?:![ \t]*)?(?:\b\w+\b(?:[ \t]*<round>)?|<round>)(?:[ \t]*(?:&&|\|\|))?
          // where <round> is a general parentheses expression.
          /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"
        ),
        alias: "property",
        inside: {
          "directive-name": /^#\w+/,
          boolean: /\b(?:false|true)\b/,
          number: /\b\d+(?:\.\d+)*\b/,
          operator: /!|&&|\|\||[<>]=?/,
          punctuation: /[(),]/
        }
      },
      literal: {
        pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
        alias: "constant"
      },
      "other-directive": {
        pattern: /#\w+\b/,
        alias: "property"
      },
      attribute: {
        pattern: /@\w+/,
        alias: "atrule"
      },
      "function-definition": {
        pattern: /(\bfunc\s+)\w+/,
        lookbehind: !0,
        alias: "function"
      },
      label: {
        // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141
        pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
        lookbehind: !0,
        alias: "important"
      },
      keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
      boolean: /\b(?:false|true)\b/,
      nil: {
        pattern: /\bnil\b/,
        alias: "constant"
      },
      "short-argument": /\$\d+\b/,
      omit: {
        pattern: /\b_\b/,
        alias: "keyword"
      },
      number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
      // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.
      "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
      // Operators are generic in Swift. Developers can even create new operators (e.g. +++).
      // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481
      // This regex only supports ASCII operators.
      operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
      punctuation: /[{}[\]();,.:\\]/
    }, t.languages.swift["string-literal"].forEach(function(n) {
      n.inside.interpolation.inside = t.languages.swift;
    });
  }
  return md;
}
var gd, my;
function t6() {
  if (my) return gd;
  my = 1, gd = e, e.displayName = "systemd", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /^[;#].*/m,
        greedy: !0
      }, a = /"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;
      n.languages.systemd = {
        comment: r,
        section: {
          pattern: /^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,
          greedy: !0,
          inside: {
            punctuation: /^\[|\]$/,
            "section-name": {
              pattern: /[\s\S]+/,
              alias: "selector"
            }
          }
        },
        key: {
          pattern: /^[^\s=]+(?=[ \t]*=)/m,
          greedy: !0,
          alias: "attr-name"
        },
        value: {
          // This pattern is quite complex because of two properties:
          //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to "resolve"
          //     the lookbehind. You will see this in the main loop where spaces are handled separately.
          //  2) Line continuations.
          //     After line continuations, empty lines and comments are ignored so we have to consume them.
          pattern: RegExp(
            /(=[ \t]*(?!\s))/.source + // the value either starts with quotes or not
            "(?:" + a + `|(?=[^"\r
]))(?:` + (/[^\s\\]/.source + // handle spaces separately because of quotes
            '|[ 	]+(?:(?![ 	"])|' + a + ")|" + /\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source) + ")*"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "attr-value",
          inside: {
            comment: r,
            quoted: {
              pattern: RegExp(/(^|\s)/.source + a),
              lookbehind: !0,
              greedy: !0
            },
            punctuation: /\\$/m,
            boolean: {
              pattern: /^(?:false|no|off|on|true|yes)$/,
              greedy: !0
            }
          }
        },
        punctuation: /=/
      };
    })(t);
  }
  return gd;
}
var hd, gy;
function zf() {
  if (gy) return hd;
  gy = 1, hd = e, e.displayName = "t4Templating", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(i, o, s) {
        return {
          pattern: RegExp("<#" + i + "[\\s\\S]*?#>"),
          alias: "block",
          inside: {
            delimiter: {
              pattern: RegExp("^<#" + i + "|#>$"),
              alias: "important"
            },
            content: {
              pattern: /[\s\S]+/,
              inside: o,
              alias: s
            }
          }
        };
      }
      function a(i) {
        var o = n.languages[i], s = "language-" + i;
        return {
          block: {
            pattern: /<#[\s\S]+?#>/,
            inside: {
              directive: r("@", {
                "attr-value": {
                  pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/,
                  inside: {
                    punctuation: /^=|^["']|["']$/
                  }
                },
                keyword: /\b\w+(?=\s)/,
                "attr-name": /\b\w+/
              }),
              expression: r("=", o, s),
              "class-feature": r("\\+", o, s),
              standard: r("", o, s)
            }
          }
        };
      }
      n.languages["t4-templating"] = Object.defineProperty({}, "createT4", {
        value: a
      });
    })(t);
  }
  return hd;
}
var bd, hy;
function n6() {
  if (hy) return bd;
  hy = 1;
  var e = zf(), t = no();
  bd = n, n.displayName = "t4Cs", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), r.languages.t4 = r.languages["t4-cs"] = r.languages["t4-templating"].createT4("csharp");
  }
  return bd;
}
var Ed, by;
function Q1() {
  if (by) return Ed;
  by = 1;
  var e = Y1();
  Ed = t, t.displayName = "vbnet", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.vbnet = n.languages.extend("basic", {
      comment: [
        {
          pattern: /(?:!|REM\b).+/i,
          inside: {
            keyword: /^REM/i
          }
        },
        {
          pattern: /(^|[^\\:])'.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      string: {
        pattern: /(^|[^"])"(?:""|[^"])*"(?!")/,
        lookbehind: !0,
        greedy: !0
      },
      keyword: /(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,
      punctuation: /[,;:(){}]/
    });
  }
  return Ed;
}
var yd, Ey;
function r6() {
  if (Ey) return yd;
  Ey = 1;
  var e = zf(), t = Q1();
  yd = n, n.displayName = "t4Vb", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), r.languages["t4-vb"] = r.languages["t4-templating"].createT4("vbnet");
  }
  return yd;
}
var vd, yy;
function J1() {
  if (yy) return vd;
  yy = 1, vd = e, e.displayName = "yaml", e.aliases = ["yml"];
  function e(t) {
    (function(n) {
      var r = /[*&][^\s[\]{},]+/, a = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/, i = "(?:" + a.source + "(?:[ 	]+" + r.source + ")?|" + r.source + "(?:[ 	]+" + a.source + ")?)", o = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(
        /<PLAIN>/g,
        function() {
          return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
        }
      ), s = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
      function l(u, c) {
        c = (c || "").replace(/m/g, "") + "m";
        var d = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
          return i;
        }).replace(/<<value>>/g, function() {
          return u;
        });
        return RegExp(d, c);
      }
      n.languages.yaml = {
        scalar: {
          pattern: RegExp(
            /([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(
              /<<prop>>/g,
              function() {
                return i;
              }
            )
          ),
          lookbehind: !0,
          alias: "string"
        },
        comment: /#.*/,
        key: {
          pattern: RegExp(
            /((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
              return i;
            }).replace(/<<key>>/g, function() {
              return "(?:" + o + "|" + s + ")";
            })
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "atrule"
        },
        directive: {
          pattern: /(^[ \t]*)%.+/m,
          lookbehind: !0,
          alias: "important"
        },
        datetime: {
          pattern: l(
            /\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source
          ),
          lookbehind: !0,
          alias: "number"
        },
        boolean: {
          pattern: l(/false|true/.source, "i"),
          lookbehind: !0,
          alias: "important"
        },
        null: {
          pattern: l(/null|~/.source, "i"),
          lookbehind: !0,
          alias: "important"
        },
        string: {
          pattern: l(s),
          lookbehind: !0,
          greedy: !0
        },
        number: {
          pattern: l(
            /[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,
            "i"
          ),
          lookbehind: !0
        },
        tag: a,
        important: r,
        punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
      }, n.languages.yml = n.languages.yaml;
    })(t);
  }
  return vd;
}
var Td, vy;
function a6() {
  if (vy) return Td;
  vy = 1;
  var e = J1();
  Td = t, t.displayName = "tap", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.tap = {
      fail: /not ok[^#{\n\r]*/,
      pass: /ok[^#{\n\r]*/,
      pragma: /pragma [+-][a-z]+/,
      bailout: /bail out!.*/i,
      version: /TAP version \d+/i,
      plan: /\b\d+\.\.\d+(?: +#.*)?/,
      subtest: {
        pattern: /# Subtest(?:: .*)?/,
        greedy: !0
      },
      punctuation: /[{}]/,
      directive: /#.*/,
      yamlish: {
        pattern: /(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m,
        lookbehind: !0,
        inside: n.languages.yaml,
        alias: "language-yaml"
      }
    };
  }
  return Td;
}
var Sd, Ty;
function i6() {
  if (Ty) return Sd;
  Ty = 1, Sd = e, e.displayName = "tcl", e.aliases = [];
  function e(t) {
    t.languages.tcl = {
      comment: {
        pattern: /(^|[^\\])#.*/,
        lookbehind: !0
      },
      string: {
        pattern: /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/,
        greedy: !0
      },
      variable: [
        {
          pattern: /(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/,
          lookbehind: !0
        },
        {
          pattern: /(\$)\{[^}]+\}/,
          lookbehind: !0
        },
        {
          pattern: /(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m,
          lookbehind: !0
        }
      ],
      function: {
        pattern: /(^[\t ]*proc[ \t]+)\S+/m,
        lookbehind: !0
      },
      builtin: [
        {
          pattern: /(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m,
          lookbehind: !0
        },
        /\b(?:else|elseif)\b/
      ],
      scope: {
        pattern: /(^[\t ]*)(?:global|upvar|variable)\b/m,
        lookbehind: !0,
        alias: "constant"
      },
      keyword: {
        pattern: /(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,
        lookbehind: !0
      },
      operator: /!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,
      punctuation: /[{}()\[\]]/
    };
  }
  return Sd;
}
var _d, Sy;
function o6() {
  if (Sy) return _d;
  Sy = 1, _d = e, e.displayName = "textile", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source, a = /\)|\((?![^|()\n]+\))/.source;
      function i(m, f) {
        return RegExp(
          m.replace(/<MOD>/g, function() {
            return "(?:" + r + ")";
          }).replace(/<PAR>/g, function() {
            return "(?:" + a + ")";
          }),
          f || ""
        );
      }
      var o = {
        css: {
          pattern: /\{[^{}]+\}/,
          inside: {
            rest: n.languages.css
          }
        },
        "class-id": {
          pattern: /(\()[^()]+(?=\))/,
          lookbehind: !0,
          alias: "attr-value"
        },
        lang: {
          pattern: /(\[)[^\[\]]+(?=\])/,
          lookbehind: !0,
          alias: "attr-value"
        },
        // Anything else is punctuation (the first pattern is for row/col spans inside tables)
        punctuation: /[\\\/]\d+|\S/
      }, s = n.languages.textile = n.languages.extend("markup", {
        phrase: {
          pattern: /(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,
          lookbehind: !0,
          inside: {
            // h1. Header 1
            "block-tag": {
              pattern: i(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),
              inside: {
                modifier: {
                  pattern: i(
                    /(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source
                  ),
                  lookbehind: !0,
                  inside: o
                },
                tag: /^[a-z]\w*/,
                punctuation: /\.$/
              }
            },
            // # List item
            // * List item
            list: {
              pattern: i(/^[*#]+<MOD>*\s+\S.*/.source, "m"),
              inside: {
                modifier: {
                  pattern: i(/(^[*#]+)<MOD>+/.source),
                  lookbehind: !0,
                  inside: o
                },
                punctuation: /^[*#]+/
              }
            },
            // | cell | cell | cell |
            table: {
              // Modifiers can be applied to the row: {color:red}.|1|2|3|
              // or the cell: |{color:red}.1|2|3|
              pattern: i(
                /^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/.source,
                "m"
              ),
              inside: {
                modifier: {
                  // Modifiers for rows after the first one are
                  // preceded by a pipe and a line feed
                  pattern: i(
                    /(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source
                  ),
                  lookbehind: !0,
                  inside: o
                },
                punctuation: /\||^\./
              }
            },
            inline: {
              // eslint-disable-next-line regexp/no-super-linear-backtracking
              pattern: i(
                /(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source
              ),
              lookbehind: !0,
              inside: {
                // Note: superscripts and subscripts are not handled specifically
                // *bold*, **bold**
                bold: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^(\*\*?)<MOD>*).+?(?=\2)/.source),
                  lookbehind: !0
                },
                // _italic_, __italic__
                italic: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^(__?)<MOD>*).+?(?=\2)/.source),
                  lookbehind: !0
                },
                // ??cite??
                cite: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^\?\?<MOD>*).+?(?=\?\?)/.source),
                  lookbehind: !0,
                  alias: "string"
                },
                // @code@
                code: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^@<MOD>*).+?(?=@)/.source),
                  lookbehind: !0,
                  alias: "keyword"
                },
                // +inserted+
                inserted: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^\+<MOD>*).+?(?=\+)/.source),
                  lookbehind: !0
                },
                // -deleted-
                deleted: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^-<MOD>*).+?(?=-)/.source),
                  lookbehind: !0
                },
                // %span%
                span: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^%<MOD>*).+?(?=%)/.source),
                  lookbehind: !0
                },
                modifier: {
                  pattern: i(
                    /(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source
                  ),
                  lookbehind: !0,
                  inside: o
                },
                punctuation: /[*_%?@+\-^~]+/
              }
            },
            // [alias]http://example.com
            "link-ref": {
              pattern: /^\[[^\]]+\]\S+$/m,
              inside: {
                string: {
                  pattern: /(^\[)[^\]]+(?=\])/,
                  lookbehind: !0
                },
                url: {
                  pattern: /(^\])\S+$/,
                  lookbehind: !0
                },
                punctuation: /[\[\]]/
              }
            },
            // "text":http://example.com
            // "text":link-ref
            link: {
              // eslint-disable-next-line regexp/no-super-linear-backtracking
              pattern: i(
                /"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source
              ),
              inside: {
                text: {
                  // eslint-disable-next-line regexp/no-super-linear-backtracking
                  pattern: i(/(^"<MOD>*)[^"]+(?=")/.source),
                  lookbehind: !0
                },
                modifier: {
                  pattern: i(/(^")<MOD>+/.source),
                  lookbehind: !0,
                  inside: o
                },
                url: {
                  pattern: /(:).+/,
                  lookbehind: !0
                },
                punctuation: /[":]/
              }
            },
            // !image.jpg!
            // !image.jpg(Title)!:http://example.com
            image: {
              pattern: i(
                /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source
              ),
              inside: {
                source: {
                  pattern: i(
                    /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source
                  ),
                  lookbehind: !0,
                  alias: "url"
                },
                modifier: {
                  pattern: i(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),
                  lookbehind: !0,
                  inside: o
                },
                url: {
                  pattern: /(:).+/,
                  lookbehind: !0
                },
                punctuation: /[!:]/
              }
            },
            // Footnote[1]
            footnote: {
              pattern: /\b\[\d+\]/,
              alias: "comment",
              inside: {
                punctuation: /\[|\]/
              }
            },
            // CSS(Cascading Style Sheet)
            acronym: {
              pattern: /\b[A-Z\d]+\([^)]+\)/,
              inside: {
                comment: {
                  pattern: /(\()[^()]+(?=\))/,
                  lookbehind: !0
                },
                punctuation: /[()]/
              }
            },
            // Prism(C)
            mark: {
              pattern: /\b\((?:C|R|TM)\)/,
              alias: "comment",
              inside: {
                punctuation: /[()]/
              }
            }
          }
        }
      }), l = s.phrase.inside, u = {
        inline: l.inline,
        link: l.link,
        image: l.image,
        footnote: l.footnote,
        acronym: l.acronym,
        mark: l.mark
      };
      s.tag.pattern = /<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;
      var c = l.inline.inside;
      c.bold.inside = u, c.italic.inside = u, c.inserted.inside = u, c.deleted.inside = u, c.span.inside = u;
      var d = l.table.inside;
      d.inline = u.inline, d.link = u.link, d.image = u.image, d.footnote = u.footnote, d.acronym = u.acronym, d.mark = u.mark;
    })(t);
  }
  return _d;
}
var Ad, _y;
function s6() {
  if (_y) return Ad;
  _y = 1, Ad = e, e.displayName = "toml", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
      function a(i) {
        return i.replace(/__/g, function() {
          return r;
        });
      }
      n.languages.toml = {
        comment: {
          pattern: /#.*/,
          greedy: !0
        },
        table: {
          pattern: RegExp(
            a(
              /(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source
            ),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "class-name"
        },
        key: {
          pattern: RegExp(
            a(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source),
            "m"
          ),
          lookbehind: !0,
          greedy: !0,
          alias: "property"
        },
        string: {
          pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,
          greedy: !0
        },
        date: [
          {
            // Offset Date-Time, Local Date-Time, Local Date
            pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,
            alias: "number"
          },
          {
            // Local Time
            pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,
            alias: "number"
          }
        ],
        number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
        boolean: /\b(?:false|true)\b/,
        punctuation: /[.,=[\]{}]/
      };
    })(t);
  }
  return Ad;
}
var xd, Ay;
function l6() {
  if (Ay) return xd;
  Ay = 1, xd = e, e.displayName = "tremor", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.tremor = {
        comment: {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
          lookbehind: !0
        },
        "interpolated-string": null,
        // see below
        extractor: {
          pattern: /\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,
          greedy: !0,
          inside: {
            regex: {
              pattern: /(^re)\|[\s\S]+/,
              lookbehind: !0
            },
            function: /^\w+/,
            value: /\|[\s\S]+/
          }
        },
        identifier: {
          pattern: /`[^`]*`/,
          greedy: !0
        },
        function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,
        keyword: /\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,
        boolean: /\b(?:false|null|true)\b/i,
        number: /\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,
        "pattern-punctuation": {
          pattern: /%(?=[({[])/,
          alias: "punctuation"
        },
        operator: /[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,
        punctuation: /::|[;\[\]()\{\},.:]/
      };
      var r = /#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;
      n.languages.tremor["interpolated-string"] = {
        pattern: RegExp(
          /(^|[^\\])/.source + '(?:"""(?:' + /[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source + "|" + r + ')*"""|"(?:' + /[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source + "|" + r + ')*")'
        ),
        lookbehind: !0,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: RegExp(r),
            inside: {
              punctuation: /^#\{|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                inside: n.languages.tremor
              }
            }
          },
          string: /[\s\S]+/
        }
      }, n.languages.troy = n.languages.tremor, n.languages.trickle = n.languages.tremor;
    })(t);
  }
  return xd;
}
var Rd, xy;
function u6() {
  if (xy) return Rd;
  xy = 1;
  var e = X1(), t = Hf();
  Rd = n, n.displayName = "tsx", n.aliases = [];
  function n(r) {
    r.register(e), r.register(t), function(a) {
      var i = a.util.clone(a.languages.typescript);
      a.languages.tsx = a.languages.extend("jsx", i), delete a.languages.tsx.parameter, delete a.languages.tsx["literal-property"];
      var o = a.languages.tsx.tag;
      o.pattern = RegExp(
        /(^|[^\w$]|(?=<\/))/.source + "(?:" + o.pattern.source + ")",
        o.pattern.flags
      ), o.lookbehind = !0;
    }(r);
  }
  return Rd;
}
var Id, Ry;
function c6() {
  if (Ry) return Id;
  Ry = 1;
  var e = yn();
  Id = t, t.displayName = "tt2", t.aliases = [];
  function t(n) {
    n.register(e), function(r) {
      r.languages.tt2 = r.languages.extend("clike", {
        comment: /#.*|\[%#[\s\S]*?%\]/,
        keyword: /\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,
        punctuation: /[[\]{},()]/
      }), r.languages.insertBefore("tt2", "number", {
        operator: /=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,
        variable: {
          pattern: /\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i
        }
      }), r.languages.insertBefore("tt2", "keyword", {
        delimiter: {
          pattern: /^(?:\[%|%%)-?|-?%\]$/,
          alias: "punctuation"
        }
      }), r.languages.insertBefore("tt2", "string", {
        "single-quoted-string": {
          pattern: /'[^\\']*(?:\\[\s\S][^\\']*)*'/,
          greedy: !0,
          alias: "string"
        },
        "double-quoted-string": {
          pattern: /"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,
          greedy: !0,
          alias: "string",
          inside: {
            variable: {
              pattern: /\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i
            }
          }
        }
      }), delete r.languages.tt2.string, r.hooks.add("before-tokenize", function(a) {
        var i = /\[%[\s\S]+?%\]/g;
        r.languages["markup-templating"].buildPlaceholders(
          a,
          "tt2",
          i
        );
      }), r.hooks.add("after-tokenize", function(a) {
        r.languages["markup-templating"].tokenizePlaceholders(a, "tt2");
      });
    }(n);
  }
  return Id;
}
var wd, Iy;
function d6() {
  if (Iy) return wd;
  Iy = 1;
  var e = yn();
  wd = t, t.displayName = "twig", t.aliases = [];
  function t(n) {
    n.register(e), n.languages.twig = {
      comment: /^\{#[\s\S]*?#\}$/,
      "tag-name": {
        pattern: /(^\{%-?\s*)\w+/,
        lookbehind: !0,
        alias: "keyword"
      },
      delimiter: {
        pattern: /^\{[{%]-?|-?[%}]\}$/,
        alias: "punctuation"
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        inside: {
          punctuation: /^['"]|['"]$/
        }
      },
      keyword: /\b(?:even|if|odd)\b/,
      boolean: /\b(?:false|null|true)\b/,
      number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
      operator: [
        {
          pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
          lookbehind: !0
        },
        /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
      ],
      punctuation: /[()\[\]{}:.,]/
    }, n.hooks.add("before-tokenize", function(r) {
      if (r.language === "twig") {
        var a = /\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;
        n.languages["markup-templating"].buildPlaceholders(r, "twig", a);
      }
    }), n.hooks.add("after-tokenize", function(r) {
      n.languages["markup-templating"].tokenizePlaceholders(r, "twig");
    });
  }
  return wd;
}
var Cd, wy;
function p6() {
  if (wy) return Cd;
  wy = 1, Cd = e, e.displayName = "typoscript", e.aliases = ["tsconfig"];
  function e(t) {
    (function(n) {
      var r = /\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;
      n.languages.typoscript = {
        comment: [
          {
            // multiline comments /* */
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: !0
          },
          {
            // double-slash comments - ignored when backslashes or colon is found in front
            // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol
            pattern: /(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // hash comments - ignored when leading quote is found for hex colors in strings
            pattern: /(^|[^"'])#.*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        function: [
          {
            // old include style
            pattern: /<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,
            inside: {
              string: {
                pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
                inside: {
                  keyword: r
                }
              },
              keyword: {
                pattern: /INCLUDE_TYPOSCRIPT/
              }
            }
          },
          {
            // new include style
            pattern: /@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/,
            inside: {
              string: /"[^"\r\n]*"|'[^'\r\n]*'/
            }
          }
        ],
        string: {
          pattern: /^([^=]*=[< ]?)(?:(?!\]\n).)*/,
          lookbehind: !0,
          inside: {
            function: /\{\$.*\}/,
            // constants include
            keyword: r,
            number: /^\d+$/,
            punctuation: /[,|:]/
          }
        },
        keyword: r,
        number: {
          // special highlighting for indexes of arrays in tags
          pattern: /\b\d+\s*[.{=]/,
          inside: {
            operator: /[.{=]/
          }
        },
        tag: {
          pattern: /\.?[-\w\\]+\.?/,
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /[{}[\];(),.:|]/,
        operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/
      }, n.languages.tsconfig = n.languages.typoscript;
    })(t);
  }
  return Cd;
}
var kd, Cy;
function f6() {
  if (Cy) return kd;
  Cy = 1, kd = e, e.displayName = "unrealscript", e.aliases = ["uc", "uscript"];
  function e(t) {
    t.languages.unrealscript = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: !0
      },
      category: {
        pattern: /(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/,
        lookbehind: !0,
        greedy: !0,
        alias: "property"
      },
      metadata: {
        pattern: /(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          property: /\b\w+(?=\s*=)/,
          operator: /=/,
          punctuation: /[<>|]/
        }
      },
      macro: {
        pattern: /`\w+/,
        alias: "property"
      },
      "class-name": {
        pattern: /(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/,
        lookbehind: !0
      },
      keyword: /\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      boolean: /\b(?:false|true)\b/,
      number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
      // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html
      operator: />>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,
      punctuation: /[()[\]{};,.]/
    }, t.languages.uc = t.languages.uscript = t.languages.unrealscript;
  }
  return kd;
}
var Nd, ky;
function m6() {
  if (ky) return Nd;
  ky = 1, Nd = e, e.displayName = "uorazor", e.aliases = [];
  function e(t) {
    t.languages.uorazor = {
      "comment-hash": {
        pattern: /#.*/,
        alias: "comment",
        greedy: !0
      },
      "comment-slash": {
        pattern: /\/\/.*/,
        alias: "comment",
        greedy: !0
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        inside: {
          punctuation: /^['"]|['"]$/
        },
        greedy: !0
      },
      "source-layers": {
        pattern: /\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,
        alias: "function"
      },
      "source-commands": {
        pattern: /\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,
        alias: "function"
      },
      "tag-name": {
        pattern: /(^\{%-?\s*)\w+/,
        lookbehind: !0,
        alias: "keyword"
      },
      delimiter: {
        pattern: /^\{[{%]-?|-?[%}]\}$/,
        alias: "punctuation"
      },
      function: /\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,
      keyword: /\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,
      boolean: /\b(?:false|null|true)\b/,
      number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
      operator: [
        {
          pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
          lookbehind: !0
        },
        /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
      ],
      punctuation: /[()\[\]{}:.,]/
    };
  }
  return Nd;
}
var Od, Ny;
function g6() {
  if (Ny) return Od;
  Ny = 1, Od = e, e.displayName = "uri", e.aliases = ["url"];
  function e(t) {
    t.languages.uri = {
      scheme: {
        pattern: /^[a-z][a-z0-9+.-]*:/im,
        greedy: !0,
        inside: {
          "scheme-delimiter": /:$/
        }
      },
      fragment: {
        pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/,
        inside: {
          "fragment-delimiter": /^#/
        }
      },
      query: {
        pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
        inside: {
          "query-delimiter": {
            pattern: /^\?/,
            greedy: !0
          },
          "pair-delimiter": /[&;]/,
          pair: {
            pattern: /^[^=][\s\S]*/,
            inside: {
              key: /^[^=]+/,
              value: {
                pattern: /(^=)[\s\S]+/,
                lookbehind: !0
              }
            }
          }
        }
      },
      authority: {
        pattern: RegExp(
          /^\/\//.source + // [ userinfo "@" ]
          /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source + // host
          ("(?:" + // IP-literal
          /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + // IPv4address or registered name
          /[\w\-.~!$&'()*+,;=%]*/.source + ")") + // [ ":" port ]
          /(?::\d*)?/.source,
          "m"
        ),
        inside: {
          "authority-delimiter": /^\/\//,
          "user-info-segment": {
            pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
            inside: {
              "user-info-delimiter": /@$/,
              "user-info": /^[\w\-.~!$&'()*+,;=%:]+/
            }
          },
          "port-segment": {
            pattern: /:\d*$/,
            inside: {
              "port-delimiter": /^:/,
              port: /^\d+/
            }
          },
          host: {
            pattern: /[\s\S]+/,
            inside: {
              "ip-literal": {
                pattern: /^\[[\s\S]+\]$/,
                inside: {
                  "ip-literal-delimiter": /^\[|\]$/,
                  "ipv-future": /^v[\s\S]+/,
                  "ipv6-address": /^[\s\S]+/
                }
              },
              "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/
            }
          }
        }
      },
      path: {
        pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m,
        inside: {
          "path-separator": /\//
        }
      }
    }, t.languages.url = t.languages.uri;
  }
  return Od;
}
var Ld, Oy;
function h6() {
  if (Oy) return Ld;
  Oy = 1, Ld = e, e.displayName = "v", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = {
        pattern: /[\s\S]+/,
        inside: null
      };
      n.languages.v = n.languages.extend("clike", {
        string: {
          pattern: /r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          alias: "quoted-string",
          greedy: !0,
          inside: {
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,
              lookbehind: !0,
              inside: {
                "interpolation-variable": {
                  pattern: /^\$\w[\s\S]*$/,
                  alias: "variable"
                },
                "interpolation-punctuation": {
                  pattern: /^\$\{|\}$/,
                  alias: "punctuation"
                },
                "interpolation-expression": r
              }
            }
          }
        },
        "class-name": {
          pattern: /(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/,
          lookbehind: !0
        },
        keyword: /(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,
        number: /\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,
        operator: /~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,
        builtin: /\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/
      }), r.inside = n.languages.v, n.languages.insertBefore("v", "string", {
        char: {
          pattern: /`(?:\\`|\\?[^`]{1,2})`/,
          // using {1,2} instead of `u` flag for compatibility
          alias: "rune"
        }
      }), n.languages.insertBefore("v", "operator", {
        attribute: {
          pattern: /(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,
          lookbehind: !0,
          alias: "annotation",
          inside: {
            punctuation: /[\[\]]/,
            keyword: /\w+/
          }
        },
        generic: {
          pattern: /<\w+>(?=\s*[\)\{])/,
          inside: {
            punctuation: /[<>]/,
            "class-name": /\w+/
          }
        }
      }), n.languages.insertBefore("v", "function", {
        "generic-function": {
          // e.g. foo<T>( ...
          pattern: /\b\w+\s*<\w+>(?=\()/,
          inside: {
            function: /^\w+/,
            generic: {
              pattern: /<\w+>/,
              inside: n.languages.v.generic.inside
            }
          }
        }
      });
    })(t);
  }
  return Ld;
}
var Dd, Ly;
function b6() {
  if (Ly) return Dd;
  Ly = 1, Dd = e, e.displayName = "vala", e.aliases = [];
  function e(t) {
    t.languages.vala = t.languages.extend("clike", {
      // Classes copied from prism-csharp
      "class-name": [
        {
          // (Foo bar, Bar baz)
          pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/,
          inside: {
            punctuation: /\./
          }
        },
        {
          // [Foo]
          pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        {
          // class Foo : Bar
          pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        },
        {
          // class Foo
          pattern: /((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,
          lookbehind: !0,
          inside: {
            punctuation: /\./
          }
        }
      ],
      keyword: /\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,
      function: /\b\w+(?=\s*\()/,
      number: /(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,
      operator: /\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,
      punctuation: /[{}[\];(),.:]/,
      constant: /\b[A-Z0-9_]+\b/
    }), t.languages.insertBefore("vala", "string", {
      "raw-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      "template-string": {
        pattern: /@"[\s\S]*?"/,
        greedy: !0,
        inside: {
          interpolation: {
            pattern: /\$(?:\([^)]*\)|[a-zA-Z]\w*)/,
            inside: {
              delimiter: {
                pattern: /^\$\(?|\)$/,
                alias: "punctuation"
              },
              rest: t.languages.vala
            }
          },
          string: /[\s\S]+/
        }
      }
    }), t.languages.insertBefore("vala", "keyword", {
      regex: {
        pattern: /\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,
        greedy: !0,
        inside: {
          "regex-source": {
            pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
            lookbehind: !0,
            alias: "language-regex",
            inside: t.languages.regex
          },
          "regex-delimiter": /^\//,
          "regex-flags": /^[a-z]+$/
        }
      }
    });
  }
  return Dd;
}
var Md, Dy;
function E6() {
  if (Dy) return Md;
  Dy = 1, Md = e, e.displayName = "velocity", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.velocity = n.languages.extend("markup", {});
      var r = {
        variable: {
          pattern: /(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,
          lookbehind: !0,
          inside: {}
          // See below
        },
        string: {
          pattern: /"[^"]*"|'[^']*'/,
          greedy: !0
        },
        number: /\b\d+\b/,
        boolean: /\b(?:false|true)\b/,
        operator: /[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,
        punctuation: /[(){}[\]:,.]/
      };
      r.variable.inside = {
        string: r.string,
        function: {
          pattern: /([^\w-])[a-z][\w-]*(?=\()/,
          lookbehind: !0
        },
        number: r.number,
        boolean: r.boolean,
        punctuation: r.punctuation
      }, n.languages.insertBefore("velocity", "comment", {
        unparsed: {
          pattern: /(^|[^\\])#\[\[[\s\S]*?\]\]#/,
          lookbehind: !0,
          greedy: !0,
          inside: {
            punctuation: /^#\[\[|\]\]#$/
          }
        },
        "velocity-comment": [
          {
            pattern: /(^|[^\\])#\*[\s\S]*?\*#/,
            lookbehind: !0,
            greedy: !0,
            alias: "comment"
          },
          {
            pattern: /(^|[^\\])##.*/,
            lookbehind: !0,
            greedy: !0,
            alias: "comment"
          }
        ],
        directive: {
          pattern: /(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,
          lookbehind: !0,
          inside: {
            keyword: {
              pattern: /^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/,
              inside: {
                punctuation: /[{}]/
              }
            },
            rest: r
          }
        },
        variable: r.variable
      }), n.languages.velocity.tag.inside["attr-value"].inside.rest = n.languages.velocity;
    })(t);
  }
  return Md;
}
var Pd, My;
function y6() {
  if (My) return Pd;
  My = 1, Pd = e, e.displayName = "verilog", e.aliases = [];
  function e(t) {
    t.languages.verilog = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: !0
      },
      string: {
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
        greedy: !0
      },
      "kernel-function": {
        // support for any kernel function (ex: $display())
        pattern: /\B\$\w+\b/,
        alias: "property"
      },
      // support for user defined constants (ex: `define)
      constant: /\B`\w+\b/,
      function: /\b\w+(?=\()/,
      // support for verilog and system verilog keywords
      keyword: /\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,
      // bold highlighting for all verilog and system verilog logic blocks
      important: /\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,
      // support for time ticks, vectors, and real numbers
      number: /\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,
      operator: /[-+{}^~%*\/?=!<>&|]+/,
      punctuation: /[[\];(),.:]/
    };
  }
  return Pd;
}
var Fd, Py;
function v6() {
  if (Py) return Fd;
  Py = 1, Fd = e, e.displayName = "vhdl", e.aliases = [];
  function e(t) {
    t.languages.vhdl = {
      comment: /--.+/,
      // support for all logic vectors
      "vhdl-vectors": {
        pattern: /\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i,
        alias: "number"
      },
      // support for operator overloading included
      "quoted-function": {
        pattern: /"\S+?"(?=\()/,
        alias: "function"
      },
      string: /"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,
      constant: /\b(?:library|use)\b/i,
      // support for predefined attributes included
      keyword: /\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\b/i,
      boolean: /\b(?:false|true)\b/i,
      function: /\w+(?=\()/,
      // decimal, based, physical, and exponential numbers supported
      number: /'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,
      operator: /[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,
      punctuation: /[{}[\];(),.:]/
    };
  }
  return Fd;
}
var Bd, Fy;
function T6() {
  if (Fy) return Bd;
  Fy = 1, Bd = e, e.displayName = "vim", e.aliases = [];
  function e(t) {
    t.languages.vim = {
      string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
      comment: /".*/,
      function: /\b\w+(?=\()/,
      keyword: /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
      builtin: /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
      operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
      punctuation: /[{}[\](),;:]/
    };
  }
  return Bd;
}
var Ud, By;
function S6() {
  if (By) return Ud;
  By = 1, Ud = e, e.displayName = "visualBasic", e.aliases = [];
  function e(t) {
    t.languages["visual-basic"] = {
      comment: {
        pattern: /(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,
        inside: {
          keyword: /^REM/i
        }
      },
      directive: {
        pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,
        alias: "property",
        greedy: !0
      },
      string: {
        pattern: /\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,
        greedy: !0
      },
      date: {
        pattern: /#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,
        alias: "number"
      },
      number: /(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,
      boolean: /\b(?:False|Nothing|True)\b/i,
      keyword: /\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,
      operator: /[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,
      punctuation: /[{}().,:?]/
    }, t.languages.vb = t.languages["visual-basic"], t.languages.vba = t.languages["visual-basic"];
  }
  return Ud;
}
var jd, Uy;
function _6() {
  if (Uy) return jd;
  Uy = 1, jd = e, e.displayName = "warpscript", e.aliases = [];
  function e(t) {
    t.languages.warpscript = {
      comment: /#.*|\/\/.*|\/\*[\s\S]*?\*\//,
      string: {
        pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/,
        greedy: !0
      },
      variable: /\$\S+/,
      macro: {
        pattern: /@\S+/,
        alias: "property"
      },
      // WarpScript doesn't have any keywords, these are all functions under the control category
      // https://www.warp10.io/tags/control
      keyword: /\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,
      number: /[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,
      boolean: /\b(?:F|T|false|true)\b/,
      punctuation: /<%|%>|[{}[\]()]/,
      // Some operators from the "operators" category
      // https://www.warp10.io/tags/operators
      operator: /==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/
    };
  }
  return jd;
}
var Hd, jy;
function A6() {
  if (jy) return Hd;
  jy = 1, Hd = e, e.displayName = "wasm", e.aliases = [];
  function e(t) {
    t.languages.wasm = {
      comment: [
        /\(;[\s\S]*?;\)/,
        {
          pattern: /;;.*/,
          greedy: !0
        }
      ],
      string: {
        pattern: /"(?:\\[\s\S]|[^"\\])*"/,
        greedy: !0
      },
      keyword: [
        {
          pattern: /\b(?:align|offset)=/,
          inside: {
            operator: /=/
          }
        },
        {
          pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
          inside: {
            punctuation: /\./
          }
        },
        /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/
      ],
      variable: /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
      number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
      punctuation: /[()]/
    };
  }
  return Hd;
}
var qd, Hy;
function x6() {
  if (Hy) return qd;
  Hy = 1, qd = e, e.displayName = "webIdl", e.aliases = [];
  function e(t) {
    (function(n) {
      var r = /(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source, a = "(?:" + /\b(?:unsigned\s+)?long\s+long(?![\w-])/.source + "|" + /\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source + "|" + /(?!(?:unrestricted|unsigned)\b)/.source + r + /(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + ")" + /(?:\s*\?)?/.source, i = {};
      n.languages["web-idl"] = {
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
          greedy: !0
        },
        string: {
          pattern: /"[^"]*"/,
          greedy: !0
        },
        namespace: {
          pattern: RegExp(/(\bnamespace\s+)/.source + r),
          lookbehind: !0
        },
        "class-name": [
          {
            pattern: /(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/,
            lookbehind: !0,
            inside: i
          },
          {
            pattern: RegExp(
              /(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source + a
            ),
            lookbehind: !0,
            inside: i
          },
          {
            // callback return type
            pattern: RegExp(
              "(" + /\bcallback\s+/.source + r + /\s*=\s*/.source + ")" + a
            ),
            lookbehind: !0,
            inside: i
          },
          {
            // typedef
            pattern: RegExp(/(\btypedef\b\s*)/.source + a),
            lookbehind: !0,
            inside: i
          },
          {
            pattern: RegExp(
              /(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source + r
            ),
            lookbehind: !0
          },
          {
            // inheritance
            pattern: RegExp(/(:\s*)/.source + r),
            lookbehind: !0
          },
          // includes and implements
          RegExp(r + /(?=\s+(?:implements|includes)\b)/.source),
          {
            pattern: RegExp(/(\b(?:implements|includes)\s+)/.source + r),
            lookbehind: !0
          },
          {
            // function return type, parameter types, and dictionary members
            pattern: RegExp(
              a + "(?=" + /\s*(?:\.{3}\s*)?/.source + r + /\s*[(),;=]/.source + ")"
            ),
            inside: i
          }
        ],
        builtin: /\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,
        keyword: [
          /\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,
          // type keywords
          /\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/
        ],
        boolean: /\b(?:false|true)\b/,
        number: {
          pattern: /(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i,
          lookbehind: !0
        },
        operator: /\.{3}|[=:?<>-]/,
        punctuation: /[(){}[\].,;]/
      };
      for (var o in n.languages["web-idl"])
        o !== "class-name" && (i[o] = n.languages["web-idl"][o]);
      n.languages.webidl = n.languages["web-idl"];
    })(t);
  }
  return qd;
}
var $d, qy;
function R6() {
  if (qy) return $d;
  qy = 1, $d = e, e.displayName = "wiki", e.aliases = [];
  function e(t) {
    t.languages.wiki = t.languages.extend("markup", {
      "block-comment": {
        pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
        lookbehind: !0,
        alias: "comment"
      },
      heading: {
        pattern: /^(=+)[^=\r\n].*?\1/m,
        inside: {
          punctuation: /^=+|=+$/,
          important: /.+/
        }
      },
      emphasis: {
        // TODO Multi-line
        pattern: /('{2,5}).+?\1/,
        inside: {
          "bold-italic": {
            pattern: /(''''').+?(?=\1)/,
            lookbehind: !0,
            alias: ["bold", "italic"]
          },
          bold: {
            pattern: /(''')[^'](?:.*?[^'])?(?=\1)/,
            lookbehind: !0
          },
          italic: {
            pattern: /('')[^'](?:.*?[^'])?(?=\1)/,
            lookbehind: !0
          },
          punctuation: /^''+|''+$/
        }
      },
      hr: {
        pattern: /^-{4,}/m,
        alias: "punctuation"
      },
      url: [
        /ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i,
        /\[\[.+?\]\]|\[.+?\]/
      ],
      variable: [
        /__[A-Z]+__/,
        // FIXME Nested structures should be handled
        // {{formatnum:{{#expr:{{{3}}}}}}}
        /\{{3}.+?\}{3}/,
        /\{\{.+?\}\}/
      ],
      symbol: [/^#redirect/im, /~{3,5}/],
      // Handle table attrs:
      // {|
      // ! style="text-align:left;"| Item
      // |}
      "table-tag": {
        pattern: /((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,
        lookbehind: !0,
        inside: {
          "table-bar": {
            pattern: /\|$/,
            alias: "punctuation"
          },
          rest: t.languages.markup.tag.inside
        }
      },
      punctuation: /^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m
    }), t.languages.insertBefore("wiki", "tag", {
      // Prevent highlighting inside <nowiki>, <source> and <pre> tags
      nowiki: {
        pattern: /<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,
        inside: {
          tag: {
            pattern: /<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i,
            inside: t.languages.markup.tag.inside
          }
        }
      }
    });
  }
  return $d;
}
var zd, $y;
function I6() {
  if ($y) return zd;
  $y = 1, zd = e, e.displayName = "wolfram", e.aliases = ["mathematica", "wl", "nb"];
  function e(t) {
    t.languages.wolfram = {
      // Allow one level of nesting - note: regex taken from applescipt
      comment: /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"/,
        greedy: !0
      },
      keyword: /\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,
      context: {
        pattern: /\b\w+`+\w*/,
        alias: "class-name"
      },
      blank: {
        pattern: /\b\w+_\b/,
        alias: "regex"
      },
      "global-variable": {
        pattern: /\$\w+/,
        alias: "variable"
      },
      boolean: /\b(?:False|True)\b/,
      number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
      operator: /\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\^|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
      punctuation: /[{}[\];(),.:]/
    }, t.languages.mathematica = t.languages.wolfram, t.languages.wl = t.languages.wolfram, t.languages.nb = t.languages.wolfram;
  }
  return zd;
}
var Gd, zy;
function w6() {
  if (zy) return Gd;
  zy = 1, Gd = e, e.displayName = "wren", e.aliases = [];
  function e(t) {
    t.languages.wren = {
      // Multiline comments in Wren can have nested multiline comments
      // Comments: // and /* */
      comment: [
        {
          // support 3 levels of nesting
          // regex: \/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\/
          pattern: /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//,
          greedy: !0
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: !0,
          greedy: !0
        }
      ],
      // Triple quoted strings are multiline but cannot have interpolation (raw strings)
      // Based on prism-python.js
      "triple-quoted-string": {
        pattern: /"""[\s\S]*?"""/,
        greedy: !0,
        alias: "string"
      },
      // see below
      "string-literal": null,
      // #!/usr/bin/env wren on the first line
      hashbang: {
        pattern: /^#!\/.+/,
        greedy: !0,
        alias: "comment"
      },
      // Attributes are special keywords to add meta data to classes
      attribute: {
        // #! attributes are stored in class properties
        // #!myvar = true
        // #attributes are not stored and dismissed at compilation
        pattern: /#!?[ \t\u3000]*\w+/,
        alias: "keyword"
      },
      "class-name": [
        {
          // class definition
          // class Meta {}
          pattern: /(\bclass\s+)\w+/,
          lookbehind: !0
        },
        // A class must always start with an uppercase.
        // File.read
        /\b[A-Z][a-z\d_]*\b/
      ],
      // A constant can be a variable, class, property or method. Just named in all uppercase letters
      constant: /\b[A-Z][A-Z\d_]*\b/,
      null: {
        pattern: /\bnull\b/,
        alias: "keyword"
      },
      keyword: /\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
      // Functions can be Class.method()
      function: /\b[a-z_]\w*(?=\s*[({])/i,
      operator: /<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,
      punctuation: /[\[\](){}.,;]/
    }, t.languages.wren["string-literal"] = {
      // A single quote string is multiline and can have interpolation (similar to JS backticks ``)
      pattern: /(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,
      lookbehind: !0,
      greedy: !0,
      inside: {
        interpolation: {
          // "%(interpolation)"
          pattern: /((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,
          lookbehind: !0,
          inside: {
            expression: {
              pattern: /^(%\()[\s\S]+(?=\)$)/,
              lookbehind: !0,
              inside: t.languages.wren
            },
            "interpolation-punctuation": {
              pattern: /^%\(|\)$/,
              alias: "punctuation"
            }
          }
        },
        string: /[\s\S]+/
      }
    };
  }
  return Gd;
}
var Vd, Gy;
function C6() {
  if (Gy) return Vd;
  Gy = 1, Vd = e, e.displayName = "xeora", e.aliases = ["xeoracube"];
  function e(t) {
    (function(n) {
      n.languages.xeora = n.languages.extend("markup", {
        constant: {
          pattern: /\$(?:DomainContents|PageRenderDuration)\$/,
          inside: {
            punctuation: {
              pattern: /\$/
            }
          }
        },
        variable: {
          pattern: /\$@?(?:#+|[-+*~=^])?[\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /[$.]/
            },
            operator: {
              pattern: /#+|[-+*~=^@]/
            }
          }
        },
        "function-inline": {
          pattern: /\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,
          inside: {
            variable: {
              pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,
              inside: {
                punctuation: {
                  pattern: /[,.|]/
                },
                operator: {
                  pattern: /#+|[-+*~=^@]/
                }
              }
            },
            punctuation: {
              pattern: /\$\w:|[$:?.,|]/
            }
          },
          alias: "function"
        },
        "function-block": {
          pattern: /\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,
          inside: {
            punctuation: {
              pattern: /[$:{}?.,|]/
            }
          },
          alias: "function"
        },
        "directive-inline": {
          pattern: /\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
              inside: {
                tag: {
                  pattern: /#\d/
                }
              }
            }
          },
          alias: "function"
        },
        "directive-block-open": {
          pattern: /\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,
          inside: {
            punctuation: {
              pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
              inside: {
                tag: {
                  pattern: /#\d/
                }
              }
            },
            attribute: {
              pattern: /![A-Z]+$/,
              inside: {
                punctuation: {
                  pattern: /!/
                }
              },
              alias: "keyword"
            }
          },
          alias: "function"
        },
        "directive-block-separator": {
          pattern: /\}:[-\w.]+:\{/,
          inside: {
            punctuation: {
              pattern: /[:{}]/
            }
          },
          alias: "function"
        },
        "directive-block-close": {
          pattern: /\}:[-\w.]+\$/,
          inside: {
            punctuation: {
              pattern: /[:{}$]/
            }
          },
          alias: "function"
        }
      }), n.languages.insertBefore(
        "inside",
        "punctuation",
        {
          variable: n.languages.xeora["function-inline"].inside.variable
        },
        n.languages.xeora["function-block"]
      ), n.languages.xeoracube = n.languages.xeora;
    })(t);
  }
  return Vd;
}
var Wd, Vy;
function k6() {
  if (Vy) return Wd;
  Vy = 1, Wd = e, e.displayName = "xmlDoc", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(s, l) {
        n.languages[s] && n.languages.insertBefore(s, "comment", {
          "doc-comment": l
        });
      }
      var a = n.languages.markup.tag, i = {
        pattern: /\/\/\/.*/,
        greedy: !0,
        alias: "comment",
        inside: {
          tag: a
        }
      }, o = {
        pattern: /'''.*/,
        greedy: !0,
        alias: "comment",
        inside: {
          tag: a
        }
      };
      r("csharp", i), r("fsharp", i), r("vbnet", o);
    })(t);
  }
  return Wd;
}
var Yd, Wy;
function N6() {
  if (Wy) return Yd;
  Wy = 1, Yd = e, e.displayName = "xojo", e.aliases = [];
  function e(t) {
    t.languages.xojo = {
      comment: {
        pattern: /(?:'|\/\/|Rem\b).+/i,
        greedy: !0
      },
      string: {
        pattern: /"(?:""|[^"])*"/,
        greedy: !0
      },
      number: [/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i, /&[bchou][a-z\d]+/i],
      directive: {
        pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\b/i,
        alias: "property"
      },
      keyword: /\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,
      operator: /<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,
      punctuation: /[.,;:()]/
    };
  }
  return Yd;
}
var Kd, Yy;
function O6() {
  if (Yy) return Kd;
  Yy = 1, Kd = e, e.displayName = "xquery", e.aliases = [];
  function e(t) {
    (function(n) {
      n.languages.xquery = n.languages.extend("markup", {
        "xquery-comment": {
          pattern: /\(:[\s\S]*?:\)/,
          greedy: !0,
          alias: "comment"
        },
        string: {
          pattern: /(["'])(?:\1\1|(?!\1)[\s\S])*\1/,
          greedy: !0
        },
        extension: {
          pattern: /\(#.+?#\)/,
          alias: "symbol"
        },
        variable: /\$[-\w:]+/,
        axis: {
          pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,
          lookbehind: !0,
          alias: "operator"
        },
        "keyword-operator": {
          pattern: /(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,
          lookbehind: !0,
          alias: "operator"
        },
        keyword: {
          pattern: /(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,
          lookbehind: !0
        },
        function: /[\w-]+(?::[\w-]+)*(?=\s*\()/,
        "xquery-element": {
          pattern: /(element\s+)[\w-]+(?::[\w-]+)*/,
          lookbehind: !0,
          alias: "tag"
        },
        "xquery-attribute": {
          pattern: /(attribute\s+)[\w-]+(?::[\w-]+)*/,
          lookbehind: !0,
          alias: "attr-name"
        },
        builtin: {
          pattern: /(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,
          lookbehind: !0
        },
        number: /\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,
        operator: [
          /[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/,
          {
            pattern: /(\s)-(?=\s)/,
            lookbehind: !0
          }
        ],
        punctuation: /[[\](){},;:/]/
      }), n.languages.xquery.tag.pattern = /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/, n.languages.xquery.tag.inside["attr-value"].pattern = /=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/, n.languages.xquery.tag.inside["attr-value"].inside.punctuation = /^="|"$/, n.languages.xquery.tag.inside["attr-value"].inside.expression = {
        // Allow for two levels of nesting
        pattern: /\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,
        inside: n.languages.xquery,
        alias: "language-xquery"
      };
      var r = function(i) {
        return typeof i == "string" ? i : typeof i.content == "string" ? i.content : i.content.map(r).join("");
      }, a = function(i) {
        for (var o = [], s = 0; s < i.length; s++) {
          var l = i[s], u = !1;
          if (typeof l != "string" && (l.type === "tag" && l.content[0] && l.content[0].type === "tag" ? l.content[0].content[0].content === "</" ? o.length > 0 && o[o.length - 1].tagName === r(l.content[0].content[1]) && o.pop() : l.content[l.content.length - 1].content === "/>" || o.push({
            tagName: r(l.content[0].content[1]),
            openedBraces: 0
          }) : o.length > 0 && l.type === "punctuation" && l.content === "{" && // Ignore `{{`
          (!i[s + 1] || i[s + 1].type !== "punctuation" || i[s + 1].content !== "{") && (!i[s - 1] || i[s - 1].type !== "plain-text" || i[s - 1].content !== "{") ? o[o.length - 1].openedBraces++ : o.length > 0 && o[o.length - 1].openedBraces > 0 && l.type === "punctuation" && l.content === "}" ? o[o.length - 1].openedBraces-- : l.type !== "comment" && (u = !0)), (u || typeof l == "string") && o.length > 0 && o[o.length - 1].openedBraces === 0) {
            var c = r(l);
            s < i.length - 1 && (typeof i[s + 1] == "string" || i[s + 1].type === "plain-text") && (c += r(i[s + 1]), i.splice(s + 1, 1)), s > 0 && (typeof i[s - 1] == "string" || i[s - 1].type === "plain-text") && (c = r(i[s - 1]) + c, i.splice(s - 1, 1), s--), /^\s+$/.test(c) ? i[s] = c : i[s] = new n.Token(
              "plain-text",
              c,
              null,
              c
            );
          }
          l.content && typeof l.content != "string" && a(l.content);
        }
      };
      n.hooks.add("after-tokenize", function(i) {
        i.language === "xquery" && a(i.tokens);
      });
    })(t);
  }
  return Kd;
}
var Xd, Ky;
function L6() {
  if (Ky) return Xd;
  Ky = 1, Xd = e, e.displayName = "yang", e.aliases = [];
  function e(t) {
    t.languages.yang = {
      // https://tools.ietf.org/html/rfc6020#page-34
      // http://www.yang-central.org/twiki/bin/view/Main/YangExamples
      comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
      string: {
        pattern: /"(?:[^\\"]|\\.)*"|'[^']*'/,
        greedy: !0
      },
      keyword: {
        pattern: /(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i,
        lookbehind: !0
      },
      namespace: {
        pattern: /(\s)[a-z_][\w.-]*(?=:)/i,
        lookbehind: !0
      },
      boolean: /\b(?:false|true)\b/,
      operator: /\+/,
      punctuation: /[{};:]/
    };
  }
  return Xd;
}
var Zd, Xy;
function D6() {
  if (Xy) return Zd;
  Xy = 1, Zd = e, e.displayName = "zig", e.aliases = [];
  function e(t) {
    (function(n) {
      function r(c) {
        return function() {
          return c;
        };
      }
      var a = /\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/, i = "\\b(?!" + a.source + ")(?!\\d)\\w+\\b", o = /align\s*\((?:[^()]|\([^()]*\))*\)/.source, s = /(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(
        /<ALIGN>/g,
        r(o)
      ), l = /(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(
        /<ID>/g,
        r(i)
      ), u = "(?!\\s)(?:!?\\s*(?:" + s + "\\s*)*" + l + ")+";
      n.languages.zig = {
        comment: [
          {
            pattern: /\/\/[/!].*/,
            alias: "doc-comment"
          },
          /\/{2}.*/
        ],
        string: [
          {
            // "string" and c"string"
            pattern: /(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/,
            lookbehind: !0,
            greedy: !0
          },
          {
            // multiline strings and c-strings
            pattern: /([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/,
            lookbehind: !0,
            greedy: !0
          }
        ],
        char: {
          // characters 'a', '\n', '\xFF', '\u{10FFFF}'
          pattern: /(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/,
          lookbehind: !0,
          greedy: !0
        },
        builtin: /\B@(?!\d)\w+(?=\s*\()/,
        label: {
          pattern: /(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/,
          lookbehind: !0
        },
        "class-name": [
          // const Foo = struct {};
          /\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,
          {
            // const x: i32 = 9;
            // var x: Bar;
            // fn foo(x: bool, y: f32) void {}
            pattern: RegExp(
              /(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g, r(u)).replace(/<ALIGN>/g, r(o))
            ),
            lookbehind: !0,
            inside: null
            // see below
          },
          {
            // extern fn foo(x: f64) f64; (optional alignment)
            pattern: RegExp(
              /(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g, r(u)).replace(/<ALIGN>/g, r(o))
            ),
            lookbehind: !0,
            inside: null
            // see below
          }
        ],
        "builtin-type": {
          pattern: /\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,
          alias: "keyword"
        },
        keyword: a,
        function: /\b(?!\d)\w+(?=\s*\()/,
        number: /\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,
        boolean: /\b(?:false|true)\b/,
        operator: /\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,
        punctuation: /[.:,;(){}[\]]/
      }, n.languages.zig["class-name"].forEach(function(c) {
        c.inside === null && (c.inside = n.languages.zig);
      });
    })(t);
  }
  return Zd;
}
var F = q3, M6 = F;
F.register(J3());
F.register(eM());
F.register(tM());
F.register(nM());
F.register(rM());
F.register(aM());
F.register(iM());
F.register(oM());
F.register(sM());
F.register(lM());
F.register(uM());
F.register(cM());
F.register(dM());
F.register(pM());
F.register(fM());
F.register(mM());
F.register(gM());
F.register(hM());
F.register(bM());
F.register(EM());
F.register(yM());
F.register(vM());
F.register(W1());
F.register(Y1());
F.register(TM());
F.register(SM());
F.register(_M());
F.register(AM());
F.register(xM());
F.register(RM());
F.register(IM());
F.register(wM());
F.register(CM());
F.register(kM());
F.register(Mr());
F.register(NM());
F.register(OM());
F.register(LM());
F.register(DM());
F.register(MM());
F.register(PM());
F.register(FM());
F.register(BM());
F.register(UM());
F.register(Bf());
F.register(jM());
F.register(no());
F.register(HM());
F.register(qM());
F.register($M());
F.register(zM());
F.register(GM());
F.register(VM());
F.register(WM());
F.register(YM());
F.register(KM());
F.register(XM());
F.register(ZM());
F.register(QM());
F.register(JM());
F.register(eP());
F.register(tP());
F.register(nP());
F.register(rP());
F.register(aP());
F.register(iP());
F.register(oP());
F.register(sP());
F.register(lP());
F.register(uP());
F.register(cP());
F.register(dP());
F.register(pP());
F.register(fP());
F.register(mP());
F.register(gP());
F.register(hP());
F.register(bP());
F.register(EP());
F.register(yP());
F.register(vP());
F.register(TP());
F.register(SP());
F.register(_P());
F.register(AP());
F.register(xP());
F.register(RP());
F.register(IP());
F.register(wP());
F.register(CP());
F.register(kP());
F.register(NP());
F.register(OP());
F.register(LP());
F.register(Uf());
F.register(DP());
F.register(MP());
F.register(PP());
F.register(FP());
F.register(BP());
F.register(UP());
F.register(jP());
F.register(HP());
F.register(qP());
F.register($P());
F.register(zP());
F.register(GP());
F.register(VP());
F.register(WP());
F.register(YP());
F.register(KP());
F.register(XP());
F.register(jf());
F.register(ZP());
F.register(ao());
F.register(QP());
F.register(JP());
F.register(eF());
F.register(tF());
F.register(nF());
F.register(rF());
F.register(aF());
F.register(qf());
F.register(iF());
F.register(oF());
F.register(sF());
F.register(X1());
F.register(lF());
F.register(uF());
F.register(cF());
F.register(dF());
F.register(pF());
F.register(fF());
F.register(mF());
F.register(gF());
F.register(hF());
F.register(bF());
F.register(EF());
F.register(yF());
F.register(vF());
F.register(TF());
F.register(SF());
F.register(_F());
F.register(K1());
F.register(AF());
F.register(xF());
F.register(RF());
F.register(yn());
F.register(IF());
F.register(wF());
F.register(CF());
F.register(kF());
F.register(NF());
F.register(OF());
F.register(LF());
F.register(DF());
F.register(MF());
F.register(PF());
F.register(FF());
F.register(BF());
F.register(UF());
F.register(jF());
F.register(HF());
F.register(qF());
F.register($F());
F.register(zF());
F.register(GF());
F.register(VF());
F.register(WF());
F.register(YF());
F.register(KF());
F.register(XF());
F.register(ZF());
F.register(QF());
F.register(JF());
F.register(e4());
F.register(t4());
F.register(n4());
F.register(r4());
F.register(a4());
F.register(io());
F.register(i4());
F.register(o4());
F.register(s4());
F.register(l4());
F.register(u4());
F.register(c4());
F.register(d4());
F.register(p4());
F.register(f4());
F.register(m4());
F.register(g4());
F.register(h4());
F.register(b4());
F.register(E4());
F.register(y4());
F.register(v4());
F.register(T4());
F.register(S4());
F.register(_4());
F.register(A4());
F.register(x4());
F.register(R4());
F.register(I4());
F.register(w4());
F.register(C4());
F.register(k4());
F.register(N4());
F.register(O4());
F.register(L4());
F.register(D4());
F.register(ro());
F.register(M4());
F.register(P4());
F.register(F4());
F.register(B4());
F.register($f());
F.register(U4());
F.register(j4());
F.register(H4());
F.register(q4());
F.register($4());
F.register(z4());
F.register(G4());
F.register(V4());
F.register(W4());
F.register(Y4());
F.register(K4());
F.register(X4());
F.register(Ff());
F.register(Z4());
F.register(Q4());
F.register(J4());
F.register(e6());
F.register(t6());
F.register(n6());
F.register(zf());
F.register(r6());
F.register(a6());
F.register(i6());
F.register(o6());
F.register(s6());
F.register(l6());
F.register(u6());
F.register(c6());
F.register(Z1());
F.register(d6());
F.register(Hf());
F.register(p6());
F.register(f6());
F.register(m6());
F.register(g6());
F.register(h6());
F.register(b6());
F.register(Q1());
F.register(E6());
F.register(y6());
F.register(v6());
F.register(T6());
F.register(S6());
F.register(_6());
F.register(A6());
F.register(x6());
F.register(R6());
F.register(I6());
F.register(w6());
F.register(C6());
F.register(k6());
F.register(N6());
F.register(O6());
F.register(J1());
F.register(L6());
F.register(D6());
const P6 = /* @__PURE__ */ pr(M6);
var eS = OO(P6, Q3);
eS.supportedLanguages = LO;
const F6 = {
  'pre[class*="language-"]': {
    color: "#d4d4d4",
    fontSize: "13px",
    textShadow: "none",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace',
    direction: "ltr",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none",
    padding: "1em",
    margin: ".5em 0",
    overflow: "auto",
    background: "#1e1e1e"
  },
  'code[class*="language-"]': {
    color: "#d4d4d4",
    fontSize: "13px",
    textShadow: "none",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace',
    direction: "ltr",
    textAlign: "left",
    whiteSpace: "pre",
    wordSpacing: "normal",
    wordBreak: "normal",
    lineHeight: "1.5",
    MozTabSize: "4",
    OTabSize: "4",
    tabSize: "4",
    WebkitHyphens: "none",
    MozHyphens: "none",
    msHyphens: "none",
    hyphens: "none"
  },
  'pre[class*="language-"]::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'code[class*="language-"]::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'pre[class*="language-"] *::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  'code[class*="language-"] *::selection': {
    textShadow: "none",
    background: "#264F78"
  },
  ':not(pre) > code[class*="language-"]': {
    padding: ".1em .3em",
    borderRadius: ".3em",
    color: "#db4c69",
    background: "#1e1e1e"
  },
  ".namespace": {
    Opacity: ".7"
  },
  "doctype.doctype-tag": {
    color: "#569CD6"
  },
  "doctype.name": {
    color: "#9cdcfe"
  },
  comment: {
    color: "#6a9955"
  },
  prolog: {
    color: "#6a9955"
  },
  punctuation: {
    color: "#d4d4d4"
  },
  ".language-html .language-css .token.punctuation": {
    color: "#d4d4d4"
  },
  ".language-html .language-javascript .token.punctuation": {
    color: "#d4d4d4"
  },
  property: {
    color: "#9cdcfe"
  },
  tag: {
    color: "#569cd6"
  },
  boolean: {
    color: "#569cd6"
  },
  number: {
    color: "#b5cea8"
  },
  constant: {
    color: "#9cdcfe"
  },
  symbol: {
    color: "#b5cea8"
  },
  inserted: {
    color: "#b5cea8"
  },
  unit: {
    color: "#b5cea8"
  },
  selector: {
    color: "#d7ba7d"
  },
  "attr-name": {
    color: "#9cdcfe"
  },
  string: {
    color: "#ce9178"
  },
  char: {
    color: "#ce9178"
  },
  builtin: {
    color: "#ce9178"
  },
  deleted: {
    color: "#ce9178"
  },
  ".language-css .token.string.url": {
    textDecoration: "underline"
  },
  operator: {
    color: "#d4d4d4"
  },
  entity: {
    color: "#569cd6"
  },
  "operator.arrow": {
    color: "#569CD6"
  },
  atrule: {
    color: "#ce9178"
  },
  "atrule.rule": {
    color: "#c586c0"
  },
  "atrule.url": {
    color: "#9cdcfe"
  },
  "atrule.url.function": {
    color: "#dcdcaa"
  },
  "atrule.url.punctuation": {
    color: "#d4d4d4"
  },
  keyword: {
    color: "#569CD6"
  },
  "keyword.module": {
    color: "#c586c0"
  },
  "keyword.control-flow": {
    color: "#c586c0"
  },
  function: {
    color: "#dcdcaa"
  },
  "function.maybe-class-name": {
    color: "#dcdcaa"
  },
  regex: {
    color: "#d16969"
  },
  important: {
    color: "#569cd6"
  },
  italic: {
    fontStyle: "italic"
  },
  "class-name": {
    color: "#4ec9b0"
  },
  "maybe-class-name": {
    color: "#4ec9b0"
  },
  console: {
    color: "#9cdcfe"
  },
  parameter: {
    color: "#9cdcfe"
  },
  interpolation: {
    color: "#9cdcfe"
  },
  "punctuation.interpolation-punctuation": {
    color: "#569cd6"
  },
  variable: {
    color: "#9cdcfe"
  },
  "imports.maybe-class-name": {
    color: "#9cdcfe"
  },
  "exports.maybe-class-name": {
    color: "#9cdcfe"
  },
  escape: {
    color: "#d7ba7d"
  },
  "tag.punctuation": {
    color: "#808080"
  },
  cdata: {
    color: "#808080"
  },
  "attr-value": {
    color: "#ce9178"
  },
  "attr-value.punctuation": {
    color: "#ce9178"
  },
  "attr-value.punctuation.attr-equals": {
    color: "#d4d4d4"
  },
  namespace: {
    color: "#4ec9b0"
  },
  'pre[class*="language-javascript"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-javascript"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-jsx"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-jsx"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-typescript"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-typescript"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-tsx"]': {
    color: "#9cdcfe"
  },
  'code[class*="language-tsx"]': {
    color: "#9cdcfe"
  },
  'pre[class*="language-css"]': {
    color: "#ce9178"
  },
  'code[class*="language-css"]': {
    color: "#ce9178"
  },
  'pre[class*="language-html"]': {
    color: "#d4d4d4"
  },
  'code[class*="language-html"]': {
    color: "#d4d4d4"
  },
  ".language-regex .token.anchor": {
    color: "#dcdcaa"
  },
  ".language-html .token.punctuation": {
    color: "#808080"
  },
  'pre[class*="language-"] > code[class*="language-"]': {
    position: "relative",
    zIndex: "1"
  },
  ".line-highlight.line-highlight": {
    background: "#f7ebc6",
    boxShadow: "inset 5px 0 0 #f7d87c",
    zIndex: "0"
  }
}, B6 = ({ content: e, className: t, ...n }) => {
  const [r, a] = Jt(!1), i = ft((o) => {
    o.preventDefault(), navigator.clipboard.writeText(e), a(!0), setTimeout(() => a(!1), 3e3);
  }, [e]);
  return /* @__PURE__ */ Y.jsx("div", { className: `items-center flex flex-row text-xs ${t}`, onClick: i, ...n, children: r ? /* @__PURE__ */ Y.jsx(gx, { className: "h-4 ml-2 text-green animate-fadeIn" }) : /* @__PURE__ */ Y.jsx(bx, { className: "h-4 ml-2" }) });
};
class ti {
  /**
   * @param {SchemaType['property']} property
   *   Property.
   * @param {SchemaType['normal']} normal
   *   Normal.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Schema.
   */
  constructor(t, n, r) {
    this.normal = n, this.property = t, r && (this.space = r);
  }
}
ti.prototype.normal = {};
ti.prototype.property = {};
ti.prototype.space = void 0;
function tS(e, t) {
  const n = {}, r = {};
  for (const a of e)
    Object.assign(n, a.property), Object.assign(r, a.normal);
  return new ti(n, r, t);
}
function za(e) {
  return e.toLowerCase();
}
class vn {
  /**
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @returns
   *   Info.
   */
  constructor(t, n) {
    this.attribute = n, this.property = t;
  }
}
vn.prototype.attribute = "";
vn.prototype.booleanish = !1;
vn.prototype.boolean = !1;
vn.prototype.commaOrSpaceSeparated = !1;
vn.prototype.commaSeparated = !1;
vn.prototype.defined = !1;
vn.prototype.mustUseProperty = !1;
vn.prototype.number = !1;
vn.prototype.overloadedBoolean = !1;
vn.prototype.property = "";
vn.prototype.spaceSeparated = !1;
vn.prototype.space = void 0;
let U6 = 0;
const We = Pr(), Pt = Pr(), nS = Pr(), Ae = Pr(), pt = Pr(), ea = Pr(), _n = Pr();
function Pr() {
  return 2 ** ++U6;
}
const Mp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: We,
  booleanish: Pt,
  commaOrSpaceSeparated: _n,
  commaSeparated: ea,
  number: Ae,
  overloadedBoolean: nS,
  spaceSeparated: pt
}, Symbol.toStringTag, { value: "Module" })), Qd = (
  /** @type {ReadonlyArray<keyof typeof types>} */
  Object.keys(Mp)
);
class Gf extends vn {
  /**
   * @constructor
   * @param {string} property
   *   Property.
   * @param {string} attribute
   *   Attribute.
   * @param {number | null | undefined} [mask]
   *   Mask.
   * @param {Space | undefined} [space]
   *   Space.
   * @returns
   *   Info.
   */
  constructor(t, n, r, a) {
    let i = -1;
    if (super(t, n), Zy(this, "space", a), typeof r == "number")
      for (; ++i < Qd.length; ) {
        const o = Qd[i];
        Zy(this, Qd[i], (r & Mp[o]) === Mp[o]);
      }
  }
}
Gf.prototype.defined = !0;
function Zy(e, t, n) {
  n && (e[t] = n);
}
function ua(e) {
  const t = {}, n = {};
  for (const [r, a] of Object.entries(e.properties)) {
    const i = new Gf(
      r,
      e.transform(e.attributes || {}, r),
      a,
      e.space
    );
    e.mustUseProperty && e.mustUseProperty.includes(r) && (i.mustUseProperty = !0), t[r] = i, n[za(r)] = r, n[za(i.attribute)] = r;
  }
  return new ti(t, n, e.space);
}
const rS = ua({
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: Pt,
    ariaAutoComplete: null,
    ariaBusy: Pt,
    ariaChecked: Pt,
    ariaColCount: Ae,
    ariaColIndex: Ae,
    ariaColSpan: Ae,
    ariaControls: pt,
    ariaCurrent: null,
    ariaDescribedBy: pt,
    ariaDetails: null,
    ariaDisabled: Pt,
    ariaDropEffect: pt,
    ariaErrorMessage: null,
    ariaExpanded: Pt,
    ariaFlowTo: pt,
    ariaGrabbed: Pt,
    ariaHasPopup: null,
    ariaHidden: Pt,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: pt,
    ariaLevel: Ae,
    ariaLive: null,
    ariaModal: Pt,
    ariaMultiLine: Pt,
    ariaMultiSelectable: Pt,
    ariaOrientation: null,
    ariaOwns: pt,
    ariaPlaceholder: null,
    ariaPosInSet: Ae,
    ariaPressed: Pt,
    ariaReadOnly: Pt,
    ariaRelevant: null,
    ariaRequired: Pt,
    ariaRoleDescription: pt,
    ariaRowCount: Ae,
    ariaRowIndex: Ae,
    ariaRowSpan: Ae,
    ariaSelected: Pt,
    ariaSetSize: Ae,
    ariaSort: null,
    ariaValueMax: Ae,
    ariaValueMin: Ae,
    ariaValueNow: Ae,
    ariaValueText: null,
    role: null
  },
  transform(e, t) {
    return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
  }
});
function aS(e, t) {
  return t in e ? e[t] : t;
}
function iS(e, t) {
  return aS(e, t.toLowerCase());
}
const j6 = ua({
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: ea,
    acceptCharset: pt,
    accessKey: pt,
    action: null,
    allow: null,
    allowFullScreen: We,
    allowPaymentRequest: We,
    allowUserMedia: We,
    alt: null,
    as: null,
    async: We,
    autoCapitalize: null,
    autoComplete: pt,
    autoFocus: We,
    autoPlay: We,
    blocking: pt,
    capture: null,
    charSet: null,
    checked: We,
    cite: null,
    className: pt,
    cols: Ae,
    colSpan: null,
    content: null,
    contentEditable: Pt,
    controls: We,
    controlsList: pt,
    coords: Ae | ea,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: We,
    defer: We,
    dir: null,
    dirName: null,
    disabled: We,
    download: nS,
    draggable: Pt,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: We,
    formTarget: null,
    headers: pt,
    height: Ae,
    hidden: We,
    high: Ae,
    href: null,
    hrefLang: null,
    htmlFor: pt,
    httpEquiv: pt,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: We,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: We,
    itemId: null,
    itemProp: pt,
    itemRef: pt,
    itemScope: We,
    itemType: pt,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: We,
    low: Ae,
    manifest: null,
    max: null,
    maxLength: Ae,
    media: null,
    method: null,
    min: null,
    minLength: Ae,
    multiple: We,
    muted: We,
    name: null,
    nonce: null,
    noModule: We,
    noValidate: We,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: We,
    optimum: Ae,
    pattern: null,
    ping: pt,
    placeholder: null,
    playsInline: We,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: We,
    referrerPolicy: null,
    rel: pt,
    required: We,
    reversed: We,
    rows: Ae,
    rowSpan: Ae,
    sandbox: pt,
    scope: null,
    scoped: We,
    seamless: We,
    selected: We,
    shadowRootClonable: We,
    shadowRootDelegatesFocus: We,
    shadowRootMode: null,
    shape: null,
    size: Ae,
    sizes: null,
    slot: null,
    span: Ae,
    spellCheck: Pt,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: Ae,
    step: null,
    style: null,
    tabIndex: Ae,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: We,
    useMap: null,
    value: Pt,
    width: Ae,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: pt,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: Ae,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: Ae,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: We,
    // Lists. Use CSS to reduce space between items instead
    declare: We,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: Ae,
    // `<img>` and `<object>`
    leftMargin: Ae,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: Ae,
    // `<body>`
    marginWidth: Ae,
    // `<body>`
    noResize: We,
    // `<frame>`
    noHref: We,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: We,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: We,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: Ae,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: Pt,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: Ae,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: Ae,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: We,
    disableRemotePlayback: We,
    prefix: null,
    property: null,
    results: Ae,
    security: null,
    unselectable: null
  },
  space: "html",
  transform: iS
}), H6 = ua({
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  properties: {
    about: _n,
    accentHeight: Ae,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: Ae,
    amplitude: Ae,
    arabicForm: null,
    ascent: Ae,
    attributeName: null,
    attributeType: null,
    azimuth: Ae,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: Ae,
    by: null,
    calcMode: null,
    capHeight: Ae,
    className: pt,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: Ae,
    diffuseConstant: Ae,
    direction: null,
    display: null,
    dur: null,
    divisor: Ae,
    dominantBaseline: null,
    download: We,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: Ae,
    enableBackground: null,
    end: null,
    event: null,
    exponent: Ae,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: Ae,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: ea,
    g2: ea,
    glyphName: ea,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: Ae,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: Ae,
    horizOriginX: Ae,
    horizOriginY: Ae,
    id: null,
    ideographic: Ae,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: Ae,
    k: Ae,
    k1: Ae,
    k2: Ae,
    k3: Ae,
    k4: Ae,
    kernelMatrix: _n,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: Ae,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: Ae,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: Ae,
    overlineThickness: Ae,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: Ae,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: pt,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: Ae,
    pointsAtY: Ae,
    pointsAtZ: Ae,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: _n,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: _n,
    rev: _n,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: _n,
    requiredFeatures: _n,
    requiredFonts: _n,
    requiredFormats: _n,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: Ae,
    specularExponent: Ae,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: Ae,
    strikethroughThickness: Ae,
    string: null,
    stroke: null,
    strokeDashArray: _n,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: Ae,
    strokeOpacity: Ae,
    strokeWidth: null,
    style: null,
    surfaceScale: Ae,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: _n,
    tabIndex: Ae,
    tableValues: null,
    target: null,
    targetX: Ae,
    targetY: Ae,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: _n,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: Ae,
    underlineThickness: Ae,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: Ae,
    values: null,
    vAlphabetic: Ae,
    vMathematical: Ae,
    vectorEffect: null,
    vHanging: Ae,
    vIdeographic: Ae,
    version: null,
    vertAdvY: Ae,
    vertOriginX: Ae,
    vertOriginY: Ae,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: Ae,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  },
  space: "svg",
  transform: aS
}), oS = ua({
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  },
  space: "xlink",
  transform(e, t) {
    return "xlink:" + t.slice(5).toLowerCase();
  }
}), sS = ua({
  attributes: { xmlnsxlink: "xmlns:xlink" },
  properties: { xmlnsXLink: null, xmlns: null },
  space: "xmlns",
  transform: iS
}), lS = ua({
  properties: { xmlBase: null, xmlLang: null, xmlSpace: null },
  space: "xml",
  transform(e, t) {
    return "xml:" + t.slice(3).toLowerCase();
  }
}), q6 = /[A-Z]/g, Qy = /-[a-z]/g, $6 = /^data[-\w.:]+$/i;
function uS(e, t) {
  const n = za(t);
  let r = t, a = vn;
  if (n in e.normal)
    return e.property[e.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && $6.test(t)) {
    if (t.charAt(4) === "-") {
      const i = t.slice(5).replace(Qy, G6);
      r = "data" + i.charAt(0).toUpperCase() + i.slice(1);
    } else {
      const i = t.slice(4);
      if (!Qy.test(i)) {
        let o = i.replace(q6, z6);
        o.charAt(0) !== "-" && (o = "-" + o), t = "data" + o;
      }
    }
    a = Gf;
  }
  return new a(r, t);
}
function z6(e) {
  return "-" + e.toLowerCase();
}
function G6(e) {
  return e.charAt(1).toUpperCase();
}
const Vf = tS([rS, j6, oS, sS, lS], "html"), Wf = tS([rS, H6, oS, sS, lS], "svg"), Jy = /[#.]/g;
function V6(e, t) {
  const n = e || "", r = {};
  let a = 0, i, o;
  for (; a < n.length; ) {
    Jy.lastIndex = a;
    const s = Jy.exec(n), l = n.slice(a, s ? s.index : n.length);
    l && (i ? i === "#" ? r.id = l : Array.isArray(r.className) ? r.className.push(l) : r.className = [l] : o = l, a += l.length), s && (i = s[0], a++);
  }
  return {
    type: "element",
    // @ts-expect-error: tag name is parsed.
    tagName: o || t || "div",
    properties: r,
    children: []
  };
}
function cS(e, t, n) {
  const r = n ? X6(n) : void 0;
  function a(i, o, ...s) {
    let l;
    if (i == null) {
      l = { type: "root", children: [] };
      const u = (
        /** @type {Child} */
        o
      );
      s.unshift(u);
    } else {
      l = V6(i, t);
      const u = l.tagName.toLowerCase(), c = r ? r.get(u) : void 0;
      if (l.tagName = c || u, W6(o))
        s.unshift(o);
      else
        for (const [d, m] of Object.entries(o))
          Y6(e, l.properties, d, m);
    }
    for (const u of s)
      Pp(l.children, u);
    return l.type === "element" && l.tagName === "template" && (l.content = { type: "root", children: l.children }, l.children = []), l;
  }
  return a;
}
function W6(e) {
  if (e === null || typeof e != "object" || Array.isArray(e))
    return !0;
  if (typeof e.type != "string") return !1;
  const t = (
    /** @type {Record<string, unknown>} */
    e
  ), n = Object.keys(e);
  for (const r of n) {
    const a = t[r];
    if (a && typeof a == "object") {
      if (!Array.isArray(a)) return !0;
      const i = (
        /** @type {ReadonlyArray<unknown>} */
        a
      );
      for (const o of i)
        if (typeof o != "number" && typeof o != "string")
          return !0;
    }
  }
  return !!("children" in e && Array.isArray(e.children));
}
function Y6(e, t, n, r) {
  const a = uS(e, n);
  let i;
  if (r != null) {
    if (typeof r == "number") {
      if (Number.isNaN(r)) return;
      i = r;
    } else typeof r == "boolean" ? i = r : typeof r == "string" ? a.spaceSeparated ? i = Pm(r) : a.commaSeparated ? i = Nm(r) : a.commaOrSpaceSeparated ? i = Pm(Nm(r).join(" ")) : i = ev(a, a.property, r) : Array.isArray(r) ? i = [...r] : i = a.property === "style" ? K6(r) : String(r);
    if (Array.isArray(i)) {
      const o = [];
      for (const s of i)
        o.push(
          /** @type {number | string} */
          ev(a, a.property, s)
        );
      i = o;
    }
    a.property === "className" && Array.isArray(t.className) && (i = t.className.concat(
      /** @type {Array<number | string> | number | string} */
      i
    )), t[a.property] = i;
  }
}
function Pp(e, t) {
  if (t != null) if (typeof t == "number" || typeof t == "string")
    e.push({ type: "text", value: String(t) });
  else if (Array.isArray(t))
    for (const n of t)
      Pp(e, n);
  else if (typeof t == "object" && "type" in t)
    t.type === "root" ? Pp(e, t.children) : e.push(t);
  else
    throw new Error("Expected node, nodes, or string, got `" + t + "`");
}
function ev(e, t, n) {
  if (typeof n == "string") {
    if (e.number && n && !Number.isNaN(Number(n)))
      return Number(n);
    if ((e.boolean || e.overloadedBoolean) && (n === "" || za(n) === za(t)))
      return !0;
  }
  return n;
}
function K6(e) {
  const t = [];
  for (const [n, r] of Object.entries(e))
    t.push([n, r].join(": "));
  return t.join("; ");
}
function X6(e) {
  const t = /* @__PURE__ */ new Map();
  for (const n of e)
    t.set(n.toLowerCase(), n);
  return t;
}
const Z6 = [
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "solidColor",
  "textArea",
  "textPath"
], Q6 = cS(Vf, "div"), J6 = cS(Wf, "g", Z6);
function eB(e) {
  const t = String(e), n = [];
  return { toOffset: a, toPoint: r };
  function r(i) {
    if (typeof i == "number" && i > -1 && i <= t.length) {
      let o = 0;
      for (; ; ) {
        let s = n[o];
        if (s === void 0) {
          const l = tv(t, n[o - 1]);
          s = l === -1 ? t.length + 1 : l + 1, n[o] = s;
        }
        if (s > i)
          return {
            line: o + 1,
            column: i - (o > 0 ? n[o - 1] : 0) + 1,
            offset: i
          };
        o++;
      }
    }
  }
  function a(i) {
    if (i && typeof i.line == "number" && typeof i.column == "number" && !Number.isNaN(i.line) && !Number.isNaN(i.column)) {
      for (; n.length < i.line; ) {
        const s = n[n.length - 1], l = tv(t, s), u = l === -1 ? t.length + 1 : l + 1;
        if (s === u) break;
        n.push(u);
      }
      const o = (i.line > 1 ? n[i.line - 2] : 0) + i.column - 1;
      if (o < n[i.line - 1]) return o;
    }
  }
}
function tv(e, t) {
  const n = e.indexOf("\r", t), r = e.indexOf(`
`, t);
  return r === -1 ? n : n === -1 || n + 1 === r ? r : n < r ? n : r;
}
const Ir = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg",
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
}, dS = {}.hasOwnProperty, tB = Object.prototype;
function nB(e, t) {
  const n = t || {};
  return Yf(
    {
      file: n.file || void 0,
      location: !1,
      schema: n.space === "svg" ? Wf : Vf,
      verbose: n.verbose || !1
    },
    e
  );
}
function Yf(e, t) {
  let n;
  switch (t.nodeName) {
    case "#comment": {
      const r = (
        /** @type {DefaultTreeAdapterMap['commentNode']} */
        t
      );
      return n = { type: "comment", value: r.data }, wi(e, r, n), n;
    }
    case "#document":
    case "#document-fragment": {
      const r = (
        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */
        t
      ), a = "mode" in r ? r.mode === "quirks" || r.mode === "limited-quirks" : !1;
      if (n = {
        type: "root",
        children: pS(e, t.childNodes),
        data: { quirksMode: a }
      }, e.file && e.location) {
        const i = String(e.file), o = eB(i), s = o.toPoint(0), l = o.toPoint(i.length);
        n.position = { start: s, end: l };
      }
      return n;
    }
    case "#documentType": {
      const r = (
        /** @type {DefaultTreeAdapterMap['documentType']} */
        t
      );
      return n = { type: "doctype" }, wi(e, r, n), n;
    }
    case "#text": {
      const r = (
        /** @type {DefaultTreeAdapterMap['textNode']} */
        t
      );
      return n = { type: "text", value: r.value }, wi(e, r, n), n;
    }
    default:
      return n = rB(
        e,
        /** @type {DefaultTreeAdapterMap['element']} */
        t
      ), n;
  }
}
function pS(e, t) {
  let n = -1;
  const r = [];
  for (; ++n < t.length; ) {
    const a = (
      /** @type {RootContent} */
      Yf(e, t[n])
    );
    r.push(a);
  }
  return r;
}
function rB(e, t) {
  const n = e.schema;
  e.schema = t.namespaceURI === Ir.svg ? Wf : Vf;
  let r = -1;
  const a = {};
  for (; ++r < t.attrs.length; ) {
    const s = t.attrs[r], l = (s.prefix ? s.prefix + ":" : "") + s.name;
    dS.call(tB, l) || (a[l] = s.value);
  }
  const o = (e.schema.space === "svg" ? J6 : Q6)(t.tagName, a, pS(e, t.childNodes));
  if (wi(e, t, o), o.tagName === "template") {
    const s = (
      /** @type {DefaultTreeAdapterMap['template']} */
      t
    ), l = s.sourceCodeLocation, u = l && l.startTag && Qr(l.startTag), c = l && l.endTag && Qr(l.endTag), d = (
      /** @type {Root} */
      Yf(e, s.content)
    );
    u && c && e.file && (d.position = { start: u.end, end: c.start }), o.content = d;
  }
  return e.schema = n, o;
}
function wi(e, t, n) {
  if ("sourceCodeLocation" in t && t.sourceCodeLocation && e.file) {
    const r = aB(e, n, t.sourceCodeLocation);
    r && (e.location = !0, n.position = r);
  }
}
function aB(e, t, n) {
  const r = Qr(n);
  if (t.type === "element") {
    const a = t.children[t.children.length - 1];
    if (r && !n.endTag && a && a.position && a.position.end && (r.end = Object.assign({}, a.position.end)), e.verbose) {
      const i = {};
      let o;
      if (n.attrs)
        for (o in n.attrs)
          dS.call(n.attrs, o) && (i[uS(e.schema, o).property] = Qr(
            n.attrs[o]
          ));
      n.startTag;
      const s = Qr(n.startTag), l = n.endTag ? Qr(n.endTag) : void 0, u = { opening: s };
      l && (u.closing = l), u.properties = i, t.data = { position: u };
    }
  }
  return r;
}
function Qr(e) {
  const t = nv({
    line: e.startLine,
    column: e.startCol,
    offset: e.startOffset
  }), n = nv({
    line: e.endLine,
    column: e.endCol,
    offset: e.endOffset
  });
  return t || n ? { start: t, end: n } : void 0;
}
function nv(e) {
  return e.line && e.column ? e : void 0;
}
const iB = {}, oB = {}.hasOwnProperty, fS = JT("type", { handlers: { root: lB, element: fB, text: dB, comment: pB, doctype: cB } });
function sB(e, t) {
  const r = (t || iB).space;
  return fS(e, r === "svg" ? Xa : ET);
}
function lB(e, t) {
  const n = {
    nodeName: "#document",
    // @ts-expect-error: `parse5` uses enums, which are actually strings.
    mode: (e.data || {}).quirksMode ? "quirks" : "no-quirks",
    childNodes: []
  };
  return n.childNodes = Kf(e.children, n, t), ca(e, n), n;
}
function uB(e, t) {
  const n = { nodeName: "#document-fragment", childNodes: [] };
  return n.childNodes = Kf(e.children, n, t), ca(e, n), n;
}
function cB(e) {
  const t = {
    nodeName: "#documentType",
    name: "html",
    publicId: "",
    systemId: "",
    parentNode: null
  };
  return ca(e, t), t;
}
function dB(e) {
  const t = {
    nodeName: "#text",
    value: e.value,
    parentNode: null
  };
  return ca(e, t), t;
}
function pB(e) {
  const t = {
    nodeName: "#comment",
    data: e.value,
    parentNode: null
  };
  return ca(e, t), t;
}
function fB(e, t) {
  const n = t;
  let r = n;
  e.type === "element" && e.tagName.toLowerCase() === "svg" && n.space === "html" && (r = Xa);
  const a = [];
  let i;
  if (e.properties) {
    for (i in e.properties)
      if (i !== "children" && oB.call(e.properties, i)) {
        const l = mB(
          r,
          i,
          e.properties[i]
        );
        l && a.push(l);
      }
  }
  const o = r.space, s = {
    nodeName: e.tagName,
    tagName: e.tagName,
    attrs: a,
    // @ts-expect-error: `parse5` types are wrong.
    namespaceURI: Ir[o],
    childNodes: [],
    parentNode: null
  };
  return s.childNodes = Kf(e.children, s, r), ca(e, s), e.tagName === "template" && e.content && (s.content = uB(e.content, r)), s;
}
function mB(e, t, n) {
  const r = bT(e, t);
  if (n === !1 || n === null || n === void 0 || typeof n == "number" && Number.isNaN(n) || !n && r.boolean)
    return;
  Array.isArray(n) && (n = r.commaSeparated ? lT(n) : yT(n));
  const a = {
    name: r.attribute,
    value: n === !0 ? "" : String(n)
  };
  if (r.space && r.space !== "html" && r.space !== "svg") {
    const i = a.name.indexOf(":");
    i < 0 ? a.prefix = "" : (a.name = a.name.slice(i + 1), a.prefix = r.attribute.slice(0, i)), a.namespace = Ir[r.space];
  }
  return a;
}
function Kf(e, t, n) {
  let r = -1;
  const a = [];
  if (e)
    for (; ++r < e.length; ) {
      const i = fS(e[r], n);
      i.parentNode = t, a.push(i);
    }
  return a;
}
function ca(e, t) {
  const n = e.position;
  n && n.start && n.end && (n.start.offset, n.end.offset, t.sourceCodeLocation = {
    startLine: n.start.line,
    startCol: n.start.column,
    startOffset: n.start.offset,
    endLine: n.end.line,
    endCol: n.end.column,
    endOffset: n.end.offset
  });
}
const gB = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
], hB = /* @__PURE__ */ new Set([
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
]), St = "�";
var L;
(function(e) {
  e[e.EOF = -1] = "EOF", e[e.NULL = 0] = "NULL", e[e.TABULATION = 9] = "TABULATION", e[e.CARRIAGE_RETURN = 13] = "CARRIAGE_RETURN", e[e.LINE_FEED = 10] = "LINE_FEED", e[e.FORM_FEED = 12] = "FORM_FEED", e[e.SPACE = 32] = "SPACE", e[e.EXCLAMATION_MARK = 33] = "EXCLAMATION_MARK", e[e.QUOTATION_MARK = 34] = "QUOTATION_MARK", e[e.AMPERSAND = 38] = "AMPERSAND", e[e.APOSTROPHE = 39] = "APOSTROPHE", e[e.HYPHEN_MINUS = 45] = "HYPHEN_MINUS", e[e.SOLIDUS = 47] = "SOLIDUS", e[e.DIGIT_0 = 48] = "DIGIT_0", e[e.DIGIT_9 = 57] = "DIGIT_9", e[e.SEMICOLON = 59] = "SEMICOLON", e[e.LESS_THAN_SIGN = 60] = "LESS_THAN_SIGN", e[e.EQUALS_SIGN = 61] = "EQUALS_SIGN", e[e.GREATER_THAN_SIGN = 62] = "GREATER_THAN_SIGN", e[e.QUESTION_MARK = 63] = "QUESTION_MARK", e[e.LATIN_CAPITAL_A = 65] = "LATIN_CAPITAL_A", e[e.LATIN_CAPITAL_Z = 90] = "LATIN_CAPITAL_Z", e[e.RIGHT_SQUARE_BRACKET = 93] = "RIGHT_SQUARE_BRACKET", e[e.GRAVE_ACCENT = 96] = "GRAVE_ACCENT", e[e.LATIN_SMALL_A = 97] = "LATIN_SMALL_A", e[e.LATIN_SMALL_Z = 122] = "LATIN_SMALL_Z";
})(L || (L = {}));
const hn = {
  DASH_DASH: "--",
  CDATA_START: "[CDATA[",
  DOCTYPE: "doctype",
  SCRIPT: "script",
  PUBLIC: "public",
  SYSTEM: "system"
};
function mS(e) {
  return e >= 55296 && e <= 57343;
}
function bB(e) {
  return e >= 56320 && e <= 57343;
}
function EB(e, t) {
  return (e - 55296) * 1024 + 9216 + t;
}
function gS(e) {
  return e !== 32 && e !== 10 && e !== 13 && e !== 9 && e !== 12 && e >= 1 && e <= 31 || e >= 127 && e <= 159;
}
function hS(e) {
  return e >= 64976 && e <= 65007 || hB.has(e);
}
var ie;
(function(e) {
  e.controlCharacterInInputStream = "control-character-in-input-stream", e.noncharacterInInputStream = "noncharacter-in-input-stream", e.surrogateInInputStream = "surrogate-in-input-stream", e.nonVoidHtmlElementStartTagWithTrailingSolidus = "non-void-html-element-start-tag-with-trailing-solidus", e.endTagWithAttributes = "end-tag-with-attributes", e.endTagWithTrailingSolidus = "end-tag-with-trailing-solidus", e.unexpectedSolidusInTag = "unexpected-solidus-in-tag", e.unexpectedNullCharacter = "unexpected-null-character", e.unexpectedQuestionMarkInsteadOfTagName = "unexpected-question-mark-instead-of-tag-name", e.invalidFirstCharacterOfTagName = "invalid-first-character-of-tag-name", e.unexpectedEqualsSignBeforeAttributeName = "unexpected-equals-sign-before-attribute-name", e.missingEndTagName = "missing-end-tag-name", e.unexpectedCharacterInAttributeName = "unexpected-character-in-attribute-name", e.unknownNamedCharacterReference = "unknown-named-character-reference", e.missingSemicolonAfterCharacterReference = "missing-semicolon-after-character-reference", e.unexpectedCharacterAfterDoctypeSystemIdentifier = "unexpected-character-after-doctype-system-identifier", e.unexpectedCharacterInUnquotedAttributeValue = "unexpected-character-in-unquoted-attribute-value", e.eofBeforeTagName = "eof-before-tag-name", e.eofInTag = "eof-in-tag", e.missingAttributeValue = "missing-attribute-value", e.missingWhitespaceBetweenAttributes = "missing-whitespace-between-attributes", e.missingWhitespaceAfterDoctypePublicKeyword = "missing-whitespace-after-doctype-public-keyword", e.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers = "missing-whitespace-between-doctype-public-and-system-identifiers", e.missingWhitespaceAfterDoctypeSystemKeyword = "missing-whitespace-after-doctype-system-keyword", e.missingQuoteBeforeDoctypePublicIdentifier = "missing-quote-before-doctype-public-identifier", e.missingQuoteBeforeDoctypeSystemIdentifier = "missing-quote-before-doctype-system-identifier", e.missingDoctypePublicIdentifier = "missing-doctype-public-identifier", e.missingDoctypeSystemIdentifier = "missing-doctype-system-identifier", e.abruptDoctypePublicIdentifier = "abrupt-doctype-public-identifier", e.abruptDoctypeSystemIdentifier = "abrupt-doctype-system-identifier", e.cdataInHtmlContent = "cdata-in-html-content", e.incorrectlyOpenedComment = "incorrectly-opened-comment", e.eofInScriptHtmlCommentLikeText = "eof-in-script-html-comment-like-text", e.eofInDoctype = "eof-in-doctype", e.nestedComment = "nested-comment", e.abruptClosingOfEmptyComment = "abrupt-closing-of-empty-comment", e.eofInComment = "eof-in-comment", e.incorrectlyClosedComment = "incorrectly-closed-comment", e.eofInCdata = "eof-in-cdata", e.absenceOfDigitsInNumericCharacterReference = "absence-of-digits-in-numeric-character-reference", e.nullCharacterReference = "null-character-reference", e.surrogateCharacterReference = "surrogate-character-reference", e.characterReferenceOutsideUnicodeRange = "character-reference-outside-unicode-range", e.controlCharacterReference = "control-character-reference", e.noncharacterCharacterReference = "noncharacter-character-reference", e.missingWhitespaceBeforeDoctypeName = "missing-whitespace-before-doctype-name", e.missingDoctypeName = "missing-doctype-name", e.invalidCharacterSequenceAfterDoctypeName = "invalid-character-sequence-after-doctype-name", e.duplicateAttribute = "duplicate-attribute", e.nonConformingDoctype = "non-conforming-doctype", e.missingDoctype = "missing-doctype", e.misplacedDoctype = "misplaced-doctype", e.endTagWithoutMatchingOpenElement = "end-tag-without-matching-open-element", e.closingOfElementWithOpenChildElements = "closing-of-element-with-open-child-elements", e.disallowedContentInNoscriptInHead = "disallowed-content-in-noscript-in-head", e.openElementsLeftAfterEof = "open-elements-left-after-eof", e.abandonedHeadElementChild = "abandoned-head-element-child", e.misplacedStartTagForHeadElement = "misplaced-start-tag-for-head-element", e.nestedNoscriptInHead = "nested-noscript-in-head", e.eofInElementThatCanContainOnlyText = "eof-in-element-that-can-contain-only-text";
})(ie || (ie = {}));
const yB = 65536;
class vB {
  constructor(t) {
    this.handler = t, this.html = "", this.pos = -1, this.lastGapPos = -2, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = yB, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.line = 1, this.lastErrOffset = -1;
  }
  /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */
  get col() {
    return this.pos - this.lineStartPos + +(this.lastGapPos !== this.pos);
  }
  get offset() {
    return this.droppedBufferSize + this.pos;
  }
  getError(t, n) {
    const { line: r, col: a, offset: i } = this, o = a + n, s = i + n;
    return {
      code: t,
      startLine: r,
      endLine: r,
      startCol: o,
      endCol: o,
      startOffset: s,
      endOffset: s
    };
  }
  _err(t) {
    this.handler.onParseError && this.lastErrOffset !== this.offset && (this.lastErrOffset = this.offset, this.handler.onParseError(this.getError(t, 0)));
  }
  _addGap() {
    this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
  }
  _processSurrogate(t) {
    if (this.pos !== this.html.length - 1) {
      const n = this.html.charCodeAt(this.pos + 1);
      if (bB(n))
        return this.pos++, this._addGap(), EB(t, n);
    } else if (!this.lastChunkWritten)
      return this.endOfChunkHit = !0, L.EOF;
    return this._err(ie.surrogateInInputStream), t;
  }
  willDropParsedChunk() {
    return this.pos > this.bufferWaterline;
  }
  dropParsedChunk() {
    this.willDropParsedChunk() && (this.html = this.html.substring(this.pos), this.lineStartPos -= this.pos, this.droppedBufferSize += this.pos, this.pos = 0, this.lastGapPos = -2, this.gapStack.length = 0);
  }
  write(t, n) {
    this.html.length > 0 ? this.html += t : this.html = t, this.endOfChunkHit = !1, this.lastChunkWritten = n;
  }
  insertHtmlAtCurrentPos(t) {
    this.html = this.html.substring(0, this.pos + 1) + t + this.html.substring(this.pos + 1), this.endOfChunkHit = !1;
  }
  startsWith(t, n) {
    if (this.pos + t.length > this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, !1;
    if (n)
      return this.html.startsWith(t, this.pos);
    for (let r = 0; r < t.length; r++)
      if ((this.html.charCodeAt(this.pos + r) | 32) !== t.charCodeAt(r))
        return !1;
    return !0;
  }
  peek(t) {
    const n = this.pos + t;
    if (n >= this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, L.EOF;
    const r = this.html.charCodeAt(n);
    return r === L.CARRIAGE_RETURN ? L.LINE_FEED : r;
  }
  advance() {
    if (this.pos++, this.isEol && (this.isEol = !1, this.line++, this.lineStartPos = this.pos), this.pos >= this.html.length)
      return this.endOfChunkHit = !this.lastChunkWritten, L.EOF;
    let t = this.html.charCodeAt(this.pos);
    return t === L.CARRIAGE_RETURN ? (this.isEol = !0, this.skipNextNewLine = !0, L.LINE_FEED) : t === L.LINE_FEED && (this.isEol = !0, this.skipNextNewLine) ? (this.line--, this.skipNextNewLine = !1, this._addGap(), this.advance()) : (this.skipNextNewLine = !1, mS(t) && (t = this._processSurrogate(t)), this.handler.onParseError === null || t > 31 && t < 127 || t === L.LINE_FEED || t === L.CARRIAGE_RETURN || t > 159 && t < 64976 || this._checkForProblematicCharacters(t), t);
  }
  _checkForProblematicCharacters(t) {
    gS(t) ? this._err(ie.controlCharacterInInputStream) : hS(t) && this._err(ie.noncharacterInInputStream);
  }
  retreat(t) {
    for (this.pos -= t; this.pos < this.lastGapPos; )
      this.lastGapPos = this.gapStack.pop(), this.pos--;
    this.isEol = !1;
  }
}
var Qe;
(function(e) {
  e[e.CHARACTER = 0] = "CHARACTER", e[e.NULL_CHARACTER = 1] = "NULL_CHARACTER", e[e.WHITESPACE_CHARACTER = 2] = "WHITESPACE_CHARACTER", e[e.START_TAG = 3] = "START_TAG", e[e.END_TAG = 4] = "END_TAG", e[e.COMMENT = 5] = "COMMENT", e[e.DOCTYPE = 6] = "DOCTYPE", e[e.EOF = 7] = "EOF", e[e.HIBERNATION = 8] = "HIBERNATION";
})(Qe || (Qe = {}));
function bS(e, t) {
  for (let n = e.attrs.length - 1; n >= 0; n--)
    if (e.attrs[n].name === t)
      return e.attrs[n].value;
  return null;
}
const ES = new Uint16Array(
  // prettier-ignore
  'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((e) => e.charCodeAt(0))
), TB = new Uint16Array(
  // prettier-ignore
  "Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((e) => e.charCodeAt(0))
);
var Jd;
const SB = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]), _B = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
  (Jd = String.fromCodePoint) !== null && Jd !== void 0 ? Jd : function(e) {
    let t = "";
    return e > 65535 && (e -= 65536, t += String.fromCharCode(e >>> 10 & 1023 | 55296), e = 56320 | e & 1023), t += String.fromCharCode(e), t;
  }
);
function AB(e) {
  var t;
  return e >= 55296 && e <= 57343 || e > 1114111 ? 65533 : (t = SB.get(e)) !== null && t !== void 0 ? t : e;
}
var Wt;
(function(e) {
  e[e.NUM = 35] = "NUM", e[e.SEMI = 59] = "SEMI", e[e.EQUALS = 61] = "EQUALS", e[e.ZERO = 48] = "ZERO", e[e.NINE = 57] = "NINE", e[e.LOWER_A = 97] = "LOWER_A", e[e.LOWER_F = 102] = "LOWER_F", e[e.LOWER_X = 120] = "LOWER_X", e[e.LOWER_Z = 122] = "LOWER_Z", e[e.UPPER_A = 65] = "UPPER_A", e[e.UPPER_F = 70] = "UPPER_F", e[e.UPPER_Z = 90] = "UPPER_Z";
})(Wt || (Wt = {}));
const xB = 32;
var cr;
(function(e) {
  e[e.VALUE_LENGTH = 49152] = "VALUE_LENGTH", e[e.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", e[e.JUMP_TABLE = 127] = "JUMP_TABLE";
})(cr || (cr = {}));
function Fp(e) {
  return e >= Wt.ZERO && e <= Wt.NINE;
}
function RB(e) {
  return e >= Wt.UPPER_A && e <= Wt.UPPER_F || e >= Wt.LOWER_A && e <= Wt.LOWER_F;
}
function IB(e) {
  return e >= Wt.UPPER_A && e <= Wt.UPPER_Z || e >= Wt.LOWER_A && e <= Wt.LOWER_Z || Fp(e);
}
function wB(e) {
  return e === Wt.EQUALS || IB(e);
}
var Gt;
(function(e) {
  e[e.EntityStart = 0] = "EntityStart", e[e.NumericStart = 1] = "NumericStart", e[e.NumericDecimal = 2] = "NumericDecimal", e[e.NumericHex = 3] = "NumericHex", e[e.NamedEntity = 4] = "NamedEntity";
})(Gt || (Gt = {}));
var Jn;
(function(e) {
  e[e.Legacy = 0] = "Legacy", e[e.Strict = 1] = "Strict", e[e.Attribute = 2] = "Attribute";
})(Jn || (Jn = {}));
class yS {
  constructor(t, n, r) {
    this.decodeTree = t, this.emitCodePoint = n, this.errors = r, this.state = Gt.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = Jn.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(t) {
    this.decodeMode = t, this.state = Gt.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(t, n) {
    switch (this.state) {
      case Gt.EntityStart:
        return t.charCodeAt(n) === Wt.NUM ? (this.state = Gt.NumericStart, this.consumed += 1, this.stateNumericStart(t, n + 1)) : (this.state = Gt.NamedEntity, this.stateNamedEntity(t, n));
      case Gt.NumericStart:
        return this.stateNumericStart(t, n);
      case Gt.NumericDecimal:
        return this.stateNumericDecimal(t, n);
      case Gt.NumericHex:
        return this.stateNumericHex(t, n);
      case Gt.NamedEntity:
        return this.stateNamedEntity(t, n);
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(t, n) {
    return n >= t.length ? -1 : (t.charCodeAt(n) | xB) === Wt.LOWER_X ? (this.state = Gt.NumericHex, this.consumed += 1, this.stateNumericHex(t, n + 1)) : (this.state = Gt.NumericDecimal, this.stateNumericDecimal(t, n));
  }
  addToNumericResult(t, n, r, a) {
    if (n !== r) {
      const i = r - n;
      this.result = this.result * Math.pow(a, i) + parseInt(t.substr(n, i), a), this.consumed += i;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const a = t.charCodeAt(n);
      if (Fp(a) || RB(a))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 16), this.emitNumericEntity(a, 3);
    }
    return this.addToNumericResult(t, r, n, 16), -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(t, n) {
    const r = n;
    for (; n < t.length; ) {
      const a = t.charCodeAt(n);
      if (Fp(a))
        n += 1;
      else
        return this.addToNumericResult(t, r, n, 10), this.emitNumericEntity(a, 2);
    }
    return this.addToNumericResult(t, r, n, 10), -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(t, n) {
    var r;
    if (this.consumed <= n)
      return (r = this.errors) === null || r === void 0 || r.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
    if (t === Wt.SEMI)
      this.consumed += 1;
    else if (this.decodeMode === Jn.Strict)
      return 0;
    return this.emitCodePoint(AB(this.result), this.consumed), this.errors && (t !== Wt.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(t, n) {
    const { decodeTree: r } = this;
    let a = r[this.treeIndex], i = (a & cr.VALUE_LENGTH) >> 14;
    for (; n < t.length; n++, this.excess++) {
      const o = t.charCodeAt(n);
      if (this.treeIndex = CB(r, a, this.treeIndex + Math.max(1, i), o), this.treeIndex < 0)
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === Jn.Attribute && // We shouldn't have consumed any characters after the entity,
        (i === 0 || // And there should be no invalid characters.
        wB(o)) ? 0 : this.emitNotTerminatedNamedEntity();
      if (a = r[this.treeIndex], i = (a & cr.VALUE_LENGTH) >> 14, i !== 0) {
        if (o === Wt.SEMI)
          return this.emitNamedEntityData(this.treeIndex, i, this.consumed + this.excess);
        this.decodeMode !== Jn.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0);
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var t;
    const { result: n, decodeTree: r } = this, a = (r[n] & cr.VALUE_LENGTH) >> 14;
    return this.emitNamedEntityData(n, a, this.consumed), (t = this.errors) === null || t === void 0 || t.missingSemicolonAfterCharacterReference(), this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(t, n, r) {
    const { decodeTree: a } = this;
    return this.emitCodePoint(n === 1 ? a[t] & ~cr.VALUE_LENGTH : a[t + 1], r), n === 3 && this.emitCodePoint(a[t + 2], r), r;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var t;
    switch (this.state) {
      case Gt.NamedEntity:
        return this.result !== 0 && (this.decodeMode !== Jn.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      case Gt.NumericDecimal:
        return this.emitNumericEntity(0, 2);
      case Gt.NumericHex:
        return this.emitNumericEntity(0, 3);
      case Gt.NumericStart:
        return (t = this.errors) === null || t === void 0 || t.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
      case Gt.EntityStart:
        return 0;
    }
  }
}
function vS(e) {
  let t = "";
  const n = new yS(e, (r) => t += _B(r));
  return function(a, i) {
    let o = 0, s = 0;
    for (; (s = a.indexOf("&", s)) >= 0; ) {
      t += a.slice(o, s), n.startEntity(i);
      const u = n.write(
        a,
        // Skip the "&"
        s + 1
      );
      if (u < 0) {
        o = s + n.end();
        break;
      }
      o = s + u, s = u === 0 ? o + 1 : o;
    }
    const l = t + a.slice(o);
    return t = "", l;
  };
}
function CB(e, t, n, r) {
  const a = (t & cr.BRANCH_LENGTH) >> 7, i = t & cr.JUMP_TABLE;
  if (a === 0)
    return i !== 0 && r === i ? n : -1;
  if (i) {
    const l = r - i;
    return l < 0 || l >= a ? -1 : e[n + l] - 1;
  }
  let o = n, s = o + a - 1;
  for (; o <= s; ) {
    const l = o + s >>> 1, u = e[l];
    if (u < r)
      o = l + 1;
    else if (u > r)
      s = l - 1;
    else
      return e[l + a];
  }
  return -1;
}
vS(ES);
vS(TB);
var ge;
(function(e) {
  e.HTML = "http://www.w3.org/1999/xhtml", e.MATHML = "http://www.w3.org/1998/Math/MathML", e.SVG = "http://www.w3.org/2000/svg", e.XLINK = "http://www.w3.org/1999/xlink", e.XML = "http://www.w3.org/XML/1998/namespace", e.XMLNS = "http://www.w3.org/2000/xmlns/";
})(ge || (ge = {}));
var Cr;
(function(e) {
  e.TYPE = "type", e.ACTION = "action", e.ENCODING = "encoding", e.PROMPT = "prompt", e.NAME = "name", e.COLOR = "color", e.FACE = "face", e.SIZE = "size";
})(Cr || (Cr = {}));
var Cn;
(function(e) {
  e.NO_QUIRKS = "no-quirks", e.QUIRKS = "quirks", e.LIMITED_QUIRKS = "limited-quirks";
})(Cn || (Cn = {}));
var te;
(function(e) {
  e.A = "a", e.ADDRESS = "address", e.ANNOTATION_XML = "annotation-xml", e.APPLET = "applet", e.AREA = "area", e.ARTICLE = "article", e.ASIDE = "aside", e.B = "b", e.BASE = "base", e.BASEFONT = "basefont", e.BGSOUND = "bgsound", e.BIG = "big", e.BLOCKQUOTE = "blockquote", e.BODY = "body", e.BR = "br", e.BUTTON = "button", e.CAPTION = "caption", e.CENTER = "center", e.CODE = "code", e.COL = "col", e.COLGROUP = "colgroup", e.DD = "dd", e.DESC = "desc", e.DETAILS = "details", e.DIALOG = "dialog", e.DIR = "dir", e.DIV = "div", e.DL = "dl", e.DT = "dt", e.EM = "em", e.EMBED = "embed", e.FIELDSET = "fieldset", e.FIGCAPTION = "figcaption", e.FIGURE = "figure", e.FONT = "font", e.FOOTER = "footer", e.FOREIGN_OBJECT = "foreignObject", e.FORM = "form", e.FRAME = "frame", e.FRAMESET = "frameset", e.H1 = "h1", e.H2 = "h2", e.H3 = "h3", e.H4 = "h4", e.H5 = "h5", e.H6 = "h6", e.HEAD = "head", e.HEADER = "header", e.HGROUP = "hgroup", e.HR = "hr", e.HTML = "html", e.I = "i", e.IMG = "img", e.IMAGE = "image", e.INPUT = "input", e.IFRAME = "iframe", e.KEYGEN = "keygen", e.LABEL = "label", e.LI = "li", e.LINK = "link", e.LISTING = "listing", e.MAIN = "main", e.MALIGNMARK = "malignmark", e.MARQUEE = "marquee", e.MATH = "math", e.MENU = "menu", e.META = "meta", e.MGLYPH = "mglyph", e.MI = "mi", e.MO = "mo", e.MN = "mn", e.MS = "ms", e.MTEXT = "mtext", e.NAV = "nav", e.NOBR = "nobr", e.NOFRAMES = "noframes", e.NOEMBED = "noembed", e.NOSCRIPT = "noscript", e.OBJECT = "object", e.OL = "ol", e.OPTGROUP = "optgroup", e.OPTION = "option", e.P = "p", e.PARAM = "param", e.PLAINTEXT = "plaintext", e.PRE = "pre", e.RB = "rb", e.RP = "rp", e.RT = "rt", e.RTC = "rtc", e.RUBY = "ruby", e.S = "s", e.SCRIPT = "script", e.SEARCH = "search", e.SECTION = "section", e.SELECT = "select", e.SOURCE = "source", e.SMALL = "small", e.SPAN = "span", e.STRIKE = "strike", e.STRONG = "strong", e.STYLE = "style", e.SUB = "sub", e.SUMMARY = "summary", e.SUP = "sup", e.TABLE = "table", e.TBODY = "tbody", e.TEMPLATE = "template", e.TEXTAREA = "textarea", e.TFOOT = "tfoot", e.TD = "td", e.TH = "th", e.THEAD = "thead", e.TITLE = "title", e.TR = "tr", e.TRACK = "track", e.TT = "tt", e.U = "u", e.UL = "ul", e.SVG = "svg", e.VAR = "var", e.WBR = "wbr", e.XMP = "xmp";
})(te || (te = {}));
var p;
(function(e) {
  e[e.UNKNOWN = 0] = "UNKNOWN", e[e.A = 1] = "A", e[e.ADDRESS = 2] = "ADDRESS", e[e.ANNOTATION_XML = 3] = "ANNOTATION_XML", e[e.APPLET = 4] = "APPLET", e[e.AREA = 5] = "AREA", e[e.ARTICLE = 6] = "ARTICLE", e[e.ASIDE = 7] = "ASIDE", e[e.B = 8] = "B", e[e.BASE = 9] = "BASE", e[e.BASEFONT = 10] = "BASEFONT", e[e.BGSOUND = 11] = "BGSOUND", e[e.BIG = 12] = "BIG", e[e.BLOCKQUOTE = 13] = "BLOCKQUOTE", e[e.BODY = 14] = "BODY", e[e.BR = 15] = "BR", e[e.BUTTON = 16] = "BUTTON", e[e.CAPTION = 17] = "CAPTION", e[e.CENTER = 18] = "CENTER", e[e.CODE = 19] = "CODE", e[e.COL = 20] = "COL", e[e.COLGROUP = 21] = "COLGROUP", e[e.DD = 22] = "DD", e[e.DESC = 23] = "DESC", e[e.DETAILS = 24] = "DETAILS", e[e.DIALOG = 25] = "DIALOG", e[e.DIR = 26] = "DIR", e[e.DIV = 27] = "DIV", e[e.DL = 28] = "DL", e[e.DT = 29] = "DT", e[e.EM = 30] = "EM", e[e.EMBED = 31] = "EMBED", e[e.FIELDSET = 32] = "FIELDSET", e[e.FIGCAPTION = 33] = "FIGCAPTION", e[e.FIGURE = 34] = "FIGURE", e[e.FONT = 35] = "FONT", e[e.FOOTER = 36] = "FOOTER", e[e.FOREIGN_OBJECT = 37] = "FOREIGN_OBJECT", e[e.FORM = 38] = "FORM", e[e.FRAME = 39] = "FRAME", e[e.FRAMESET = 40] = "FRAMESET", e[e.H1 = 41] = "H1", e[e.H2 = 42] = "H2", e[e.H3 = 43] = "H3", e[e.H4 = 44] = "H4", e[e.H5 = 45] = "H5", e[e.H6 = 46] = "H6", e[e.HEAD = 47] = "HEAD", e[e.HEADER = 48] = "HEADER", e[e.HGROUP = 49] = "HGROUP", e[e.HR = 50] = "HR", e[e.HTML = 51] = "HTML", e[e.I = 52] = "I", e[e.IMG = 53] = "IMG", e[e.IMAGE = 54] = "IMAGE", e[e.INPUT = 55] = "INPUT", e[e.IFRAME = 56] = "IFRAME", e[e.KEYGEN = 57] = "KEYGEN", e[e.LABEL = 58] = "LABEL", e[e.LI = 59] = "LI", e[e.LINK = 60] = "LINK", e[e.LISTING = 61] = "LISTING", e[e.MAIN = 62] = "MAIN", e[e.MALIGNMARK = 63] = "MALIGNMARK", e[e.MARQUEE = 64] = "MARQUEE", e[e.MATH = 65] = "MATH", e[e.MENU = 66] = "MENU", e[e.META = 67] = "META", e[e.MGLYPH = 68] = "MGLYPH", e[e.MI = 69] = "MI", e[e.MO = 70] = "MO", e[e.MN = 71] = "MN", e[e.MS = 72] = "MS", e[e.MTEXT = 73] = "MTEXT", e[e.NAV = 74] = "NAV", e[e.NOBR = 75] = "NOBR", e[e.NOFRAMES = 76] = "NOFRAMES", e[e.NOEMBED = 77] = "NOEMBED", e[e.NOSCRIPT = 78] = "NOSCRIPT", e[e.OBJECT = 79] = "OBJECT", e[e.OL = 80] = "OL", e[e.OPTGROUP = 81] = "OPTGROUP", e[e.OPTION = 82] = "OPTION", e[e.P = 83] = "P", e[e.PARAM = 84] = "PARAM", e[e.PLAINTEXT = 85] = "PLAINTEXT", e[e.PRE = 86] = "PRE", e[e.RB = 87] = "RB", e[e.RP = 88] = "RP", e[e.RT = 89] = "RT", e[e.RTC = 90] = "RTC", e[e.RUBY = 91] = "RUBY", e[e.S = 92] = "S", e[e.SCRIPT = 93] = "SCRIPT", e[e.SEARCH = 94] = "SEARCH", e[e.SECTION = 95] = "SECTION", e[e.SELECT = 96] = "SELECT", e[e.SOURCE = 97] = "SOURCE", e[e.SMALL = 98] = "SMALL", e[e.SPAN = 99] = "SPAN", e[e.STRIKE = 100] = "STRIKE", e[e.STRONG = 101] = "STRONG", e[e.STYLE = 102] = "STYLE", e[e.SUB = 103] = "SUB", e[e.SUMMARY = 104] = "SUMMARY", e[e.SUP = 105] = "SUP", e[e.TABLE = 106] = "TABLE", e[e.TBODY = 107] = "TBODY", e[e.TEMPLATE = 108] = "TEMPLATE", e[e.TEXTAREA = 109] = "TEXTAREA", e[e.TFOOT = 110] = "TFOOT", e[e.TD = 111] = "TD", e[e.TH = 112] = "TH", e[e.THEAD = 113] = "THEAD", e[e.TITLE = 114] = "TITLE", e[e.TR = 115] = "TR", e[e.TRACK = 116] = "TRACK", e[e.TT = 117] = "TT", e[e.U = 118] = "U", e[e.UL = 119] = "UL", e[e.SVG = 120] = "SVG", e[e.VAR = 121] = "VAR", e[e.WBR = 122] = "WBR", e[e.XMP = 123] = "XMP";
})(p || (p = {}));
const kB = /* @__PURE__ */ new Map([
  [te.A, p.A],
  [te.ADDRESS, p.ADDRESS],
  [te.ANNOTATION_XML, p.ANNOTATION_XML],
  [te.APPLET, p.APPLET],
  [te.AREA, p.AREA],
  [te.ARTICLE, p.ARTICLE],
  [te.ASIDE, p.ASIDE],
  [te.B, p.B],
  [te.BASE, p.BASE],
  [te.BASEFONT, p.BASEFONT],
  [te.BGSOUND, p.BGSOUND],
  [te.BIG, p.BIG],
  [te.BLOCKQUOTE, p.BLOCKQUOTE],
  [te.BODY, p.BODY],
  [te.BR, p.BR],
  [te.BUTTON, p.BUTTON],
  [te.CAPTION, p.CAPTION],
  [te.CENTER, p.CENTER],
  [te.CODE, p.CODE],
  [te.COL, p.COL],
  [te.COLGROUP, p.COLGROUP],
  [te.DD, p.DD],
  [te.DESC, p.DESC],
  [te.DETAILS, p.DETAILS],
  [te.DIALOG, p.DIALOG],
  [te.DIR, p.DIR],
  [te.DIV, p.DIV],
  [te.DL, p.DL],
  [te.DT, p.DT],
  [te.EM, p.EM],
  [te.EMBED, p.EMBED],
  [te.FIELDSET, p.FIELDSET],
  [te.FIGCAPTION, p.FIGCAPTION],
  [te.FIGURE, p.FIGURE],
  [te.FONT, p.FONT],
  [te.FOOTER, p.FOOTER],
  [te.FOREIGN_OBJECT, p.FOREIGN_OBJECT],
  [te.FORM, p.FORM],
  [te.FRAME, p.FRAME],
  [te.FRAMESET, p.FRAMESET],
  [te.H1, p.H1],
  [te.H2, p.H2],
  [te.H3, p.H3],
  [te.H4, p.H4],
  [te.H5, p.H5],
  [te.H6, p.H6],
  [te.HEAD, p.HEAD],
  [te.HEADER, p.HEADER],
  [te.HGROUP, p.HGROUP],
  [te.HR, p.HR],
  [te.HTML, p.HTML],
  [te.I, p.I],
  [te.IMG, p.IMG],
  [te.IMAGE, p.IMAGE],
  [te.INPUT, p.INPUT],
  [te.IFRAME, p.IFRAME],
  [te.KEYGEN, p.KEYGEN],
  [te.LABEL, p.LABEL],
  [te.LI, p.LI],
  [te.LINK, p.LINK],
  [te.LISTING, p.LISTING],
  [te.MAIN, p.MAIN],
  [te.MALIGNMARK, p.MALIGNMARK],
  [te.MARQUEE, p.MARQUEE],
  [te.MATH, p.MATH],
  [te.MENU, p.MENU],
  [te.META, p.META],
  [te.MGLYPH, p.MGLYPH],
  [te.MI, p.MI],
  [te.MO, p.MO],
  [te.MN, p.MN],
  [te.MS, p.MS],
  [te.MTEXT, p.MTEXT],
  [te.NAV, p.NAV],
  [te.NOBR, p.NOBR],
  [te.NOFRAMES, p.NOFRAMES],
  [te.NOEMBED, p.NOEMBED],
  [te.NOSCRIPT, p.NOSCRIPT],
  [te.OBJECT, p.OBJECT],
  [te.OL, p.OL],
  [te.OPTGROUP, p.OPTGROUP],
  [te.OPTION, p.OPTION],
  [te.P, p.P],
  [te.PARAM, p.PARAM],
  [te.PLAINTEXT, p.PLAINTEXT],
  [te.PRE, p.PRE],
  [te.RB, p.RB],
  [te.RP, p.RP],
  [te.RT, p.RT],
  [te.RTC, p.RTC],
  [te.RUBY, p.RUBY],
  [te.S, p.S],
  [te.SCRIPT, p.SCRIPT],
  [te.SEARCH, p.SEARCH],
  [te.SECTION, p.SECTION],
  [te.SELECT, p.SELECT],
  [te.SOURCE, p.SOURCE],
  [te.SMALL, p.SMALL],
  [te.SPAN, p.SPAN],
  [te.STRIKE, p.STRIKE],
  [te.STRONG, p.STRONG],
  [te.STYLE, p.STYLE],
  [te.SUB, p.SUB],
  [te.SUMMARY, p.SUMMARY],
  [te.SUP, p.SUP],
  [te.TABLE, p.TABLE],
  [te.TBODY, p.TBODY],
  [te.TEMPLATE, p.TEMPLATE],
  [te.TEXTAREA, p.TEXTAREA],
  [te.TFOOT, p.TFOOT],
  [te.TD, p.TD],
  [te.TH, p.TH],
  [te.THEAD, p.THEAD],
  [te.TITLE, p.TITLE],
  [te.TR, p.TR],
  [te.TRACK, p.TRACK],
  [te.TT, p.TT],
  [te.U, p.U],
  [te.UL, p.UL],
  [te.SVG, p.SVG],
  [te.VAR, p.VAR],
  [te.WBR, p.WBR],
  [te.XMP, p.XMP]
]);
function da(e) {
  var t;
  return (t = kB.get(e)) !== null && t !== void 0 ? t : p.UNKNOWN;
}
const Ee = p, NB = {
  [ge.HTML]: /* @__PURE__ */ new Set([
    Ee.ADDRESS,
    Ee.APPLET,
    Ee.AREA,
    Ee.ARTICLE,
    Ee.ASIDE,
    Ee.BASE,
    Ee.BASEFONT,
    Ee.BGSOUND,
    Ee.BLOCKQUOTE,
    Ee.BODY,
    Ee.BR,
    Ee.BUTTON,
    Ee.CAPTION,
    Ee.CENTER,
    Ee.COL,
    Ee.COLGROUP,
    Ee.DD,
    Ee.DETAILS,
    Ee.DIR,
    Ee.DIV,
    Ee.DL,
    Ee.DT,
    Ee.EMBED,
    Ee.FIELDSET,
    Ee.FIGCAPTION,
    Ee.FIGURE,
    Ee.FOOTER,
    Ee.FORM,
    Ee.FRAME,
    Ee.FRAMESET,
    Ee.H1,
    Ee.H2,
    Ee.H3,
    Ee.H4,
    Ee.H5,
    Ee.H6,
    Ee.HEAD,
    Ee.HEADER,
    Ee.HGROUP,
    Ee.HR,
    Ee.HTML,
    Ee.IFRAME,
    Ee.IMG,
    Ee.INPUT,
    Ee.LI,
    Ee.LINK,
    Ee.LISTING,
    Ee.MAIN,
    Ee.MARQUEE,
    Ee.MENU,
    Ee.META,
    Ee.NAV,
    Ee.NOEMBED,
    Ee.NOFRAMES,
    Ee.NOSCRIPT,
    Ee.OBJECT,
    Ee.OL,
    Ee.P,
    Ee.PARAM,
    Ee.PLAINTEXT,
    Ee.PRE,
    Ee.SCRIPT,
    Ee.SECTION,
    Ee.SELECT,
    Ee.SOURCE,
    Ee.STYLE,
    Ee.SUMMARY,
    Ee.TABLE,
    Ee.TBODY,
    Ee.TD,
    Ee.TEMPLATE,
    Ee.TEXTAREA,
    Ee.TFOOT,
    Ee.TH,
    Ee.THEAD,
    Ee.TITLE,
    Ee.TR,
    Ee.TRACK,
    Ee.UL,
    Ee.WBR,
    Ee.XMP
  ]),
  [ge.MATHML]: /* @__PURE__ */ new Set([Ee.MI, Ee.MO, Ee.MN, Ee.MS, Ee.MTEXT, Ee.ANNOTATION_XML]),
  [ge.SVG]: /* @__PURE__ */ new Set([Ee.TITLE, Ee.FOREIGN_OBJECT, Ee.DESC]),
  [ge.XLINK]: /* @__PURE__ */ new Set(),
  [ge.XML]: /* @__PURE__ */ new Set(),
  [ge.XMLNS]: /* @__PURE__ */ new Set()
}, Bp = /* @__PURE__ */ new Set([Ee.H1, Ee.H2, Ee.H3, Ee.H4, Ee.H5, Ee.H6]);
te.STYLE, te.SCRIPT, te.XMP, te.IFRAME, te.NOEMBED, te.NOFRAMES, te.PLAINTEXT;
var B;
(function(e) {
  e[e.DATA = 0] = "DATA", e[e.RCDATA = 1] = "RCDATA", e[e.RAWTEXT = 2] = "RAWTEXT", e[e.SCRIPT_DATA = 3] = "SCRIPT_DATA", e[e.PLAINTEXT = 4] = "PLAINTEXT", e[e.TAG_OPEN = 5] = "TAG_OPEN", e[e.END_TAG_OPEN = 6] = "END_TAG_OPEN", e[e.TAG_NAME = 7] = "TAG_NAME", e[e.RCDATA_LESS_THAN_SIGN = 8] = "RCDATA_LESS_THAN_SIGN", e[e.RCDATA_END_TAG_OPEN = 9] = "RCDATA_END_TAG_OPEN", e[e.RCDATA_END_TAG_NAME = 10] = "RCDATA_END_TAG_NAME", e[e.RAWTEXT_LESS_THAN_SIGN = 11] = "RAWTEXT_LESS_THAN_SIGN", e[e.RAWTEXT_END_TAG_OPEN = 12] = "RAWTEXT_END_TAG_OPEN", e[e.RAWTEXT_END_TAG_NAME = 13] = "RAWTEXT_END_TAG_NAME", e[e.SCRIPT_DATA_LESS_THAN_SIGN = 14] = "SCRIPT_DATA_LESS_THAN_SIGN", e[e.SCRIPT_DATA_END_TAG_OPEN = 15] = "SCRIPT_DATA_END_TAG_OPEN", e[e.SCRIPT_DATA_END_TAG_NAME = 16] = "SCRIPT_DATA_END_TAG_NAME", e[e.SCRIPT_DATA_ESCAPE_START = 17] = "SCRIPT_DATA_ESCAPE_START", e[e.SCRIPT_DATA_ESCAPE_START_DASH = 18] = "SCRIPT_DATA_ESCAPE_START_DASH", e[e.SCRIPT_DATA_ESCAPED = 19] = "SCRIPT_DATA_ESCAPED", e[e.SCRIPT_DATA_ESCAPED_DASH = 20] = "SCRIPT_DATA_ESCAPED_DASH", e[e.SCRIPT_DATA_ESCAPED_DASH_DASH = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_NAME = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_START = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START", e[e.SCRIPT_DATA_DOUBLE_ESCAPED = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_END = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END", e[e.BEFORE_ATTRIBUTE_NAME = 31] = "BEFORE_ATTRIBUTE_NAME", e[e.ATTRIBUTE_NAME = 32] = "ATTRIBUTE_NAME", e[e.AFTER_ATTRIBUTE_NAME = 33] = "AFTER_ATTRIBUTE_NAME", e[e.BEFORE_ATTRIBUTE_VALUE = 34] = "BEFORE_ATTRIBUTE_VALUE", e[e.ATTRIBUTE_VALUE_DOUBLE_QUOTED = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED", e[e.ATTRIBUTE_VALUE_SINGLE_QUOTED = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED", e[e.ATTRIBUTE_VALUE_UNQUOTED = 37] = "ATTRIBUTE_VALUE_UNQUOTED", e[e.AFTER_ATTRIBUTE_VALUE_QUOTED = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED", e[e.SELF_CLOSING_START_TAG = 39] = "SELF_CLOSING_START_TAG", e[e.BOGUS_COMMENT = 40] = "BOGUS_COMMENT", e[e.MARKUP_DECLARATION_OPEN = 41] = "MARKUP_DECLARATION_OPEN", e[e.COMMENT_START = 42] = "COMMENT_START", e[e.COMMENT_START_DASH = 43] = "COMMENT_START_DASH", e[e.COMMENT = 44] = "COMMENT", e[e.COMMENT_LESS_THAN_SIGN = 45] = "COMMENT_LESS_THAN_SIGN", e[e.COMMENT_LESS_THAN_SIGN_BANG = 46] = "COMMENT_LESS_THAN_SIGN_BANG", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH", e[e.COMMENT_END_DASH = 49] = "COMMENT_END_DASH", e[e.COMMENT_END = 50] = "COMMENT_END", e[e.COMMENT_END_BANG = 51] = "COMMENT_END_BANG", e[e.DOCTYPE = 52] = "DOCTYPE", e[e.BEFORE_DOCTYPE_NAME = 53] = "BEFORE_DOCTYPE_NAME", e[e.DOCTYPE_NAME = 54] = "DOCTYPE_NAME", e[e.AFTER_DOCTYPE_NAME = 55] = "AFTER_DOCTYPE_NAME", e[e.AFTER_DOCTYPE_PUBLIC_KEYWORD = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD", e[e.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER", e[e.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER", e[e.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS", e[e.AFTER_DOCTYPE_SYSTEM_KEYWORD = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD", e[e.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER", e[e.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER", e[e.BOGUS_DOCTYPE = 67] = "BOGUS_DOCTYPE", e[e.CDATA_SECTION = 68] = "CDATA_SECTION", e[e.CDATA_SECTION_BRACKET = 69] = "CDATA_SECTION_BRACKET", e[e.CDATA_SECTION_END = 70] = "CDATA_SECTION_END", e[e.CHARACTER_REFERENCE = 71] = "CHARACTER_REFERENCE", e[e.AMBIGUOUS_AMPERSAND = 72] = "AMBIGUOUS_AMPERSAND";
})(B || (B = {}));
const Lt = {
  DATA: B.DATA,
  RCDATA: B.RCDATA,
  RAWTEXT: B.RAWTEXT,
  SCRIPT_DATA: B.SCRIPT_DATA,
  PLAINTEXT: B.PLAINTEXT,
  CDATA_SECTION: B.CDATA_SECTION
};
function OB(e) {
  return e >= L.DIGIT_0 && e <= L.DIGIT_9;
}
function Na(e) {
  return e >= L.LATIN_CAPITAL_A && e <= L.LATIN_CAPITAL_Z;
}
function LB(e) {
  return e >= L.LATIN_SMALL_A && e <= L.LATIN_SMALL_Z;
}
function or(e) {
  return LB(e) || Na(e);
}
function rv(e) {
  return or(e) || OB(e);
}
function vi(e) {
  return e + 32;
}
function TS(e) {
  return e === L.SPACE || e === L.LINE_FEED || e === L.TABULATION || e === L.FORM_FEED;
}
function av(e) {
  return TS(e) || e === L.SOLIDUS || e === L.GREATER_THAN_SIGN;
}
function DB(e) {
  return e === L.NULL ? ie.nullCharacterReference : e > 1114111 ? ie.characterReferenceOutsideUnicodeRange : mS(e) ? ie.surrogateCharacterReference : hS(e) ? ie.noncharacterCharacterReference : gS(e) || e === L.CARRIAGE_RETURN ? ie.controlCharacterReference : null;
}
class MB {
  constructor(t, n) {
    this.options = t, this.handler = n, this.paused = !1, this.inLoop = !1, this.inForeignNode = !1, this.lastStartTagName = "", this.active = !1, this.state = B.DATA, this.returnState = B.DATA, this.entityStartPos = 0, this.consumedAfterSnapshot = -1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = { name: "", value: "" }, this.preprocessor = new vB(n), this.currentLocation = this.getCurrentLocation(-1), this.entityDecoder = new yS(ES, (r, a) => {
      this.preprocessor.pos = this.entityStartPos + a - 1, this._flushCodePointConsumedAsCharacterReference(r);
    }, n.onParseError ? {
      missingSemicolonAfterCharacterReference: () => {
        this._err(ie.missingSemicolonAfterCharacterReference, 1);
      },
      absenceOfDigitsInNumericCharacterReference: (r) => {
        this._err(ie.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + r);
      },
      validateNumericCharacterReference: (r) => {
        const a = DB(r);
        a && this._err(a, 1);
      }
    } : void 0);
  }
  //Errors
  _err(t, n = 0) {
    var r, a;
    (a = (r = this.handler).onParseError) === null || a === void 0 || a.call(r, this.preprocessor.getError(t, n));
  }
  // NOTE: `offset` may never run across line boundaries.
  getCurrentLocation(t) {
    return this.options.sourceCodeLocationInfo ? {
      startLine: this.preprocessor.line,
      startCol: this.preprocessor.col - t,
      startOffset: this.preprocessor.offset - t,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    } : null;
  }
  _runParsingLoop() {
    if (!this.inLoop) {
      for (this.inLoop = !0; this.active && !this.paused; ) {
        this.consumedAfterSnapshot = 0;
        const t = this._consume();
        this._ensureHibernation() || this._callState(t);
      }
      this.inLoop = !1;
    }
  }
  //API
  pause() {
    this.paused = !0;
  }
  resume(t) {
    if (!this.paused)
      throw new Error("Parser was already resumed");
    this.paused = !1, !this.inLoop && (this._runParsingLoop(), this.paused || t == null || t());
  }
  write(t, n, r) {
    this.active = !0, this.preprocessor.write(t, n), this._runParsingLoop(), this.paused || r == null || r();
  }
  insertHtmlAtCurrentPos(t) {
    this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(t), this._runParsingLoop();
  }
  //Hibernation
  _ensureHibernation() {
    return this.preprocessor.endOfChunkHit ? (this.preprocessor.retreat(this.consumedAfterSnapshot), this.consumedAfterSnapshot = 0, this.active = !1, !0) : !1;
  }
  //Consumption
  _consume() {
    return this.consumedAfterSnapshot++, this.preprocessor.advance();
  }
  _advanceBy(t) {
    this.consumedAfterSnapshot += t;
    for (let n = 0; n < t; n++)
      this.preprocessor.advance();
  }
  _consumeSequenceIfMatch(t, n) {
    return this.preprocessor.startsWith(t, n) ? (this._advanceBy(t.length - 1), !0) : !1;
  }
  //Token creation
  _createStartTagToken() {
    this.currentToken = {
      type: Qe.START_TAG,
      tagName: "",
      tagID: p.UNKNOWN,
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: [],
      location: this.getCurrentLocation(1)
    };
  }
  _createEndTagToken() {
    this.currentToken = {
      type: Qe.END_TAG,
      tagName: "",
      tagID: p.UNKNOWN,
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: [],
      location: this.getCurrentLocation(2)
    };
  }
  _createCommentToken(t) {
    this.currentToken = {
      type: Qe.COMMENT,
      data: "",
      location: this.getCurrentLocation(t)
    };
  }
  _createDoctypeToken(t) {
    this.currentToken = {
      type: Qe.DOCTYPE,
      name: t,
      forceQuirks: !1,
      publicId: null,
      systemId: null,
      location: this.currentLocation
    };
  }
  _createCharacterToken(t, n) {
    this.currentCharacterToken = {
      type: t,
      chars: n,
      location: this.currentLocation
    };
  }
  //Tag attributes
  _createAttr(t) {
    this.currentAttr = {
      name: t,
      value: ""
    }, this.currentLocation = this.getCurrentLocation(0);
  }
  _leaveAttrName() {
    var t, n;
    const r = this.currentToken;
    if (bS(r, this.currentAttr.name) === null) {
      if (r.attrs.push(this.currentAttr), r.location && this.currentLocation) {
        const a = (t = (n = r.location).attrs) !== null && t !== void 0 ? t : n.attrs = /* @__PURE__ */ Object.create(null);
        a[this.currentAttr.name] = this.currentLocation, this._leaveAttrValue();
      }
    } else
      this._err(ie.duplicateAttribute);
  }
  _leaveAttrValue() {
    this.currentLocation && (this.currentLocation.endLine = this.preprocessor.line, this.currentLocation.endCol = this.preprocessor.col, this.currentLocation.endOffset = this.preprocessor.offset);
  }
  //Token emission
  prepareToken(t) {
    this._emitCurrentCharacterToken(t.location), this.currentToken = null, t.location && (t.location.endLine = this.preprocessor.line, t.location.endCol = this.preprocessor.col + 1, t.location.endOffset = this.preprocessor.offset + 1), this.currentLocation = this.getCurrentLocation(-1);
  }
  emitCurrentTagToken() {
    const t = this.currentToken;
    this.prepareToken(t), t.tagID = da(t.tagName), t.type === Qe.START_TAG ? (this.lastStartTagName = t.tagName, this.handler.onStartTag(t)) : (t.attrs.length > 0 && this._err(ie.endTagWithAttributes), t.selfClosing && this._err(ie.endTagWithTrailingSolidus), this.handler.onEndTag(t)), this.preprocessor.dropParsedChunk();
  }
  emitCurrentComment(t) {
    this.prepareToken(t), this.handler.onComment(t), this.preprocessor.dropParsedChunk();
  }
  emitCurrentDoctype(t) {
    this.prepareToken(t), this.handler.onDoctype(t), this.preprocessor.dropParsedChunk();
  }
  _emitCurrentCharacterToken(t) {
    if (this.currentCharacterToken) {
      switch (t && this.currentCharacterToken.location && (this.currentCharacterToken.location.endLine = t.startLine, this.currentCharacterToken.location.endCol = t.startCol, this.currentCharacterToken.location.endOffset = t.startOffset), this.currentCharacterToken.type) {
        case Qe.CHARACTER: {
          this.handler.onCharacter(this.currentCharacterToken);
          break;
        }
        case Qe.NULL_CHARACTER: {
          this.handler.onNullCharacter(this.currentCharacterToken);
          break;
        }
        case Qe.WHITESPACE_CHARACTER: {
          this.handler.onWhitespaceCharacter(this.currentCharacterToken);
          break;
        }
      }
      this.currentCharacterToken = null;
    }
  }
  _emitEOFToken() {
    const t = this.getCurrentLocation(0);
    t && (t.endLine = t.startLine, t.endCol = t.startCol, t.endOffset = t.startOffset), this._emitCurrentCharacterToken(t), this.handler.onEof({ type: Qe.EOF, location: t }), this.active = !1;
  }
  //Characters emission
  //OPTIMIZATION: The specification uses only one type of character token (one token per character).
  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
  //If we have a sequence of characters that belong to the same group, the parser can process it
  //as a single solid character token.
  //So, there are 3 types of character tokens in parse5:
  //1)TokenType.NULL_CHARACTER - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
  //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
  //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
  _appendCharToCurrentCharacterToken(t, n) {
    if (this.currentCharacterToken)
      if (this.currentCharacterToken.type === t) {
        this.currentCharacterToken.chars += n;
        return;
      } else
        this.currentLocation = this.getCurrentLocation(0), this._emitCurrentCharacterToken(this.currentLocation), this.preprocessor.dropParsedChunk();
    this._createCharacterToken(t, n);
  }
  _emitCodePoint(t) {
    const n = TS(t) ? Qe.WHITESPACE_CHARACTER : t === L.NULL ? Qe.NULL_CHARACTER : Qe.CHARACTER;
    this._appendCharToCurrentCharacterToken(n, String.fromCodePoint(t));
  }
  //NOTE: used when we emit characters explicitly.
  //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.
  _emitChars(t) {
    this._appendCharToCurrentCharacterToken(Qe.CHARACTER, t);
  }
  // Character reference helpers
  _startCharacterReference() {
    this.returnState = this.state, this.state = B.CHARACTER_REFERENCE, this.entityStartPos = this.preprocessor.pos, this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? Jn.Attribute : Jn.Legacy);
  }
  _isCharacterReferenceInAttribute() {
    return this.returnState === B.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === B.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === B.ATTRIBUTE_VALUE_UNQUOTED;
  }
  _flushCodePointConsumedAsCharacterReference(t) {
    this._isCharacterReferenceInAttribute() ? this.currentAttr.value += String.fromCodePoint(t) : this._emitCodePoint(t);
  }
  // Calling states this way turns out to be much faster than any other approach.
  _callState(t) {
    switch (this.state) {
      case B.DATA: {
        this._stateData(t);
        break;
      }
      case B.RCDATA: {
        this._stateRcdata(t);
        break;
      }
      case B.RAWTEXT: {
        this._stateRawtext(t);
        break;
      }
      case B.SCRIPT_DATA: {
        this._stateScriptData(t);
        break;
      }
      case B.PLAINTEXT: {
        this._statePlaintext(t);
        break;
      }
      case B.TAG_OPEN: {
        this._stateTagOpen(t);
        break;
      }
      case B.END_TAG_OPEN: {
        this._stateEndTagOpen(t);
        break;
      }
      case B.TAG_NAME: {
        this._stateTagName(t);
        break;
      }
      case B.RCDATA_LESS_THAN_SIGN: {
        this._stateRcdataLessThanSign(t);
        break;
      }
      case B.RCDATA_END_TAG_OPEN: {
        this._stateRcdataEndTagOpen(t);
        break;
      }
      case B.RCDATA_END_TAG_NAME: {
        this._stateRcdataEndTagName(t);
        break;
      }
      case B.RAWTEXT_LESS_THAN_SIGN: {
        this._stateRawtextLessThanSign(t);
        break;
      }
      case B.RAWTEXT_END_TAG_OPEN: {
        this._stateRawtextEndTagOpen(t);
        break;
      }
      case B.RAWTEXT_END_TAG_NAME: {
        this._stateRawtextEndTagName(t);
        break;
      }
      case B.SCRIPT_DATA_LESS_THAN_SIGN: {
        this._stateScriptDataLessThanSign(t);
        break;
      }
      case B.SCRIPT_DATA_END_TAG_OPEN: {
        this._stateScriptDataEndTagOpen(t);
        break;
      }
      case B.SCRIPT_DATA_END_TAG_NAME: {
        this._stateScriptDataEndTagName(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPE_START: {
        this._stateScriptDataEscapeStart(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPE_START_DASH: {
        this._stateScriptDataEscapeStartDash(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED: {
        this._stateScriptDataEscaped(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED_DASH: {
        this._stateScriptDataEscapedDash(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED_DASH_DASH: {
        this._stateScriptDataEscapedDashDash(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataEscapedLessThanSign(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {
        this._stateScriptDataEscapedEndTagOpen(t);
        break;
      }
      case B.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {
        this._stateScriptDataEscapedEndTagName(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPE_START: {
        this._stateScriptDataDoubleEscapeStart(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPED: {
        this._stateScriptDataDoubleEscaped(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {
        this._stateScriptDataDoubleEscapedDash(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {
        this._stateScriptDataDoubleEscapedDashDash(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {
        this._stateScriptDataDoubleEscapedLessThanSign(t);
        break;
      }
      case B.SCRIPT_DATA_DOUBLE_ESCAPE_END: {
        this._stateScriptDataDoubleEscapeEnd(t);
        break;
      }
      case B.BEFORE_ATTRIBUTE_NAME: {
        this._stateBeforeAttributeName(t);
        break;
      }
      case B.ATTRIBUTE_NAME: {
        this._stateAttributeName(t);
        break;
      }
      case B.AFTER_ATTRIBUTE_NAME: {
        this._stateAfterAttributeName(t);
        break;
      }
      case B.BEFORE_ATTRIBUTE_VALUE: {
        this._stateBeforeAttributeValue(t);
        break;
      }
      case B.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {
        this._stateAttributeValueDoubleQuoted(t);
        break;
      }
      case B.ATTRIBUTE_VALUE_SINGLE_QUOTED: {
        this._stateAttributeValueSingleQuoted(t);
        break;
      }
      case B.ATTRIBUTE_VALUE_UNQUOTED: {
        this._stateAttributeValueUnquoted(t);
        break;
      }
      case B.AFTER_ATTRIBUTE_VALUE_QUOTED: {
        this._stateAfterAttributeValueQuoted(t);
        break;
      }
      case B.SELF_CLOSING_START_TAG: {
        this._stateSelfClosingStartTag(t);
        break;
      }
      case B.BOGUS_COMMENT: {
        this._stateBogusComment(t);
        break;
      }
      case B.MARKUP_DECLARATION_OPEN: {
        this._stateMarkupDeclarationOpen(t);
        break;
      }
      case B.COMMENT_START: {
        this._stateCommentStart(t);
        break;
      }
      case B.COMMENT_START_DASH: {
        this._stateCommentStartDash(t);
        break;
      }
      case B.COMMENT: {
        this._stateComment(t);
        break;
      }
      case B.COMMENT_LESS_THAN_SIGN: {
        this._stateCommentLessThanSign(t);
        break;
      }
      case B.COMMENT_LESS_THAN_SIGN_BANG: {
        this._stateCommentLessThanSignBang(t);
        break;
      }
      case B.COMMENT_LESS_THAN_SIGN_BANG_DASH: {
        this._stateCommentLessThanSignBangDash(t);
        break;
      }
      case B.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {
        this._stateCommentLessThanSignBangDashDash(t);
        break;
      }
      case B.COMMENT_END_DASH: {
        this._stateCommentEndDash(t);
        break;
      }
      case B.COMMENT_END: {
        this._stateCommentEnd(t);
        break;
      }
      case B.COMMENT_END_BANG: {
        this._stateCommentEndBang(t);
        break;
      }
      case B.DOCTYPE: {
        this._stateDoctype(t);
        break;
      }
      case B.BEFORE_DOCTYPE_NAME: {
        this._stateBeforeDoctypeName(t);
        break;
      }
      case B.DOCTYPE_NAME: {
        this._stateDoctypeName(t);
        break;
      }
      case B.AFTER_DOCTYPE_NAME: {
        this._stateAfterDoctypeName(t);
        break;
      }
      case B.AFTER_DOCTYPE_PUBLIC_KEYWORD: {
        this._stateAfterDoctypePublicKeyword(t);
        break;
      }
      case B.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateBeforeDoctypePublicIdentifier(t);
        break;
      }
      case B.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypePublicIdentifierDoubleQuoted(t);
        break;
      }
      case B.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypePublicIdentifierSingleQuoted(t);
        break;
      }
      case B.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {
        this._stateAfterDoctypePublicIdentifier(t);
        break;
      }
      case B.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {
        this._stateBetweenDoctypePublicAndSystemIdentifiers(t);
        break;
      }
      case B.AFTER_DOCTYPE_SYSTEM_KEYWORD: {
        this._stateAfterDoctypeSystemKeyword(t);
        break;
      }
      case B.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateBeforeDoctypeSystemIdentifier(t);
        break;
      }
      case B.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {
        this._stateDoctypeSystemIdentifierDoubleQuoted(t);
        break;
      }
      case B.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {
        this._stateDoctypeSystemIdentifierSingleQuoted(t);
        break;
      }
      case B.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {
        this._stateAfterDoctypeSystemIdentifier(t);
        break;
      }
      case B.BOGUS_DOCTYPE: {
        this._stateBogusDoctype(t);
        break;
      }
      case B.CDATA_SECTION: {
        this._stateCdataSection(t);
        break;
      }
      case B.CDATA_SECTION_BRACKET: {
        this._stateCdataSectionBracket(t);
        break;
      }
      case B.CDATA_SECTION_END: {
        this._stateCdataSectionEnd(t);
        break;
      }
      case B.CHARACTER_REFERENCE: {
        this._stateCharacterReference();
        break;
      }
      case B.AMBIGUOUS_AMPERSAND: {
        this._stateAmbiguousAmpersand(t);
        break;
      }
      default:
        throw new Error("Unknown state");
    }
  }
  // State machine
  // Data state
  //------------------------------------------------------------------
  _stateData(t) {
    switch (t) {
      case L.LESS_THAN_SIGN: {
        this.state = B.TAG_OPEN;
        break;
      }
      case L.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitCodePoint(t);
        break;
      }
      case L.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  //  RCDATA state
  //------------------------------------------------------------------
  _stateRcdata(t) {
    switch (t) {
      case L.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.RCDATA_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // RAWTEXT state
  //------------------------------------------------------------------
  _stateRawtext(t) {
    switch (t) {
      case L.LESS_THAN_SIGN: {
        this.state = B.RAWTEXT_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data state
  //------------------------------------------------------------------
  _stateScriptData(t) {
    switch (t) {
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // PLAINTEXT state
  //------------------------------------------------------------------
  _statePlaintext(t) {
    switch (t) {
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Tag open state
  //------------------------------------------------------------------
  _stateTagOpen(t) {
    if (or(t))
      this._createStartTagToken(), this.state = B.TAG_NAME, this._stateTagName(t);
    else
      switch (t) {
        case L.EXCLAMATION_MARK: {
          this.state = B.MARKUP_DECLARATION_OPEN;
          break;
        }
        case L.SOLIDUS: {
          this.state = B.END_TAG_OPEN;
          break;
        }
        case L.QUESTION_MARK: {
          this._err(ie.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(1), this.state = B.BOGUS_COMMENT, this._stateBogusComment(t);
          break;
        }
        case L.EOF: {
          this._err(ie.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken();
          break;
        }
        default:
          this._err(ie.invalidFirstCharacterOfTagName), this._emitChars("<"), this.state = B.DATA, this._stateData(t);
      }
  }
  // End tag open state
  //------------------------------------------------------------------
  _stateEndTagOpen(t) {
    if (or(t))
      this._createEndTagToken(), this.state = B.TAG_NAME, this._stateTagName(t);
    else
      switch (t) {
        case L.GREATER_THAN_SIGN: {
          this._err(ie.missingEndTagName), this.state = B.DATA;
          break;
        }
        case L.EOF: {
          this._err(ie.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken();
          break;
        }
        default:
          this._err(ie.invalidFirstCharacterOfTagName), this._createCommentToken(2), this.state = B.BOGUS_COMMENT, this._stateBogusComment(t);
      }
  }
  // Tag name state
  //------------------------------------------------------------------
  _stateTagName(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case L.SOLIDUS: {
        this.state = B.SELF_CLOSING_START_TAG;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.tagName += St;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        n.tagName += String.fromCodePoint(Na(t) ? vi(t) : t);
    }
  }
  // RCDATA less-than sign state
  //------------------------------------------------------------------
  _stateRcdataLessThanSign(t) {
    t === L.SOLIDUS ? this.state = B.RCDATA_END_TAG_OPEN : (this._emitChars("<"), this.state = B.RCDATA, this._stateRcdata(t));
  }
  // RCDATA end tag open state
  //------------------------------------------------------------------
  _stateRcdataEndTagOpen(t) {
    or(t) ? (this.state = B.RCDATA_END_TAG_NAME, this._stateRcdataEndTagName(t)) : (this._emitChars("</"), this.state = B.RCDATA, this._stateRcdata(t));
  }
  handleSpecialEndTag(t) {
    if (!this.preprocessor.startsWith(this.lastStartTagName, !1))
      return !this._ensureHibernation();
    this._createEndTagToken();
    const n = this.currentToken;
    switch (n.tagName = this.lastStartTagName, this.preprocessor.peek(this.lastStartTagName.length)) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        return this._advanceBy(this.lastStartTagName.length), this.state = B.BEFORE_ATTRIBUTE_NAME, !1;
      case L.SOLIDUS:
        return this._advanceBy(this.lastStartTagName.length), this.state = B.SELF_CLOSING_START_TAG, !1;
      case L.GREATER_THAN_SIGN:
        return this._advanceBy(this.lastStartTagName.length), this.emitCurrentTagToken(), this.state = B.DATA, !1;
      default:
        return !this._ensureHibernation();
    }
  }
  // RCDATA end tag name state
  //------------------------------------------------------------------
  _stateRcdataEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = B.RCDATA, this._stateRcdata(t));
  }
  // RAWTEXT less-than sign state
  //------------------------------------------------------------------
  _stateRawtextLessThanSign(t) {
    t === L.SOLIDUS ? this.state = B.RAWTEXT_END_TAG_OPEN : (this._emitChars("<"), this.state = B.RAWTEXT, this._stateRawtext(t));
  }
  // RAWTEXT end tag open state
  //------------------------------------------------------------------
  _stateRawtextEndTagOpen(t) {
    or(t) ? (this.state = B.RAWTEXT_END_TAG_NAME, this._stateRawtextEndTagName(t)) : (this._emitChars("</"), this.state = B.RAWTEXT, this._stateRawtext(t));
  }
  // RAWTEXT end tag name state
  //------------------------------------------------------------------
  _stateRawtextEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = B.RAWTEXT, this._stateRawtext(t));
  }
  // Script data less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataLessThanSign(t) {
    switch (t) {
      case L.SOLIDUS: {
        this.state = B.SCRIPT_DATA_END_TAG_OPEN;
        break;
      }
      case L.EXCLAMATION_MARK: {
        this.state = B.SCRIPT_DATA_ESCAPE_START, this._emitChars("<!");
        break;
      }
      default:
        this._emitChars("<"), this.state = B.SCRIPT_DATA, this._stateScriptData(t);
    }
  }
  // Script data end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEndTagOpen(t) {
    or(t) ? (this.state = B.SCRIPT_DATA_END_TAG_NAME, this._stateScriptDataEndTagName(t)) : (this._emitChars("</"), this.state = B.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = B.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escape start state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStart(t) {
    t === L.HYPHEN_MINUS ? (this.state = B.SCRIPT_DATA_ESCAPE_START_DASH, this._emitChars("-")) : (this.state = B.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escape start dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapeStartDash(t) {
    t === L.HYPHEN_MINUS ? (this.state = B.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-")) : (this.state = B.SCRIPT_DATA, this._stateScriptData(t));
  }
  // Script data escaped state
  //------------------------------------------------------------------
  _stateScriptDataEscaped(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.SCRIPT_DATA_ESCAPED_DASH, this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDash(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.state = B.SCRIPT_DATA_ESCAPED, this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = B.SCRIPT_DATA_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataEscapedDashDash(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.SCRIPT_DATA, this._emitChars(">");
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.state = B.SCRIPT_DATA_ESCAPED, this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = B.SCRIPT_DATA_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataEscapedLessThanSign(t) {
    t === L.SOLIDUS ? this.state = B.SCRIPT_DATA_ESCAPED_END_TAG_OPEN : or(t) ? (this._emitChars("<"), this.state = B.SCRIPT_DATA_DOUBLE_ESCAPE_START, this._stateScriptDataDoubleEscapeStart(t)) : (this._emitChars("<"), this.state = B.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data escaped end tag open state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagOpen(t) {
    or(t) ? (this.state = B.SCRIPT_DATA_ESCAPED_END_TAG_NAME, this._stateScriptDataEscapedEndTagName(t)) : (this._emitChars("</"), this.state = B.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data escaped end tag name state
  //------------------------------------------------------------------
  _stateScriptDataEscapedEndTagName(t) {
    this.handleSpecialEndTag(t) && (this._emitChars("</"), this.state = B.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data double escape start state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeStart(t) {
    if (this.preprocessor.startsWith(hn.SCRIPT, !1) && av(this.preprocessor.peek(hn.SCRIPT.length))) {
      this._emitCodePoint(t);
      for (let n = 0; n < hn.SCRIPT.length; n++)
        this._emitCodePoint(this._consume());
      this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED;
    } else this._ensureHibernation() || (this.state = B.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(t));
  }
  // Script data double escaped state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscaped(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED_DASH, this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // Script data double escaped dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDash(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH, this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data double escaped dash dash state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedDashDash(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this._emitChars("-");
        break;
      }
      case L.LESS_THAN_SIGN: {
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.SCRIPT_DATA, this._emitChars(">");
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(St);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
        break;
      }
      default:
        this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(t);
    }
  }
  // Script data double escaped less-than sign state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapedLessThanSign(t) {
    t === L.SOLIDUS ? (this.state = B.SCRIPT_DATA_DOUBLE_ESCAPE_END, this._emitChars("/")) : (this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(t));
  }
  // Script data double escape end state
  //------------------------------------------------------------------
  _stateScriptDataDoubleEscapeEnd(t) {
    if (this.preprocessor.startsWith(hn.SCRIPT, !1) && av(this.preprocessor.peek(hn.SCRIPT.length))) {
      this._emitCodePoint(t);
      for (let n = 0; n < hn.SCRIPT.length; n++)
        this._emitCodePoint(this._consume());
      this.state = B.SCRIPT_DATA_ESCAPED;
    } else this._ensureHibernation() || (this.state = B.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(t));
  }
  // Before attribute name state
  //------------------------------------------------------------------
  _stateBeforeAttributeName(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.SOLIDUS:
      case L.GREATER_THAN_SIGN:
      case L.EOF: {
        this.state = B.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(t);
        break;
      }
      case L.EQUALS_SIGN: {
        this._err(ie.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = B.ATTRIBUTE_NAME;
        break;
      }
      default:
        this._createAttr(""), this.state = B.ATTRIBUTE_NAME, this._stateAttributeName(t);
    }
  }
  // Attribute name state
  //------------------------------------------------------------------
  _stateAttributeName(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
      case L.SOLIDUS:
      case L.GREATER_THAN_SIGN:
      case L.EOF: {
        this._leaveAttrName(), this.state = B.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(t);
        break;
      }
      case L.EQUALS_SIGN: {
        this._leaveAttrName(), this.state = B.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case L.QUOTATION_MARK:
      case L.APOSTROPHE:
      case L.LESS_THAN_SIGN: {
        this._err(ie.unexpectedCharacterInAttributeName), this.currentAttr.name += String.fromCodePoint(t);
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.currentAttr.name += St;
        break;
      }
      default:
        this.currentAttr.name += String.fromCodePoint(Na(t) ? vi(t) : t);
    }
  }
  // After attribute name state
  //------------------------------------------------------------------
  _stateAfterAttributeName(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.SOLIDUS: {
        this.state = B.SELF_CLOSING_START_TAG;
        break;
      }
      case L.EQUALS_SIGN: {
        this.state = B.BEFORE_ATTRIBUTE_VALUE;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._createAttr(""), this.state = B.ATTRIBUTE_NAME, this._stateAttributeName(t);
    }
  }
  // Before attribute value state
  //------------------------------------------------------------------
  _stateBeforeAttributeValue(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.QUOTATION_MARK: {
        this.state = B.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        this.state = B.ATTRIBUTE_VALUE_SINGLE_QUOTED;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.missingAttributeValue), this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      default:
        this.state = B.ATTRIBUTE_VALUE_UNQUOTED, this._stateAttributeValueUnquoted(t);
    }
  }
  // Attribute value (double-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueDoubleQuoted(t) {
    switch (t) {
      case L.QUOTATION_MARK: {
        this.state = B.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case L.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.currentAttr.value += St;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // Attribute value (single-quoted) state
  //------------------------------------------------------------------
  _stateAttributeValueSingleQuoted(t) {
    switch (t) {
      case L.APOSTROPHE: {
        this.state = B.AFTER_ATTRIBUTE_VALUE_QUOTED;
        break;
      }
      case L.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.currentAttr.value += St;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // Attribute value (unquoted) state
  //------------------------------------------------------------------
  _stateAttributeValueUnquoted(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this._leaveAttrValue(), this.state = B.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case L.AMPERSAND: {
        this._startCharacterReference();
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._leaveAttrValue(), this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), this.currentAttr.value += St;
        break;
      }
      case L.QUOTATION_MARK:
      case L.APOSTROPHE:
      case L.LESS_THAN_SIGN:
      case L.EQUALS_SIGN:
      case L.GRAVE_ACCENT: {
        this._err(ie.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += String.fromCodePoint(t);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this.currentAttr.value += String.fromCodePoint(t);
    }
  }
  // After attribute value (quoted) state
  //------------------------------------------------------------------
  _stateAfterAttributeValueQuoted(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this._leaveAttrValue(), this.state = B.BEFORE_ATTRIBUTE_NAME;
        break;
      }
      case L.SOLIDUS: {
        this._leaveAttrValue(), this.state = B.SELF_CLOSING_START_TAG;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._leaveAttrValue(), this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingWhitespaceBetweenAttributes), this.state = B.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(t);
    }
  }
  // Self-closing start tag state
  //------------------------------------------------------------------
  _stateSelfClosingStartTag(t) {
    switch (t) {
      case L.GREATER_THAN_SIGN: {
        const n = this.currentToken;
        n.selfClosing = !0, this.state = B.DATA, this.emitCurrentTagToken();
        break;
      }
      case L.EOF: {
        this._err(ie.eofInTag), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.unexpectedSolidusInTag), this.state = B.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(t);
    }
  }
  // Bogus comment state
  //------------------------------------------------------------------
  _stateBogusComment(t) {
    const n = this.currentToken;
    switch (t) {
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentComment(n);
        break;
      }
      case L.EOF: {
        this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.data += St;
        break;
      }
      default:
        n.data += String.fromCodePoint(t);
    }
  }
  // Markup declaration open state
  //------------------------------------------------------------------
  _stateMarkupDeclarationOpen(t) {
    this._consumeSequenceIfMatch(hn.DASH_DASH, !0) ? (this._createCommentToken(hn.DASH_DASH.length + 1), this.state = B.COMMENT_START) : this._consumeSequenceIfMatch(hn.DOCTYPE, !1) ? (this.currentLocation = this.getCurrentLocation(hn.DOCTYPE.length + 1), this.state = B.DOCTYPE) : this._consumeSequenceIfMatch(hn.CDATA_START, !0) ? this.inForeignNode ? this.state = B.CDATA_SECTION : (this._err(ie.cdataInHtmlContent), this._createCommentToken(hn.CDATA_START.length + 1), this.currentToken.data = "[CDATA[", this.state = B.BOGUS_COMMENT) : this._ensureHibernation() || (this._err(ie.incorrectlyOpenedComment), this._createCommentToken(2), this.state = B.BOGUS_COMMENT, this._stateBogusComment(t));
  }
  // Comment start state
  //------------------------------------------------------------------
  _stateCommentStart(t) {
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.COMMENT_START_DASH;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptClosingOfEmptyComment), this.state = B.DATA;
        const n = this.currentToken;
        this.emitCurrentComment(n);
        break;
      }
      default:
        this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // Comment start dash state
  //------------------------------------------------------------------
  _stateCommentStartDash(t) {
    const n = this.currentToken;
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.COMMENT_END;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptClosingOfEmptyComment), this.state = B.DATA, this.emitCurrentComment(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "-", this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // Comment state
  //------------------------------------------------------------------
  _stateComment(t) {
    const n = this.currentToken;
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.COMMENT_END_DASH;
        break;
      }
      case L.LESS_THAN_SIGN: {
        n.data += "<", this.state = B.COMMENT_LESS_THAN_SIGN;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.data += St;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += String.fromCodePoint(t);
    }
  }
  // Comment less-than sign state
  //------------------------------------------------------------------
  _stateCommentLessThanSign(t) {
    const n = this.currentToken;
    switch (t) {
      case L.EXCLAMATION_MARK: {
        n.data += "!", this.state = B.COMMENT_LESS_THAN_SIGN_BANG;
        break;
      }
      case L.LESS_THAN_SIGN: {
        n.data += "<";
        break;
      }
      default:
        this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // Comment less-than sign bang state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBang(t) {
    t === L.HYPHEN_MINUS ? this.state = B.COMMENT_LESS_THAN_SIGN_BANG_DASH : (this.state = B.COMMENT, this._stateComment(t));
  }
  // Comment less-than sign bang dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDash(t) {
    t === L.HYPHEN_MINUS ? this.state = B.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH : (this.state = B.COMMENT_END_DASH, this._stateCommentEndDash(t));
  }
  // Comment less-than sign bang dash dash state
  //------------------------------------------------------------------
  _stateCommentLessThanSignBangDashDash(t) {
    t !== L.GREATER_THAN_SIGN && t !== L.EOF && this._err(ie.nestedComment), this.state = B.COMMENT_END, this._stateCommentEnd(t);
  }
  // Comment end dash state
  //------------------------------------------------------------------
  _stateCommentEndDash(t) {
    const n = this.currentToken;
    switch (t) {
      case L.HYPHEN_MINUS: {
        this.state = B.COMMENT_END;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "-", this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // Comment end state
  //------------------------------------------------------------------
  _stateCommentEnd(t) {
    const n = this.currentToken;
    switch (t) {
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentComment(n);
        break;
      }
      case L.EXCLAMATION_MARK: {
        this.state = B.COMMENT_END_BANG;
        break;
      }
      case L.HYPHEN_MINUS: {
        n.data += "-";
        break;
      }
      case L.EOF: {
        this._err(ie.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "--", this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // Comment end bang state
  //------------------------------------------------------------------
  _stateCommentEndBang(t) {
    const n = this.currentToken;
    switch (t) {
      case L.HYPHEN_MINUS: {
        n.data += "--!", this.state = B.COMMENT_END_DASH;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.incorrectlyClosedComment), this.state = B.DATA, this.emitCurrentComment(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInComment), this.emitCurrentComment(n), this._emitEOFToken();
        break;
      }
      default:
        n.data += "--!", this.state = B.COMMENT, this._stateComment(t);
    }
  }
  // DOCTYPE state
  //------------------------------------------------------------------
  _stateDoctype(t) {
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.BEFORE_DOCTYPE_NAME;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(t);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), this._createDoctypeToken(null);
        const n = this.currentToken;
        n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingWhitespaceBeforeDoctypeName), this.state = B.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(t);
    }
  }
  // Before DOCTYPE name state
  //------------------------------------------------------------------
  _stateBeforeDoctypeName(t) {
    if (Na(t))
      this._createDoctypeToken(String.fromCharCode(vi(t))), this.state = B.DOCTYPE_NAME;
    else
      switch (t) {
        case L.SPACE:
        case L.LINE_FEED:
        case L.TABULATION:
        case L.FORM_FEED:
          break;
        case L.NULL: {
          this._err(ie.unexpectedNullCharacter), this._createDoctypeToken(St), this.state = B.DOCTYPE_NAME;
          break;
        }
        case L.GREATER_THAN_SIGN: {
          this._err(ie.missingDoctypeName), this._createDoctypeToken(null);
          const n = this.currentToken;
          n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = B.DATA;
          break;
        }
        case L.EOF: {
          this._err(ie.eofInDoctype), this._createDoctypeToken(null);
          const n = this.currentToken;
          n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
          break;
        }
        default:
          this._createDoctypeToken(String.fromCodePoint(t)), this.state = B.DOCTYPE_NAME;
      }
  }
  // DOCTYPE name state
  //------------------------------------------------------------------
  _stateDoctypeName(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.AFTER_DOCTYPE_NAME;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.name += St;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.name += String.fromCodePoint(Na(t) ? vi(t) : t);
    }
  }
  // After DOCTYPE name state
  //------------------------------------------------------------------
  _stateAfterDoctypeName(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._consumeSequenceIfMatch(hn.PUBLIC, !1) ? this.state = B.AFTER_DOCTYPE_PUBLIC_KEYWORD : this._consumeSequenceIfMatch(hn.SYSTEM, !1) ? this.state = B.AFTER_DOCTYPE_SYSTEM_KEYWORD : this._ensureHibernation() || (this._err(ie.invalidCharacterSequenceAfterDoctypeName), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t));
    }
  }
  // After DOCTYPE public keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicKeyword(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case L.QUOTATION_MARK: {
        this._err(ie.missingWhitespaceAfterDoctypePublicKeyword), n.publicId = "", this.state = B.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        this._err(ie.missingWhitespaceAfterDoctypePublicKeyword), n.publicId = "", this.state = B.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.missingDoctypePublicIdentifier), n.forceQuirks = !0, this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypePublicIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Before DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypePublicIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.QUOTATION_MARK: {
        n.publicId = "", this.state = B.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        n.publicId = "", this.state = B.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.missingDoctypePublicIdentifier), n.forceQuirks = !0, this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypePublicIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // DOCTYPE public identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierDoubleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case L.QUOTATION_MARK: {
        this.state = B.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.publicId += St;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptDoctypePublicIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.publicId += String.fromCodePoint(t);
    }
  }
  // DOCTYPE public identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypePublicIdentifierSingleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case L.APOSTROPHE: {
        this.state = B.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.publicId += St;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptDoctypePublicIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.publicId += String.fromCodePoint(t);
    }
  }
  // After DOCTYPE public identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypePublicIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.QUOTATION_MARK: {
        this._err(ie.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        this._err(ie.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Between DOCTYPE public and system identifiers state
  //------------------------------------------------------------------
  _stateBetweenDoctypePublicAndSystemIdentifiers(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.QUOTATION_MARK: {
        n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // After DOCTYPE system keyword state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemKeyword(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED: {
        this.state = B.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case L.QUOTATION_MARK: {
        this._err(ie.missingWhitespaceAfterDoctypeSystemKeyword), n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        this._err(ie.missingWhitespaceAfterDoctypeSystemKeyword), n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.missingDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Before DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateBeforeDoctypeSystemIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.QUOTATION_MARK: {
        n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
        break;
      }
      case L.APOSTROPHE: {
        n.systemId = "", this.state = B.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.missingDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.DATA, this.emitCurrentDoctype(n);
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.missingQuoteBeforeDoctypeSystemIdentifier), n.forceQuirks = !0, this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // DOCTYPE system identifier (double-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierDoubleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case L.QUOTATION_MARK: {
        this.state = B.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.systemId += St;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptDoctypeSystemIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.systemId += String.fromCodePoint(t);
    }
  }
  // DOCTYPE system identifier (single-quoted) state
  //------------------------------------------------------------------
  _stateDoctypeSystemIdentifierSingleQuoted(t) {
    const n = this.currentToken;
    switch (t) {
      case L.APOSTROPHE: {
        this.state = B.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter), n.systemId += St;
        break;
      }
      case L.GREATER_THAN_SIGN: {
        this._err(ie.abruptDoctypeSystemIdentifier), n.forceQuirks = !0, this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        n.systemId += String.fromCodePoint(t);
    }
  }
  // After DOCTYPE system identifier state
  //------------------------------------------------------------------
  _stateAfterDoctypeSystemIdentifier(t) {
    const n = this.currentToken;
    switch (t) {
      case L.SPACE:
      case L.LINE_FEED:
      case L.TABULATION:
      case L.FORM_FEED:
        break;
      case L.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInDoctype), n.forceQuirks = !0, this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
      default:
        this._err(ie.unexpectedCharacterAfterDoctypeSystemIdentifier), this.state = B.BOGUS_DOCTYPE, this._stateBogusDoctype(t);
    }
  }
  // Bogus DOCTYPE state
  //------------------------------------------------------------------
  _stateBogusDoctype(t) {
    const n = this.currentToken;
    switch (t) {
      case L.GREATER_THAN_SIGN: {
        this.emitCurrentDoctype(n), this.state = B.DATA;
        break;
      }
      case L.NULL: {
        this._err(ie.unexpectedNullCharacter);
        break;
      }
      case L.EOF: {
        this.emitCurrentDoctype(n), this._emitEOFToken();
        break;
      }
    }
  }
  // CDATA section state
  //------------------------------------------------------------------
  _stateCdataSection(t) {
    switch (t) {
      case L.RIGHT_SQUARE_BRACKET: {
        this.state = B.CDATA_SECTION_BRACKET;
        break;
      }
      case L.EOF: {
        this._err(ie.eofInCdata), this._emitEOFToken();
        break;
      }
      default:
        this._emitCodePoint(t);
    }
  }
  // CDATA section bracket state
  //------------------------------------------------------------------
  _stateCdataSectionBracket(t) {
    t === L.RIGHT_SQUARE_BRACKET ? this.state = B.CDATA_SECTION_END : (this._emitChars("]"), this.state = B.CDATA_SECTION, this._stateCdataSection(t));
  }
  // CDATA section end state
  //------------------------------------------------------------------
  _stateCdataSectionEnd(t) {
    switch (t) {
      case L.GREATER_THAN_SIGN: {
        this.state = B.DATA;
        break;
      }
      case L.RIGHT_SQUARE_BRACKET: {
        this._emitChars("]");
        break;
      }
      default:
        this._emitChars("]]"), this.state = B.CDATA_SECTION, this._stateCdataSection(t);
    }
  }
  // Character reference state
  //------------------------------------------------------------------
  _stateCharacterReference() {
    let t = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);
    if (t < 0)
      if (this.preprocessor.lastChunkWritten)
        t = this.entityDecoder.end();
      else {
        this.active = !1, this.preprocessor.pos = this.preprocessor.html.length - 1, this.consumedAfterSnapshot = 0, this.preprocessor.endOfChunkHit = !0;
        return;
      }
    t === 0 ? (this.preprocessor.pos = this.entityStartPos, this._flushCodePointConsumedAsCharacterReference(L.AMPERSAND), this.state = !this._isCharacterReferenceInAttribute() && rv(this.preprocessor.peek(1)) ? B.AMBIGUOUS_AMPERSAND : this.returnState) : this.state = this.returnState;
  }
  // Ambiguos ampersand state
  //------------------------------------------------------------------
  _stateAmbiguousAmpersand(t) {
    rv(t) ? this._flushCodePointConsumedAsCharacterReference(t) : (t === L.SEMICOLON && this._err(ie.unknownNamedCharacterReference), this.state = this.returnState, this._callState(t));
  }
}
const SS = /* @__PURE__ */ new Set([p.DD, p.DT, p.LI, p.OPTGROUP, p.OPTION, p.P, p.RB, p.RP, p.RT, p.RTC]), iv = /* @__PURE__ */ new Set([
  ...SS,
  p.CAPTION,
  p.COLGROUP,
  p.TBODY,
  p.TD,
  p.TFOOT,
  p.TH,
  p.THEAD,
  p.TR
]), ji = /* @__PURE__ */ new Set([
  p.APPLET,
  p.CAPTION,
  p.HTML,
  p.MARQUEE,
  p.OBJECT,
  p.TABLE,
  p.TD,
  p.TEMPLATE,
  p.TH
]), PB = /* @__PURE__ */ new Set([...ji, p.OL, p.UL]), FB = /* @__PURE__ */ new Set([...ji, p.BUTTON]), ov = /* @__PURE__ */ new Set([p.ANNOTATION_XML, p.MI, p.MN, p.MO, p.MS, p.MTEXT]), sv = /* @__PURE__ */ new Set([p.DESC, p.FOREIGN_OBJECT, p.TITLE]), BB = /* @__PURE__ */ new Set([p.TR, p.TEMPLATE, p.HTML]), UB = /* @__PURE__ */ new Set([p.TBODY, p.TFOOT, p.THEAD, p.TEMPLATE, p.HTML]), jB = /* @__PURE__ */ new Set([p.TABLE, p.TEMPLATE, p.HTML]), HB = /* @__PURE__ */ new Set([p.TD, p.TH]);
class qB {
  get currentTmplContentOrNode() {
    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;
  }
  constructor(t, n, r) {
    this.treeAdapter = n, this.handler = r, this.items = [], this.tagIDs = [], this.stackTop = -1, this.tmplCount = 0, this.currentTagId = p.UNKNOWN, this.current = t;
  }
  //Index of element
  _indexOf(t) {
    return this.items.lastIndexOf(t, this.stackTop);
  }
  //Update current element
  _isInTemplate() {
    return this.currentTagId === p.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === ge.HTML;
  }
  _updateCurrentElement() {
    this.current = this.items[this.stackTop], this.currentTagId = this.tagIDs[this.stackTop];
  }
  //Mutations
  push(t, n) {
    this.stackTop++, this.items[this.stackTop] = t, this.current = t, this.tagIDs[this.stackTop] = n, this.currentTagId = n, this._isInTemplate() && this.tmplCount++, this.handler.onItemPush(t, n, !0);
  }
  pop() {
    const t = this.current;
    this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !0);
  }
  replace(t, n) {
    const r = this._indexOf(t);
    this.items[r] = n, r === this.stackTop && (this.current = n);
  }
  insertAfter(t, n, r) {
    const a = this._indexOf(t) + 1;
    this.items.splice(a, 0, n), this.tagIDs.splice(a, 0, r), this.stackTop++, a === this.stackTop && this._updateCurrentElement(), this.handler.onItemPush(this.current, this.currentTagId, a === this.stackTop);
  }
  popUntilTagNamePopped(t) {
    let n = this.stackTop + 1;
    do
      n = this.tagIDs.lastIndexOf(t, n - 1);
    while (n > 0 && this.treeAdapter.getNamespaceURI(this.items[n]) !== ge.HTML);
    this.shortenToLength(n < 0 ? 0 : n);
  }
  shortenToLength(t) {
    for (; this.stackTop >= t; ) {
      const n = this.current;
      this.tmplCount > 0 && this._isInTemplate() && (this.tmplCount -= 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(n, this.stackTop < t);
    }
  }
  popUntilElementPopped(t) {
    const n = this._indexOf(t);
    this.shortenToLength(n < 0 ? 0 : n);
  }
  popUntilPopped(t, n) {
    const r = this._indexOfTagNames(t, n);
    this.shortenToLength(r < 0 ? 0 : r);
  }
  popUntilNumberedHeaderPopped() {
    this.popUntilPopped(Bp, ge.HTML);
  }
  popUntilTableCellPopped() {
    this.popUntilPopped(HB, ge.HTML);
  }
  popAllUpToHtmlElement() {
    this.tmplCount = 0, this.shortenToLength(1);
  }
  _indexOfTagNames(t, n) {
    for (let r = this.stackTop; r >= 0; r--)
      if (t.has(this.tagIDs[r]) && this.treeAdapter.getNamespaceURI(this.items[r]) === n)
        return r;
    return -1;
  }
  clearBackTo(t, n) {
    const r = this._indexOfTagNames(t, n);
    this.shortenToLength(r + 1);
  }
  clearBackToTableContext() {
    this.clearBackTo(jB, ge.HTML);
  }
  clearBackToTableBodyContext() {
    this.clearBackTo(UB, ge.HTML);
  }
  clearBackToTableRowContext() {
    this.clearBackTo(BB, ge.HTML);
  }
  remove(t) {
    const n = this._indexOf(t);
    n >= 0 && (n === this.stackTop ? this.pop() : (this.items.splice(n, 1), this.tagIDs.splice(n, 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !1)));
  }
  //Search
  tryPeekProperlyNestedBodyElement() {
    return this.stackTop >= 1 && this.tagIDs[1] === p.BODY ? this.items[1] : null;
  }
  contains(t) {
    return this._indexOf(t) > -1;
  }
  getCommonAncestor(t) {
    const n = this._indexOf(t) - 1;
    return n >= 0 ? this.items[n] : null;
  }
  isRootHtmlElementCurrent() {
    return this.stackTop === 0 && this.tagIDs[0] === p.HTML;
  }
  //Element in scope
  hasInDynamicScope(t, n) {
    for (let r = this.stackTop; r >= 0; r--) {
      const a = this.tagIDs[r];
      switch (this.treeAdapter.getNamespaceURI(this.items[r])) {
        case ge.HTML: {
          if (a === t)
            return !0;
          if (n.has(a))
            return !1;
          break;
        }
        case ge.SVG: {
          if (sv.has(a))
            return !1;
          break;
        }
        case ge.MATHML: {
          if (ov.has(a))
            return !1;
          break;
        }
      }
    }
    return !0;
  }
  hasInScope(t) {
    return this.hasInDynamicScope(t, ji);
  }
  hasInListItemScope(t) {
    return this.hasInDynamicScope(t, PB);
  }
  hasInButtonScope(t) {
    return this.hasInDynamicScope(t, FB);
  }
  hasNumberedHeaderInScope() {
    for (let t = this.stackTop; t >= 0; t--) {
      const n = this.tagIDs[t];
      switch (this.treeAdapter.getNamespaceURI(this.items[t])) {
        case ge.HTML: {
          if (Bp.has(n))
            return !0;
          if (ji.has(n))
            return !1;
          break;
        }
        case ge.SVG: {
          if (sv.has(n))
            return !1;
          break;
        }
        case ge.MATHML: {
          if (ov.has(n))
            return !1;
          break;
        }
      }
    }
    return !0;
  }
  hasInTableScope(t) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === ge.HTML)
        switch (this.tagIDs[n]) {
          case t:
            return !0;
          case p.TABLE:
          case p.HTML:
            return !1;
        }
    return !0;
  }
  hasTableBodyContextInTableScope() {
    for (let t = this.stackTop; t >= 0; t--)
      if (this.treeAdapter.getNamespaceURI(this.items[t]) === ge.HTML)
        switch (this.tagIDs[t]) {
          case p.TBODY:
          case p.THEAD:
          case p.TFOOT:
            return !0;
          case p.TABLE:
          case p.HTML:
            return !1;
        }
    return !0;
  }
  hasInSelectScope(t) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === ge.HTML)
        switch (this.tagIDs[n]) {
          case t:
            return !0;
          case p.OPTION:
          case p.OPTGROUP:
            break;
          default:
            return !1;
        }
    return !0;
  }
  //Implied end tags
  generateImpliedEndTags() {
    for (; SS.has(this.currentTagId); )
      this.pop();
  }
  generateImpliedEndTagsThoroughly() {
    for (; iv.has(this.currentTagId); )
      this.pop();
  }
  generateImpliedEndTagsWithExclusion(t) {
    for (; this.currentTagId !== t && iv.has(this.currentTagId); )
      this.pop();
  }
}
const ep = 3;
var zn;
(function(e) {
  e[e.Marker = 0] = "Marker", e[e.Element = 1] = "Element";
})(zn || (zn = {}));
const lv = { type: zn.Marker };
class $B {
  constructor(t) {
    this.treeAdapter = t, this.entries = [], this.bookmark = null;
  }
  //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.
  _getNoahArkConditionCandidates(t, n) {
    const r = [], a = n.length, i = this.treeAdapter.getTagName(t), o = this.treeAdapter.getNamespaceURI(t);
    for (let s = 0; s < this.entries.length; s++) {
      const l = this.entries[s];
      if (l.type === zn.Marker)
        break;
      const { element: u } = l;
      if (this.treeAdapter.getTagName(u) === i && this.treeAdapter.getNamespaceURI(u) === o) {
        const c = this.treeAdapter.getAttrList(u);
        c.length === a && r.push({ idx: s, attrs: c });
      }
    }
    return r;
  }
  _ensureNoahArkCondition(t) {
    if (this.entries.length < ep)
      return;
    const n = this.treeAdapter.getAttrList(t), r = this._getNoahArkConditionCandidates(t, n);
    if (r.length < ep)
      return;
    const a = new Map(n.map((o) => [o.name, o.value]));
    let i = 0;
    for (let o = 0; o < r.length; o++) {
      const s = r[o];
      s.attrs.every((l) => a.get(l.name) === l.value) && (i += 1, i >= ep && this.entries.splice(s.idx, 1));
    }
  }
  //Mutations
  insertMarker() {
    this.entries.unshift(lv);
  }
  pushElement(t, n) {
    this._ensureNoahArkCondition(t), this.entries.unshift({
      type: zn.Element,
      element: t,
      token: n
    });
  }
  insertElementAfterBookmark(t, n) {
    const r = this.entries.indexOf(this.bookmark);
    this.entries.splice(r, 0, {
      type: zn.Element,
      element: t,
      token: n
    });
  }
  removeEntry(t) {
    const n = this.entries.indexOf(t);
    n >= 0 && this.entries.splice(n, 1);
  }
  /**
   * Clears the list of formatting elements up to the last marker.
   *
   * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker
   */
  clearToLastMarker() {
    const t = this.entries.indexOf(lv);
    t >= 0 ? this.entries.splice(0, t + 1) : this.entries.length = 0;
  }
  //Search
  getElementEntryInScopeWithTagName(t) {
    const n = this.entries.find((r) => r.type === zn.Marker || this.treeAdapter.getTagName(r.element) === t);
    return n && n.type === zn.Element ? n : null;
  }
  getElementEntry(t) {
    return this.entries.find((n) => n.type === zn.Element && n.element === t);
  }
}
const sr = {
  //Node construction
  createDocument() {
    return {
      nodeName: "#document",
      mode: Cn.NO_QUIRKS,
      childNodes: []
    };
  },
  createDocumentFragment() {
    return {
      nodeName: "#document-fragment",
      childNodes: []
    };
  },
  createElement(e, t, n) {
    return {
      nodeName: e,
      tagName: e,
      attrs: n,
      namespaceURI: t,
      childNodes: [],
      parentNode: null
    };
  },
  createCommentNode(e) {
    return {
      nodeName: "#comment",
      data: e,
      parentNode: null
    };
  },
  createTextNode(e) {
    return {
      nodeName: "#text",
      value: e,
      parentNode: null
    };
  },
  //Tree mutation
  appendChild(e, t) {
    e.childNodes.push(t), t.parentNode = e;
  },
  insertBefore(e, t, n) {
    const r = e.childNodes.indexOf(n);
    e.childNodes.splice(r, 0, t), t.parentNode = e;
  },
  setTemplateContent(e, t) {
    e.content = t;
  },
  getTemplateContent(e) {
    return e.content;
  },
  setDocumentType(e, t, n, r) {
    const a = e.childNodes.find((i) => i.nodeName === "#documentType");
    if (a)
      a.name = t, a.publicId = n, a.systemId = r;
    else {
      const i = {
        nodeName: "#documentType",
        name: t,
        publicId: n,
        systemId: r,
        parentNode: null
      };
      sr.appendChild(e, i);
    }
  },
  setDocumentMode(e, t) {
    e.mode = t;
  },
  getDocumentMode(e) {
    return e.mode;
  },
  detachNode(e) {
    if (e.parentNode) {
      const t = e.parentNode.childNodes.indexOf(e);
      e.parentNode.childNodes.splice(t, 1), e.parentNode = null;
    }
  },
  insertText(e, t) {
    if (e.childNodes.length > 0) {
      const n = e.childNodes[e.childNodes.length - 1];
      if (sr.isTextNode(n)) {
        n.value += t;
        return;
      }
    }
    sr.appendChild(e, sr.createTextNode(t));
  },
  insertTextBefore(e, t, n) {
    const r = e.childNodes[e.childNodes.indexOf(n) - 1];
    r && sr.isTextNode(r) ? r.value += t : sr.insertBefore(e, sr.createTextNode(t), n);
  },
  adoptAttributes(e, t) {
    const n = new Set(e.attrs.map((r) => r.name));
    for (let r = 0; r < t.length; r++)
      n.has(t[r].name) || e.attrs.push(t[r]);
  },
  //Tree traversing
  getFirstChild(e) {
    return e.childNodes[0];
  },
  getChildNodes(e) {
    return e.childNodes;
  },
  getParentNode(e) {
    return e.parentNode;
  },
  getAttrList(e) {
    return e.attrs;
  },
  //Node data
  getTagName(e) {
    return e.tagName;
  },
  getNamespaceURI(e) {
    return e.namespaceURI;
  },
  getTextNodeContent(e) {
    return e.value;
  },
  getCommentNodeContent(e) {
    return e.data;
  },
  getDocumentTypeNodeName(e) {
    return e.name;
  },
  getDocumentTypeNodePublicId(e) {
    return e.publicId;
  },
  getDocumentTypeNodeSystemId(e) {
    return e.systemId;
  },
  //Node types
  isTextNode(e) {
    return e.nodeName === "#text";
  },
  isCommentNode(e) {
    return e.nodeName === "#comment";
  },
  isDocumentTypeNode(e) {
    return e.nodeName === "#documentType";
  },
  isElementNode(e) {
    return Object.prototype.hasOwnProperty.call(e, "tagName");
  },
  // Source code location
  setNodeSourceCodeLocation(e, t) {
    e.sourceCodeLocation = t;
  },
  getNodeSourceCodeLocation(e) {
    return e.sourceCodeLocation;
  },
  updateNodeSourceCodeLocation(e, t) {
    e.sourceCodeLocation = { ...e.sourceCodeLocation, ...t };
  }
}, _S = "html", zB = "about:legacy-compat", GB = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", AS = [
  "+//silmaril//dtd html pro v0r11 19970101//",
  "-//as//dtd html 3.0 aswedit + extensions//",
  "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
  "-//ietf//dtd html 2.0 level 1//",
  "-//ietf//dtd html 2.0 level 2//",
  "-//ietf//dtd html 2.0 strict level 1//",
  "-//ietf//dtd html 2.0 strict level 2//",
  "-//ietf//dtd html 2.0 strict//",
  "-//ietf//dtd html 2.0//",
  "-//ietf//dtd html 2.1e//",
  "-//ietf//dtd html 3.0//",
  "-//ietf//dtd html 3.2 final//",
  "-//ietf//dtd html 3.2//",
  "-//ietf//dtd html 3//",
  "-//ietf//dtd html level 0//",
  "-//ietf//dtd html level 1//",
  "-//ietf//dtd html level 2//",
  "-//ietf//dtd html level 3//",
  "-//ietf//dtd html strict level 0//",
  "-//ietf//dtd html strict level 1//",
  "-//ietf//dtd html strict level 2//",
  "-//ietf//dtd html strict level 3//",
  "-//ietf//dtd html strict//",
  "-//ietf//dtd html//",
  "-//metrius//dtd metrius presentational//",
  "-//microsoft//dtd internet explorer 2.0 html strict//",
  "-//microsoft//dtd internet explorer 2.0 html//",
  "-//microsoft//dtd internet explorer 2.0 tables//",
  "-//microsoft//dtd internet explorer 3.0 html strict//",
  "-//microsoft//dtd internet explorer 3.0 html//",
  "-//microsoft//dtd internet explorer 3.0 tables//",
  "-//netscape comm. corp.//dtd html//",
  "-//netscape comm. corp.//dtd strict html//",
  "-//o'reilly and associates//dtd html 2.0//",
  "-//o'reilly and associates//dtd html extended 1.0//",
  "-//o'reilly and associates//dtd html extended relaxed 1.0//",
  "-//sq//dtd html 2.0 hotmetal + extensions//",
  "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
  "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
  "-//spyglass//dtd html 2.0 extended//",
  "-//sun microsystems corp.//dtd hotjava html//",
  "-//sun microsystems corp.//dtd hotjava strict html//",
  "-//w3c//dtd html 3 1995-03-24//",
  "-//w3c//dtd html 3.2 draft//",
  "-//w3c//dtd html 3.2 final//",
  "-//w3c//dtd html 3.2//",
  "-//w3c//dtd html 3.2s draft//",
  "-//w3c//dtd html 4.0 frameset//",
  "-//w3c//dtd html 4.0 transitional//",
  "-//w3c//dtd html experimental 19960712//",
  "-//w3c//dtd html experimental 970421//",
  "-//w3c//dtd w3 html//",
  "-//w3o//dtd w3 html 3.0//",
  "-//webtechs//dtd mozilla html 2.0//",
  "-//webtechs//dtd mozilla html//"
], VB = [
  ...AS,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
], WB = /* @__PURE__ */ new Set([
  "-//w3o//dtd w3 html strict 3.0//en//",
  "-/w3c/dtd html 4.0 transitional/en",
  "html"
]), xS = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], YB = [
  ...xS,
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
];
function uv(e, t) {
  return t.some((n) => e.startsWith(n));
}
function KB(e) {
  return e.name === _S && e.publicId === null && (e.systemId === null || e.systemId === zB);
}
function XB(e) {
  if (e.name !== _S)
    return Cn.QUIRKS;
  const { systemId: t } = e;
  if (t && t.toLowerCase() === GB)
    return Cn.QUIRKS;
  let { publicId: n } = e;
  if (n !== null) {
    if (n = n.toLowerCase(), WB.has(n))
      return Cn.QUIRKS;
    let r = t === null ? VB : AS;
    if (uv(n, r))
      return Cn.QUIRKS;
    if (r = t === null ? xS : YB, uv(n, r))
      return Cn.LIMITED_QUIRKS;
  }
  return Cn.NO_QUIRKS;
}
const cv = {
  TEXT_HTML: "text/html",
  APPLICATION_XML: "application/xhtml+xml"
}, ZB = "definitionurl", QB = "definitionURL", JB = new Map([
  "attributeName",
  "attributeType",
  "baseFrequency",
  "baseProfile",
  "calcMode",
  "clipPathUnits",
  "diffuseConstant",
  "edgeMode",
  "filterUnits",
  "glyphRef",
  "gradientTransform",
  "gradientUnits",
  "kernelMatrix",
  "kernelUnitLength",
  "keyPoints",
  "keySplines",
  "keyTimes",
  "lengthAdjust",
  "limitingConeAngle",
  "markerHeight",
  "markerUnits",
  "markerWidth",
  "maskContentUnits",
  "maskUnits",
  "numOctaves",
  "pathLength",
  "patternContentUnits",
  "patternTransform",
  "patternUnits",
  "pointsAtX",
  "pointsAtY",
  "pointsAtZ",
  "preserveAlpha",
  "preserveAspectRatio",
  "primitiveUnits",
  "refX",
  "refY",
  "repeatCount",
  "repeatDur",
  "requiredExtensions",
  "requiredFeatures",
  "specularConstant",
  "specularExponent",
  "spreadMethod",
  "startOffset",
  "stdDeviation",
  "stitchTiles",
  "surfaceScale",
  "systemLanguage",
  "tableValues",
  "targetX",
  "targetY",
  "textLength",
  "viewBox",
  "viewTarget",
  "xChannelSelector",
  "yChannelSelector",
  "zoomAndPan"
].map((e) => [e.toLowerCase(), e])), eU = /* @__PURE__ */ new Map([
  ["xlink:actuate", { prefix: "xlink", name: "actuate", namespace: ge.XLINK }],
  ["xlink:arcrole", { prefix: "xlink", name: "arcrole", namespace: ge.XLINK }],
  ["xlink:href", { prefix: "xlink", name: "href", namespace: ge.XLINK }],
  ["xlink:role", { prefix: "xlink", name: "role", namespace: ge.XLINK }],
  ["xlink:show", { prefix: "xlink", name: "show", namespace: ge.XLINK }],
  ["xlink:title", { prefix: "xlink", name: "title", namespace: ge.XLINK }],
  ["xlink:type", { prefix: "xlink", name: "type", namespace: ge.XLINK }],
  ["xml:lang", { prefix: "xml", name: "lang", namespace: ge.XML }],
  ["xml:space", { prefix: "xml", name: "space", namespace: ge.XML }],
  ["xmlns", { prefix: "", name: "xmlns", namespace: ge.XMLNS }],
  ["xmlns:xlink", { prefix: "xmlns", name: "xlink", namespace: ge.XMLNS }]
]), tU = new Map([
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "textPath"
].map((e) => [e.toLowerCase(), e])), nU = /* @__PURE__ */ new Set([
  p.B,
  p.BIG,
  p.BLOCKQUOTE,
  p.BODY,
  p.BR,
  p.CENTER,
  p.CODE,
  p.DD,
  p.DIV,
  p.DL,
  p.DT,
  p.EM,
  p.EMBED,
  p.H1,
  p.H2,
  p.H3,
  p.H4,
  p.H5,
  p.H6,
  p.HEAD,
  p.HR,
  p.I,
  p.IMG,
  p.LI,
  p.LISTING,
  p.MENU,
  p.META,
  p.NOBR,
  p.OL,
  p.P,
  p.PRE,
  p.RUBY,
  p.S,
  p.SMALL,
  p.SPAN,
  p.STRONG,
  p.STRIKE,
  p.SUB,
  p.SUP,
  p.TABLE,
  p.TT,
  p.U,
  p.UL,
  p.VAR
]);
function rU(e) {
  const t = e.tagID;
  return t === p.FONT && e.attrs.some(({ name: r }) => r === Cr.COLOR || r === Cr.SIZE || r === Cr.FACE) || nU.has(t);
}
function RS(e) {
  for (let t = 0; t < e.attrs.length; t++)
    if (e.attrs[t].name === ZB) {
      e.attrs[t].name = QB;
      break;
    }
}
function IS(e) {
  for (let t = 0; t < e.attrs.length; t++) {
    const n = JB.get(e.attrs[t].name);
    n != null && (e.attrs[t].name = n);
  }
}
function Xf(e) {
  for (let t = 0; t < e.attrs.length; t++) {
    const n = eU.get(e.attrs[t].name);
    n && (e.attrs[t].prefix = n.prefix, e.attrs[t].name = n.name, e.attrs[t].namespace = n.namespace);
  }
}
function aU(e) {
  const t = tU.get(e.tagName);
  t != null && (e.tagName = t, e.tagID = da(e.tagName));
}
function iU(e, t) {
  return t === ge.MATHML && (e === p.MI || e === p.MO || e === p.MN || e === p.MS || e === p.MTEXT);
}
function oU(e, t, n) {
  if (t === ge.MATHML && e === p.ANNOTATION_XML) {
    for (let r = 0; r < n.length; r++)
      if (n[r].name === Cr.ENCODING) {
        const a = n[r].value.toLowerCase();
        return a === cv.TEXT_HTML || a === cv.APPLICATION_XML;
      }
  }
  return t === ge.SVG && (e === p.FOREIGN_OBJECT || e === p.DESC || e === p.TITLE);
}
function sU(e, t, n, r) {
  return (!r || r === ge.HTML) && oU(e, t, n) || (!r || r === ge.MATHML) && iU(e, t);
}
const lU = "hidden", uU = 8, cU = 3;
var H;
(function(e) {
  e[e.INITIAL = 0] = "INITIAL", e[e.BEFORE_HTML = 1] = "BEFORE_HTML", e[e.BEFORE_HEAD = 2] = "BEFORE_HEAD", e[e.IN_HEAD = 3] = "IN_HEAD", e[e.IN_HEAD_NO_SCRIPT = 4] = "IN_HEAD_NO_SCRIPT", e[e.AFTER_HEAD = 5] = "AFTER_HEAD", e[e.IN_BODY = 6] = "IN_BODY", e[e.TEXT = 7] = "TEXT", e[e.IN_TABLE = 8] = "IN_TABLE", e[e.IN_TABLE_TEXT = 9] = "IN_TABLE_TEXT", e[e.IN_CAPTION = 10] = "IN_CAPTION", e[e.IN_COLUMN_GROUP = 11] = "IN_COLUMN_GROUP", e[e.IN_TABLE_BODY = 12] = "IN_TABLE_BODY", e[e.IN_ROW = 13] = "IN_ROW", e[e.IN_CELL = 14] = "IN_CELL", e[e.IN_SELECT = 15] = "IN_SELECT", e[e.IN_SELECT_IN_TABLE = 16] = "IN_SELECT_IN_TABLE", e[e.IN_TEMPLATE = 17] = "IN_TEMPLATE", e[e.AFTER_BODY = 18] = "AFTER_BODY", e[e.IN_FRAMESET = 19] = "IN_FRAMESET", e[e.AFTER_FRAMESET = 20] = "AFTER_FRAMESET", e[e.AFTER_AFTER_BODY = 21] = "AFTER_AFTER_BODY", e[e.AFTER_AFTER_FRAMESET = 22] = "AFTER_AFTER_FRAMESET";
})(H || (H = {}));
const dU = {
  startLine: -1,
  startCol: -1,
  startOffset: -1,
  endLine: -1,
  endCol: -1,
  endOffset: -1
}, wS = /* @__PURE__ */ new Set([p.TABLE, p.TBODY, p.TFOOT, p.THEAD, p.TR]), dv = {
  scriptingEnabled: !0,
  sourceCodeLocationInfo: !1,
  treeAdapter: sr,
  onParseError: null
};
class pv {
  constructor(t, n, r = null, a = null) {
    this.fragmentContext = r, this.scriptHandler = a, this.currentToken = null, this.stopped = !1, this.insertionMode = H.INITIAL, this.originalInsertionMode = H.INITIAL, this.headElement = null, this.formElement = null, this.currentNotInHTML = !1, this.tmplInsertionModeStack = [], this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1, this.options = {
      ...dv,
      ...t
    }, this.treeAdapter = this.options.treeAdapter, this.onParseError = this.options.onParseError, this.onParseError && (this.options.sourceCodeLocationInfo = !0), this.document = n ?? this.treeAdapter.createDocument(), this.tokenizer = new MB(this.options, this), this.activeFormattingElements = new $B(this.treeAdapter), this.fragmentContextID = r ? da(this.treeAdapter.getTagName(r)) : p.UNKNOWN, this._setContextModes(r ?? this.document, this.fragmentContextID), this.openElements = new qB(this.document, this.treeAdapter, this);
  }
  // API
  static parse(t, n) {
    const r = new this(n);
    return r.tokenizer.write(t, !0), r.document;
  }
  static getFragmentParser(t, n) {
    const r = {
      ...dv,
      ...n
    };
    t ?? (t = r.treeAdapter.createElement(te.TEMPLATE, ge.HTML, []));
    const a = r.treeAdapter.createElement("documentmock", ge.HTML, []), i = new this(r, a, t);
    return i.fragmentContextID === p.TEMPLATE && i.tmplInsertionModeStack.unshift(H.IN_TEMPLATE), i._initTokenizerForFragmentParsing(), i._insertFakeRootElement(), i._resetInsertionMode(), i._findFormInFragmentContext(), i;
  }
  getFragment() {
    const t = this.treeAdapter.getFirstChild(this.document), n = this.treeAdapter.createDocumentFragment();
    return this._adoptNodes(t, n), n;
  }
  //Errors
  /** @internal */
  _err(t, n, r) {
    var a;
    if (!this.onParseError)
      return;
    const i = (a = t.location) !== null && a !== void 0 ? a : dU, o = {
      code: n,
      startLine: i.startLine,
      startCol: i.startCol,
      startOffset: i.startOffset,
      endLine: r ? i.startLine : i.endLine,
      endCol: r ? i.startCol : i.endCol,
      endOffset: r ? i.startOffset : i.endOffset
    };
    this.onParseError(o);
  }
  //Stack events
  /** @internal */
  onItemPush(t, n, r) {
    var a, i;
    (i = (a = this.treeAdapter).onItemPush) === null || i === void 0 || i.call(a, t), r && this.openElements.stackTop > 0 && this._setContextModes(t, n);
  }
  /** @internal */
  onItemPop(t, n) {
    var r, a;
    if (this.options.sourceCodeLocationInfo && this._setEndLocation(t, this.currentToken), (a = (r = this.treeAdapter).onItemPop) === null || a === void 0 || a.call(r, t, this.openElements.current), n) {
      let i, o;
      this.openElements.stackTop === 0 && this.fragmentContext ? (i = this.fragmentContext, o = this.fragmentContextID) : { current: i, currentTagId: o } = this.openElements, this._setContextModes(i, o);
    }
  }
  _setContextModes(t, n) {
    const r = t === this.document || this.treeAdapter.getNamespaceURI(t) === ge.HTML;
    this.currentNotInHTML = !r, this.tokenizer.inForeignNode = !r && !this._isIntegrationPoint(n, t);
  }
  /** @protected */
  _switchToTextParsing(t, n) {
    this._insertElement(t, ge.HTML), this.tokenizer.state = n, this.originalInsertionMode = this.insertionMode, this.insertionMode = H.TEXT;
  }
  switchToPlaintextParsing() {
    this.insertionMode = H.TEXT, this.originalInsertionMode = H.IN_BODY, this.tokenizer.state = Lt.PLAINTEXT;
  }
  //Fragment parsing
  /** @protected */
  _getAdjustedCurrentElement() {
    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
  }
  /** @protected */
  _findFormInFragmentContext() {
    let t = this.fragmentContext;
    for (; t; ) {
      if (this.treeAdapter.getTagName(t) === te.FORM) {
        this.formElement = t;
        break;
      }
      t = this.treeAdapter.getParentNode(t);
    }
  }
  _initTokenizerForFragmentParsing() {
    if (!(!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== ge.HTML))
      switch (this.fragmentContextID) {
        case p.TITLE:
        case p.TEXTAREA: {
          this.tokenizer.state = Lt.RCDATA;
          break;
        }
        case p.STYLE:
        case p.XMP:
        case p.IFRAME:
        case p.NOEMBED:
        case p.NOFRAMES:
        case p.NOSCRIPT: {
          this.tokenizer.state = Lt.RAWTEXT;
          break;
        }
        case p.SCRIPT: {
          this.tokenizer.state = Lt.SCRIPT_DATA;
          break;
        }
        case p.PLAINTEXT: {
          this.tokenizer.state = Lt.PLAINTEXT;
          break;
        }
      }
  }
  //Tree mutation
  /** @protected */
  _setDocumentType(t) {
    const n = t.name || "", r = t.publicId || "", a = t.systemId || "";
    if (this.treeAdapter.setDocumentType(this.document, n, r, a), t.location) {
      const o = this.treeAdapter.getChildNodes(this.document).find((s) => this.treeAdapter.isDocumentTypeNode(s));
      o && this.treeAdapter.setNodeSourceCodeLocation(o, t.location);
    }
  }
  /** @protected */
  _attachElementToTree(t, n) {
    if (this.options.sourceCodeLocationInfo) {
      const r = n && {
        ...n,
        startTag: n
      };
      this.treeAdapter.setNodeSourceCodeLocation(t, r);
    }
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentElement(t);
    else {
      const r = this.openElements.currentTmplContentOrNode;
      this.treeAdapter.appendChild(r, t);
    }
  }
  /**
   * For self-closing tags. Add an element to the tree, but skip adding it
   * to the stack.
   */
  /** @protected */
  _appendElement(t, n) {
    const r = this.treeAdapter.createElement(t.tagName, n, t.attrs);
    this._attachElementToTree(r, t.location);
  }
  /** @protected */
  _insertElement(t, n) {
    const r = this.treeAdapter.createElement(t.tagName, n, t.attrs);
    this._attachElementToTree(r, t.location), this.openElements.push(r, t.tagID);
  }
  /** @protected */
  _insertFakeElement(t, n) {
    const r = this.treeAdapter.createElement(t, ge.HTML, []);
    this._attachElementToTree(r, null), this.openElements.push(r, n);
  }
  /** @protected */
  _insertTemplate(t) {
    const n = this.treeAdapter.createElement(t.tagName, ge.HTML, t.attrs), r = this.treeAdapter.createDocumentFragment();
    this.treeAdapter.setTemplateContent(n, r), this._attachElementToTree(n, t.location), this.openElements.push(n, t.tagID), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(r, null);
  }
  /** @protected */
  _insertFakeRootElement() {
    const t = this.treeAdapter.createElement(te.HTML, ge.HTML, []);
    this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(t, null), this.treeAdapter.appendChild(this.openElements.current, t), this.openElements.push(t, p.HTML);
  }
  /** @protected */
  _appendCommentNode(t, n) {
    const r = this.treeAdapter.createCommentNode(t.data);
    this.treeAdapter.appendChild(n, r), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(r, t.location);
  }
  /** @protected */
  _insertCharacters(t) {
    let n, r;
    if (this._shouldFosterParentOnInsertion() ? ({ parent: n, beforeElement: r } = this._findFosterParentingLocation(), r ? this.treeAdapter.insertTextBefore(n, t.chars, r) : this.treeAdapter.insertText(n, t.chars)) : (n = this.openElements.currentTmplContentOrNode, this.treeAdapter.insertText(n, t.chars)), !t.location)
      return;
    const a = this.treeAdapter.getChildNodes(n), i = r ? a.lastIndexOf(r) : a.length, o = a[i - 1];
    if (this.treeAdapter.getNodeSourceCodeLocation(o)) {
      const { endLine: l, endCol: u, endOffset: c } = t.location;
      this.treeAdapter.updateNodeSourceCodeLocation(o, { endLine: l, endCol: u, endOffset: c });
    } else this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(o, t.location);
  }
  /** @protected */
  _adoptNodes(t, n) {
    for (let r = this.treeAdapter.getFirstChild(t); r; r = this.treeAdapter.getFirstChild(t))
      this.treeAdapter.detachNode(r), this.treeAdapter.appendChild(n, r);
  }
  /** @protected */
  _setEndLocation(t, n) {
    if (this.treeAdapter.getNodeSourceCodeLocation(t) && n.location) {
      const r = n.location, a = this.treeAdapter.getTagName(t), i = (
        // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
        // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
        n.type === Qe.END_TAG && a === n.tagName ? {
          endTag: { ...r },
          endLine: r.endLine,
          endCol: r.endCol,
          endOffset: r.endOffset
        } : {
          endLine: r.startLine,
          endCol: r.startCol,
          endOffset: r.startOffset
        }
      );
      this.treeAdapter.updateNodeSourceCodeLocation(t, i);
    }
  }
  //Token processing
  shouldProcessStartTagTokenInForeignContent(t) {
    if (!this.currentNotInHTML)
      return !1;
    let n, r;
    return this.openElements.stackTop === 0 && this.fragmentContext ? (n = this.fragmentContext, r = this.fragmentContextID) : { current: n, currentTagId: r } = this.openElements, t.tagID === p.SVG && this.treeAdapter.getTagName(n) === te.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(n) === ge.MATHML ? !1 : (
      // Check that `current` is not an integration point for HTML or MathML elements.
      this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML
      // integration point.
      (t.tagID === p.MGLYPH || t.tagID === p.MALIGNMARK) && !this._isIntegrationPoint(r, n, ge.HTML)
    );
  }
  /** @protected */
  _processToken(t) {
    switch (t.type) {
      case Qe.CHARACTER: {
        this.onCharacter(t);
        break;
      }
      case Qe.NULL_CHARACTER: {
        this.onNullCharacter(t);
        break;
      }
      case Qe.COMMENT: {
        this.onComment(t);
        break;
      }
      case Qe.DOCTYPE: {
        this.onDoctype(t);
        break;
      }
      case Qe.START_TAG: {
        this._processStartTag(t);
        break;
      }
      case Qe.END_TAG: {
        this.onEndTag(t);
        break;
      }
      case Qe.EOF: {
        this.onEof(t);
        break;
      }
      case Qe.WHITESPACE_CHARACTER: {
        this.onWhitespaceCharacter(t);
        break;
      }
    }
  }
  //Integration points
  /** @protected */
  _isIntegrationPoint(t, n, r) {
    const a = this.treeAdapter.getNamespaceURI(n), i = this.treeAdapter.getAttrList(n);
    return sU(t, a, i, r);
  }
  //Active formatting elements reconstruction
  /** @protected */
  _reconstructActiveFormattingElements() {
    const t = this.activeFormattingElements.entries.length;
    if (t) {
      const n = this.activeFormattingElements.entries.findIndex((a) => a.type === zn.Marker || this.openElements.contains(a.element)), r = n < 0 ? t - 1 : n - 1;
      for (let a = r; a >= 0; a--) {
        const i = this.activeFormattingElements.entries[a];
        this._insertElement(i.token, this.treeAdapter.getNamespaceURI(i.element)), i.element = this.openElements.current;
      }
    }
  }
  //Close elements
  /** @protected */
  _closeTableCell() {
    this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = H.IN_ROW;
  }
  /** @protected */
  _closePElement() {
    this.openElements.generateImpliedEndTagsWithExclusion(p.P), this.openElements.popUntilTagNamePopped(p.P);
  }
  //Insertion modes
  /** @protected */
  _resetInsertionMode() {
    for (let t = this.openElements.stackTop; t >= 0; t--)
      switch (t === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[t]) {
        case p.TR: {
          this.insertionMode = H.IN_ROW;
          return;
        }
        case p.TBODY:
        case p.THEAD:
        case p.TFOOT: {
          this.insertionMode = H.IN_TABLE_BODY;
          return;
        }
        case p.CAPTION: {
          this.insertionMode = H.IN_CAPTION;
          return;
        }
        case p.COLGROUP: {
          this.insertionMode = H.IN_COLUMN_GROUP;
          return;
        }
        case p.TABLE: {
          this.insertionMode = H.IN_TABLE;
          return;
        }
        case p.BODY: {
          this.insertionMode = H.IN_BODY;
          return;
        }
        case p.FRAMESET: {
          this.insertionMode = H.IN_FRAMESET;
          return;
        }
        case p.SELECT: {
          this._resetInsertionModeForSelect(t);
          return;
        }
        case p.TEMPLATE: {
          this.insertionMode = this.tmplInsertionModeStack[0];
          return;
        }
        case p.HTML: {
          this.insertionMode = this.headElement ? H.AFTER_HEAD : H.BEFORE_HEAD;
          return;
        }
        case p.TD:
        case p.TH: {
          if (t > 0) {
            this.insertionMode = H.IN_CELL;
            return;
          }
          break;
        }
        case p.HEAD: {
          if (t > 0) {
            this.insertionMode = H.IN_HEAD;
            return;
          }
          break;
        }
      }
    this.insertionMode = H.IN_BODY;
  }
  /** @protected */
  _resetInsertionModeForSelect(t) {
    if (t > 0)
      for (let n = t - 1; n > 0; n--) {
        const r = this.openElements.tagIDs[n];
        if (r === p.TEMPLATE)
          break;
        if (r === p.TABLE) {
          this.insertionMode = H.IN_SELECT_IN_TABLE;
          return;
        }
      }
    this.insertionMode = H.IN_SELECT;
  }
  //Foster parenting
  /** @protected */
  _isElementCausesFosterParenting(t) {
    return wS.has(t);
  }
  /** @protected */
  _shouldFosterParentOnInsertion() {
    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);
  }
  /** @protected */
  _findFosterParentingLocation() {
    for (let t = this.openElements.stackTop; t >= 0; t--) {
      const n = this.openElements.items[t];
      switch (this.openElements.tagIDs[t]) {
        case p.TEMPLATE: {
          if (this.treeAdapter.getNamespaceURI(n) === ge.HTML)
            return { parent: this.treeAdapter.getTemplateContent(n), beforeElement: null };
          break;
        }
        case p.TABLE: {
          const r = this.treeAdapter.getParentNode(n);
          return r ? { parent: r, beforeElement: n } : { parent: this.openElements.items[t - 1], beforeElement: null };
        }
      }
    }
    return { parent: this.openElements.items[0], beforeElement: null };
  }
  /** @protected */
  _fosterParentElement(t) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertBefore(n.parent, t, n.beforeElement) : this.treeAdapter.appendChild(n.parent, t);
  }
  //Special elements
  /** @protected */
  _isSpecialElement(t, n) {
    const r = this.treeAdapter.getNamespaceURI(t);
    return NB[r].has(n);
  }
  /** @internal */
  onCharacter(t) {
    if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
      H5(this, t);
      return;
    }
    switch (this.insertionMode) {
      case H.INITIAL: {
        xa(this, t);
        break;
      }
      case H.BEFORE_HTML: {
        Da(this, t);
        break;
      }
      case H.BEFORE_HEAD: {
        Ma(this, t);
        break;
      }
      case H.IN_HEAD: {
        Pa(this, t);
        break;
      }
      case H.IN_HEAD_NO_SCRIPT: {
        Fa(this, t);
        break;
      }
      case H.AFTER_HEAD: {
        Ba(this, t);
        break;
      }
      case H.IN_BODY:
      case H.IN_CAPTION:
      case H.IN_CELL:
      case H.IN_TEMPLATE: {
        kS(this, t);
        break;
      }
      case H.TEXT:
      case H.IN_SELECT:
      case H.IN_SELECT_IN_TABLE: {
        this._insertCharacters(t);
        break;
      }
      case H.IN_TABLE:
      case H.IN_TABLE_BODY:
      case H.IN_ROW: {
        tp(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        PS(this, t);
        break;
      }
      case H.IN_COLUMN_GROUP: {
        Hi(this, t);
        break;
      }
      case H.AFTER_BODY: {
        qi(this, t);
        break;
      }
      case H.AFTER_AFTER_BODY: {
        Ci(this, t);
        break;
      }
    }
  }
  /** @internal */
  onNullCharacter(t) {
    if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) {
      j5(this, t);
      return;
    }
    switch (this.insertionMode) {
      case H.INITIAL: {
        xa(this, t);
        break;
      }
      case H.BEFORE_HTML: {
        Da(this, t);
        break;
      }
      case H.BEFORE_HEAD: {
        Ma(this, t);
        break;
      }
      case H.IN_HEAD: {
        Pa(this, t);
        break;
      }
      case H.IN_HEAD_NO_SCRIPT: {
        Fa(this, t);
        break;
      }
      case H.AFTER_HEAD: {
        Ba(this, t);
        break;
      }
      case H.TEXT: {
        this._insertCharacters(t);
        break;
      }
      case H.IN_TABLE:
      case H.IN_TABLE_BODY:
      case H.IN_ROW: {
        tp(this, t);
        break;
      }
      case H.IN_COLUMN_GROUP: {
        Hi(this, t);
        break;
      }
      case H.AFTER_BODY: {
        qi(this, t);
        break;
      }
      case H.AFTER_AFTER_BODY: {
        Ci(this, t);
        break;
      }
    }
  }
  /** @internal */
  onComment(t) {
    if (this.skipNextNewLine = !1, this.currentNotInHTML) {
      Up(this, t);
      return;
    }
    switch (this.insertionMode) {
      case H.INITIAL:
      case H.BEFORE_HTML:
      case H.BEFORE_HEAD:
      case H.IN_HEAD:
      case H.IN_HEAD_NO_SCRIPT:
      case H.AFTER_HEAD:
      case H.IN_BODY:
      case H.IN_TABLE:
      case H.IN_CAPTION:
      case H.IN_COLUMN_GROUP:
      case H.IN_TABLE_BODY:
      case H.IN_ROW:
      case H.IN_CELL:
      case H.IN_SELECT:
      case H.IN_SELECT_IN_TABLE:
      case H.IN_TEMPLATE:
      case H.IN_FRAMESET:
      case H.AFTER_FRAMESET: {
        Up(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        Ra(this, t);
        break;
      }
      case H.AFTER_BODY: {
        EU(this, t);
        break;
      }
      case H.AFTER_AFTER_BODY:
      case H.AFTER_AFTER_FRAMESET: {
        yU(this, t);
        break;
      }
    }
  }
  /** @internal */
  onDoctype(t) {
    switch (this.skipNextNewLine = !1, this.insertionMode) {
      case H.INITIAL: {
        vU(this, t);
        break;
      }
      case H.BEFORE_HEAD:
      case H.IN_HEAD:
      case H.IN_HEAD_NO_SCRIPT:
      case H.AFTER_HEAD: {
        this._err(t, ie.misplacedDoctype);
        break;
      }
      case H.IN_TABLE_TEXT: {
        Ra(this, t);
        break;
      }
    }
  }
  /** @internal */
  onStartTag(t) {
    this.skipNextNewLine = !1, this.currentToken = t, this._processStartTag(t), t.selfClosing && !t.ackSelfClosing && this._err(t, ie.nonVoidHtmlElementStartTagWithTrailingSolidus);
  }
  /**
   * Processes a given start tag.
   *
   * `onStartTag` checks if a self-closing tag was recognized. When a token
   * is moved inbetween multiple insertion modes, this check for self-closing
   * could lead to false positives. To avoid this, `_processStartTag` is used
   * for nested calls.
   *
   * @param token The token to process.
   * @protected
   */
  _processStartTag(t) {
    this.shouldProcessStartTagTokenInForeignContent(t) ? q5(this, t) : this._startTagOutsideForeignContent(t);
  }
  /** @protected */
  _startTagOutsideForeignContent(t) {
    switch (this.insertionMode) {
      case H.INITIAL: {
        xa(this, t);
        break;
      }
      case H.BEFORE_HTML: {
        TU(this, t);
        break;
      }
      case H.BEFORE_HEAD: {
        _U(this, t);
        break;
      }
      case H.IN_HEAD: {
        Un(this, t);
        break;
      }
      case H.IN_HEAD_NO_SCRIPT: {
        RU(this, t);
        break;
      }
      case H.AFTER_HEAD: {
        wU(this, t);
        break;
      }
      case H.IN_BODY: {
        ln(this, t);
        break;
      }
      case H.IN_TABLE: {
        aa(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        Ra(this, t);
        break;
      }
      case H.IN_CAPTION: {
        A5(this, t);
        break;
      }
      case H.IN_COLUMN_GROUP: {
        Jf(this, t);
        break;
      }
      case H.IN_TABLE_BODY: {
        lo(this, t);
        break;
      }
      case H.IN_ROW: {
        uo(this, t);
        break;
      }
      case H.IN_CELL: {
        I5(this, t);
        break;
      }
      case H.IN_SELECT: {
        US(this, t);
        break;
      }
      case H.IN_SELECT_IN_TABLE: {
        C5(this, t);
        break;
      }
      case H.IN_TEMPLATE: {
        N5(this, t);
        break;
      }
      case H.AFTER_BODY: {
        L5(this, t);
        break;
      }
      case H.IN_FRAMESET: {
        D5(this, t);
        break;
      }
      case H.AFTER_FRAMESET: {
        P5(this, t);
        break;
      }
      case H.AFTER_AFTER_BODY: {
        B5(this, t);
        break;
      }
      case H.AFTER_AFTER_FRAMESET: {
        U5(this, t);
        break;
      }
    }
  }
  /** @internal */
  onEndTag(t) {
    this.skipNextNewLine = !1, this.currentToken = t, this.currentNotInHTML ? $5(this, t) : this._endTagOutsideForeignContent(t);
  }
  /** @protected */
  _endTagOutsideForeignContent(t) {
    switch (this.insertionMode) {
      case H.INITIAL: {
        xa(this, t);
        break;
      }
      case H.BEFORE_HTML: {
        SU(this, t);
        break;
      }
      case H.BEFORE_HEAD: {
        AU(this, t);
        break;
      }
      case H.IN_HEAD: {
        xU(this, t);
        break;
      }
      case H.IN_HEAD_NO_SCRIPT: {
        IU(this, t);
        break;
      }
      case H.AFTER_HEAD: {
        CU(this, t);
        break;
      }
      case H.IN_BODY: {
        so(this, t);
        break;
      }
      case H.TEXT: {
        m5(this, t);
        break;
      }
      case H.IN_TABLE: {
        Ga(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        Ra(this, t);
        break;
      }
      case H.IN_CAPTION: {
        x5(this, t);
        break;
      }
      case H.IN_COLUMN_GROUP: {
        R5(this, t);
        break;
      }
      case H.IN_TABLE_BODY: {
        jp(this, t);
        break;
      }
      case H.IN_ROW: {
        BS(this, t);
        break;
      }
      case H.IN_CELL: {
        w5(this, t);
        break;
      }
      case H.IN_SELECT: {
        jS(this, t);
        break;
      }
      case H.IN_SELECT_IN_TABLE: {
        k5(this, t);
        break;
      }
      case H.IN_TEMPLATE: {
        O5(this, t);
        break;
      }
      case H.AFTER_BODY: {
        qS(this, t);
        break;
      }
      case H.IN_FRAMESET: {
        M5(this, t);
        break;
      }
      case H.AFTER_FRAMESET: {
        F5(this, t);
        break;
      }
      case H.AFTER_AFTER_BODY: {
        Ci(this, t);
        break;
      }
    }
  }
  /** @internal */
  onEof(t) {
    switch (this.insertionMode) {
      case H.INITIAL: {
        xa(this, t);
        break;
      }
      case H.BEFORE_HTML: {
        Da(this, t);
        break;
      }
      case H.BEFORE_HEAD: {
        Ma(this, t);
        break;
      }
      case H.IN_HEAD: {
        Pa(this, t);
        break;
      }
      case H.IN_HEAD_NO_SCRIPT: {
        Fa(this, t);
        break;
      }
      case H.AFTER_HEAD: {
        Ba(this, t);
        break;
      }
      case H.IN_BODY:
      case H.IN_TABLE:
      case H.IN_CAPTION:
      case H.IN_COLUMN_GROUP:
      case H.IN_TABLE_BODY:
      case H.IN_ROW:
      case H.IN_CELL:
      case H.IN_SELECT:
      case H.IN_SELECT_IN_TABLE: {
        DS(this, t);
        break;
      }
      case H.TEXT: {
        g5(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        Ra(this, t);
        break;
      }
      case H.IN_TEMPLATE: {
        HS(this, t);
        break;
      }
      case H.AFTER_BODY:
      case H.IN_FRAMESET:
      case H.AFTER_FRAMESET:
      case H.AFTER_AFTER_BODY:
      case H.AFTER_AFTER_FRAMESET: {
        Qf(this, t);
        break;
      }
    }
  }
  /** @internal */
  onWhitespaceCharacter(t) {
    if (this.skipNextNewLine && (this.skipNextNewLine = !1, t.chars.charCodeAt(0) === L.LINE_FEED)) {
      if (t.chars.length === 1)
        return;
      t.chars = t.chars.substr(1);
    }
    if (this.tokenizer.inForeignNode) {
      this._insertCharacters(t);
      return;
    }
    switch (this.insertionMode) {
      case H.IN_HEAD:
      case H.IN_HEAD_NO_SCRIPT:
      case H.AFTER_HEAD:
      case H.TEXT:
      case H.IN_COLUMN_GROUP:
      case H.IN_SELECT:
      case H.IN_SELECT_IN_TABLE:
      case H.IN_FRAMESET:
      case H.AFTER_FRAMESET: {
        this._insertCharacters(t);
        break;
      }
      case H.IN_BODY:
      case H.IN_CAPTION:
      case H.IN_CELL:
      case H.IN_TEMPLATE:
      case H.AFTER_BODY:
      case H.AFTER_AFTER_BODY:
      case H.AFTER_AFTER_FRAMESET: {
        CS(this, t);
        break;
      }
      case H.IN_TABLE:
      case H.IN_TABLE_BODY:
      case H.IN_ROW: {
        tp(this, t);
        break;
      }
      case H.IN_TABLE_TEXT: {
        MS(this, t);
        break;
      }
    }
  }
}
function pU(e, t) {
  let n = e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);
  return n ? e.openElements.contains(n.element) ? e.openElements.hasInScope(t.tagID) || (n = null) : (e.activeFormattingElements.removeEntry(n), n = null) : LS(e, t), n;
}
function fU(e, t) {
  let n = null, r = e.openElements.stackTop;
  for (; r >= 0; r--) {
    const a = e.openElements.items[r];
    if (a === t.element)
      break;
    e._isSpecialElement(a, e.openElements.tagIDs[r]) && (n = a);
  }
  return n || (e.openElements.shortenToLength(r < 0 ? 0 : r), e.activeFormattingElements.removeEntry(t)), n;
}
function mU(e, t, n) {
  let r = t, a = e.openElements.getCommonAncestor(t);
  for (let i = 0, o = a; o !== n; i++, o = a) {
    a = e.openElements.getCommonAncestor(o);
    const s = e.activeFormattingElements.getElementEntry(o), l = s && i >= cU;
    !s || l ? (l && e.activeFormattingElements.removeEntry(s), e.openElements.remove(o)) : (o = gU(e, s), r === t && (e.activeFormattingElements.bookmark = s), e.treeAdapter.detachNode(r), e.treeAdapter.appendChild(o, r), r = o);
  }
  return r;
}
function gU(e, t) {
  const n = e.treeAdapter.getNamespaceURI(t.element), r = e.treeAdapter.createElement(t.token.tagName, n, t.token.attrs);
  return e.openElements.replace(t.element, r), t.element = r, r;
}
function hU(e, t, n) {
  const r = e.treeAdapter.getTagName(t), a = da(r);
  if (e._isElementCausesFosterParenting(a))
    e._fosterParentElement(n);
  else {
    const i = e.treeAdapter.getNamespaceURI(t);
    a === p.TEMPLATE && i === ge.HTML && (t = e.treeAdapter.getTemplateContent(t)), e.treeAdapter.appendChild(t, n);
  }
}
function bU(e, t, n) {
  const r = e.treeAdapter.getNamespaceURI(n.element), { token: a } = n, i = e.treeAdapter.createElement(a.tagName, r, a.attrs);
  e._adoptNodes(t, i), e.treeAdapter.appendChild(t, i), e.activeFormattingElements.insertElementAfterBookmark(i, a), e.activeFormattingElements.removeEntry(n), e.openElements.remove(n.element), e.openElements.insertAfter(t, i, a.tagID);
}
function Zf(e, t) {
  for (let n = 0; n < uU; n++) {
    const r = pU(e, t);
    if (!r)
      break;
    const a = fU(e, r);
    if (!a)
      break;
    e.activeFormattingElements.bookmark = r;
    const i = mU(e, a, r.element), o = e.openElements.getCommonAncestor(r.element);
    e.treeAdapter.detachNode(i), o && hU(e, o, i), bU(e, a, r);
  }
}
function Up(e, t) {
  e._appendCommentNode(t, e.openElements.currentTmplContentOrNode);
}
function EU(e, t) {
  e._appendCommentNode(t, e.openElements.items[0]);
}
function yU(e, t) {
  e._appendCommentNode(t, e.document);
}
function Qf(e, t) {
  if (e.stopped = !0, t.location) {
    const n = e.fragmentContext ? 0 : 2;
    for (let r = e.openElements.stackTop; r >= n; r--)
      e._setEndLocation(e.openElements.items[r], t);
    if (!e.fragmentContext && e.openElements.stackTop >= 0) {
      const r = e.openElements.items[0], a = e.treeAdapter.getNodeSourceCodeLocation(r);
      if (a && !a.endTag && (e._setEndLocation(r, t), e.openElements.stackTop >= 1)) {
        const i = e.openElements.items[1], o = e.treeAdapter.getNodeSourceCodeLocation(i);
        o && !o.endTag && e._setEndLocation(i, t);
      }
    }
  }
}
function vU(e, t) {
  e._setDocumentType(t);
  const n = t.forceQuirks ? Cn.QUIRKS : XB(t);
  KB(t) || e._err(t, ie.nonConformingDoctype), e.treeAdapter.setDocumentMode(e.document, n), e.insertionMode = H.BEFORE_HTML;
}
function xa(e, t) {
  e._err(t, ie.missingDoctype, !0), e.treeAdapter.setDocumentMode(e.document, Cn.QUIRKS), e.insertionMode = H.BEFORE_HTML, e._processToken(t);
}
function TU(e, t) {
  t.tagID === p.HTML ? (e._insertElement(t, ge.HTML), e.insertionMode = H.BEFORE_HEAD) : Da(e, t);
}
function SU(e, t) {
  const n = t.tagID;
  (n === p.HTML || n === p.HEAD || n === p.BODY || n === p.BR) && Da(e, t);
}
function Da(e, t) {
  e._insertFakeRootElement(), e.insertionMode = H.BEFORE_HEAD, e._processToken(t);
}
function _U(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.HEAD: {
      e._insertElement(t, ge.HTML), e.headElement = e.openElements.current, e.insertionMode = H.IN_HEAD;
      break;
    }
    default:
      Ma(e, t);
  }
}
function AU(e, t) {
  const n = t.tagID;
  n === p.HEAD || n === p.BODY || n === p.HTML || n === p.BR ? Ma(e, t) : e._err(t, ie.endTagWithoutMatchingOpenElement);
}
function Ma(e, t) {
  e._insertFakeElement(te.HEAD, p.HEAD), e.headElement = e.openElements.current, e.insertionMode = H.IN_HEAD, e._processToken(t);
}
function Un(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.BASE:
    case p.BASEFONT:
    case p.BGSOUND:
    case p.LINK:
    case p.META: {
      e._appendElement(t, ge.HTML), t.ackSelfClosing = !0;
      break;
    }
    case p.TITLE: {
      e._switchToTextParsing(t, Lt.RCDATA);
      break;
    }
    case p.NOSCRIPT: {
      e.options.scriptingEnabled ? e._switchToTextParsing(t, Lt.RAWTEXT) : (e._insertElement(t, ge.HTML), e.insertionMode = H.IN_HEAD_NO_SCRIPT);
      break;
    }
    case p.NOFRAMES:
    case p.STYLE: {
      e._switchToTextParsing(t, Lt.RAWTEXT);
      break;
    }
    case p.SCRIPT: {
      e._switchToTextParsing(t, Lt.SCRIPT_DATA);
      break;
    }
    case p.TEMPLATE: {
      e._insertTemplate(t), e.activeFormattingElements.insertMarker(), e.framesetOk = !1, e.insertionMode = H.IN_TEMPLATE, e.tmplInsertionModeStack.unshift(H.IN_TEMPLATE);
      break;
    }
    case p.HEAD: {
      e._err(t, ie.misplacedStartTagForHeadElement);
      break;
    }
    default:
      Pa(e, t);
  }
}
function xU(e, t) {
  switch (t.tagID) {
    case p.HEAD: {
      e.openElements.pop(), e.insertionMode = H.AFTER_HEAD;
      break;
    }
    case p.BODY:
    case p.BR:
    case p.HTML: {
      Pa(e, t);
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
    default:
      e._err(t, ie.endTagWithoutMatchingOpenElement);
  }
}
function Fr(e, t) {
  e.openElements.tmplCount > 0 ? (e.openElements.generateImpliedEndTagsThoroughly(), e.openElements.currentTagId !== p.TEMPLATE && e._err(t, ie.closingOfElementWithOpenChildElements), e.openElements.popUntilTagNamePopped(p.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode()) : e._err(t, ie.endTagWithoutMatchingOpenElement);
}
function Pa(e, t) {
  e.openElements.pop(), e.insertionMode = H.AFTER_HEAD, e._processToken(t);
}
function RU(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.BASEFONT:
    case p.BGSOUND:
    case p.HEAD:
    case p.LINK:
    case p.META:
    case p.NOFRAMES:
    case p.STYLE: {
      Un(e, t);
      break;
    }
    case p.NOSCRIPT: {
      e._err(t, ie.nestedNoscriptInHead);
      break;
    }
    default:
      Fa(e, t);
  }
}
function IU(e, t) {
  switch (t.tagID) {
    case p.NOSCRIPT: {
      e.openElements.pop(), e.insertionMode = H.IN_HEAD;
      break;
    }
    case p.BR: {
      Fa(e, t);
      break;
    }
    default:
      e._err(t, ie.endTagWithoutMatchingOpenElement);
  }
}
function Fa(e, t) {
  const n = t.type === Qe.EOF ? ie.openElementsLeftAfterEof : ie.disallowedContentInNoscriptInHead;
  e._err(t, n), e.openElements.pop(), e.insertionMode = H.IN_HEAD, e._processToken(t);
}
function wU(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.BODY: {
      e._insertElement(t, ge.HTML), e.framesetOk = !1, e.insertionMode = H.IN_BODY;
      break;
    }
    case p.FRAMESET: {
      e._insertElement(t, ge.HTML), e.insertionMode = H.IN_FRAMESET;
      break;
    }
    case p.BASE:
    case p.BASEFONT:
    case p.BGSOUND:
    case p.LINK:
    case p.META:
    case p.NOFRAMES:
    case p.SCRIPT:
    case p.STYLE:
    case p.TEMPLATE:
    case p.TITLE: {
      e._err(t, ie.abandonedHeadElementChild), e.openElements.push(e.headElement, p.HEAD), Un(e, t), e.openElements.remove(e.headElement);
      break;
    }
    case p.HEAD: {
      e._err(t, ie.misplacedStartTagForHeadElement);
      break;
    }
    default:
      Ba(e, t);
  }
}
function CU(e, t) {
  switch (t.tagID) {
    case p.BODY:
    case p.HTML:
    case p.BR: {
      Ba(e, t);
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
    default:
      e._err(t, ie.endTagWithoutMatchingOpenElement);
  }
}
function Ba(e, t) {
  e._insertFakeElement(te.BODY, p.BODY), e.insertionMode = H.IN_BODY, oo(e, t);
}
function oo(e, t) {
  switch (t.type) {
    case Qe.CHARACTER: {
      kS(e, t);
      break;
    }
    case Qe.WHITESPACE_CHARACTER: {
      CS(e, t);
      break;
    }
    case Qe.COMMENT: {
      Up(e, t);
      break;
    }
    case Qe.START_TAG: {
      ln(e, t);
      break;
    }
    case Qe.END_TAG: {
      so(e, t);
      break;
    }
    case Qe.EOF: {
      DS(e, t);
      break;
    }
  }
}
function CS(e, t) {
  e._reconstructActiveFormattingElements(), e._insertCharacters(t);
}
function kS(e, t) {
  e._reconstructActiveFormattingElements(), e._insertCharacters(t), e.framesetOk = !1;
}
function kU(e, t) {
  e.openElements.tmplCount === 0 && e.treeAdapter.adoptAttributes(e.openElements.items[0], t.attrs);
}
function NU(e, t) {
  const n = e.openElements.tryPeekProperlyNestedBodyElement();
  n && e.openElements.tmplCount === 0 && (e.framesetOk = !1, e.treeAdapter.adoptAttributes(n, t.attrs));
}
function OU(e, t) {
  const n = e.openElements.tryPeekProperlyNestedBodyElement();
  e.framesetOk && n && (e.treeAdapter.detachNode(n), e.openElements.popAllUpToHtmlElement(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_FRAMESET);
}
function LU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML);
}
function DU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), Bp.has(e.openElements.currentTagId) && e.openElements.pop(), e._insertElement(t, ge.HTML);
}
function MU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML), e.skipNextNewLine = !0, e.framesetOk = !1;
}
function PU(e, t) {
  const n = e.openElements.tmplCount > 0;
  (!e.formElement || n) && (e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML), n || (e.formElement = e.openElements.current));
}
function FU(e, t) {
  e.framesetOk = !1;
  const n = t.tagID;
  for (let r = e.openElements.stackTop; r >= 0; r--) {
    const a = e.openElements.tagIDs[r];
    if (n === p.LI && a === p.LI || (n === p.DD || n === p.DT) && (a === p.DD || a === p.DT)) {
      e.openElements.generateImpliedEndTagsWithExclusion(a), e.openElements.popUntilTagNamePopped(a);
      break;
    }
    if (a !== p.ADDRESS && a !== p.DIV && a !== p.P && e._isSpecialElement(e.openElements.items[r], a))
      break;
  }
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML);
}
function BU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML), e.tokenizer.state = Lt.PLAINTEXT;
}
function UU(e, t) {
  e.openElements.hasInScope(p.BUTTON) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(p.BUTTON)), e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML), e.framesetOk = !1;
}
function jU(e, t) {
  const n = e.activeFormattingElements.getElementEntryInScopeWithTagName(te.A);
  n && (Zf(e, t), e.openElements.remove(n.element), e.activeFormattingElements.removeEntry(n)), e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function HU(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function qU(e, t) {
  e._reconstructActiveFormattingElements(), e.openElements.hasInScope(p.NOBR) && (Zf(e, t), e._reconstructActiveFormattingElements()), e._insertElement(t, ge.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t);
}
function $U(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML), e.activeFormattingElements.insertMarker(), e.framesetOk = !1;
}
function zU(e, t) {
  e.treeAdapter.getDocumentMode(e.document) !== Cn.QUIRKS && e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._insertElement(t, ge.HTML), e.framesetOk = !1, e.insertionMode = H.IN_TABLE;
}
function NS(e, t) {
  e._reconstructActiveFormattingElements(), e._appendElement(t, ge.HTML), e.framesetOk = !1, t.ackSelfClosing = !0;
}
function OS(e) {
  const t = bS(e, Cr.TYPE);
  return t != null && t.toLowerCase() === lU;
}
function GU(e, t) {
  e._reconstructActiveFormattingElements(), e._appendElement(t, ge.HTML), OS(t) || (e.framesetOk = !1), t.ackSelfClosing = !0;
}
function VU(e, t) {
  e._appendElement(t, ge.HTML), t.ackSelfClosing = !0;
}
function WU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._appendElement(t, ge.HTML), e.framesetOk = !1, t.ackSelfClosing = !0;
}
function YU(e, t) {
  t.tagName = te.IMG, t.tagID = p.IMG, NS(e, t);
}
function KU(e, t) {
  e._insertElement(t, ge.HTML), e.skipNextNewLine = !0, e.tokenizer.state = Lt.RCDATA, e.originalInsertionMode = e.insertionMode, e.framesetOk = !1, e.insertionMode = H.TEXT;
}
function XU(e, t) {
  e.openElements.hasInButtonScope(p.P) && e._closePElement(), e._reconstructActiveFormattingElements(), e.framesetOk = !1, e._switchToTextParsing(t, Lt.RAWTEXT);
}
function ZU(e, t) {
  e.framesetOk = !1, e._switchToTextParsing(t, Lt.RAWTEXT);
}
function fv(e, t) {
  e._switchToTextParsing(t, Lt.RAWTEXT);
}
function QU(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML), e.framesetOk = !1, e.insertionMode = e.insertionMode === H.IN_TABLE || e.insertionMode === H.IN_CAPTION || e.insertionMode === H.IN_TABLE_BODY || e.insertionMode === H.IN_ROW || e.insertionMode === H.IN_CELL ? H.IN_SELECT_IN_TABLE : H.IN_SELECT;
}
function JU(e, t) {
  e.openElements.currentTagId === p.OPTION && e.openElements.pop(), e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML);
}
function e5(e, t) {
  e.openElements.hasInScope(p.RUBY) && e.openElements.generateImpliedEndTags(), e._insertElement(t, ge.HTML);
}
function t5(e, t) {
  e.openElements.hasInScope(p.RUBY) && e.openElements.generateImpliedEndTagsWithExclusion(p.RTC), e._insertElement(t, ge.HTML);
}
function n5(e, t) {
  e._reconstructActiveFormattingElements(), RS(t), Xf(t), t.selfClosing ? e._appendElement(t, ge.MATHML) : e._insertElement(t, ge.MATHML), t.ackSelfClosing = !0;
}
function r5(e, t) {
  e._reconstructActiveFormattingElements(), IS(t), Xf(t), t.selfClosing ? e._appendElement(t, ge.SVG) : e._insertElement(t, ge.SVG), t.ackSelfClosing = !0;
}
function mv(e, t) {
  e._reconstructActiveFormattingElements(), e._insertElement(t, ge.HTML);
}
function ln(e, t) {
  switch (t.tagID) {
    case p.I:
    case p.S:
    case p.B:
    case p.U:
    case p.EM:
    case p.TT:
    case p.BIG:
    case p.CODE:
    case p.FONT:
    case p.SMALL:
    case p.STRIKE:
    case p.STRONG: {
      HU(e, t);
      break;
    }
    case p.A: {
      jU(e, t);
      break;
    }
    case p.H1:
    case p.H2:
    case p.H3:
    case p.H4:
    case p.H5:
    case p.H6: {
      DU(e, t);
      break;
    }
    case p.P:
    case p.DL:
    case p.OL:
    case p.UL:
    case p.DIV:
    case p.DIR:
    case p.NAV:
    case p.MAIN:
    case p.MENU:
    case p.ASIDE:
    case p.CENTER:
    case p.FIGURE:
    case p.FOOTER:
    case p.HEADER:
    case p.HGROUP:
    case p.DIALOG:
    case p.DETAILS:
    case p.ADDRESS:
    case p.ARTICLE:
    case p.SEARCH:
    case p.SECTION:
    case p.SUMMARY:
    case p.FIELDSET:
    case p.BLOCKQUOTE:
    case p.FIGCAPTION: {
      LU(e, t);
      break;
    }
    case p.LI:
    case p.DD:
    case p.DT: {
      FU(e, t);
      break;
    }
    case p.BR:
    case p.IMG:
    case p.WBR:
    case p.AREA:
    case p.EMBED:
    case p.KEYGEN: {
      NS(e, t);
      break;
    }
    case p.HR: {
      WU(e, t);
      break;
    }
    case p.RB:
    case p.RTC: {
      e5(e, t);
      break;
    }
    case p.RT:
    case p.RP: {
      t5(e, t);
      break;
    }
    case p.PRE:
    case p.LISTING: {
      MU(e, t);
      break;
    }
    case p.XMP: {
      XU(e, t);
      break;
    }
    case p.SVG: {
      r5(e, t);
      break;
    }
    case p.HTML: {
      kU(e, t);
      break;
    }
    case p.BASE:
    case p.LINK:
    case p.META:
    case p.STYLE:
    case p.TITLE:
    case p.SCRIPT:
    case p.BGSOUND:
    case p.BASEFONT:
    case p.TEMPLATE: {
      Un(e, t);
      break;
    }
    case p.BODY: {
      NU(e, t);
      break;
    }
    case p.FORM: {
      PU(e, t);
      break;
    }
    case p.NOBR: {
      qU(e, t);
      break;
    }
    case p.MATH: {
      n5(e, t);
      break;
    }
    case p.TABLE: {
      zU(e, t);
      break;
    }
    case p.INPUT: {
      GU(e, t);
      break;
    }
    case p.PARAM:
    case p.TRACK:
    case p.SOURCE: {
      VU(e, t);
      break;
    }
    case p.IMAGE: {
      YU(e, t);
      break;
    }
    case p.BUTTON: {
      UU(e, t);
      break;
    }
    case p.APPLET:
    case p.OBJECT:
    case p.MARQUEE: {
      $U(e, t);
      break;
    }
    case p.IFRAME: {
      ZU(e, t);
      break;
    }
    case p.SELECT: {
      QU(e, t);
      break;
    }
    case p.OPTION:
    case p.OPTGROUP: {
      JU(e, t);
      break;
    }
    case p.NOEMBED:
    case p.NOFRAMES: {
      fv(e, t);
      break;
    }
    case p.FRAMESET: {
      OU(e, t);
      break;
    }
    case p.TEXTAREA: {
      KU(e, t);
      break;
    }
    case p.NOSCRIPT: {
      e.options.scriptingEnabled ? fv(e, t) : mv(e, t);
      break;
    }
    case p.PLAINTEXT: {
      BU(e, t);
      break;
    }
    case p.COL:
    case p.TH:
    case p.TD:
    case p.TR:
    case p.HEAD:
    case p.FRAME:
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD:
    case p.CAPTION:
    case p.COLGROUP:
      break;
    default:
      mv(e, t);
  }
}
function a5(e, t) {
  if (e.openElements.hasInScope(p.BODY) && (e.insertionMode = H.AFTER_BODY, e.options.sourceCodeLocationInfo)) {
    const n = e.openElements.tryPeekProperlyNestedBodyElement();
    n && e._setEndLocation(n, t);
  }
}
function i5(e, t) {
  e.openElements.hasInScope(p.BODY) && (e.insertionMode = H.AFTER_BODY, qS(e, t));
}
function o5(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n));
}
function s5(e) {
  const t = e.openElements.tmplCount > 0, { formElement: n } = e;
  t || (e.formElement = null), (n || t) && e.openElements.hasInScope(p.FORM) && (e.openElements.generateImpliedEndTags(), t ? e.openElements.popUntilTagNamePopped(p.FORM) : n && e.openElements.remove(n));
}
function l5(e) {
  e.openElements.hasInButtonScope(p.P) || e._insertFakeElement(te.P, p.P), e._closePElement();
}
function u5(e) {
  e.openElements.hasInListItemScope(p.LI) && (e.openElements.generateImpliedEndTagsWithExclusion(p.LI), e.openElements.popUntilTagNamePopped(p.LI));
}
function c5(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTagsWithExclusion(n), e.openElements.popUntilTagNamePopped(n));
}
function d5(e) {
  e.openElements.hasNumberedHeaderInScope() && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilNumberedHeaderPopped());
}
function p5(e, t) {
  const n = t.tagID;
  e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker());
}
function f5(e) {
  e._reconstructActiveFormattingElements(), e._insertFakeElement(te.BR, p.BR), e.openElements.pop(), e.framesetOk = !1;
}
function LS(e, t) {
  const n = t.tagName, r = t.tagID;
  for (let a = e.openElements.stackTop; a > 0; a--) {
    const i = e.openElements.items[a], o = e.openElements.tagIDs[a];
    if (r === o && (r !== p.UNKNOWN || e.treeAdapter.getTagName(i) === n)) {
      e.openElements.generateImpliedEndTagsWithExclusion(r), e.openElements.stackTop >= a && e.openElements.shortenToLength(a);
      break;
    }
    if (e._isSpecialElement(i, o))
      break;
  }
}
function so(e, t) {
  switch (t.tagID) {
    case p.A:
    case p.B:
    case p.I:
    case p.S:
    case p.U:
    case p.EM:
    case p.TT:
    case p.BIG:
    case p.CODE:
    case p.FONT:
    case p.NOBR:
    case p.SMALL:
    case p.STRIKE:
    case p.STRONG: {
      Zf(e, t);
      break;
    }
    case p.P: {
      l5(e);
      break;
    }
    case p.DL:
    case p.UL:
    case p.OL:
    case p.DIR:
    case p.DIV:
    case p.NAV:
    case p.PRE:
    case p.MAIN:
    case p.MENU:
    case p.ASIDE:
    case p.BUTTON:
    case p.CENTER:
    case p.FIGURE:
    case p.FOOTER:
    case p.HEADER:
    case p.HGROUP:
    case p.DIALOG:
    case p.ADDRESS:
    case p.ARTICLE:
    case p.DETAILS:
    case p.SEARCH:
    case p.SECTION:
    case p.SUMMARY:
    case p.LISTING:
    case p.FIELDSET:
    case p.BLOCKQUOTE:
    case p.FIGCAPTION: {
      o5(e, t);
      break;
    }
    case p.LI: {
      u5(e);
      break;
    }
    case p.DD:
    case p.DT: {
      c5(e, t);
      break;
    }
    case p.H1:
    case p.H2:
    case p.H3:
    case p.H4:
    case p.H5:
    case p.H6: {
      d5(e);
      break;
    }
    case p.BR: {
      f5(e);
      break;
    }
    case p.BODY: {
      a5(e, t);
      break;
    }
    case p.HTML: {
      i5(e, t);
      break;
    }
    case p.FORM: {
      s5(e);
      break;
    }
    case p.APPLET:
    case p.OBJECT:
    case p.MARQUEE: {
      p5(e, t);
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
    default:
      LS(e, t);
  }
}
function DS(e, t) {
  e.tmplInsertionModeStack.length > 0 ? HS(e, t) : Qf(e, t);
}
function m5(e, t) {
  var n;
  t.tagID === p.SCRIPT && ((n = e.scriptHandler) === null || n === void 0 || n.call(e, e.openElements.current)), e.openElements.pop(), e.insertionMode = e.originalInsertionMode;
}
function g5(e, t) {
  e._err(t, ie.eofInElementThatCanContainOnlyText), e.openElements.pop(), e.insertionMode = e.originalInsertionMode, e.onEof(t);
}
function tp(e, t) {
  if (wS.has(e.openElements.currentTagId))
    switch (e.pendingCharacterTokens.length = 0, e.hasNonWhitespacePendingCharacterToken = !1, e.originalInsertionMode = e.insertionMode, e.insertionMode = H.IN_TABLE_TEXT, t.type) {
      case Qe.CHARACTER: {
        PS(e, t);
        break;
      }
      case Qe.WHITESPACE_CHARACTER: {
        MS(e, t);
        break;
      }
    }
  else
    ni(e, t);
}
function h5(e, t) {
  e.openElements.clearBackToTableContext(), e.activeFormattingElements.insertMarker(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_CAPTION;
}
function b5(e, t) {
  e.openElements.clearBackToTableContext(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_COLUMN_GROUP;
}
function E5(e, t) {
  e.openElements.clearBackToTableContext(), e._insertFakeElement(te.COLGROUP, p.COLGROUP), e.insertionMode = H.IN_COLUMN_GROUP, Jf(e, t);
}
function y5(e, t) {
  e.openElements.clearBackToTableContext(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_TABLE_BODY;
}
function v5(e, t) {
  e.openElements.clearBackToTableContext(), e._insertFakeElement(te.TBODY, p.TBODY), e.insertionMode = H.IN_TABLE_BODY, lo(e, t);
}
function T5(e, t) {
  e.openElements.hasInTableScope(p.TABLE) && (e.openElements.popUntilTagNamePopped(p.TABLE), e._resetInsertionMode(), e._processStartTag(t));
}
function S5(e, t) {
  OS(t) ? e._appendElement(t, ge.HTML) : ni(e, t), t.ackSelfClosing = !0;
}
function _5(e, t) {
  !e.formElement && e.openElements.tmplCount === 0 && (e._insertElement(t, ge.HTML), e.formElement = e.openElements.current, e.openElements.pop());
}
function aa(e, t) {
  switch (t.tagID) {
    case p.TD:
    case p.TH:
    case p.TR: {
      v5(e, t);
      break;
    }
    case p.STYLE:
    case p.SCRIPT:
    case p.TEMPLATE: {
      Un(e, t);
      break;
    }
    case p.COL: {
      E5(e, t);
      break;
    }
    case p.FORM: {
      _5(e, t);
      break;
    }
    case p.TABLE: {
      T5(e, t);
      break;
    }
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD: {
      y5(e, t);
      break;
    }
    case p.INPUT: {
      S5(e, t);
      break;
    }
    case p.CAPTION: {
      h5(e, t);
      break;
    }
    case p.COLGROUP: {
      b5(e, t);
      break;
    }
    default:
      ni(e, t);
  }
}
function Ga(e, t) {
  switch (t.tagID) {
    case p.TABLE: {
      e.openElements.hasInTableScope(p.TABLE) && (e.openElements.popUntilTagNamePopped(p.TABLE), e._resetInsertionMode());
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
    case p.BODY:
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.HTML:
    case p.TBODY:
    case p.TD:
    case p.TFOOT:
    case p.TH:
    case p.THEAD:
    case p.TR:
      break;
    default:
      ni(e, t);
  }
}
function ni(e, t) {
  const n = e.fosterParentingEnabled;
  e.fosterParentingEnabled = !0, oo(e, t), e.fosterParentingEnabled = n;
}
function MS(e, t) {
  e.pendingCharacterTokens.push(t);
}
function PS(e, t) {
  e.pendingCharacterTokens.push(t), e.hasNonWhitespacePendingCharacterToken = !0;
}
function Ra(e, t) {
  let n = 0;
  if (e.hasNonWhitespacePendingCharacterToken)
    for (; n < e.pendingCharacterTokens.length; n++)
      ni(e, e.pendingCharacterTokens[n]);
  else
    for (; n < e.pendingCharacterTokens.length; n++)
      e._insertCharacters(e.pendingCharacterTokens[n]);
  e.insertionMode = e.originalInsertionMode, e._processToken(t);
}
const FS = /* @__PURE__ */ new Set([p.CAPTION, p.COL, p.COLGROUP, p.TBODY, p.TD, p.TFOOT, p.TH, p.THEAD, p.TR]);
function A5(e, t) {
  const n = t.tagID;
  FS.has(n) ? e.openElements.hasInTableScope(p.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(p.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = H.IN_TABLE, aa(e, t)) : ln(e, t);
}
function x5(e, t) {
  const n = t.tagID;
  switch (n) {
    case p.CAPTION:
    case p.TABLE: {
      e.openElements.hasInTableScope(p.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(p.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = H.IN_TABLE, n === p.TABLE && Ga(e, t));
      break;
    }
    case p.BODY:
    case p.COL:
    case p.COLGROUP:
    case p.HTML:
    case p.TBODY:
    case p.TD:
    case p.TFOOT:
    case p.TH:
    case p.THEAD:
    case p.TR:
      break;
    default:
      so(e, t);
  }
}
function Jf(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.COL: {
      e._appendElement(t, ge.HTML), t.ackSelfClosing = !0;
      break;
    }
    case p.TEMPLATE: {
      Un(e, t);
      break;
    }
    default:
      Hi(e, t);
  }
}
function R5(e, t) {
  switch (t.tagID) {
    case p.COLGROUP: {
      e.openElements.currentTagId === p.COLGROUP && (e.openElements.pop(), e.insertionMode = H.IN_TABLE);
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
    case p.COL:
      break;
    default:
      Hi(e, t);
  }
}
function Hi(e, t) {
  e.openElements.currentTagId === p.COLGROUP && (e.openElements.pop(), e.insertionMode = H.IN_TABLE, e._processToken(t));
}
function lo(e, t) {
  switch (t.tagID) {
    case p.TR: {
      e.openElements.clearBackToTableBodyContext(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_ROW;
      break;
    }
    case p.TH:
    case p.TD: {
      e.openElements.clearBackToTableBodyContext(), e._insertFakeElement(te.TR, p.TR), e.insertionMode = H.IN_ROW, uo(e, t);
      break;
    }
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD: {
      e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE, aa(e, t));
      break;
    }
    default:
      aa(e, t);
  }
}
function jp(e, t) {
  const n = t.tagID;
  switch (t.tagID) {
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD: {
      e.openElements.hasInTableScope(n) && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE);
      break;
    }
    case p.TABLE: {
      e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE, Ga(e, t));
      break;
    }
    case p.BODY:
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.HTML:
    case p.TD:
    case p.TH:
    case p.TR:
      break;
    default:
      Ga(e, t);
  }
}
function uo(e, t) {
  switch (t.tagID) {
    case p.TH:
    case p.TD: {
      e.openElements.clearBackToTableRowContext(), e._insertElement(t, ge.HTML), e.insertionMode = H.IN_CELL, e.activeFormattingElements.insertMarker();
      break;
    }
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD:
    case p.TR: {
      e.openElements.hasInTableScope(p.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE_BODY, lo(e, t));
      break;
    }
    default:
      aa(e, t);
  }
}
function BS(e, t) {
  switch (t.tagID) {
    case p.TR: {
      e.openElements.hasInTableScope(p.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE_BODY);
      break;
    }
    case p.TABLE: {
      e.openElements.hasInTableScope(p.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE_BODY, jp(e, t));
      break;
    }
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD: {
      (e.openElements.hasInTableScope(t.tagID) || e.openElements.hasInTableScope(p.TR)) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = H.IN_TABLE_BODY, jp(e, t));
      break;
    }
    case p.BODY:
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.HTML:
    case p.TD:
    case p.TH:
      break;
    default:
      Ga(e, t);
  }
}
function I5(e, t) {
  const n = t.tagID;
  FS.has(n) ? (e.openElements.hasInTableScope(p.TD) || e.openElements.hasInTableScope(p.TH)) && (e._closeTableCell(), uo(e, t)) : ln(e, t);
}
function w5(e, t) {
  const n = t.tagID;
  switch (n) {
    case p.TD:
    case p.TH: {
      e.openElements.hasInTableScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = H.IN_ROW);
      break;
    }
    case p.TABLE:
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD:
    case p.TR: {
      e.openElements.hasInTableScope(n) && (e._closeTableCell(), BS(e, t));
      break;
    }
    case p.BODY:
    case p.CAPTION:
    case p.COL:
    case p.COLGROUP:
    case p.HTML:
      break;
    default:
      so(e, t);
  }
}
function US(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.OPTION: {
      e.openElements.currentTagId === p.OPTION && e.openElements.pop(), e._insertElement(t, ge.HTML);
      break;
    }
    case p.OPTGROUP: {
      e.openElements.currentTagId === p.OPTION && e.openElements.pop(), e.openElements.currentTagId === p.OPTGROUP && e.openElements.pop(), e._insertElement(t, ge.HTML);
      break;
    }
    case p.HR: {
      e.openElements.currentTagId === p.OPTION && e.openElements.pop(), e.openElements.currentTagId === p.OPTGROUP && e.openElements.pop(), e._appendElement(t, ge.HTML), t.ackSelfClosing = !0;
      break;
    }
    case p.INPUT:
    case p.KEYGEN:
    case p.TEXTAREA:
    case p.SELECT: {
      e.openElements.hasInSelectScope(p.SELECT) && (e.openElements.popUntilTagNamePopped(p.SELECT), e._resetInsertionMode(), t.tagID !== p.SELECT && e._processStartTag(t));
      break;
    }
    case p.SCRIPT:
    case p.TEMPLATE: {
      Un(e, t);
      break;
    }
  }
}
function jS(e, t) {
  switch (t.tagID) {
    case p.OPTGROUP: {
      e.openElements.stackTop > 0 && e.openElements.currentTagId === p.OPTION && e.openElements.tagIDs[e.openElements.stackTop - 1] === p.OPTGROUP && e.openElements.pop(), e.openElements.currentTagId === p.OPTGROUP && e.openElements.pop();
      break;
    }
    case p.OPTION: {
      e.openElements.currentTagId === p.OPTION && e.openElements.pop();
      break;
    }
    case p.SELECT: {
      e.openElements.hasInSelectScope(p.SELECT) && (e.openElements.popUntilTagNamePopped(p.SELECT), e._resetInsertionMode());
      break;
    }
    case p.TEMPLATE: {
      Fr(e, t);
      break;
    }
  }
}
function C5(e, t) {
  const n = t.tagID;
  n === p.CAPTION || n === p.TABLE || n === p.TBODY || n === p.TFOOT || n === p.THEAD || n === p.TR || n === p.TD || n === p.TH ? (e.openElements.popUntilTagNamePopped(p.SELECT), e._resetInsertionMode(), e._processStartTag(t)) : US(e, t);
}
function k5(e, t) {
  const n = t.tagID;
  n === p.CAPTION || n === p.TABLE || n === p.TBODY || n === p.TFOOT || n === p.THEAD || n === p.TR || n === p.TD || n === p.TH ? e.openElements.hasInTableScope(n) && (e.openElements.popUntilTagNamePopped(p.SELECT), e._resetInsertionMode(), e.onEndTag(t)) : jS(e, t);
}
function N5(e, t) {
  switch (t.tagID) {
    case p.BASE:
    case p.BASEFONT:
    case p.BGSOUND:
    case p.LINK:
    case p.META:
    case p.NOFRAMES:
    case p.SCRIPT:
    case p.STYLE:
    case p.TEMPLATE:
    case p.TITLE: {
      Un(e, t);
      break;
    }
    case p.CAPTION:
    case p.COLGROUP:
    case p.TBODY:
    case p.TFOOT:
    case p.THEAD: {
      e.tmplInsertionModeStack[0] = H.IN_TABLE, e.insertionMode = H.IN_TABLE, aa(e, t);
      break;
    }
    case p.COL: {
      e.tmplInsertionModeStack[0] = H.IN_COLUMN_GROUP, e.insertionMode = H.IN_COLUMN_GROUP, Jf(e, t);
      break;
    }
    case p.TR: {
      e.tmplInsertionModeStack[0] = H.IN_TABLE_BODY, e.insertionMode = H.IN_TABLE_BODY, lo(e, t);
      break;
    }
    case p.TD:
    case p.TH: {
      e.tmplInsertionModeStack[0] = H.IN_ROW, e.insertionMode = H.IN_ROW, uo(e, t);
      break;
    }
    default:
      e.tmplInsertionModeStack[0] = H.IN_BODY, e.insertionMode = H.IN_BODY, ln(e, t);
  }
}
function O5(e, t) {
  t.tagID === p.TEMPLATE && Fr(e, t);
}
function HS(e, t) {
  e.openElements.tmplCount > 0 ? (e.openElements.popUntilTagNamePopped(p.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode(), e.onEof(t)) : Qf(e, t);
}
function L5(e, t) {
  t.tagID === p.HTML ? ln(e, t) : qi(e, t);
}
function qS(e, t) {
  var n;
  if (t.tagID === p.HTML) {
    if (e.fragmentContext || (e.insertionMode = H.AFTER_AFTER_BODY), e.options.sourceCodeLocationInfo && e.openElements.tagIDs[0] === p.HTML) {
      e._setEndLocation(e.openElements.items[0], t);
      const r = e.openElements.items[1];
      r && !(!((n = e.treeAdapter.getNodeSourceCodeLocation(r)) === null || n === void 0) && n.endTag) && e._setEndLocation(r, t);
    }
  } else
    qi(e, t);
}
function qi(e, t) {
  e.insertionMode = H.IN_BODY, oo(e, t);
}
function D5(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.FRAMESET: {
      e._insertElement(t, ge.HTML);
      break;
    }
    case p.FRAME: {
      e._appendElement(t, ge.HTML), t.ackSelfClosing = !0;
      break;
    }
    case p.NOFRAMES: {
      Un(e, t);
      break;
    }
  }
}
function M5(e, t) {
  t.tagID === p.FRAMESET && !e.openElements.isRootHtmlElementCurrent() && (e.openElements.pop(), !e.fragmentContext && e.openElements.currentTagId !== p.FRAMESET && (e.insertionMode = H.AFTER_FRAMESET));
}
function P5(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.NOFRAMES: {
      Un(e, t);
      break;
    }
  }
}
function F5(e, t) {
  t.tagID === p.HTML && (e.insertionMode = H.AFTER_AFTER_FRAMESET);
}
function B5(e, t) {
  t.tagID === p.HTML ? ln(e, t) : Ci(e, t);
}
function Ci(e, t) {
  e.insertionMode = H.IN_BODY, oo(e, t);
}
function U5(e, t) {
  switch (t.tagID) {
    case p.HTML: {
      ln(e, t);
      break;
    }
    case p.NOFRAMES: {
      Un(e, t);
      break;
    }
  }
}
function j5(e, t) {
  t.chars = St, e._insertCharacters(t);
}
function H5(e, t) {
  e._insertCharacters(t), e.framesetOk = !1;
}
function $S(e) {
  for (; e.treeAdapter.getNamespaceURI(e.openElements.current) !== ge.HTML && !e._isIntegrationPoint(e.openElements.currentTagId, e.openElements.current); )
    e.openElements.pop();
}
function q5(e, t) {
  if (rU(t))
    $S(e), e._startTagOutsideForeignContent(t);
  else {
    const n = e._getAdjustedCurrentElement(), r = e.treeAdapter.getNamespaceURI(n);
    r === ge.MATHML ? RS(t) : r === ge.SVG && (aU(t), IS(t)), Xf(t), t.selfClosing ? e._appendElement(t, r) : e._insertElement(t, r), t.ackSelfClosing = !0;
  }
}
function $5(e, t) {
  if (t.tagID === p.P || t.tagID === p.BR) {
    $S(e), e._endTagOutsideForeignContent(t);
    return;
  }
  for (let n = e.openElements.stackTop; n > 0; n--) {
    const r = e.openElements.items[n];
    if (e.treeAdapter.getNamespaceURI(r) === ge.HTML) {
      e._endTagOutsideForeignContent(t);
      break;
    }
    const a = e.treeAdapter.getTagName(r);
    if (a.toLowerCase() === t.tagName) {
      t.tagName = a, e.openElements.shortenToLength(n);
      break;
    }
  }
}
te.AREA, te.BASE, te.BASEFONT, te.BGSOUND, te.BR, te.COL, te.EMBED, te.FRAME, te.HR, te.IMG, te.INPUT, te.KEYGEN, te.LINK, te.META, te.PARAM, te.SOURCE, te.TRACK, te.WBR;
const z5 = /<(\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\t\n\f\r />])/gi, G5 = /* @__PURE__ */ new Set([
  "mdxFlowExpression",
  "mdxJsxFlowElement",
  "mdxJsxTextElement",
  "mdxTextExpression",
  "mdxjsEsm"
]), gv = { sourceCodeLocationInfo: !0, scriptingEnabled: !1 };
function zS(e, t) {
  const n = t8(e), r = JT("type", {
    handlers: { root: V5, element: W5, text: Y5, comment: VS, doctype: K5, raw: Z5 },
    unknown: Q5
  }), a = {
    parser: n ? new pv(gv) : pv.getFragmentParser(void 0, gv),
    handle(s) {
      r(s, a);
    },
    stitches: !1,
    options: t || {}
  };
  r(e, a), pa(a, Gn());
  const i = n ? a.parser.document : a.parser.getFragment(), o = nB(i, {
    // To do: support `space`?
    file: a.options.file
  });
  return a.stitches && ra(o, "comment", function(s, l, u) {
    const c = (
      /** @type {Stitch} */
      /** @type {unknown} */
      s
    );
    if (c.value.stitch && u && l !== void 0) {
      const d = u.children;
      return d[l] = c.value.stitch, l;
    }
  }), o.type === "root" && o.children.length === 1 && o.children[0].type === e.type ? o.children[0] : o;
}
function GS(e, t) {
  let n = -1;
  if (e)
    for (; ++n < e.length; )
      t.handle(e[n]);
}
function V5(e, t) {
  GS(e.children, t);
}
function W5(e, t) {
  J5(e, t), GS(e.children, t), e8(e, t);
}
function Y5(e, t) {
  t.parser.tokenizer.state > 4 && (t.parser.tokenizer.state = 0);
  const n = {
    type: Qe.CHARACTER,
    chars: e.value,
    location: ri(e)
  };
  pa(t, Gn(e)), t.parser.currentToken = n, t.parser._processToken(t.parser.currentToken);
}
function K5(e, t) {
  const n = {
    type: Qe.DOCTYPE,
    name: "html",
    forceQuirks: !1,
    publicId: "",
    systemId: "",
    location: ri(e)
  };
  pa(t, Gn(e)), t.parser.currentToken = n, t.parser._processToken(t.parser.currentToken);
}
function X5(e, t) {
  t.stitches = !0;
  const n = n8(e);
  if ("children" in e && "children" in n) {
    const r = (
      /** @type {Root} */
      zS({ type: "root", children: e.children }, t.options)
    );
    n.children = r.children;
  }
  VS({ type: "comment", value: { stitch: n } }, t);
}
function VS(e, t) {
  const n = e.value, r = {
    type: Qe.COMMENT,
    data: n,
    location: ri(e)
  };
  pa(t, Gn(e)), t.parser.currentToken = r, t.parser._processToken(t.parser.currentToken);
}
function Z5(e, t) {
  if (t.parser.tokenizer.preprocessor.html = "", t.parser.tokenizer.preprocessor.pos = -1, t.parser.tokenizer.preprocessor.lastGapPos = -2, t.parser.tokenizer.preprocessor.gapStack = [], t.parser.tokenizer.preprocessor.skipNextNewLine = !1, t.parser.tokenizer.preprocessor.lastChunkWritten = !1, t.parser.tokenizer.preprocessor.endOfChunkHit = !1, t.parser.tokenizer.preprocessor.isEol = !1, WS(t, Gn(e)), t.parser.tokenizer.write(
    t.options.tagfilter ? e.value.replace(z5, "&lt;$1$2") : e.value,
    !1
  ), t.parser.tokenizer._runParsingLoop(), t.parser.tokenizer.state === 72 || // @ts-expect-error: removed.
  t.parser.tokenizer.state === 78) {
    t.parser.tokenizer.preprocessor.lastChunkWritten = !0;
    const n = t.parser.tokenizer._consume();
    t.parser.tokenizer._callState(n);
  }
}
function Q5(e, t) {
  const n = (
    /** @type {Nodes} */
    e
  );
  if (t.options.passThrough && t.options.passThrough.includes(n.type))
    X5(n, t);
  else {
    let r = "";
    throw G5.has(n.type) && (r = ". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax"), new Error("Cannot compile `" + n.type + "` node" + r);
  }
}
function pa(e, t) {
  WS(e, t);
  const n = e.parser.tokenizer.currentCharacterToken;
  n && n.location && (n.location.endLine = e.parser.tokenizer.preprocessor.line, n.location.endCol = e.parser.tokenizer.preprocessor.col + 1, n.location.endOffset = e.parser.tokenizer.preprocessor.offset + 1, e.parser.currentToken = n, e.parser._processToken(e.parser.currentToken)), e.parser.tokenizer.paused = !1, e.parser.tokenizer.inLoop = !1, e.parser.tokenizer.active = !1, e.parser.tokenizer.returnState = Lt.DATA, e.parser.tokenizer.charRefCode = -1, e.parser.tokenizer.consumedAfterSnapshot = -1, e.parser.tokenizer.currentLocation = null, e.parser.tokenizer.currentCharacterToken = null, e.parser.tokenizer.currentToken = null, e.parser.tokenizer.currentAttr = { name: "", value: "" };
}
function WS(e, t) {
  if (t && t.offset !== void 0) {
    const n = {
      startLine: t.line,
      startCol: t.column,
      startOffset: t.offset,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
    e.parser.tokenizer.preprocessor.lineStartPos = -t.column + 1, e.parser.tokenizer.preprocessor.droppedBufferSize = t.offset, e.parser.tokenizer.preprocessor.line = t.line, e.parser.tokenizer.currentLocation = n;
  }
}
function J5(e, t) {
  const n = e.tagName.toLowerCase();
  if (t.parser.tokenizer.state === Lt.PLAINTEXT) return;
  pa(t, Gn(e));
  const r = t.parser.openElements.current;
  let a = "namespaceURI" in r ? r.namespaceURI : Ir.html;
  a === Ir.html && n === "svg" && (a = Ir.svg);
  const i = sB(
    // Shallow clone to not delve into `children`: we only need the attributes.
    { ...e, children: [] },
    { space: a === Ir.svg ? "svg" : "html" }
  ), o = {
    type: Qe.START_TAG,
    tagName: n,
    tagID: da(n),
    // We always send start and end tags.
    selfClosing: !1,
    ackSelfClosing: !1,
    // Always element.
    /* c8 ignore next */
    attrs: "attrs" in i ? i.attrs : [],
    location: ri(e)
  };
  t.parser.currentToken = o, t.parser._processToken(t.parser.currentToken), t.parser.tokenizer.lastStartTagName = n;
}
function e8(e, t) {
  const n = e.tagName.toLowerCase();
  if (!t.parser.tokenizer.inForeignNode && gB.includes(n) || t.parser.tokenizer.state === Lt.PLAINTEXT) return;
  pa(t, Ki(e));
  const r = {
    type: Qe.END_TAG,
    tagName: n,
    tagID: da(n),
    selfClosing: !1,
    ackSelfClosing: !1,
    attrs: [],
    location: ri(e)
  };
  t.parser.currentToken = r, t.parser._processToken(t.parser.currentToken), // Current element is closed.
  n === t.parser.tokenizer.lastStartTagName && // `<textarea>` and `<title>`
  (t.parser.tokenizer.state === Lt.RCDATA || // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`
  t.parser.tokenizer.state === Lt.RAWTEXT || // `<script>`
  t.parser.tokenizer.state === Lt.SCRIPT_DATA) && (t.parser.tokenizer.state = Lt.DATA);
}
function t8(e) {
  const t = e.type === "root" ? e.children[0] : e;
  return !!(t && (t.type === "doctype" || t.type === "element" && t.tagName.toLowerCase() === "html"));
}
function ri(e) {
  const t = Gn(e) || {
    line: void 0,
    column: void 0,
    offset: void 0
  }, n = Ki(e) || {
    line: void 0,
    column: void 0,
    offset: void 0
  };
  return {
    startLine: t.line,
    startCol: t.column,
    startOffset: t.offset,
    endLine: n.line,
    endCol: n.column,
    endOffset: n.offset
  };
}
function n8(e) {
  return "children" in e ? na({ ...e, children: [] }) : na(e);
}
function r8(e) {
  return function(t, n) {
    return (
      /** @type {Root} */
      zS(t, { ...e, file: n })
    );
  };
}
var YS = KS;
function KS(e) {
  if (e == null)
    return s8;
  if (typeof e == "string")
    return o8(e);
  if (typeof e == "object")
    return "length" in e ? i8(e) : a8(e);
  if (typeof e == "function")
    return e;
  throw new Error("Expected function, string, or object as test");
}
function a8(e) {
  return t;
  function t(n) {
    var r;
    for (r in e)
      if (n[r] !== e[r]) return !1;
    return !0;
  }
}
function i8(e) {
  for (var t = [], n = -1; ++n < e.length; )
    t[n] = KS(e[n]);
  return r;
  function r() {
    for (var a = -1; ++a < t.length; )
      if (t[a].apply(this, arguments))
        return !0;
    return !1;
  }
}
function o8(e) {
  return t;
  function t(n) {
    return !!(n && n.type === e);
  }
}
function s8() {
  return !0;
}
var XS = YS, l8 = em;
em.convert = XS;
function em(e, t, n, r, a) {
  var i = XS(t);
  if (n != null && (typeof n != "number" || n < 0 || n === 1 / 0))
    throw new Error("Expected positive finite index");
  if (r != null && (!em(r) || !r.children))
    throw new Error("Expected parent node");
  if (r == null != (n == null))
    throw new Error("Expected both parent and index");
  return e && e.type && typeof e.type == "string" ? !!i.call(a, e, n, r) : !1;
}
var u8 = c8;
function c8(e) {
  return e;
}
var d8 = co, p8 = YS, f8 = u8, ZS = !0, QS = "skip", Hp = !1;
co.CONTINUE = ZS;
co.SKIP = QS;
co.EXIT = Hp;
function co(e, t, n, r) {
  var a, i;
  typeof t == "function" && typeof n != "function" && (r = n, n = t, t = null), i = p8(t), a = r ? -1 : 1, o(e, null, [])();
  function o(s, l, u) {
    var c = typeof s == "object" && s !== null ? s : {}, d;
    return typeof c.type == "string" && (d = typeof c.tagName == "string" ? c.tagName : typeof c.name == "string" ? c.name : void 0, m.displayName = "node (" + f8(c.type + (d ? "<" + d + ">" : "")) + ")"), m;
    function m() {
      var f = u.concat(s), h = [], E, I;
      if ((!t || i(s, l, u[u.length - 1] || null)) && (h = m8(n(s, u)), h[0] === Hp))
        return h;
      if (s.children && h[0] !== QS)
        for (I = (r ? s.children.length : -1) + a; I > -1 && I < s.children.length; ) {
          if (E = o(s.children[I], I, f)(), E[0] === Hp)
            return E;
          I = typeof E[1] == "number" ? E[1] : I + a;
        }
      return h;
    }
  }
}
function m8(e) {
  return e !== null && typeof e == "object" && "length" in e ? e : typeof e == "number" ? [ZS, e] : [e];
}
var g8 = fo, po = d8, h8 = po.CONTINUE, b8 = po.SKIP, E8 = po.EXIT;
fo.CONTINUE = h8;
fo.SKIP = b8;
fo.EXIT = E8;
function fo(e, t, n, r) {
  typeof t == "function" && typeof n != "function" && (r = n, n = t, t = null), po(e, t, a, r);
  function a(i, o) {
    var s = o[o.length - 1], l = s ? s.children.indexOf(i) : null;
    return n(i, l, s);
  }
}
var $i = { exports: {} };
$i.exports;
(function(e, t) {
  var n = 200, r = "Expected a function", a = "__lodash_hash_undefined__", i = 1, o = 2, s = 1 / 0, l = 9007199254740991, u = "[object Arguments]", c = "[object Array]", d = "[object Boolean]", m = "[object Date]", f = "[object Error]", h = "[object Function]", E = "[object GeneratorFunction]", I = "[object Map]", x = "[object Number]", v = "[object Object]", S = "[object Promise]", g = "[object RegExp]", y = "[object Set]", T = "[object String]", j = "[object Symbol]", $ = "[object WeakMap]", D = "[object ArrayBuffer]", w = "[object DataView]", G = "[object Float32Array]", Q = "[object Float64Array]", z = "[object Int8Array]", ce = "[object Int16Array]", ae = "[object Int32Array]", K = "[object Uint8Array]", he = "[object Uint8ClampedArray]", ye = "[object Uint16Array]", Te = "[object Uint32Array]", A = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, re = /^\w*$/, se = /^\./, M = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, me = /[\\^$.*+?()[\]{}|]/g, we = /\\(\\)?/g, pe = /\w*$/, Ie = /^\[object .+?Constructor\]$/, Re = /^(?:0|[1-9]\d*)$/, be = {};
  be[G] = be[Q] = be[z] = be[ce] = be[ae] = be[K] = be[he] = be[ye] = be[Te] = !0, be[u] = be[c] = be[D] = be[d] = be[w] = be[m] = be[f] = be[h] = be[I] = be[x] = be[v] = be[g] = be[y] = be[T] = be[$] = !1;
  var ve = {};
  ve[u] = ve[c] = ve[D] = ve[w] = ve[d] = ve[m] = ve[G] = ve[Q] = ve[z] = ve[ce] = ve[ae] = ve[I] = ve[x] = ve[v] = ve[g] = ve[y] = ve[T] = ve[j] = ve[K] = ve[he] = ve[ye] = ve[Te] = !0, ve[f] = ve[h] = ve[$] = !1;
  var He = typeof mn == "object" && mn && mn.Object === Object && mn, Se = typeof self == "object" && self && self.Object === Object && self, Ke = He || Se || Function("return this")(), _t = t && !t.nodeType && t, mt = _t && !0 && e && !e.nodeType && e, vt = mt && mt.exports === _t, wt = vt && He.process, jt = function() {
    try {
      return wt && wt.binding("util");
    } catch {
    }
  }(), Tt = jt && jt.isTypedArray;
  function Ht(b, P) {
    return b.set(P[0], P[1]), b;
  }
  function Yt(b, P) {
    return b.add(P), b;
  }
  function Ct(b, P) {
    for (var J = -1, de = b ? b.length : 0; ++J < de && P(b[J], J, b) !== !1; )
      ;
    return b;
  }
  function gt(b, P) {
    for (var J = -1, de = P.length, De = b.length; ++J < de; )
      b[De + J] = P[J];
    return b;
  }
  function xe(b, P, J, de) {
    for (var De = -1, ke = b ? b.length : 0; ++De < ke; )
      J = P(J, b[De], De, b);
    return J;
  }
  function Z(b, P) {
    for (var J = -1, de = b ? b.length : 0; ++J < de; )
      if (P(b[J], J, b))
        return !0;
    return !1;
  }
  function O(b) {
    return function(P) {
      return P == null ? void 0 : P[b];
    };
  }
  function U(b, P) {
    for (var J = -1, de = Array(b); ++J < b; )
      de[J] = P(J);
    return de;
  }
  function X(b) {
    return function(P) {
      return b(P);
    };
  }
  function ue(b, P) {
    return b == null ? void 0 : b[P];
  }
  function fe(b) {
    var P = !1;
    if (b != null && typeof b.toString != "function")
      try {
        P = !!(b + "");
      } catch {
      }
    return P;
  }
  function Ne(b) {
    var P = -1, J = Array(b.size);
    return b.forEach(function(de, De) {
      J[++P] = [De, de];
    }), J;
  }
  function Oe(b, P) {
    return function(J) {
      return b(P(J));
    };
  }
  function Pe(b) {
    var P = -1, J = Array(b.size);
    return b.forEach(function(de) {
      J[++P] = de;
    }), J;
  }
  var et = Array.prototype, tt = Function.prototype, $e = Object.prototype, Xe = Ke["__core-js_shared__"], rt = function() {
    var b = /[^.]+$/.exec(Xe && Xe.keys && Xe.keys.IE_PROTO || "");
    return b ? "Symbol(src)_1." + b : "";
  }(), kt = tt.toString, ht = $e.hasOwnProperty, ct = $e.toString, bt = RegExp(
    "^" + kt.call(ht).replace(me, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  ), ze = vt ? Ke.Buffer : void 0, At = Ke.Symbol, Nt = Ke.Uint8Array, un = Oe(Object.getPrototypeOf, Object), cn = Object.create, qt = $e.propertyIsEnumerable, en = et.splice, Ln = Object.getOwnPropertySymbols, Yn = ze ? ze.isBuffer : void 0, Br = Oe(Object.keys, Object), Dn = qr(Ke, "DataView"), Kn = qr(Ke, "Map"), hr = qr(Ke, "Promise"), br = qr(Ke, "Set"), Er = qr(Ke, "WeakMap"), q = qr(Object, "create"), R = vr(Dn), C = vr(Kn), _ = vr(hr), k = vr(br), N = vr(Er), W = At ? At.prototype : void 0, ee = W ? W.valueOf : void 0, ne = W ? W.toString : void 0;
  function V(b) {
    var P = -1, J = b ? b.length : 0;
    for (this.clear(); ++P < J; ) {
      var de = b[P];
      this.set(de[0], de[1]);
    }
  }
  function le() {
    this.__data__ = q ? q(null) : {};
  }
  function Ce(b) {
    return this.has(b) && delete this.__data__[b];
  }
  function Be(b) {
    var P = this.__data__;
    if (q) {
      var J = P[b];
      return J === a ? void 0 : J;
    }
    return ht.call(P, b) ? P[b] : void 0;
  }
  function Ge(b) {
    var P = this.__data__;
    return q ? P[b] !== void 0 : ht.call(P, b);
  }
  function je(b, P) {
    var J = this.__data__;
    return J[b] = q && P === void 0 ? a : P, this;
  }
  V.prototype.clear = le, V.prototype.delete = Ce, V.prototype.get = Be, V.prototype.has = Ge, V.prototype.set = je;
  function Le(b) {
    var P = -1, J = b ? b.length : 0;
    for (this.clear(); ++P < J; ) {
      var de = b[P];
      this.set(de[0], de[1]);
    }
  }
  function at() {
    this.__data__ = [];
  }
  function Et(b) {
    var P = this.__data__, J = oi(P, b);
    if (J < 0)
      return !1;
    var de = P.length - 1;
    return J == de ? P.pop() : en.call(P, J, 1), !0;
  }
  function Ue(b) {
    var P = this.__data__, J = oi(P, b);
    return J < 0 ? void 0 : P[J][1];
  }
  function Dt(b) {
    return oi(this.__data__, b) > -1;
  }
  function dn(b, P) {
    var J = this.__data__, de = oi(J, b);
    return de < 0 ? J.push([b, P]) : J[de][1] = P, this;
  }
  Le.prototype.clear = at, Le.prototype.delete = Et, Le.prototype.get = Ue, Le.prototype.has = Dt, Le.prototype.set = dn;
  function Ut(b) {
    var P = -1, J = b ? b.length : 0;
    for (this.clear(); ++P < J; ) {
      var de = b[P];
      this.set(de[0], de[1]);
    }
  }
  function Ur() {
    this.__data__ = {
      hash: new V(),
      map: new (Kn || Le)(),
      string: new V()
    };
  }
  function Mn(b) {
    return si(this, b).delete(b);
  }
  function jr(b) {
    return si(this, b).get(b);
  }
  function tr(b) {
    return si(this, b).has(b);
  }
  function $t(b, P) {
    return si(this, b).set(b, P), this;
  }
  Ut.prototype.clear = Ur, Ut.prototype.delete = Mn, Ut.prototype.get = jr, Ut.prototype.has = tr, Ut.prototype.set = $t;
  function Pn(b) {
    var P = -1, J = b ? b.length : 0;
    for (this.__data__ = new Ut(); ++P < J; )
      this.add(b[P]);
  }
  function yr(b) {
    return this.__data__.set(b, a), this;
  }
  function nr(b) {
    return this.__data__.has(b);
  }
  Pn.prototype.add = Pn.prototype.push = yr, Pn.prototype.has = nr;
  function Tn(b) {
    this.__data__ = new Le(b);
  }
  function Hr() {
    this.__data__ = new Le();
  }
  function ga(b) {
    return this.__data__.delete(b);
  }
  function ha(b) {
    return this.__data__.get(b);
  }
  function ba(b) {
    return this.__data__.has(b);
  }
  function Ea(b, P) {
    var J = this.__data__;
    if (J instanceof Le) {
      var de = J.__data__;
      if (!Kn || de.length < n - 1)
        return de.push([b, P]), this;
      J = this.__data__ = new Ut(de);
    }
    return J.set(b, P), this;
  }
  Tn.prototype.clear = Hr, Tn.prototype.delete = ga, Tn.prototype.get = ha, Tn.prototype.has = ba, Tn.prototype.set = Ea;
  function rr(b, P) {
    var J = Zn(b) || vm(b) ? U(b.length, String) : [], de = J.length, De = !!de;
    for (var ke in b)
      ht.call(b, ke) && !(De && (ke == "length" || hm(ke, de))) && J.push(ke);
    return J;
  }
  function ya(b, P, J) {
    var de = b[P];
    (!(ht.call(b, P) && Co(de, J)) || J === void 0 && !(P in b)) && (b[P] = J);
  }
  function oi(b, P) {
    for (var J = b.length; J--; )
      if (Co(b[J][0], P))
        return J;
    return -1;
  }
  function X_(b, P) {
    return b && fm(P, zr(P), b);
  }
  function xo(b, P, J, de, De, ke, qe) {
    var it;
    if (de && (it = ke ? de(b, De, ke, qe) : de(b)), it !== void 0)
      return it;
    if (!$r(b))
      return b;
    var Ot = Zn(b);
    if (Ot) {
      if (it = xA(b), !P)
        return EA(b, it);
    } else {
      var xt = Xn(b), Kt = xt == h || xt == E;
      if (OA(b))
        return dA(b, P);
      if (xt == v || xt == u || Kt && !ke) {
        if (fe(b))
          return ke ? b : {};
        if (it = RA(Kt ? {} : b), !P)
          return yA(b, X_(it, b));
      } else {
        if (!ve[xt])
          return ke ? b : {};
        it = IA(b, xt, xo, P);
      }
    }
    qe || (qe = new Tn());
    var Xt = qe.get(b);
    if (Xt)
      return Xt;
    if (qe.set(b, it), !Ot)
      var zt = J ? SA(b) : zr(b);
    return Ct(zt || b, function(tn, Zt) {
      zt && (Zt = tn, tn = b[Zt]), ya(it, Zt, xo(tn, P, J, de, Zt, b, qe));
    }), it;
  }
  function Z_(b) {
    return $r(b) ? cn(b) : {};
  }
  function dm(b, P) {
    P = li(P, b) ? [P] : pm(P);
    for (var J = 0, de = P.length; b != null && J < de; )
      b = b[ui(P[J++])];
    return J && J == de ? b : void 0;
  }
  function Q_(b, P, J) {
    var de = P(b);
    return Zn(b) ? de : gt(de, J(b));
  }
  function J_(b) {
    return ct.call(b);
  }
  function eA(b, P) {
    return b != null && P in Object(b);
  }
  function Ro(b, P, J, de, De) {
    return b === P ? !0 : b == null || P == null || !$r(b) && !ci(P) ? b !== b && P !== P : tA(b, P, Ro, J, de, De);
  }
  function tA(b, P, J, de, De, ke) {
    var qe = Zn(b), it = Zn(P), Ot = c, xt = c;
    qe || (Ot = Xn(b), Ot = Ot == u ? v : Ot), it || (xt = Xn(P), xt = xt == u ? v : xt);
    var Kt = Ot == v && !fe(b), Xt = xt == v && !fe(P), zt = Ot == xt;
    if (zt && !Kt)
      return ke || (ke = new Tn()), qe || LA(b) ? mm(b, P, J, de, De, ke) : vA(b, P, Ot, J, de, De, ke);
    if (!(De & o)) {
      var tn = Kt && ht.call(b, "__wrapped__"), Zt = Xt && ht.call(P, "__wrapped__");
      if (tn || Zt) {
        var ar = tn ? b.value() : b, Qn = Zt ? P.value() : P;
        return ke || (ke = new Tn()), J(ar, Qn, de, De, ke);
      }
    }
    return zt ? (ke || (ke = new Tn()), TA(b, P, J, de, De, ke)) : !1;
  }
  function nA(b, P, J, de) {
    var De = J.length, ke = De;
    if (b == null)
      return !ke;
    for (b = Object(b); De--; ) {
      var qe = J[De];
      if (qe[2] ? qe[1] !== b[qe[0]] : !(qe[0] in b))
        return !1;
    }
    for (; ++De < ke; ) {
      qe = J[De];
      var it = qe[0], Ot = b[it], xt = qe[1];
      if (qe[2]) {
        if (Ot === void 0 && !(it in b))
          return !1;
      } else {
        var Kt = new Tn(), Xt;
        if (!(Xt === void 0 ? Ro(xt, Ot, de, i | o, Kt) : Xt))
          return !1;
      }
    }
    return !0;
  }
  function rA(b) {
    if (!$r(b) || CA(b))
      return !1;
    var P = Sm(b) || fe(b) ? bt : Ie;
    return P.test(vr(b));
  }
  function aA(b) {
    return ci(b) && ko(b.length) && !!be[ct.call(b)];
  }
  function iA(b) {
    return typeof b == "function" ? b : b == null ? FA : typeof b == "object" ? Zn(b) ? lA(b[0], b[1]) : sA(b) : UA(b);
  }
  function oA(b) {
    if (!bm(b))
      return Br(b);
    var P = [];
    for (var J in Object(b))
      ht.call(b, J) && J != "constructor" && P.push(J);
    return P;
  }
  function sA(b) {
    var P = _A(b);
    return P.length == 1 && P[0][2] ? ym(P[0][0], P[0][1]) : function(J) {
      return J === b || nA(J, b, P);
    };
  }
  function lA(b, P) {
    return li(b) && Em(P) ? ym(ui(b), P) : function(J) {
      var de = MA(J, b);
      return de === void 0 && de === P ? PA(J, b) : Ro(P, de, void 0, i | o);
    };
  }
  function uA(b) {
    return function(P) {
      return dm(P, b);
    };
  }
  function cA(b) {
    if (typeof b == "string")
      return b;
    if (No(b))
      return ne ? ne.call(b) : "";
    var P = b + "";
    return P == "0" && 1 / b == -s ? "-0" : P;
  }
  function pm(b) {
    return Zn(b) ? b : kA(b);
  }
  function dA(b, P) {
    if (P)
      return b.slice();
    var J = new b.constructor(b.length);
    return b.copy(J), J;
  }
  function Io(b) {
    var P = new b.constructor(b.byteLength);
    return new Nt(P).set(new Nt(b)), P;
  }
  function pA(b, P) {
    var J = P ? Io(b.buffer) : b.buffer;
    return new b.constructor(J, b.byteOffset, b.byteLength);
  }
  function fA(b, P, J) {
    var de = P ? J(Ne(b), !0) : Ne(b);
    return xe(de, Ht, new b.constructor());
  }
  function mA(b) {
    var P = new b.constructor(b.source, pe.exec(b));
    return P.lastIndex = b.lastIndex, P;
  }
  function gA(b, P, J) {
    var de = P ? J(Pe(b), !0) : Pe(b);
    return xe(de, Yt, new b.constructor());
  }
  function hA(b) {
    return ee ? Object(ee.call(b)) : {};
  }
  function bA(b, P) {
    var J = P ? Io(b.buffer) : b.buffer;
    return new b.constructor(J, b.byteOffset, b.length);
  }
  function EA(b, P) {
    var J = -1, de = b.length;
    for (P || (P = Array(de)); ++J < de; )
      P[J] = b[J];
    return P;
  }
  function fm(b, P, J, de) {
    J || (J = {});
    for (var De = -1, ke = P.length; ++De < ke; ) {
      var qe = P[De], it = void 0;
      ya(J, qe, it === void 0 ? b[qe] : it);
    }
    return J;
  }
  function yA(b, P) {
    return fm(b, gm(b), P);
  }
  function mm(b, P, J, de, De, ke) {
    var qe = De & o, it = b.length, Ot = P.length;
    if (it != Ot && !(qe && Ot > it))
      return !1;
    var xt = ke.get(b);
    if (xt && ke.get(P))
      return xt == P;
    var Kt = -1, Xt = !0, zt = De & i ? new Pn() : void 0;
    for (ke.set(b, P), ke.set(P, b); ++Kt < it; ) {
      var tn = b[Kt], Zt = P[Kt];
      if (de)
        var ar = qe ? de(Zt, tn, Kt, P, b, ke) : de(tn, Zt, Kt, b, P, ke);
      if (ar !== void 0) {
        if (ar)
          continue;
        Xt = !1;
        break;
      }
      if (zt) {
        if (!Z(P, function(Qn, Tr) {
          if (!zt.has(Tr) && (tn === Qn || J(tn, Qn, de, De, ke)))
            return zt.add(Tr);
        })) {
          Xt = !1;
          break;
        }
      } else if (!(tn === Zt || J(tn, Zt, de, De, ke))) {
        Xt = !1;
        break;
      }
    }
    return ke.delete(b), ke.delete(P), Xt;
  }
  function vA(b, P, J, de, De, ke, qe) {
    switch (J) {
      case w:
        if (b.byteLength != P.byteLength || b.byteOffset != P.byteOffset)
          return !1;
        b = b.buffer, P = P.buffer;
      case D:
        return !(b.byteLength != P.byteLength || !de(new Nt(b), new Nt(P)));
      case d:
      case m:
      case x:
        return Co(+b, +P);
      case f:
        return b.name == P.name && b.message == P.message;
      case g:
      case T:
        return b == P + "";
      case I:
        var it = Ne;
      case y:
        var Ot = ke & o;
        if (it || (it = Pe), b.size != P.size && !Ot)
          return !1;
        var xt = qe.get(b);
        if (xt)
          return xt == P;
        ke |= i, qe.set(b, P);
        var Kt = mm(it(b), it(P), de, De, ke, qe);
        return qe.delete(b), Kt;
      case j:
        if (ee)
          return ee.call(b) == ee.call(P);
    }
    return !1;
  }
  function TA(b, P, J, de, De, ke) {
    var qe = De & o, it = zr(b), Ot = it.length, xt = zr(P), Kt = xt.length;
    if (Ot != Kt && !qe)
      return !1;
    for (var Xt = Ot; Xt--; ) {
      var zt = it[Xt];
      if (!(qe ? zt in P : ht.call(P, zt)))
        return !1;
    }
    var tn = ke.get(b);
    if (tn && ke.get(P))
      return tn == P;
    var Zt = !0;
    ke.set(b, P), ke.set(P, b);
    for (var ar = qe; ++Xt < Ot; ) {
      zt = it[Xt];
      var Qn = b[zt], Tr = P[zt];
      if (de)
        var _m = qe ? de(Tr, Qn, zt, P, b, ke) : de(Qn, Tr, zt, b, P, ke);
      if (!(_m === void 0 ? Qn === Tr || J(Qn, Tr, de, De, ke) : _m)) {
        Zt = !1;
        break;
      }
      ar || (ar = zt == "constructor");
    }
    if (Zt && !ar) {
      var di = b.constructor, pi = P.constructor;
      di != pi && "constructor" in b && "constructor" in P && !(typeof di == "function" && di instanceof di && typeof pi == "function" && pi instanceof pi) && (Zt = !1);
    }
    return ke.delete(b), ke.delete(P), Zt;
  }
  function SA(b) {
    return Q_(b, zr, gm);
  }
  function si(b, P) {
    var J = b.__data__;
    return wA(P) ? J[typeof P == "string" ? "string" : "hash"] : J.map;
  }
  function _A(b) {
    for (var P = zr(b), J = P.length; J--; ) {
      var de = P[J], De = b[de];
      P[J] = [de, De, Em(De)];
    }
    return P;
  }
  function qr(b, P) {
    var J = ue(b, P);
    return rA(J) ? J : void 0;
  }
  var gm = Ln ? Oe(Ln, Object) : jA, Xn = J_;
  (Dn && Xn(new Dn(new ArrayBuffer(1))) != w || Kn && Xn(new Kn()) != I || hr && Xn(hr.resolve()) != S || br && Xn(new br()) != y || Er && Xn(new Er()) != $) && (Xn = function(b) {
    var P = ct.call(b), J = P == v ? b.constructor : void 0, de = J ? vr(J) : void 0;
    if (de)
      switch (de) {
        case R:
          return w;
        case C:
          return I;
        case _:
          return S;
        case k:
          return y;
        case N:
          return $;
      }
    return P;
  });
  function AA(b, P, J) {
    P = li(P, b) ? [P] : pm(P);
    for (var de, De = -1, qe = P.length; ++De < qe; ) {
      var ke = ui(P[De]);
      if (!(de = b != null && J(b, ke)))
        break;
      b = b[ke];
    }
    if (de)
      return de;
    var qe = b ? b.length : 0;
    return !!qe && ko(qe) && hm(ke, qe) && (Zn(b) || vm(b));
  }
  function xA(b) {
    var P = b.length, J = b.constructor(P);
    return P && typeof b[0] == "string" && ht.call(b, "index") && (J.index = b.index, J.input = b.input), J;
  }
  function RA(b) {
    return typeof b.constructor == "function" && !bm(b) ? Z_(un(b)) : {};
  }
  function IA(b, P, J, de) {
    var De = b.constructor;
    switch (P) {
      case D:
        return Io(b);
      case d:
      case m:
        return new De(+b);
      case w:
        return pA(b, de);
      case G:
      case Q:
      case z:
      case ce:
      case ae:
      case K:
      case he:
      case ye:
      case Te:
        return bA(b, de);
      case I:
        return fA(b, de, J);
      case x:
      case T:
        return new De(b);
      case g:
        return mA(b);
      case y:
        return gA(b, de, J);
      case j:
        return hA(b);
    }
  }
  function hm(b, P) {
    return P = P ?? l, !!P && (typeof b == "number" || Re.test(b)) && b > -1 && b % 1 == 0 && b < P;
  }
  function li(b, P) {
    if (Zn(b))
      return !1;
    var J = typeof b;
    return J == "number" || J == "symbol" || J == "boolean" || b == null || No(b) ? !0 : re.test(b) || !A.test(b) || P != null && b in Object(P);
  }
  function wA(b) {
    var P = typeof b;
    return P == "string" || P == "number" || P == "symbol" || P == "boolean" ? b !== "__proto__" : b === null;
  }
  function CA(b) {
    return !!rt && rt in b;
  }
  function bm(b) {
    var P = b && b.constructor, J = typeof P == "function" && P.prototype || $e;
    return b === J;
  }
  function Em(b) {
    return b === b && !$r(b);
  }
  function ym(b, P) {
    return function(J) {
      return J == null ? !1 : J[b] === P && (P !== void 0 || b in Object(J));
    };
  }
  var kA = wo(function(b) {
    b = DA(b);
    var P = [];
    return se.test(b) && P.push(""), b.replace(M, function(J, de, De, ke) {
      P.push(De ? ke.replace(we, "$1") : de || J);
    }), P;
  });
  function ui(b) {
    if (typeof b == "string" || No(b))
      return b;
    var P = b + "";
    return P == "0" && 1 / b == -s ? "-0" : P;
  }
  function vr(b) {
    if (b != null) {
      try {
        return kt.call(b);
      } catch {
      }
      try {
        return b + "";
      } catch {
      }
    }
    return "";
  }
  function wo(b, P) {
    if (typeof b != "function" || P && typeof P != "function")
      throw new TypeError(r);
    var J = function() {
      var de = arguments, De = P ? P.apply(this, de) : de[0], ke = J.cache;
      if (ke.has(De))
        return ke.get(De);
      var qe = b.apply(this, de);
      return J.cache = ke.set(De, qe), qe;
    };
    return J.cache = new (wo.Cache || Ut)(), J;
  }
  wo.Cache = Ut;
  function Co(b, P) {
    return b === P || b !== b && P !== P;
  }
  function vm(b) {
    return NA(b) && ht.call(b, "callee") && (!qt.call(b, "callee") || ct.call(b) == u);
  }
  var Zn = Array.isArray;
  function Tm(b) {
    return b != null && ko(b.length) && !Sm(b);
  }
  function NA(b) {
    return ci(b) && Tm(b);
  }
  var OA = Yn || HA;
  function Sm(b) {
    var P = $r(b) ? ct.call(b) : "";
    return P == h || P == E;
  }
  function ko(b) {
    return typeof b == "number" && b > -1 && b % 1 == 0 && b <= l;
  }
  function $r(b) {
    var P = typeof b;
    return !!b && (P == "object" || P == "function");
  }
  function ci(b) {
    return !!b && typeof b == "object";
  }
  function No(b) {
    return typeof b == "symbol" || ci(b) && ct.call(b) == j;
  }
  var LA = Tt ? X(Tt) : aA;
  function DA(b) {
    return b == null ? "" : cA(b);
  }
  function MA(b, P, J) {
    var de = b == null ? void 0 : dm(b, P);
    return de === void 0 ? J : de;
  }
  function PA(b, P) {
    return b != null && AA(b, P, eA);
  }
  function zr(b) {
    return Tm(b) ? rr(b) : oA(b);
  }
  function FA(b) {
    return b;
  }
  function BA(b) {
    return iA(typeof b == "function" ? b : xo(b, !0));
  }
  function UA(b) {
    return li(b) ? O(ui(b)) : uA(b);
  }
  function jA() {
    return [];
  }
  function HA() {
    return !1;
  }
  e.exports = BA;
})($i, $i.exports);
var y8 = $i.exports;
/**
 * @author Richard Smith-Unna
 * @copyright 2016 Richard Smith-Unnar
 * @license MIT
 * @module unist:find
 * @fileoverview Unist node finder
 *
 * @typedef {import('unist').Node} Node
 *
 * @typedef {string} TestStr
 *   Finds first node with a truthy property matching string.
 * @typedef {Object.<string, unknown>} TestObj
 *   Finds first node that has matching values for all properties of object.
 * @typedef {<V extends Node>(node: V) => boolean} TestFn
 *   Finds first node for which function returns true when passed node as argument.
 */
var v8 = g8, T8 = y8, JS = function(t, n) {
  if (!t) throw new Error("unist-util-find requires a tree to search");
  if (!n) throw new Error("unist-util-find requires a condition");
  const r = T8(n);
  let a;
  return v8(t, function(i) {
    if (r(i))
      return a = i, !1;
  }), a;
};
const S8 = /* @__PURE__ */ pr(JS), _8 = l8, A8 = JS;
function x8(e, t, n, r) {
  if (!e || !e.type || !e.children)
    throw new Error("Expected parent node");
  const { children: a } = e, i = [];
  let o = u(t);
  const s = u(n);
  let l;
  for (; ++o < s; )
    l = a[o], _8(l, r, o, e) && i.push(l);
  return i;
  function u(c) {
    if (c && c.type) {
      e.type === c.type && (e = {
        type: e.type + "-root",
        children: e.children
      });
      const d = A8(e, c);
      c = a.indexOf(d);
    }
    if (isNaN(c) || c < 0 || c === 1 / 0)
      throw new Error("Expected positive finite index or child node");
    return c >= a.length && (c = a.length - 1), c;
  }
}
var R8 = x8;
const I8 = /* @__PURE__ */ pr(R8), mo = (
  /**
   * @type {(
   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {AssertAnything}
   */
  function(e) {
    if (e == null)
      return N8;
    if (typeof e == "string")
      return k8(e);
    if (typeof e == "object")
      return Array.isArray(e) ? w8(e) : C8(e);
    if (typeof e == "function")
      return go(e);
    throw new Error("Expected function, string, or object as test");
  }
);
function w8(e) {
  const t = [];
  let n = -1;
  for (; ++n < e.length; )
    t[n] = mo(e[n]);
  return go(r);
  function r(...a) {
    let i = -1;
    for (; ++i < t.length; )
      if (t[i].call(this, ...a)) return !0;
    return !1;
  }
}
function C8(e) {
  return go(t);
  function t(n) {
    let r;
    for (r in e)
      if (n[r] !== e[r]) return !1;
    return !0;
  }
}
function k8(e) {
  return go(t);
  function t(n) {
    return n && n.type === e;
  }
}
function go(e) {
  return t;
  function t(n, ...r) {
    return !!(n && typeof n == "object" && "type" in n && e.call(this, n, ...r));
  }
}
function N8() {
  return !0;
}
const O8 = (
  /**
   * @type {(
   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => Array<T>) &
   *  ((node: Parent, index: Node | number, test?: Test) => Array<Node>)
   * )}
   */
  /**
   * @param {Parent} parent
   * @param {Node | number} index
   * @param {Test} [test]
   * @returns {Array<Node>}
   */
  function(e, t, n) {
    const r = mo(n), a = [];
    let i = -1;
    if (!e || !e.type || !e.children)
      throw new Error("Expected parent node");
    if (typeof t == "number") {
      if (t < 0 || t === Number.POSITIVE_INFINITY)
        throw new Error("Expected positive finite number as index");
    } else if (t = e.children.indexOf(t), t < 0)
      throw new Error("Expected child node or index");
    for (t > e.children.length && (t = e.children.length); ++i < t; )
      r(e.children[i], i, e) && a.push(e.children[i]);
    return a;
  }
), L8 = (
  /**
   * @type {(
   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => Array<T>) &
   *  ((node: Parent, index: Node | number, test?: Test) => Array<Node>)
   * )}
   */
  /**
   * @param {Parent} parent
   * @param {Node | number} index
   * @param {Test} [test]
   * @returns {Array<Node>}
   */
  function(e, t, n) {
    const r = mo(n), a = [];
    if (!e || !e.type || !e.children)
      throw new Error("Expected parent node");
    if (typeof t == "number") {
      if (t < 0 || t === Number.POSITIVE_INFINITY)
        throw new Error("Expected positive finite number as index");
    } else if (t = e.children.indexOf(t), t < 0)
      throw new Error("Expected child node or index");
    for (; ++t < e.children.length; )
      r(e.children[t], t, e) && a.push(e.children[t]);
    return a;
  }
);
const D8 = !0, hv = !1, M8 = "skip", P8 = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor<Node>} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(e, t, n, r) {
    typeof t == "function" && typeof n != "function" && (r = n, n = t, t = null);
    const a = mo(t), i = r ? -1 : 1;
    o(e, void 0, [])();
    function o(s, l, u) {
      const c = s && typeof s == "object" ? s : {};
      if (typeof c.type == "string") {
        const m = (
          // `hast`
          typeof c.tagName == "string" ? c.tagName : (
            // `xast`
            typeof c.name == "string" ? c.name : void 0
          )
        );
        Object.defineProperty(d, "name", {
          value: "node (" + (s.type + (m ? "<" + m + ">" : "")) + ")"
        });
      }
      return d;
      function d() {
        let m = [], f, h, E;
        if ((!t || a(s, l, u[u.length - 1] || null)) && (m = F8(n(s, u)), m[0] === hv))
          return m;
        if (s.children && m[0] !== M8)
          for (h = (r ? s.children.length : -1) + i, E = u.concat(s); h > -1 && h < s.children.length; ) {
            if (f = o(s.children[h], h, E)(), f[0] === hv)
              return f;
            h = typeof f[1] == "number" ? f[1] : h + i;
          }
        return m;
      }
    }
  }
);
function F8(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [D8, e] : [e];
}
const bv = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(e, t, n, r) {
    typeof t == "function" && typeof n != "function" && (r = n, n = t, t = null), P8(e, t, a, r);
    function a(i, o) {
      const s = o[o.length - 1];
      return n(
        i,
        s ? s.children.indexOf(i) : null,
        s
      );
    }
  }
);
function B8(e = {}) {
  if (e.depth !== void 0 && e.minDepth !== void 0)
    throw new Error(
      "Only one of the `depth` and `minDepth` options is expected."
    );
  return ["after", "before", "between"].reduce((t, n) => {
    if (e[
      /** @type {keyof Options} */
      n
    ] !== void 0) {
      if (t > 0)
        throw new Error(
          "Only one of the `after`, `before` and `between` options is expected."
        );
      return ++t;
    }
    return t;
  }, 0), (t) => {
    let n = 0;
    if (e.depth !== void 0) {
      if (isNaN(e.depth))
        throw new Error("Expected a `number` for `depth` option.");
      n = e.depth;
    }
    if (e.minDepth !== void 0) {
      if (isNaN(e.minDepth) || e.minDepth < 2 || e.minDepth > 6)
        throw new Error(
          "Expected a `number` between 2 and 6 for `minDepth` option."
        );
      let r;
      bv(t, "heading", (a) => {
        (!r || a.depth < r) && (r = a.depth);
      }), r && r < e.minDepth && (n = e.minDepth - r);
    }
    if (e.after !== void 0)
      L8(t, Ti(t, e.after), (r) => {
        Si(
          /** @type {Content} */
          r,
          n
        );
      });
    else if (e.before !== void 0)
      O8(t, Ti(t, e.before), (r) => {
        Si(
          /** @type {Content} */
          r,
          n
        );
      });
    else if (e.between !== void 0) {
      if (!Array.isArray(e.between) || e.between.length !== 2)
        throw new Error(
          "Expected an `array` with two elements for `between` option."
        );
      I8(
        t,
        Ti(t, e.between[0]),
        Ti(t, e.between[1]),
        /** @returns {node is Content} */
        (r) => (Si(
          /** @type {Content} */
          r,
          n
        ), !0)
      );
    } else
      bv(t, (r) => {
        Si(r, n);
      });
    return t;
  };
}
function Ti(e, t) {
  if (typeof t == "number") {
    const a = e.children[t];
    if (a === void 0)
      throw new Error(`No node exists at index '${t}'.`);
    return a;
  }
  const n = typeof t == "string" ? { type: "heading", children: [{ value: t }] } : t, r = S8(e, n);
  if (r === void 0)
    throw new Error(
      `Could not find node with conditions '${JSON.stringify(n)}'.`
    );
  return r;
}
function Si(e, t) {
  if (e.type === "heading") {
    const n = e.depth + t;
    n > 6 ? e.depth = 6 : n <= 0 ? e.depth = 1 : e.depth = /** @type {1|2|3|4|5|6} */
    n;
  }
}
function np(e, t, n) {
  const r = { type: String(e) };
  return n == null && (typeof t == "string" || Array.isArray(t)) ? n = t : Object.assign(r, t), Array.isArray(n) ? r.children = n : n != null && (r.value = String(n)), r;
}
const e_ = {
  a: "alert",
  b: "blue",
  c: "caution",
  d: "danger",
  e: "error",
  f: "framed",
  g: "green",
  h: "horizontal",
  i: "info",
  j: "jumbo",
  k: "kindle",
  l: "lokum",
  m: "menu",
  n: "note",
  o: "ordinary",
  p: "pack",
  q: "quantity",
  r: "red",
  s: "success",
  t: "tip",
  u: "unified",
  v: "verticle",
  w: "warning",
  x: "xray",
  y: "yellow",
  z: "zigzag",
  0: "type-0",
  1: "type-1",
  2: "type-2",
  3: "type-3",
  4: "type-4",
  5: "type-5",
  6: "type-6",
  7: "type-7",
  8: "type-8",
  9: "type-9"
}, U8 = {
  dictionary: e_,
  paragraphClassName: "flexible-paragraph",
  paragraphClassificationPrefix: "flexiparaph",
  wrapperTagName: "div",
  wrapperClassName: "flexible-paragraph-wrapper"
}, j8 = /([~=])(:)?([a-z0-9]*\|?[a-z0-9]*)?(:)?>\s*/, H8 = /([~=])(:)?([a-z0-9]*\|?[a-z0-9]*)?(:)?>\s*/g, q8 = (e) => {
  const t = Object.assign({}, U8, e);
  e != null && e.dictionary && Object.keys(e.dictionary).length && (t.dictionary = Object.assign({}, e_, e.dictionary));
  const n = (c, d, m) => {
    const f = [];
    d.forEach((I) => {
      t.paragraphClassificationPrefix === "" ? f.push(`${I}`) : f.push(`${t.paragraphClassificationPrefix}-${I}`);
    }), m && (t.paragraphClassificationPrefix === "" ? f.push(`align-${m}`) : f.push(`${t.paragraphClassificationPrefix}-align-${m}`));
    const h = typeof t.paragraphClassName == "function" ? t.paragraphClassName(m, d) : [t.paragraphClassName, ...f];
    let E;
    return t.paragraphProperties && (E = t.paragraphProperties(m, d), Object.entries(E).forEach(([I, x]) => {
      (typeof x == "string" && x === "" || Array.isArray(x) && x.length === 0) && E && (E[I] = void 0), I === "className" && (E == null || delete E.className);
    })), {
      type: "paragraph",
      children: c,
      data: {
        hName: "p",
        hProperties: {
          className: h,
          ...E && { ...E },
          style: m ? `text-align:${m}` : void 0
        }
      }
    };
  }, r = (c, d, m) => {
    const f = typeof t.wrapperTagName == "string" ? t.wrapperTagName : t.wrapperTagName(m, d), h = typeof t.wrapperClassName == "function" ? t.wrapperClassName(m, d) : [t.wrapperClassName];
    let E;
    return t.wrapperProperties && (E = t.wrapperProperties(m, d), Object.entries(E).forEach(([I, x]) => {
      (typeof x == "string" && x === "" || Array.isArray(x) && x.length === 0) && E && (E[I] = void 0), I === "className" && (E == null || delete E.className);
    })), {
      type: "wrapper",
      children: [c],
      data: {
        hName: f,
        hProperties: {
          className: h,
          ...E && { ...E }
        }
      }
    };
  };
  function a(c) {
    let d = !1;
    return ra(c, "text", (m) => {
      if (j8.test(m.value))
        return d = !0, Bi;
    }), d;
  }
  function i(c, d) {
    return typeof c > "u" ? c = [d] : c.push(d), c;
  }
  function o({ marker: c, left: d, classes: m, right: f }) {
    let h;
    !d && !f ? h = void 0 : d && f ? h = "justify" : d ? h = "left" : f && (h = "right"), m != null && m.includes("|") && (h = "center"), m === "|" && (d && f ? h = "justify" : d ? h = "left" : f && (h = "right"));
    const I = {
      "=": "wrapper",
      "~": "paragraph"
    }[c], x = h, v = m ? Array.from(m).reduce((S, g) => {
      if (g !== "|") {
        const y = t.dictionary[g];
        y && S.push(y);
      }
      return S;
    }, []) : [];
    return { type: I, alignment: x, classifications: v };
  }
  const s = (c) => "value" in c && c.type === "text", l = function(c, d, m) {
    if (!m || typeof d > "u" || !a(c))
      return;
    const h = [], E = [[]], I = [];
    let x = 0;
    for (const v of c.children)
      if (!s(v))
        E[x] = i(E[x], v);
      else {
        const S = v.value, g = Array.from(S.matchAll(H8));
        if (!g.length)
          E[x] = i(E[x], v);
        else
          for (let y = 0; y < g.length; y++) {
            const T = g[y], [j, $, D, w, G] = T, Q = T.index, z = j.length;
            if (y === 0 && Q !== 0) {
              const ae = S.substring(0, Q);
              if (ae) {
                const K = np("text", ae);
                E[x] = i(E[x], K);
              }
            }
            (y !== 0 || Q !== 0) && x++;
            const ce = y === g.length - 1 ? (
              // if it is the last match
              S.slice(Q + z)
            ) : (
              // if it is NOT the last match
              S.substring(Q + z, g[y + 1].index)
            );
            if (ce) {
              const ae = np("text", ce);
              E[x] = i(E[x], ae);
            }
            I[x] = o({
              marker: $,
              // "=" or "~"
              left: D,
              classes: w,
              right: G
            });
          }
      }
    E.forEach((v) => {
      const S = v[v.length - 1];
      S.type === "text" && (S.value = S.value.replace(/[\s\r\n]+$/, ""));
    }), E.forEach((v, S) => {
      var y;
      const g = I[S] ? n(v, I[S].classifications, I[S].alignment) : np("paragraph", v);
      if (((y = I[S]) == null ? void 0 : y.type) === "wrapper") {
        const T = r(g, I[S].classifications, I[S].alignment);
        h.push(T);
      } else
        h.push(g);
    }), h.length && m.children.splice(d, 1, ...h);
  };
  return (c) => {
    ra(c, "paragraph", l);
  };
}, qp = ({ message: e }) => /* @__PURE__ */ Y.jsx(t_, { message: e }), t_ = ({ message: e }) => /* @__PURE__ */ Y.jsx(
  JC,
  {
    remarkPlugins: [uO, B8, q8],
    rehypePlugins: [r8],
    components: {
      code({ node: t, className: n, children: r, ...a }) {
        const i = /language-(\w+)/.exec(n || "");
        return i ? /* @__PURE__ */ Y.jsxs("div", { className: "relative", children: [
          /* @__PURE__ */ Y.jsx(B6, { content: String(r).replace(/\n$/, ""), className: "absolute top-0 right-0 m-2 p-1 rounded text-xs" }),
          /* @__PURE__ */ Y.jsx("div", { style: { maxHeight: "400px", overflow: "auto", overflowX: "auto" }, children: /* @__PURE__ */ Y.jsx(
            eS,
            {
              style: F6,
              language: i[1],
              PreTag: "div",
              ...a,
              ref: a.ref,
              children: String(r).replace(/\n$/, "")
            }
          ) })
        ] }) : /* @__PURE__ */ Y.jsx("code", { className: n, ...a, children: r });
      },
      blockquote({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("blockquote", { className: "border-l-4 border-gray-300 pl-4 italic text-gray-600", ...n, children: t });
      },
      h1({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h1", { className: "text-2xl font-bold", ...n, children: t });
      },
      h2({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h2", { className: "text-xl font-bold", ...n, children: t });
      },
      h3({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h3", { className: "text-lg font-bold", ...n, children: t });
      },
      h4({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h4", { className: "text-base font-bold", ...n, children: t });
      },
      h5({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h5", { className: "text-sm font-bold", ...n, children: t });
      },
      h6({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("h6", { className: "text-xs font-bold", ...n, children: t });
      },
      ul({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("ul", { className: "list-disc list-inside", ...n, children: t });
      },
      ol({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("ol", { className: "list-decimal list-inside", ...n, children: t });
      },
      li({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("li", { className: "list-item pl-3 pt-1", ...n, children: t });
      },
      a({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("a", { className: "text-blue-500 hover:underline hover:text-blue-600", ...n, children: t });
      },
      table({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("table", { className: "table-auto", ...n, children: t });
      },
      tr({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("tr", { className: "table-row", ...n, children: t });
      },
      td({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("td", { className: "table-cell border border-border p-2", ...n, children: t });
      },
      th({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("th", { className: "table-cell border border-border p-2 font-semibold text-blue-500", ...n, children: t });
      },
      img({ children: t, ...n }) {
        return /* @__PURE__ */ Y.jsx("img", { className: "w-full", ...n });
      },
      p({ children: t, ...n }) {
        if (typeof t == "string") {
          let r = t, a = null;
          try {
            a = JSON.parse(r);
          } catch {
          }
          return a ? /* @__PURE__ */ Y.jsx(t_, { message: `\`\`\`json
${JSON.stringify(a, null, 2)}` }) : /* @__PURE__ */ Y.jsx("p", { ...n, children: t });
        }
        return /* @__PURE__ */ Y.jsx("p", { ...n, children: t });
      }
    },
    children: e
  }
), $8 = ({ msg: e, persona: t }) => {
  const { message: n, files: r } = e;
  return e.content_array && e.content_array.length > 0 ? /* @__PURE__ */ Y.jsxs("div", { className: "flex items-center gap-2 mb-2", children: [
    /* @__PURE__ */ Y.jsx("div", { className: "flex flex-col", children: /* @__PURE__ */ Y.jsx("div", { className: "rounded-lg flex flex-col p-2 gap-2 human-message", children: e.content_array.map((a, i) => {
      let o = a, s = o[0], l = o[1];
      return s === "ImageUrl" ? /* @__PURE__ */ Y.jsx("div", { className: "flex flex-col", children: /* @__PURE__ */ Y.jsx("img", { src: l }) }, i) : s === "InputAudio" ? /* @__PURE__ */ Y.jsxs("audio", { controls: !0, className: "my-2", children: [
        /* @__PURE__ */ Y.jsx("source", { src: `data:audio/mpeg;base64,${l}`, type: "audio/mpeg" }),
        "Your browser does not support the audio element."
      ] }) : /* @__PURE__ */ Y.jsx("div", { className: "flex flex-col", children: /* @__PURE__ */ Y.jsx(qp, { message: l }) }, i);
    }) }) }),
    /* @__PURE__ */ Y.jsx("div", { children: t ? t.url ? /* @__PURE__ */ Y.jsx(Xr, { name: t.name, imageUrl: t.url, className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(km, { className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(Xr, { className: "h-6 w-6 rounded-full", name: "User" }) })
  ] }) : /* @__PURE__ */ Y.jsxs("div", { className: "flex items-center gap-2 mb-2", children: [
    /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-col", children: [
      r && r.length > 0 && /* @__PURE__ */ Y.jsx(sT, { files: r }),
      /* @__PURE__ */ Y.jsx("div", { className: "rounded-lg p-2 human-message", children: /* @__PURE__ */ Y.jsx(qp, { message: n || "" }) })
    ] }),
    t ? t.url ? /* @__PURE__ */ Y.jsx(Xr, { name: t.name, imageUrl: t.url, className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(km, { className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(Xr, { className: "h-6 w-6 rounded-full", name: "User" })
  ] });
};
var n_ = { exports: {} };
(function(e, t) {
  (function(n, r) {
    e.exports = r(An);
  })(mn, function(n) {
    return function(r) {
      var a = {};
      function i(o) {
        if (a[o]) return a[o].exports;
        var s = a[o] = { i: o, l: !1, exports: {} };
        return r[o].call(s.exports, s, s.exports, i), s.l = !0, s.exports;
      }
      return i.m = r, i.c = a, i.d = function(o, s, l) {
        i.o(o, s) || Object.defineProperty(o, s, { enumerable: !0, get: l });
      }, i.r = function(o) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
      }, i.t = function(o, s) {
        if (1 & s && (o = i(o)), 8 & s || 4 & s && typeof o == "object" && o && o.__esModule) return o;
        var l = /* @__PURE__ */ Object.create(null);
        if (i.r(l), Object.defineProperty(l, "default", { enumerable: !0, value: o }), 2 & s && typeof o != "string") for (var u in o) i.d(l, u, (function(c) {
          return o[c];
        }).bind(null, u));
        return l;
      }, i.n = function(o) {
        var s = o && o.__esModule ? function() {
          return o.default;
        } : function() {
          return o;
        };
        return i.d(s, "a", s), s;
      }, i.o = function(o, s) {
        return Object.prototype.hasOwnProperty.call(o, s);
      }, i.p = "", i(i.s = 48);
    }([function(r, a) {
      r.exports = n;
    }, function(r, a) {
      var i = r.exports = { version: "2.6.12" };
      typeof __e == "number" && (__e = i);
    }, function(r, a, i) {
      var o = i(26)("wks"), s = i(17), l = i(3).Symbol, u = typeof l == "function";
      (r.exports = function(c) {
        return o[c] || (o[c] = u && l[c] || (u ? l : s)("Symbol." + c));
      }).store = o;
    }, function(r, a) {
      var i = r.exports = typeof window < "u" && window.Math == Math ? window : typeof self < "u" && self.Math == Math ? self : Function("return this")();
      typeof __g == "number" && (__g = i);
    }, function(r, a, i) {
      r.exports = !i(8)(function() {
        return Object.defineProperty({}, "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, function(r, a) {
      var i = {}.hasOwnProperty;
      r.exports = function(o, s) {
        return i.call(o, s);
      };
    }, function(r, a, i) {
      var o = i(7), s = i(16);
      r.exports = i(4) ? function(l, u, c) {
        return o.f(l, u, s(1, c));
      } : function(l, u, c) {
        return l[u] = c, l;
      };
    }, function(r, a, i) {
      var o = i(10), s = i(35), l = i(23), u = Object.defineProperty;
      a.f = i(4) ? Object.defineProperty : function(c, d, m) {
        if (o(c), d = l(d, !0), o(m), s) try {
          return u(c, d, m);
        } catch {
        }
        if ("get" in m || "set" in m) throw TypeError("Accessors not supported!");
        return "value" in m && (c[d] = m.value), c;
      };
    }, function(r, a) {
      r.exports = function(i) {
        try {
          return !!i();
        } catch {
          return !0;
        }
      };
    }, function(r, a, i) {
      var o = i(40), s = i(22);
      r.exports = function(l) {
        return o(s(l));
      };
    }, function(r, a, i) {
      var o = i(11);
      r.exports = function(s) {
        if (!o(s)) throw TypeError(s + " is not an object!");
        return s;
      };
    }, function(r, a) {
      r.exports = function(i) {
        return typeof i == "object" ? i !== null : typeof i == "function";
      };
    }, function(r, a) {
      r.exports = {};
    }, function(r, a, i) {
      var o = i(39), s = i(27);
      r.exports = Object.keys || function(l) {
        return o(l, s);
      };
    }, function(r, a) {
      r.exports = !0;
    }, function(r, a, i) {
      var o = i(3), s = i(1), l = i(53), u = i(6), c = i(5), d = function(m, f, h) {
        var E, I, x, v = m & d.F, S = m & d.G, g = m & d.S, y = m & d.P, T = m & d.B, j = m & d.W, $ = S ? s : s[f] || (s[f] = {}), D = $.prototype, w = S ? o : g ? o[f] : (o[f] || {}).prototype;
        for (E in S && (h = f), h) (I = !v && w && w[E] !== void 0) && c($, E) || (x = I ? w[E] : h[E], $[E] = S && typeof w[E] != "function" ? h[E] : T && I ? l(x, o) : j && w[E] == x ? function(G) {
          var Q = function(z, ce, ae) {
            if (this instanceof G) {
              switch (arguments.length) {
                case 0:
                  return new G();
                case 1:
                  return new G(z);
                case 2:
                  return new G(z, ce);
              }
              return new G(z, ce, ae);
            }
            return G.apply(this, arguments);
          };
          return Q.prototype = G.prototype, Q;
        }(x) : y && typeof x == "function" ? l(Function.call, x) : x, y && (($.virtual || ($.virtual = {}))[E] = x, m & d.R && D && !D[E] && u(D, E, x)));
      };
      d.F = 1, d.G = 2, d.S = 4, d.P = 8, d.B = 16, d.W = 32, d.U = 64, d.R = 128, r.exports = d;
    }, function(r, a) {
      r.exports = function(i, o) {
        return { enumerable: !(1 & i), configurable: !(2 & i), writable: !(4 & i), value: o };
      };
    }, function(r, a) {
      var i = 0, o = Math.random();
      r.exports = function(s) {
        return "Symbol(".concat(s === void 0 ? "" : s, ")_", (++i + o).toString(36));
      };
    }, function(r, a, i) {
      var o = i(22);
      r.exports = function(s) {
        return Object(o(s));
      };
    }, function(r, a) {
      a.f = {}.propertyIsEnumerable;
    }, function(r, a, i) {
      var o = i(52)(!0);
      i(34)(String, "String", function(s) {
        this._t = String(s), this._i = 0;
      }, function() {
        var s, l = this._t, u = this._i;
        return u >= l.length ? { value: void 0, done: !0 } : (s = o(l, u), this._i += s.length, { value: s, done: !1 });
      });
    }, function(r, a) {
      var i = Math.ceil, o = Math.floor;
      r.exports = function(s) {
        return isNaN(s = +s) ? 0 : (s > 0 ? o : i)(s);
      };
    }, function(r, a) {
      r.exports = function(i) {
        if (i == null) throw TypeError("Can't call method on  " + i);
        return i;
      };
    }, function(r, a, i) {
      var o = i(11);
      r.exports = function(s, l) {
        if (!o(s)) return s;
        var u, c;
        if (l && typeof (u = s.toString) == "function" && !o(c = u.call(s)) || typeof (u = s.valueOf) == "function" && !o(c = u.call(s)) || !l && typeof (u = s.toString) == "function" && !o(c = u.call(s))) return c;
        throw TypeError("Can't convert object to primitive value");
      };
    }, function(r, a) {
      var i = {}.toString;
      r.exports = function(o) {
        return i.call(o).slice(8, -1);
      };
    }, function(r, a, i) {
      var o = i(26)("keys"), s = i(17);
      r.exports = function(l) {
        return o[l] || (o[l] = s(l));
      };
    }, function(r, a, i) {
      var o = i(1), s = i(3), l = s["__core-js_shared__"] || (s["__core-js_shared__"] = {});
      (r.exports = function(u, c) {
        return l[u] || (l[u] = c !== void 0 ? c : {});
      })("versions", []).push({ version: o.version, mode: i(14) ? "pure" : "global", copyright: "© 2020 Denis Pushkarev (zloirock.ru)" });
    }, function(r, a) {
      r.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    }, function(r, a, i) {
      var o = i(7).f, s = i(5), l = i(2)("toStringTag");
      r.exports = function(u, c, d) {
        u && !s(u = d ? u : u.prototype, l) && o(u, l, { configurable: !0, value: c });
      };
    }, function(r, a, i) {
      i(62);
      for (var o = i(3), s = i(6), l = i(12), u = i(2)("toStringTag"), c = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), d = 0; d < c.length; d++) {
        var m = c[d], f = o[m], h = f && f.prototype;
        h && !h[u] && s(h, u, m), l[m] = l.Array;
      }
    }, function(r, a, i) {
      a.f = i(2);
    }, function(r, a, i) {
      var o = i(3), s = i(1), l = i(14), u = i(30), c = i(7).f;
      r.exports = function(d) {
        var m = s.Symbol || (s.Symbol = l ? {} : o.Symbol || {});
        d.charAt(0) == "_" || d in m || c(m, d, { value: u.f(d) });
      };
    }, function(r, a) {
      a.f = Object.getOwnPropertySymbols;
    }, function(r, a) {
      r.exports = function(i, o, s) {
        return Math.min(Math.max(i, o), s);
      };
    }, function(r, a, i) {
      var o = i(14), s = i(15), l = i(37), u = i(6), c = i(12), d = i(55), m = i(28), f = i(61), h = i(2)("iterator"), E = !([].keys && "next" in [].keys()), I = function() {
        return this;
      };
      r.exports = function(x, v, S, g, y, T, j) {
        d(S, v, g);
        var $, D, w, G = function(A) {
          if (!E && A in ae) return ae[A];
          switch (A) {
            case "keys":
            case "values":
              return function() {
                return new S(this, A);
              };
          }
          return function() {
            return new S(this, A);
          };
        }, Q = v + " Iterator", z = y == "values", ce = !1, ae = x.prototype, K = ae[h] || ae["@@iterator"] || y && ae[y], he = K || G(y), ye = y ? z ? G("entries") : he : void 0, Te = v == "Array" && ae.entries || K;
        if (Te && (w = f(Te.call(new x()))) !== Object.prototype && w.next && (m(w, Q, !0), o || typeof w[h] == "function" || u(w, h, I)), z && K && K.name !== "values" && (ce = !0, he = function() {
          return K.call(this);
        }), o && !j || !E && !ce && ae[h] || u(ae, h, he), c[v] = he, c[Q] = I, y) if ($ = { values: z ? he : G("values"), keys: T ? he : G("keys"), entries: ye }, j) for (D in $) D in ae || l(ae, D, $[D]);
        else s(s.P + s.F * (E || ce), v, $);
        return $;
      };
    }, function(r, a, i) {
      r.exports = !i(4) && !i(8)(function() {
        return Object.defineProperty(i(36)("div"), "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, function(r, a, i) {
      var o = i(11), s = i(3).document, l = o(s) && o(s.createElement);
      r.exports = function(u) {
        return l ? s.createElement(u) : {};
      };
    }, function(r, a, i) {
      r.exports = i(6);
    }, function(r, a, i) {
      var o = i(10), s = i(56), l = i(27), u = i(25)("IE_PROTO"), c = function() {
      }, d = function() {
        var m, f = i(36)("iframe"), h = l.length;
        for (f.style.display = "none", i(60).appendChild(f), f.src = "javascript:", (m = f.contentWindow.document).open(), m.write("<script>document.F=Object<\/script>"), m.close(), d = m.F; h--; ) delete d.prototype[l[h]];
        return d();
      };
      r.exports = Object.create || function(m, f) {
        var h;
        return m !== null ? (c.prototype = o(m), h = new c(), c.prototype = null, h[u] = m) : h = d(), f === void 0 ? h : s(h, f);
      };
    }, function(r, a, i) {
      var o = i(5), s = i(9), l = i(57)(!1), u = i(25)("IE_PROTO");
      r.exports = function(c, d) {
        var m, f = s(c), h = 0, E = [];
        for (m in f) m != u && o(f, m) && E.push(m);
        for (; d.length > h; ) o(f, m = d[h++]) && (~l(E, m) || E.push(m));
        return E;
      };
    }, function(r, a, i) {
      var o = i(24);
      r.exports = Object("z").propertyIsEnumerable(0) ? Object : function(s) {
        return o(s) == "String" ? s.split("") : Object(s);
      };
    }, function(r, a, i) {
      var o = i(39), s = i(27).concat("length", "prototype");
      a.f = Object.getOwnPropertyNames || function(l) {
        return o(l, s);
      };
    }, function(r, a, i) {
      var o = i(24), s = i(2)("toStringTag"), l = o(/* @__PURE__ */ function() {
        return arguments;
      }()) == "Arguments";
      r.exports = function(u) {
        var c, d, m;
        return u === void 0 ? "Undefined" : u === null ? "Null" : typeof (d = function(f, h) {
          try {
            return f[h];
          } catch {
          }
        }(c = Object(u), s)) == "string" ? d : l ? o(c) : (m = o(c)) == "Object" && typeof c.callee == "function" ? "Arguments" : m;
      };
    }, function(r, a) {
      var i;
      i = /* @__PURE__ */ function() {
        return this;
      }();
      try {
        i = i || new Function("return this")();
      } catch {
        typeof window == "object" && (i = window);
      }
      r.exports = i;
    }, function(r, a) {
      var i = /-?\d+(\.\d+)?%?/g;
      r.exports = function(o) {
        return o.match(i);
      };
    }, function(r, a, i) {
      Object.defineProperty(a, "__esModule", { value: !0 }), a.getBase16Theme = a.createStyling = a.invertTheme = void 0;
      var o = I(i(49)), s = I(i(76)), l = I(i(81)), u = I(i(89)), c = I(i(93)), d = function(D) {
        if (D && D.__esModule) return D;
        var w = {};
        if (D != null) for (var G in D) Object.prototype.hasOwnProperty.call(D, G) && (w[G] = D[G]);
        return w.default = D, w;
      }(i(94)), m = I(i(132)), f = I(i(133)), h = I(i(138)), E = i(139);
      function I(D) {
        return D && D.__esModule ? D : { default: D };
      }
      var x = d.default, v = (0, u.default)(x), S = (0, h.default)(f.default, E.rgb2yuv, function(D) {
        var w, G = (0, l.default)(D, 3), Q = G[0], z = G[1], ce = G[2];
        return [(w = Q, w < 0.25 ? 1 : w < 0.5 ? 0.9 - w : 1.1 - w), z, ce];
      }, E.yuv2rgb, m.default), g = function(D) {
        return function(w) {
          return { className: [w.className, D.className].filter(Boolean).join(" "), style: (0, s.default)({}, w.style || {}, D.style || {}) };
        };
      }, y = function(D, w) {
        var G = (0, u.default)(w);
        for (var Q in D) G.indexOf(Q) === -1 && G.push(Q);
        return G.reduce(function(z, ce) {
          return z[ce] = function(ae, K) {
            if (ae === void 0) return K;
            if (K === void 0) return ae;
            var he = ae === void 0 ? "undefined" : (0, o.default)(ae), ye = K === void 0 ? "undefined" : (0, o.default)(K);
            switch (he) {
              case "string":
                switch (ye) {
                  case "string":
                    return [K, ae].filter(Boolean).join(" ");
                  case "object":
                    return g({ className: ae, style: K });
                  case "function":
                    return function(Te) {
                      for (var A = arguments.length, re = Array(A > 1 ? A - 1 : 0), se = 1; se < A; se++) re[se - 1] = arguments[se];
                      return g({ className: ae })(K.apply(void 0, [Te].concat(re)));
                    };
                }
              case "object":
                switch (ye) {
                  case "string":
                    return g({ className: K, style: ae });
                  case "object":
                    return (0, s.default)({}, K, ae);
                  case "function":
                    return function(Te) {
                      for (var A = arguments.length, re = Array(A > 1 ? A - 1 : 0), se = 1; se < A; se++) re[se - 1] = arguments[se];
                      return g({ style: ae })(K.apply(void 0, [Te].concat(re)));
                    };
                }
              case "function":
                switch (ye) {
                  case "string":
                    return function(Te) {
                      for (var A = arguments.length, re = Array(A > 1 ? A - 1 : 0), se = 1; se < A; se++) re[se - 1] = arguments[se];
                      return ae.apply(void 0, [g(Te)({ className: K })].concat(re));
                    };
                  case "object":
                    return function(Te) {
                      for (var A = arguments.length, re = Array(A > 1 ? A - 1 : 0), se = 1; se < A; se++) re[se - 1] = arguments[se];
                      return ae.apply(void 0, [g(Te)({ style: K })].concat(re));
                    };
                  case "function":
                    return function(Te) {
                      for (var A = arguments.length, re = Array(A > 1 ? A - 1 : 0), se = 1; se < A; se++) re[se - 1] = arguments[se];
                      return ae.apply(void 0, [K.apply(void 0, [Te].concat(re))].concat(re));
                    };
                }
            }
          }(D[ce], w[ce]), z;
        }, {});
      }, T = function(D, w) {
        for (var G = arguments.length, Q = Array(G > 2 ? G - 2 : 0), z = 2; z < G; z++) Q[z - 2] = arguments[z];
        if (w === null) return D;
        Array.isArray(w) || (w = [w]);
        var ce = w.map(function(K) {
          return D[K];
        }).filter(Boolean), ae = ce.reduce(function(K, he) {
          return typeof he == "string" ? K.className = [K.className, he].filter(Boolean).join(" ") : (he === void 0 ? "undefined" : (0, o.default)(he)) === "object" ? K.style = (0, s.default)({}, K.style, he) : typeof he == "function" && (K = (0, s.default)({}, K, he.apply(void 0, [K].concat(Q)))), K;
        }, { className: "", style: {} });
        return ae.className || delete ae.className, (0, u.default)(ae.style).length === 0 && delete ae.style, ae;
      }, j = a.invertTheme = function(D) {
        return (0, u.default)(D).reduce(function(w, G) {
          return w[G] = /^base/.test(G) ? S(D[G]) : G === "scheme" ? D[G] + ":inverted" : D[G], w;
        }, {});
      }, $ = (a.createStyling = (0, c.default)(function(D) {
        for (var w = arguments.length, G = Array(w > 3 ? w - 3 : 0), Q = 3; Q < w; Q++) G[Q - 3] = arguments[Q];
        var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, ce = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, ae = z.defaultBase16, K = ae === void 0 ? x : ae, he = z.base16Themes, ye = he === void 0 ? null : he, Te = $(ce, ye);
        Te && (ce = (0, s.default)({}, Te, ce));
        var A = v.reduce(function(me, we) {
          return me[we] = ce[we] || K[we], me;
        }, {}), re = (0, u.default)(ce).reduce(function(me, we) {
          return v.indexOf(we) === -1 && (me[we] = ce[we]), me;
        }, {}), se = D(A), M = y(re, se);
        return (0, c.default)(T, 2).apply(void 0, [M].concat(G));
      }, 3), a.getBase16Theme = function(D, w) {
        if (D && D.extend && (D = D.extend), typeof D == "string") {
          var G = D.split(":"), Q = (0, l.default)(G, 2), z = Q[0], ce = Q[1];
          D = (w || {})[z] || d[z], ce === "inverted" && (D = j(D));
        }
        return D && D.hasOwnProperty("base00") ? D : void 0;
      });
    }, function(r, a, i) {
      var o, s = typeof Reflect == "object" ? Reflect : null, l = s && typeof s.apply == "function" ? s.apply : function(g, y, T) {
        return Function.prototype.apply.call(g, y, T);
      };
      o = s && typeof s.ownKeys == "function" ? s.ownKeys : Object.getOwnPropertySymbols ? function(g) {
        return Object.getOwnPropertyNames(g).concat(Object.getOwnPropertySymbols(g));
      } : function(g) {
        return Object.getOwnPropertyNames(g);
      };
      var u = Number.isNaN || function(g) {
        return g != g;
      };
      function c() {
        c.init.call(this);
      }
      r.exports = c, r.exports.once = function(g, y) {
        return new Promise(function(T, j) {
          function $() {
            D !== void 0 && g.removeListener("error", D), T([].slice.call(arguments));
          }
          var D;
          y !== "error" && (D = function(w) {
            g.removeListener(y, $), j(w);
          }, g.once("error", D)), g.once(y, $);
        });
      }, c.EventEmitter = c, c.prototype._events = void 0, c.prototype._eventsCount = 0, c.prototype._maxListeners = void 0;
      var d = 10;
      function m(g) {
        if (typeof g != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof g);
      }
      function f(g) {
        return g._maxListeners === void 0 ? c.defaultMaxListeners : g._maxListeners;
      }
      function h(g, y, T, j) {
        var $, D, w, G;
        if (m(T), (D = g._events) === void 0 ? (D = g._events = /* @__PURE__ */ Object.create(null), g._eventsCount = 0) : (D.newListener !== void 0 && (g.emit("newListener", y, T.listener ? T.listener : T), D = g._events), w = D[y]), w === void 0) w = D[y] = T, ++g._eventsCount;
        else if (typeof w == "function" ? w = D[y] = j ? [T, w] : [w, T] : j ? w.unshift(T) : w.push(T), ($ = f(g)) > 0 && w.length > $ && !w.warned) {
          w.warned = !0;
          var Q = new Error("Possible EventEmitter memory leak detected. " + w.length + " " + String(y) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          Q.name = "MaxListenersExceededWarning", Q.emitter = g, Q.type = y, Q.count = w.length, G = Q, console && console.warn && console.warn(G);
        }
        return g;
      }
      function E() {
        if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function I(g, y, T) {
        var j = { fired: !1, wrapFn: void 0, target: g, type: y, listener: T }, $ = E.bind(j);
        return $.listener = T, j.wrapFn = $, $;
      }
      function x(g, y, T) {
        var j = g._events;
        if (j === void 0) return [];
        var $ = j[y];
        return $ === void 0 ? [] : typeof $ == "function" ? T ? [$.listener || $] : [$] : T ? function(D) {
          for (var w = new Array(D.length), G = 0; G < w.length; ++G) w[G] = D[G].listener || D[G];
          return w;
        }($) : S($, $.length);
      }
      function v(g) {
        var y = this._events;
        if (y !== void 0) {
          var T = y[g];
          if (typeof T == "function") return 1;
          if (T !== void 0) return T.length;
        }
        return 0;
      }
      function S(g, y) {
        for (var T = new Array(y), j = 0; j < y; ++j) T[j] = g[j];
        return T;
      }
      Object.defineProperty(c, "defaultMaxListeners", { enumerable: !0, get: function() {
        return d;
      }, set: function(g) {
        if (typeof g != "number" || g < 0 || u(g)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + g + ".");
        d = g;
      } }), c.init = function() {
        this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }, c.prototype.setMaxListeners = function(g) {
        if (typeof g != "number" || g < 0 || u(g)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + g + ".");
        return this._maxListeners = g, this;
      }, c.prototype.getMaxListeners = function() {
        return f(this);
      }, c.prototype.emit = function(g) {
        for (var y = [], T = 1; T < arguments.length; T++) y.push(arguments[T]);
        var j = g === "error", $ = this._events;
        if ($ !== void 0) j = j && $.error === void 0;
        else if (!j) return !1;
        if (j) {
          var D;
          if (y.length > 0 && (D = y[0]), D instanceof Error) throw D;
          var w = new Error("Unhandled error." + (D ? " (" + D.message + ")" : ""));
          throw w.context = D, w;
        }
        var G = $[g];
        if (G === void 0) return !1;
        if (typeof G == "function") l(G, this, y);
        else {
          var Q = G.length, z = S(G, Q);
          for (T = 0; T < Q; ++T) l(z[T], this, y);
        }
        return !0;
      }, c.prototype.addListener = function(g, y) {
        return h(this, g, y, !1);
      }, c.prototype.on = c.prototype.addListener, c.prototype.prependListener = function(g, y) {
        return h(this, g, y, !0);
      }, c.prototype.once = function(g, y) {
        return m(y), this.on(g, I(this, g, y)), this;
      }, c.prototype.prependOnceListener = function(g, y) {
        return m(y), this.prependListener(g, I(this, g, y)), this;
      }, c.prototype.removeListener = function(g, y) {
        var T, j, $, D, w;
        if (m(y), (j = this._events) === void 0) return this;
        if ((T = j[g]) === void 0) return this;
        if (T === y || T.listener === y) --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete j[g], j.removeListener && this.emit("removeListener", g, T.listener || y));
        else if (typeof T != "function") {
          for ($ = -1, D = T.length - 1; D >= 0; D--) if (T[D] === y || T[D].listener === y) {
            w = T[D].listener, $ = D;
            break;
          }
          if ($ < 0) return this;
          $ === 0 ? T.shift() : function(G, Q) {
            for (; Q + 1 < G.length; Q++) G[Q] = G[Q + 1];
            G.pop();
          }(T, $), T.length === 1 && (j[g] = T[0]), j.removeListener !== void 0 && this.emit("removeListener", g, w || y);
        }
        return this;
      }, c.prototype.off = c.prototype.removeListener, c.prototype.removeAllListeners = function(g) {
        var y, T, j;
        if ((T = this._events) === void 0) return this;
        if (T.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : T[g] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete T[g]), this;
        if (arguments.length === 0) {
          var $, D = Object.keys(T);
          for (j = 0; j < D.length; ++j) ($ = D[j]) !== "removeListener" && this.removeAllListeners($);
          return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
        }
        if (typeof (y = T[g]) == "function") this.removeListener(g, y);
        else if (y !== void 0) for (j = y.length - 1; j >= 0; j--) this.removeListener(g, y[j]);
        return this;
      }, c.prototype.listeners = function(g) {
        return x(this, g, !0);
      }, c.prototype.rawListeners = function(g) {
        return x(this, g, !1);
      }, c.listenerCount = function(g, y) {
        return typeof g.listenerCount == "function" ? g.listenerCount(y) : v.call(g, y);
      }, c.prototype.listenerCount = v, c.prototype.eventNames = function() {
        return this._eventsCount > 0 ? o(this._events) : [];
      };
    }, function(r, a, i) {
      r.exports.Dispatcher = i(140);
    }, function(r, a, i) {
      r.exports = i(142);
    }, function(r, a, i) {
      a.__esModule = !0;
      var o = u(i(50)), s = u(i(65)), l = typeof s.default == "function" && typeof o.default == "symbol" ? function(c) {
        return typeof c;
      } : function(c) {
        return c && typeof s.default == "function" && c.constructor === s.default && c !== s.default.prototype ? "symbol" : typeof c;
      };
      function u(c) {
        return c && c.__esModule ? c : { default: c };
      }
      a.default = typeof s.default == "function" && l(o.default) === "symbol" ? function(c) {
        return c === void 0 ? "undefined" : l(c);
      } : function(c) {
        return c && typeof s.default == "function" && c.constructor === s.default && c !== s.default.prototype ? "symbol" : c === void 0 ? "undefined" : l(c);
      };
    }, function(r, a, i) {
      r.exports = { default: i(51), __esModule: !0 };
    }, function(r, a, i) {
      i(20), i(29), r.exports = i(30).f("iterator");
    }, function(r, a, i) {
      var o = i(21), s = i(22);
      r.exports = function(l) {
        return function(u, c) {
          var d, m, f = String(s(u)), h = o(c), E = f.length;
          return h < 0 || h >= E ? l ? "" : void 0 : (d = f.charCodeAt(h)) < 55296 || d > 56319 || h + 1 === E || (m = f.charCodeAt(h + 1)) < 56320 || m > 57343 ? l ? f.charAt(h) : d : l ? f.slice(h, h + 2) : m - 56320 + (d - 55296 << 10) + 65536;
        };
      };
    }, function(r, a, i) {
      var o = i(54);
      r.exports = function(s, l, u) {
        if (o(s), l === void 0) return s;
        switch (u) {
          case 1:
            return function(c) {
              return s.call(l, c);
            };
          case 2:
            return function(c, d) {
              return s.call(l, c, d);
            };
          case 3:
            return function(c, d, m) {
              return s.call(l, c, d, m);
            };
        }
        return function() {
          return s.apply(l, arguments);
        };
      };
    }, function(r, a) {
      r.exports = function(i) {
        if (typeof i != "function") throw TypeError(i + " is not a function!");
        return i;
      };
    }, function(r, a, i) {
      var o = i(38), s = i(16), l = i(28), u = {};
      i(6)(u, i(2)("iterator"), function() {
        return this;
      }), r.exports = function(c, d, m) {
        c.prototype = o(u, { next: s(1, m) }), l(c, d + " Iterator");
      };
    }, function(r, a, i) {
      var o = i(7), s = i(10), l = i(13);
      r.exports = i(4) ? Object.defineProperties : function(u, c) {
        s(u);
        for (var d, m = l(c), f = m.length, h = 0; f > h; ) o.f(u, d = m[h++], c[d]);
        return u;
      };
    }, function(r, a, i) {
      var o = i(9), s = i(58), l = i(59);
      r.exports = function(u) {
        return function(c, d, m) {
          var f, h = o(c), E = s(h.length), I = l(m, E);
          if (u && d != d) {
            for (; E > I; ) if ((f = h[I++]) != f) return !0;
          } else for (; E > I; I++) if ((u || I in h) && h[I] === d) return u || I || 0;
          return !u && -1;
        };
      };
    }, function(r, a, i) {
      var o = i(21), s = Math.min;
      r.exports = function(l) {
        return l > 0 ? s(o(l), 9007199254740991) : 0;
      };
    }, function(r, a, i) {
      var o = i(21), s = Math.max, l = Math.min;
      r.exports = function(u, c) {
        return (u = o(u)) < 0 ? s(u + c, 0) : l(u, c);
      };
    }, function(r, a, i) {
      var o = i(3).document;
      r.exports = o && o.documentElement;
    }, function(r, a, i) {
      var o = i(5), s = i(18), l = i(25)("IE_PROTO"), u = Object.prototype;
      r.exports = Object.getPrototypeOf || function(c) {
        return c = s(c), o(c, l) ? c[l] : typeof c.constructor == "function" && c instanceof c.constructor ? c.constructor.prototype : c instanceof Object ? u : null;
      };
    }, function(r, a, i) {
      var o = i(63), s = i(64), l = i(12), u = i(9);
      r.exports = i(34)(Array, "Array", function(c, d) {
        this._t = u(c), this._i = 0, this._k = d;
      }, function() {
        var c = this._t, d = this._k, m = this._i++;
        return !c || m >= c.length ? (this._t = void 0, s(1)) : s(0, d == "keys" ? m : d == "values" ? c[m] : [m, c[m]]);
      }, "values"), l.Arguments = l.Array, o("keys"), o("values"), o("entries");
    }, function(r, a) {
      r.exports = function() {
      };
    }, function(r, a) {
      r.exports = function(i, o) {
        return { value: o, done: !!i };
      };
    }, function(r, a, i) {
      r.exports = { default: i(66), __esModule: !0 };
    }, function(r, a, i) {
      i(67), i(73), i(74), i(75), r.exports = i(1).Symbol;
    }, function(r, a, i) {
      var o = i(3), s = i(5), l = i(4), u = i(15), c = i(37), d = i(68).KEY, m = i(8), f = i(26), h = i(28), E = i(17), I = i(2), x = i(30), v = i(31), S = i(69), g = i(70), y = i(10), T = i(11), j = i(18), $ = i(9), D = i(23), w = i(16), G = i(38), Q = i(71), z = i(72), ce = i(32), ae = i(7), K = i(13), he = z.f, ye = ae.f, Te = Q.f, A = o.Symbol, re = o.JSON, se = re && re.stringify, M = I("_hidden"), me = I("toPrimitive"), we = {}.propertyIsEnumerable, pe = f("symbol-registry"), Ie = f("symbols"), Re = f("op-symbols"), be = Object.prototype, ve = typeof A == "function" && !!ce.f, He = o.QObject, Se = !He || !He.prototype || !He.prototype.findChild, Ke = l && m(function() {
        return G(ye({}, "a", { get: function() {
          return ye(this, "a", { value: 7 }).a;
        } })).a != 7;
      }) ? function(U, X, ue) {
        var fe = he(be, X);
        fe && delete be[X], ye(U, X, ue), fe && U !== be && ye(be, X, fe);
      } : ye, _t = function(U) {
        var X = Ie[U] = G(A.prototype);
        return X._k = U, X;
      }, mt = ve && typeof A.iterator == "symbol" ? function(U) {
        return typeof U == "symbol";
      } : function(U) {
        return U instanceof A;
      }, vt = function(U, X, ue) {
        return U === be && vt(Re, X, ue), y(U), X = D(X, !0), y(ue), s(Ie, X) ? (ue.enumerable ? (s(U, M) && U[M][X] && (U[M][X] = !1), ue = G(ue, { enumerable: w(0, !1) })) : (s(U, M) || ye(U, M, w(1, {})), U[M][X] = !0), Ke(U, X, ue)) : ye(U, X, ue);
      }, wt = function(U, X) {
        y(U);
        for (var ue, fe = S(X = $(X)), Ne = 0, Oe = fe.length; Oe > Ne; ) vt(U, ue = fe[Ne++], X[ue]);
        return U;
      }, jt = function(U) {
        var X = we.call(this, U = D(U, !0));
        return !(this === be && s(Ie, U) && !s(Re, U)) && (!(X || !s(this, U) || !s(Ie, U) || s(this, M) && this[M][U]) || X);
      }, Tt = function(U, X) {
        if (U = $(U), X = D(X, !0), U !== be || !s(Ie, X) || s(Re, X)) {
          var ue = he(U, X);
          return !ue || !s(Ie, X) || s(U, M) && U[M][X] || (ue.enumerable = !0), ue;
        }
      }, Ht = function(U) {
        for (var X, ue = Te($(U)), fe = [], Ne = 0; ue.length > Ne; ) s(Ie, X = ue[Ne++]) || X == M || X == d || fe.push(X);
        return fe;
      }, Yt = function(U) {
        for (var X, ue = U === be, fe = Te(ue ? Re : $(U)), Ne = [], Oe = 0; fe.length > Oe; ) !s(Ie, X = fe[Oe++]) || ue && !s(be, X) || Ne.push(Ie[X]);
        return Ne;
      };
      ve || (c((A = function() {
        if (this instanceof A) throw TypeError("Symbol is not a constructor!");
        var U = E(arguments.length > 0 ? arguments[0] : void 0), X = function(ue) {
          this === be && X.call(Re, ue), s(this, M) && s(this[M], U) && (this[M][U] = !1), Ke(this, U, w(1, ue));
        };
        return l && Se && Ke(be, U, { configurable: !0, set: X }), _t(U);
      }).prototype, "toString", function() {
        return this._k;
      }), z.f = Tt, ae.f = vt, i(41).f = Q.f = Ht, i(19).f = jt, ce.f = Yt, l && !i(14) && c(be, "propertyIsEnumerable", jt, !0), x.f = function(U) {
        return _t(I(U));
      }), u(u.G + u.W + u.F * !ve, { Symbol: A });
      for (var Ct = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), gt = 0; Ct.length > gt; ) I(Ct[gt++]);
      for (var xe = K(I.store), Z = 0; xe.length > Z; ) v(xe[Z++]);
      u(u.S + u.F * !ve, "Symbol", { for: function(U) {
        return s(pe, U += "") ? pe[U] : pe[U] = A(U);
      }, keyFor: function(U) {
        if (!mt(U)) throw TypeError(U + " is not a symbol!");
        for (var X in pe) if (pe[X] === U) return X;
      }, useSetter: function() {
        Se = !0;
      }, useSimple: function() {
        Se = !1;
      } }), u(u.S + u.F * !ve, "Object", { create: function(U, X) {
        return X === void 0 ? G(U) : wt(G(U), X);
      }, defineProperty: vt, defineProperties: wt, getOwnPropertyDescriptor: Tt, getOwnPropertyNames: Ht, getOwnPropertySymbols: Yt });
      var O = m(function() {
        ce.f(1);
      });
      u(u.S + u.F * O, "Object", { getOwnPropertySymbols: function(U) {
        return ce.f(j(U));
      } }), re && u(u.S + u.F * (!ve || m(function() {
        var U = A();
        return se([U]) != "[null]" || se({ a: U }) != "{}" || se(Object(U)) != "{}";
      })), "JSON", { stringify: function(U) {
        for (var X, ue, fe = [U], Ne = 1; arguments.length > Ne; ) fe.push(arguments[Ne++]);
        if (ue = X = fe[1], (T(X) || U !== void 0) && !mt(U)) return g(X) || (X = function(Oe, Pe) {
          if (typeof ue == "function" && (Pe = ue.call(this, Oe, Pe)), !mt(Pe)) return Pe;
        }), fe[1] = X, se.apply(re, fe);
      } }), A.prototype[me] || i(6)(A.prototype, me, A.prototype.valueOf), h(A, "Symbol"), h(Math, "Math", !0), h(o.JSON, "JSON", !0);
    }, function(r, a, i) {
      var o = i(17)("meta"), s = i(11), l = i(5), u = i(7).f, c = 0, d = Object.isExtensible || function() {
        return !0;
      }, m = !i(8)(function() {
        return d(Object.preventExtensions({}));
      }), f = function(E) {
        u(E, o, { value: { i: "O" + ++c, w: {} } });
      }, h = r.exports = { KEY: o, NEED: !1, fastKey: function(E, I) {
        if (!s(E)) return typeof E == "symbol" ? E : (typeof E == "string" ? "S" : "P") + E;
        if (!l(E, o)) {
          if (!d(E)) return "F";
          if (!I) return "E";
          f(E);
        }
        return E[o].i;
      }, getWeak: function(E, I) {
        if (!l(E, o)) {
          if (!d(E)) return !0;
          if (!I) return !1;
          f(E);
        }
        return E[o].w;
      }, onFreeze: function(E) {
        return m && h.NEED && d(E) && !l(E, o) && f(E), E;
      } };
    }, function(r, a, i) {
      var o = i(13), s = i(32), l = i(19);
      r.exports = function(u) {
        var c = o(u), d = s.f;
        if (d) for (var m, f = d(u), h = l.f, E = 0; f.length > E; ) h.call(u, m = f[E++]) && c.push(m);
        return c;
      };
    }, function(r, a, i) {
      var o = i(24);
      r.exports = Array.isArray || function(s) {
        return o(s) == "Array";
      };
    }, function(r, a, i) {
      var o = i(9), s = i(41).f, l = {}.toString, u = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      r.exports.f = function(c) {
        return u && l.call(c) == "[object Window]" ? function(d) {
          try {
            return s(d);
          } catch {
            return u.slice();
          }
        }(c) : s(o(c));
      };
    }, function(r, a, i) {
      var o = i(19), s = i(16), l = i(9), u = i(23), c = i(5), d = i(35), m = Object.getOwnPropertyDescriptor;
      a.f = i(4) ? m : function(f, h) {
        if (f = l(f), h = u(h, !0), d) try {
          return m(f, h);
        } catch {
        }
        if (c(f, h)) return s(!o.f.call(f, h), f[h]);
      };
    }, function(r, a) {
    }, function(r, a, i) {
      i(31)("asyncIterator");
    }, function(r, a, i) {
      i(31)("observable");
    }, function(r, a, i) {
      a.__esModule = !0;
      var o, s = i(77), l = (o = s) && o.__esModule ? o : { default: o };
      a.default = l.default || function(u) {
        for (var c = 1; c < arguments.length; c++) {
          var d = arguments[c];
          for (var m in d) Object.prototype.hasOwnProperty.call(d, m) && (u[m] = d[m]);
        }
        return u;
      };
    }, function(r, a, i) {
      r.exports = { default: i(78), __esModule: !0 };
    }, function(r, a, i) {
      i(79), r.exports = i(1).Object.assign;
    }, function(r, a, i) {
      var o = i(15);
      o(o.S + o.F, "Object", { assign: i(80) });
    }, function(r, a, i) {
      var o = i(4), s = i(13), l = i(32), u = i(19), c = i(18), d = i(40), m = Object.assign;
      r.exports = !m || i(8)(function() {
        var f = {}, h = {}, E = Symbol(), I = "abcdefghijklmnopqrst";
        return f[E] = 7, I.split("").forEach(function(x) {
          h[x] = x;
        }), m({}, f)[E] != 7 || Object.keys(m({}, h)).join("") != I;
      }) ? function(f, h) {
        for (var E = c(f), I = arguments.length, x = 1, v = l.f, S = u.f; I > x; ) for (var g, y = d(arguments[x++]), T = v ? s(y).concat(v(y)) : s(y), j = T.length, $ = 0; j > $; ) g = T[$++], o && !S.call(y, g) || (E[g] = y[g]);
        return E;
      } : m;
    }, function(r, a, i) {
      a.__esModule = !0;
      var o = l(i(82)), s = l(i(85));
      function l(u) {
        return u && u.__esModule ? u : { default: u };
      }
      a.default = function(u, c) {
        if (Array.isArray(u)) return u;
        if ((0, o.default)(Object(u))) return function(d, m) {
          var f = [], h = !0, E = !1, I = void 0;
          try {
            for (var x, v = (0, s.default)(d); !(h = (x = v.next()).done) && (f.push(x.value), !m || f.length !== m); h = !0) ;
          } catch (S) {
            E = !0, I = S;
          } finally {
            try {
              !h && v.return && v.return();
            } finally {
              if (E) throw I;
            }
          }
          return f;
        }(u, c);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      };
    }, function(r, a, i) {
      r.exports = { default: i(83), __esModule: !0 };
    }, function(r, a, i) {
      i(29), i(20), r.exports = i(84);
    }, function(r, a, i) {
      var o = i(42), s = i(2)("iterator"), l = i(12);
      r.exports = i(1).isIterable = function(u) {
        var c = Object(u);
        return c[s] !== void 0 || "@@iterator" in c || l.hasOwnProperty(o(c));
      };
    }, function(r, a, i) {
      r.exports = { default: i(86), __esModule: !0 };
    }, function(r, a, i) {
      i(29), i(20), r.exports = i(87);
    }, function(r, a, i) {
      var o = i(10), s = i(88);
      r.exports = i(1).getIterator = function(l) {
        var u = s(l);
        if (typeof u != "function") throw TypeError(l + " is not iterable!");
        return o(u.call(l));
      };
    }, function(r, a, i) {
      var o = i(42), s = i(2)("iterator"), l = i(12);
      r.exports = i(1).getIteratorMethod = function(u) {
        if (u != null) return u[s] || u["@@iterator"] || l[o(u)];
      };
    }, function(r, a, i) {
      r.exports = { default: i(90), __esModule: !0 };
    }, function(r, a, i) {
      i(91), r.exports = i(1).Object.keys;
    }, function(r, a, i) {
      var o = i(18), s = i(13);
      i(92)("keys", function() {
        return function(l) {
          return s(o(l));
        };
      });
    }, function(r, a, i) {
      var o = i(15), s = i(1), l = i(8);
      r.exports = function(u, c) {
        var d = (s.Object || {})[u] || Object[u], m = {};
        m[u] = c(d), o(o.S + o.F * l(function() {
          d(1);
        }), "Object", m);
      };
    }, function(r, a, i) {
      (function(o) {
        var s = [["ary", 128], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", 16], ["flip", 512], ["partial", 32], ["partialRight", 64], ["rearg", 256]], l = /^\s+|\s+$/g, u = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, c = /\{\n\/\* \[wrapped with (.+)\] \*/, d = /,? & /, m = /^[-+]0x[0-9a-f]+$/i, f = /^0b[01]+$/i, h = /^\[object .+?Constructor\]$/, E = /^0o[0-7]+$/i, I = /^(?:0|[1-9]\d*)$/, x = parseInt, v = typeof o == "object" && o && o.Object === Object && o, S = typeof self == "object" && self && self.Object === Object && self, g = v || S || Function("return this")();
        function y(Z, O, U) {
          switch (U.length) {
            case 0:
              return Z.call(O);
            case 1:
              return Z.call(O, U[0]);
            case 2:
              return Z.call(O, U[0], U[1]);
            case 3:
              return Z.call(O, U[0], U[1], U[2]);
          }
          return Z.apply(O, U);
        }
        function T(Z, O) {
          return !!(Z && Z.length) && function(U, X, ue) {
            if (X != X) return function(Oe, Pe, et, tt) {
              for (var $e = Oe.length, Xe = et + -1; ++Xe < $e; ) if (Pe(Oe[Xe], Xe, Oe)) return Xe;
              return -1;
            }(U, j, ue);
            for (var fe = ue - 1, Ne = U.length; ++fe < Ne; ) if (U[fe] === X) return fe;
            return -1;
          }(Z, O, 0) > -1;
        }
        function j(Z) {
          return Z != Z;
        }
        function $(Z, O) {
          for (var U = Z.length, X = 0; U--; ) Z[U] === O && X++;
          return X;
        }
        function D(Z, O) {
          for (var U = -1, X = Z.length, ue = 0, fe = []; ++U < X; ) {
            var Ne = Z[U];
            Ne !== O && Ne !== "__lodash_placeholder__" || (Z[U] = "__lodash_placeholder__", fe[ue++] = U);
          }
          return fe;
        }
        var w, G, Q, z = Function.prototype, ce = Object.prototype, ae = g["__core-js_shared__"], K = (w = /[^.]+$/.exec(ae && ae.keys && ae.keys.IE_PROTO || "")) ? "Symbol(src)_1." + w : "", he = z.toString, ye = ce.hasOwnProperty, Te = ce.toString, A = RegExp("^" + he.call(ye).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), re = Object.create, se = Math.max, M = Math.min, me = (G = _t(Object, "defineProperty"), (Q = _t.name) && Q.length > 2 ? G : void 0);
        function we(Z) {
          return Ct(Z) ? re(Z) : {};
        }
        function pe(Z) {
          return !(!Ct(Z) || function(O) {
            return !!K && K in O;
          }(Z)) && (function(O) {
            var U = Ct(O) ? Te.call(O) : "";
            return U == "[object Function]" || U == "[object GeneratorFunction]";
          }(Z) || function(O) {
            var U = !1;
            if (O != null && typeof O.toString != "function") try {
              U = !!(O + "");
            } catch {
            }
            return U;
          }(Z) ? A : h).test(function(O) {
            if (O != null) {
              try {
                return he.call(O);
              } catch {
              }
              try {
                return O + "";
              } catch {
              }
            }
            return "";
          }(Z));
        }
        function Ie(Z, O, U, X) {
          for (var ue = -1, fe = Z.length, Ne = U.length, Oe = -1, Pe = O.length, et = se(fe - Ne, 0), tt = Array(Pe + et), $e = !X; ++Oe < Pe; ) tt[Oe] = O[Oe];
          for (; ++ue < Ne; ) ($e || ue < fe) && (tt[U[ue]] = Z[ue]);
          for (; et--; ) tt[Oe++] = Z[ue++];
          return tt;
        }
        function Re(Z, O, U, X) {
          for (var ue = -1, fe = Z.length, Ne = -1, Oe = U.length, Pe = -1, et = O.length, tt = se(fe - Oe, 0), $e = Array(tt + et), Xe = !X; ++ue < tt; ) $e[ue] = Z[ue];
          for (var rt = ue; ++Pe < et; ) $e[rt + Pe] = O[Pe];
          for (; ++Ne < Oe; ) (Xe || ue < fe) && ($e[rt + U[Ne]] = Z[ue++]);
          return $e;
        }
        function be(Z) {
          return function() {
            var O = arguments;
            switch (O.length) {
              case 0:
                return new Z();
              case 1:
                return new Z(O[0]);
              case 2:
                return new Z(O[0], O[1]);
              case 3:
                return new Z(O[0], O[1], O[2]);
              case 4:
                return new Z(O[0], O[1], O[2], O[3]);
              case 5:
                return new Z(O[0], O[1], O[2], O[3], O[4]);
              case 6:
                return new Z(O[0], O[1], O[2], O[3], O[4], O[5]);
              case 7:
                return new Z(O[0], O[1], O[2], O[3], O[4], O[5], O[6]);
            }
            var U = we(Z.prototype), X = Z.apply(U, O);
            return Ct(X) ? X : U;
          };
        }
        function ve(Z, O, U, X, ue, fe, Ne, Oe, Pe, et) {
          var tt = 128 & O, $e = 1 & O, Xe = 2 & O, rt = 24 & O, kt = 512 & O, ht = Xe ? void 0 : be(Z);
          return function ct() {
            for (var bt = arguments.length, ze = Array(bt), At = bt; At--; ) ze[At] = arguments[At];
            if (rt) var Nt = Ke(ct), un = $(ze, Nt);
            if (X && (ze = Ie(ze, X, ue, rt)), fe && (ze = Re(ze, fe, Ne, rt)), bt -= un, rt && bt < et) {
              var cn = D(ze, Nt);
              return He(Z, O, ve, ct.placeholder, U, ze, cn, Oe, Pe, et - bt);
            }
            var qt = $e ? U : this, en = Xe ? qt[Z] : Z;
            return bt = ze.length, Oe ? ze = jt(ze, Oe) : kt && bt > 1 && ze.reverse(), tt && Pe < bt && (ze.length = Pe), this && this !== g && this instanceof ct && (en = ht || be(en)), en.apply(qt, ze);
          };
        }
        function He(Z, O, U, X, ue, fe, Ne, Oe, Pe, et) {
          var tt = 8 & O;
          O |= tt ? 32 : 64, 4 & (O &= ~(tt ? 64 : 32)) || (O &= -4);
          var $e = U(Z, O, ue, tt ? fe : void 0, tt ? Ne : void 0, tt ? void 0 : fe, tt ? void 0 : Ne, Oe, Pe, et);
          return $e.placeholder = X, Tt($e, Z, O);
        }
        function Se(Z, O, U, X, ue, fe, Ne, Oe) {
          var Pe = 2 & O;
          if (!Pe && typeof Z != "function") throw new TypeError("Expected a function");
          var et = X ? X.length : 0;
          if (et || (O &= -97, X = ue = void 0), Ne = Ne === void 0 ? Ne : se(xe(Ne), 0), Oe = Oe === void 0 ? Oe : xe(Oe), et -= ue ? ue.length : 0, 64 & O) {
            var tt = X, $e = ue;
            X = ue = void 0;
          }
          var Xe = [Z, O, U, X, ue, tt, $e, fe, Ne, Oe];
          if (Z = Xe[0], O = Xe[1], U = Xe[2], X = Xe[3], ue = Xe[4], !(Oe = Xe[9] = Xe[9] == null ? Pe ? 0 : Z.length : se(Xe[9] - et, 0)) && 24 & O && (O &= -25), O && O != 1) rt = O == 8 || O == 16 ? function(kt, ht, ct) {
            var bt = be(kt);
            return function ze() {
              for (var At = arguments.length, Nt = Array(At), un = At, cn = Ke(ze); un--; ) Nt[un] = arguments[un];
              var qt = At < 3 && Nt[0] !== cn && Nt[At - 1] !== cn ? [] : D(Nt, cn);
              if ((At -= qt.length) < ct) return He(kt, ht, ve, ze.placeholder, void 0, Nt, qt, void 0, void 0, ct - At);
              var en = this && this !== g && this instanceof ze ? bt : kt;
              return y(en, this, Nt);
            };
          }(Z, O, Oe) : O != 32 && O != 33 || ue.length ? ve.apply(void 0, Xe) : function(kt, ht, ct, bt) {
            var ze = 1 & ht, At = be(kt);
            return function Nt() {
              for (var un = -1, cn = arguments.length, qt = -1, en = bt.length, Ln = Array(en + cn), Yn = this && this !== g && this instanceof Nt ? At : kt; ++qt < en; ) Ln[qt] = bt[qt];
              for (; cn--; ) Ln[qt++] = arguments[++un];
              return y(Yn, ze ? ct : this, Ln);
            };
          }(Z, O, U, X);
          else var rt = function(kt, ht, ct) {
            var bt = 1 & ht, ze = be(kt);
            return function At() {
              var Nt = this && this !== g && this instanceof At ? ze : kt;
              return Nt.apply(bt ? ct : this, arguments);
            };
          }(Z, O, U);
          return Tt(rt, Z, O);
        }
        function Ke(Z) {
          return Z.placeholder;
        }
        function _t(Z, O) {
          var U = function(X, ue) {
            return X == null ? void 0 : X[ue];
          }(Z, O);
          return pe(U) ? U : void 0;
        }
        function mt(Z) {
          var O = Z.match(c);
          return O ? O[1].split(d) : [];
        }
        function vt(Z, O) {
          var U = O.length, X = U - 1;
          return O[X] = (U > 1 ? "& " : "") + O[X], O = O.join(U > 2 ? ", " : " "), Z.replace(u, `{
/* [wrapped with ` + O + `] */
`);
        }
        function wt(Z, O) {
          return !!(O = O ?? 9007199254740991) && (typeof Z == "number" || I.test(Z)) && Z > -1 && Z % 1 == 0 && Z < O;
        }
        function jt(Z, O) {
          for (var U = Z.length, X = M(O.length, U), ue = function(Ne, Oe) {
            var Pe = -1, et = Ne.length;
            for (Oe || (Oe = Array(et)); ++Pe < et; ) Oe[Pe] = Ne[Pe];
            return Oe;
          }(Z); X--; ) {
            var fe = O[X];
            Z[X] = wt(fe, U) ? ue[fe] : void 0;
          }
          return Z;
        }
        var Tt = me ? function(Z, O, U) {
          var X, ue = O + "";
          return me(Z, "toString", { configurable: !0, enumerable: !1, value: (X = vt(ue, Ht(mt(ue), U)), function() {
            return X;
          }) });
        } : function(Z) {
          return Z;
        };
        function Ht(Z, O) {
          return function(U, X) {
            for (var ue = -1, fe = U ? U.length : 0; ++ue < fe && X(U[ue], ue, U) !== !1; ) ;
          }(s, function(U) {
            var X = "_." + U[0];
            O & U[1] && !T(Z, X) && Z.push(X);
          }), Z.sort();
        }
        function Yt(Z, O, U) {
          var X = Se(Z, 8, void 0, void 0, void 0, void 0, void 0, O = U ? void 0 : O);
          return X.placeholder = Yt.placeholder, X;
        }
        function Ct(Z) {
          var O = typeof Z;
          return !!Z && (O == "object" || O == "function");
        }
        function gt(Z) {
          return Z ? (Z = function(O) {
            if (typeof O == "number") return O;
            if (function(ue) {
              return typeof ue == "symbol" || /* @__PURE__ */ function(fe) {
                return !!fe && typeof fe == "object";
              }(ue) && Te.call(ue) == "[object Symbol]";
            }(O)) return NaN;
            if (Ct(O)) {
              var U = typeof O.valueOf == "function" ? O.valueOf() : O;
              O = Ct(U) ? U + "" : U;
            }
            if (typeof O != "string") return O === 0 ? O : +O;
            O = O.replace(l, "");
            var X = f.test(O);
            return X || E.test(O) ? x(O.slice(2), X ? 2 : 8) : m.test(O) ? NaN : +O;
          }(Z)) === 1 / 0 || Z === -1 / 0 ? 17976931348623157e292 * (Z < 0 ? -1 : 1) : Z == Z ? Z : 0 : Z === 0 ? Z : 0;
        }
        function xe(Z) {
          var O = gt(Z), U = O % 1;
          return O == O ? U ? O - U : O : 0;
        }
        Yt.placeholder = {}, r.exports = Yt;
      }).call(this, i(43));
    }, function(r, a, i) {
      function o(Re) {
        return Re && Re.__esModule ? Re.default : Re;
      }
      a.__esModule = !0;
      var s = i(95);
      a.threezerotwofour = o(s);
      var l = i(96);
      a.apathy = o(l);
      var u = i(97);
      a.ashes = o(u);
      var c = i(98);
      a.atelierDune = o(c);
      var d = i(99);
      a.atelierForest = o(d);
      var m = i(100);
      a.atelierHeath = o(m);
      var f = i(101);
      a.atelierLakeside = o(f);
      var h = i(102);
      a.atelierSeaside = o(h);
      var E = i(103);
      a.bespin = o(E);
      var I = i(104);
      a.brewer = o(I);
      var x = i(105);
      a.bright = o(x);
      var v = i(106);
      a.chalk = o(v);
      var S = i(107);
      a.codeschool = o(S);
      var g = i(108);
      a.colors = o(g);
      var y = i(109);
      a.default = o(y);
      var T = i(110);
      a.eighties = o(T);
      var j = i(111);
      a.embers = o(j);
      var $ = i(112);
      a.flat = o($);
      var D = i(113);
      a.google = o(D);
      var w = i(114);
      a.grayscale = o(w);
      var G = i(115);
      a.greenscreen = o(G);
      var Q = i(116);
      a.harmonic = o(Q);
      var z = i(117);
      a.hopscotch = o(z);
      var ce = i(118);
      a.isotope = o(ce);
      var ae = i(119);
      a.marrakesh = o(ae);
      var K = i(120);
      a.mocha = o(K);
      var he = i(121);
      a.monokai = o(he);
      var ye = i(122);
      a.ocean = o(ye);
      var Te = i(123);
      a.paraiso = o(Te);
      var A = i(124);
      a.pop = o(A);
      var re = i(125);
      a.railscasts = o(re);
      var se = i(126);
      a.shapeshifter = o(se);
      var M = i(127);
      a.solarized = o(M);
      var me = i(128);
      a.summerfruit = o(me);
      var we = i(129);
      a.tomorrow = o(we);
      var pe = i(130);
      a.tube = o(pe);
      var Ie = i(131);
      a.twilight = o(Ie);
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "threezerotwofour", author: "jan t. sott (http://github.com/idleberg)", base00: "#090300", base01: "#3a3432", base02: "#4a4543", base03: "#5c5855", base04: "#807d7c", base05: "#a5a2a2", base06: "#d6d5d4", base07: "#f7f7f7", base08: "#db2d20", base09: "#e8bbd0", base0A: "#fded02", base0B: "#01a252", base0C: "#b5e4f4", base0D: "#01a0e4", base0E: "#a16a94", base0F: "#cdab53" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "apathy", author: "jannik siebert (https://github.com/janniks)", base00: "#031A16", base01: "#0B342D", base02: "#184E45", base03: "#2B685E", base04: "#5F9C92", base05: "#81B5AC", base06: "#A7CEC8", base07: "#D2E7E4", base08: "#3E9688", base09: "#3E7996", base0A: "#3E4C96", base0B: "#883E96", base0C: "#963E4C", base0D: "#96883E", base0E: "#4C963E", base0F: "#3E965B" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "ashes", author: "jannik siebert (https://github.com/janniks)", base00: "#1C2023", base01: "#393F45", base02: "#565E65", base03: "#747C84", base04: "#ADB3BA", base05: "#C7CCD1", base06: "#DFE2E5", base07: "#F3F4F5", base08: "#C7AE95", base09: "#C7C795", base0A: "#AEC795", base0B: "#95C7AE", base0C: "#95AEC7", base0D: "#AE95C7", base0E: "#C795AE", base0F: "#C79595" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "atelier dune", author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)", base00: "#20201d", base01: "#292824", base02: "#6e6b5e", base03: "#7d7a68", base04: "#999580", base05: "#a6a28c", base06: "#e8e4cf", base07: "#fefbec", base08: "#d73737", base09: "#b65611", base0A: "#cfb017", base0B: "#60ac39", base0C: "#1fad83", base0D: "#6684e1", base0E: "#b854d4", base0F: "#d43552" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "atelier forest", author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)", base00: "#1b1918", base01: "#2c2421", base02: "#68615e", base03: "#766e6b", base04: "#9c9491", base05: "#a8a19f", base06: "#e6e2e0", base07: "#f1efee", base08: "#f22c40", base09: "#df5320", base0A: "#d5911a", base0B: "#5ab738", base0C: "#00ad9c", base0D: "#407ee7", base0E: "#6666ea", base0F: "#c33ff3" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "atelier heath", author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)", base00: "#1b181b", base01: "#292329", base02: "#695d69", base03: "#776977", base04: "#9e8f9e", base05: "#ab9bab", base06: "#d8cad8", base07: "#f7f3f7", base08: "#ca402b", base09: "#a65926", base0A: "#bb8a35", base0B: "#379a37", base0C: "#159393", base0D: "#516aec", base0E: "#7b59c0", base0F: "#cc33cc" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "atelier lakeside", author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)", base00: "#161b1d", base01: "#1f292e", base02: "#516d7b", base03: "#5a7b8c", base04: "#7195a8", base05: "#7ea2b4", base06: "#c1e4f6", base07: "#ebf8ff", base08: "#d22d72", base09: "#935c25", base0A: "#8a8a0f", base0B: "#568c3b", base0C: "#2d8f6f", base0D: "#257fad", base0E: "#5d5db1", base0F: "#b72dd2" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "atelier seaside", author: "bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)", base00: "#131513", base01: "#242924", base02: "#5e6e5e", base03: "#687d68", base04: "#809980", base05: "#8ca68c", base06: "#cfe8cf", base07: "#f0fff0", base08: "#e6193c", base09: "#87711d", base0A: "#c3c322", base0B: "#29a329", base0C: "#1999b3", base0D: "#3d62f5", base0E: "#ad2bee", base0F: "#e619c3" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "bespin", author: "jan t. sott", base00: "#28211c", base01: "#36312e", base02: "#5e5d5c", base03: "#666666", base04: "#797977", base05: "#8a8986", base06: "#9d9b97", base07: "#baae9e", base08: "#cf6a4c", base09: "#cf7d34", base0A: "#f9ee98", base0B: "#54be0d", base0C: "#afc4db", base0D: "#5ea6ea", base0E: "#9b859d", base0F: "#937121" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "brewer", author: "timothée poisot (http://github.com/tpoisot)", base00: "#0c0d0e", base01: "#2e2f30", base02: "#515253", base03: "#737475", base04: "#959697", base05: "#b7b8b9", base06: "#dadbdc", base07: "#fcfdfe", base08: "#e31a1c", base09: "#e6550d", base0A: "#dca060", base0B: "#31a354", base0C: "#80b1d3", base0D: "#3182bd", base0E: "#756bb1", base0F: "#b15928" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "bright", author: "chris kempson (http://chriskempson.com)", base00: "#000000", base01: "#303030", base02: "#505050", base03: "#b0b0b0", base04: "#d0d0d0", base05: "#e0e0e0", base06: "#f5f5f5", base07: "#ffffff", base08: "#fb0120", base09: "#fc6d24", base0A: "#fda331", base0B: "#a1c659", base0C: "#76c7b7", base0D: "#6fb3d2", base0E: "#d381c3", base0F: "#be643c" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "chalk", author: "chris kempson (http://chriskempson.com)", base00: "#151515", base01: "#202020", base02: "#303030", base03: "#505050", base04: "#b0b0b0", base05: "#d0d0d0", base06: "#e0e0e0", base07: "#f5f5f5", base08: "#fb9fb1", base09: "#eda987", base0A: "#ddb26f", base0B: "#acc267", base0C: "#12cfc0", base0D: "#6fc2ef", base0E: "#e1a3ee", base0F: "#deaf8f" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "codeschool", author: "brettof86", base00: "#232c31", base01: "#1c3657", base02: "#2a343a", base03: "#3f4944", base04: "#84898c", base05: "#9ea7a6", base06: "#a7cfa3", base07: "#b5d8f6", base08: "#2a5491", base09: "#43820d", base0A: "#a03b1e", base0B: "#237986", base0C: "#b02f30", base0D: "#484d79", base0E: "#c59820", base0F: "#c98344" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "colors", author: "mrmrs (http://clrs.cc)", base00: "#111111", base01: "#333333", base02: "#555555", base03: "#777777", base04: "#999999", base05: "#bbbbbb", base06: "#dddddd", base07: "#ffffff", base08: "#ff4136", base09: "#ff851b", base0A: "#ffdc00", base0B: "#2ecc40", base0C: "#7fdbff", base0D: "#0074d9", base0E: "#b10dc9", base0F: "#85144b" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "default", author: "chris kempson (http://chriskempson.com)", base00: "#181818", base01: "#282828", base02: "#383838", base03: "#585858", base04: "#b8b8b8", base05: "#d8d8d8", base06: "#e8e8e8", base07: "#f8f8f8", base08: "#ab4642", base09: "#dc9656", base0A: "#f7ca88", base0B: "#a1b56c", base0C: "#86c1b9", base0D: "#7cafc2", base0E: "#ba8baf", base0F: "#a16946" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "eighties", author: "chris kempson (http://chriskempson.com)", base00: "#2d2d2d", base01: "#393939", base02: "#515151", base03: "#747369", base04: "#a09f93", base05: "#d3d0c8", base06: "#e8e6df", base07: "#f2f0ec", base08: "#f2777a", base09: "#f99157", base0A: "#ffcc66", base0B: "#99cc99", base0C: "#66cccc", base0D: "#6699cc", base0E: "#cc99cc", base0F: "#d27b53" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "embers", author: "jannik siebert (https://github.com/janniks)", base00: "#16130F", base01: "#2C2620", base02: "#433B32", base03: "#5A5047", base04: "#8A8075", base05: "#A39A90", base06: "#BEB6AE", base07: "#DBD6D1", base08: "#826D57", base09: "#828257", base0A: "#6D8257", base0B: "#57826D", base0C: "#576D82", base0D: "#6D5782", base0E: "#82576D", base0F: "#825757" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "flat", author: "chris kempson (http://chriskempson.com)", base00: "#2C3E50", base01: "#34495E", base02: "#7F8C8D", base03: "#95A5A6", base04: "#BDC3C7", base05: "#e0e0e0", base06: "#f5f5f5", base07: "#ECF0F1", base08: "#E74C3C", base09: "#E67E22", base0A: "#F1C40F", base0B: "#2ECC71", base0C: "#1ABC9C", base0D: "#3498DB", base0E: "#9B59B6", base0F: "#be643c" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "google", author: "seth wright (http://sethawright.com)", base00: "#1d1f21", base01: "#282a2e", base02: "#373b41", base03: "#969896", base04: "#b4b7b4", base05: "#c5c8c6", base06: "#e0e0e0", base07: "#ffffff", base08: "#CC342B", base09: "#F96A38", base0A: "#FBA922", base0B: "#198844", base0C: "#3971ED", base0D: "#3971ED", base0E: "#A36AC7", base0F: "#3971ED" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "grayscale", author: "alexandre gavioli (https://github.com/alexx2/)", base00: "#101010", base01: "#252525", base02: "#464646", base03: "#525252", base04: "#ababab", base05: "#b9b9b9", base06: "#e3e3e3", base07: "#f7f7f7", base08: "#7c7c7c", base09: "#999999", base0A: "#a0a0a0", base0B: "#8e8e8e", base0C: "#868686", base0D: "#686868", base0E: "#747474", base0F: "#5e5e5e" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "green screen", author: "chris kempson (http://chriskempson.com)", base00: "#001100", base01: "#003300", base02: "#005500", base03: "#007700", base04: "#009900", base05: "#00bb00", base06: "#00dd00", base07: "#00ff00", base08: "#007700", base09: "#009900", base0A: "#007700", base0B: "#00bb00", base0C: "#005500", base0D: "#009900", base0E: "#00bb00", base0F: "#005500" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "harmonic16", author: "jannik siebert (https://github.com/janniks)", base00: "#0b1c2c", base01: "#223b54", base02: "#405c79", base03: "#627e99", base04: "#aabcce", base05: "#cbd6e2", base06: "#e5ebf1", base07: "#f7f9fb", base08: "#bf8b56", base09: "#bfbf56", base0A: "#8bbf56", base0B: "#56bf8b", base0C: "#568bbf", base0D: "#8b56bf", base0E: "#bf568b", base0F: "#bf5656" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "hopscotch", author: "jan t. sott", base00: "#322931", base01: "#433b42", base02: "#5c545b", base03: "#797379", base04: "#989498", base05: "#b9b5b8", base06: "#d5d3d5", base07: "#ffffff", base08: "#dd464c", base09: "#fd8b19", base0A: "#fdcc59", base0B: "#8fc13e", base0C: "#149b93", base0D: "#1290bf", base0E: "#c85e7c", base0F: "#b33508" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "isotope", author: "jan t. sott", base00: "#000000", base01: "#404040", base02: "#606060", base03: "#808080", base04: "#c0c0c0", base05: "#d0d0d0", base06: "#e0e0e0", base07: "#ffffff", base08: "#ff0000", base09: "#ff9900", base0A: "#ff0099", base0B: "#33ff00", base0C: "#00ffff", base0D: "#0066ff", base0E: "#cc00ff", base0F: "#3300ff" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "marrakesh", author: "alexandre gavioli (http://github.com/alexx2/)", base00: "#201602", base01: "#302e00", base02: "#5f5b17", base03: "#6c6823", base04: "#86813b", base05: "#948e48", base06: "#ccc37a", base07: "#faf0a5", base08: "#c35359", base09: "#b36144", base0A: "#a88339", base0B: "#18974e", base0C: "#75a738", base0D: "#477ca1", base0E: "#8868b3", base0F: "#b3588e" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "mocha", author: "chris kempson (http://chriskempson.com)", base00: "#3B3228", base01: "#534636", base02: "#645240", base03: "#7e705a", base04: "#b8afad", base05: "#d0c8c6", base06: "#e9e1dd", base07: "#f5eeeb", base08: "#cb6077", base09: "#d28b71", base0A: "#f4bc87", base0B: "#beb55b", base0C: "#7bbda4", base0D: "#8ab3b5", base0E: "#a89bb9", base0F: "#bb9584" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "monokai", author: "wimer hazenberg (http://www.monokai.nl)", base00: "#272822", base01: "#383830", base02: "#49483e", base03: "#75715e", base04: "#a59f85", base05: "#f8f8f2", base06: "#f5f4f1", base07: "#f9f8f5", base08: "#f92672", base09: "#fd971f", base0A: "#f4bf75", base0B: "#a6e22e", base0C: "#a1efe4", base0D: "#66d9ef", base0E: "#ae81ff", base0F: "#cc6633" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "ocean", author: "chris kempson (http://chriskempson.com)", base00: "#2b303b", base01: "#343d46", base02: "#4f5b66", base03: "#65737e", base04: "#a7adba", base05: "#c0c5ce", base06: "#dfe1e8", base07: "#eff1f5", base08: "#bf616a", base09: "#d08770", base0A: "#ebcb8b", base0B: "#a3be8c", base0C: "#96b5b4", base0D: "#8fa1b3", base0E: "#b48ead", base0F: "#ab7967" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "paraiso", author: "jan t. sott", base00: "#2f1e2e", base01: "#41323f", base02: "#4f424c", base03: "#776e71", base04: "#8d8687", base05: "#a39e9b", base06: "#b9b6b0", base07: "#e7e9db", base08: "#ef6155", base09: "#f99b15", base0A: "#fec418", base0B: "#48b685", base0C: "#5bc4bf", base0D: "#06b6ef", base0E: "#815ba4", base0F: "#e96ba8" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "pop", author: "chris kempson (http://chriskempson.com)", base00: "#000000", base01: "#202020", base02: "#303030", base03: "#505050", base04: "#b0b0b0", base05: "#d0d0d0", base06: "#e0e0e0", base07: "#ffffff", base08: "#eb008a", base09: "#f29333", base0A: "#f8ca12", base0B: "#37b349", base0C: "#00aabb", base0D: "#0e5a94", base0E: "#b31e8d", base0F: "#7a2d00" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "railscasts", author: "ryan bates (http://railscasts.com)", base00: "#2b2b2b", base01: "#272935", base02: "#3a4055", base03: "#5a647e", base04: "#d4cfc9", base05: "#e6e1dc", base06: "#f4f1ed", base07: "#f9f7f3", base08: "#da4939", base09: "#cc7833", base0A: "#ffc66d", base0B: "#a5c261", base0C: "#519f50", base0D: "#6d9cbe", base0E: "#b6b3eb", base0F: "#bc9458" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "shapeshifter", author: "tyler benziger (http://tybenz.com)", base00: "#000000", base01: "#040404", base02: "#102015", base03: "#343434", base04: "#555555", base05: "#ababab", base06: "#e0e0e0", base07: "#f9f9f9", base08: "#e92f2f", base09: "#e09448", base0A: "#dddd13", base0B: "#0ed839", base0C: "#23edda", base0D: "#3b48e3", base0E: "#f996e2", base0F: "#69542d" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "solarized", author: "ethan schoonover (http://ethanschoonover.com/solarized)", base00: "#002b36", base01: "#073642", base02: "#586e75", base03: "#657b83", base04: "#839496", base05: "#93a1a1", base06: "#eee8d5", base07: "#fdf6e3", base08: "#dc322f", base09: "#cb4b16", base0A: "#b58900", base0B: "#859900", base0C: "#2aa198", base0D: "#268bd2", base0E: "#6c71c4", base0F: "#d33682" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "summerfruit", author: "christopher corley (http://cscorley.github.io/)", base00: "#151515", base01: "#202020", base02: "#303030", base03: "#505050", base04: "#B0B0B0", base05: "#D0D0D0", base06: "#E0E0E0", base07: "#FFFFFF", base08: "#FF0086", base09: "#FD8900", base0A: "#ABA800", base0B: "#00C918", base0C: "#1faaaa", base0D: "#3777E6", base0E: "#AD00A1", base0F: "#cc6633" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "tomorrow", author: "chris kempson (http://chriskempson.com)", base00: "#1d1f21", base01: "#282a2e", base02: "#373b41", base03: "#969896", base04: "#b4b7b4", base05: "#c5c8c6", base06: "#e0e0e0", base07: "#ffffff", base08: "#cc6666", base09: "#de935f", base0A: "#f0c674", base0B: "#b5bd68", base0C: "#8abeb7", base0D: "#81a2be", base0E: "#b294bb", base0F: "#a3685a" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "london tube", author: "jan t. sott", base00: "#231f20", base01: "#1c3f95", base02: "#5a5758", base03: "#737171", base04: "#959ca1", base05: "#d9d8d8", base06: "#e7e7e8", base07: "#ffffff", base08: "#ee2e24", base09: "#f386a1", base0A: "#ffd204", base0B: "#00853e", base0C: "#85cebc", base0D: "#009ddc", base0E: "#98005d", base0F: "#b06110" }, r.exports = a.default;
    }, function(r, a, i) {
      a.__esModule = !0, a.default = { scheme: "twilight", author: "david hart (http://hart-dev.com)", base00: "#1e1e1e", base01: "#323537", base02: "#464b50", base03: "#5f5a60", base04: "#838184", base05: "#a7a7a7", base06: "#c3c3c3", base07: "#ffffff", base08: "#cf6a4c", base09: "#cda869", base0A: "#f9ee98", base0B: "#8f9d6a", base0C: "#afc4db", base0D: "#7587a6", base0E: "#9b859d", base0F: "#9b703f" }, r.exports = a.default;
    }, function(r, a, i) {
      var o = i(33);
      function s(l) {
        var u = Math.round(o(l, 0, 255)).toString(16);
        return u.length == 1 ? "0" + u : u;
      }
      r.exports = function(l) {
        var u = l.length === 4 ? s(255 * l[3]) : "";
        return "#" + s(l[0]) + s(l[1]) + s(l[2]) + u;
      };
    }, function(r, a, i) {
      var o = i(134), s = i(135), l = i(136), u = i(137), c = { "#": s, hsl: function(m) {
        var f = o(m), h = u(f);
        return f.length === 4 && h.push(f[3]), h;
      }, rgb: l };
      function d(m) {
        for (var f in c) if (m.indexOf(f) === 0) return c[f](m);
      }
      d.rgb = l, d.hsl = o, d.hex = s, r.exports = d;
    }, function(r, a, i) {
      var o = i(44), s = i(33);
      function l(u, c) {
        switch (u = parseFloat(u), c) {
          case 0:
            return s(u, 0, 360);
          case 1:
          case 2:
            return s(u, 0, 100);
          case 3:
            return s(u, 0, 1);
        }
      }
      r.exports = function(u) {
        return o(u).map(l);
      };
    }, function(r, a) {
      r.exports = function(i) {
        i.length !== 4 && i.length !== 5 || (i = function(l) {
          for (var u = "#", c = 1; c < l.length; c++) {
            var d = l.charAt(c);
            u += d + d;
          }
          return u;
        }(i));
        var o = [parseInt(i.substring(1, 3), 16), parseInt(i.substring(3, 5), 16), parseInt(i.substring(5, 7), 16)];
        if (i.length === 9) {
          var s = parseFloat((parseInt(i.substring(7, 9), 16) / 255).toFixed(2));
          o.push(s);
        }
        return o;
      };
    }, function(r, a, i) {
      var o = i(44), s = i(33);
      function l(u, c) {
        return c < 3 ? u.indexOf("%") != -1 ? Math.round(255 * s(parseInt(u, 10), 0, 100) / 100) : s(parseInt(u, 10), 0, 255) : s(parseFloat(u), 0, 1);
      }
      r.exports = function(u) {
        return o(u).map(l);
      };
    }, function(r, a) {
      r.exports = function(i) {
        var o, s, l, u, c, d = i[0] / 360, m = i[1] / 100, f = i[2] / 100;
        if (m == 0) return [c = 255 * f, c, c];
        o = 2 * f - (s = f < 0.5 ? f * (1 + m) : f + m - f * m), u = [0, 0, 0];
        for (var h = 0; h < 3; h++) (l = d + 1 / 3 * -(h - 1)) < 0 && l++, l > 1 && l--, c = 6 * l < 1 ? o + 6 * (s - o) * l : 2 * l < 1 ? s : 3 * l < 2 ? o + (s - o) * (2 / 3 - l) * 6 : o, u[h] = 255 * c;
        return u;
      };
    }, function(r, a, i) {
      (function(o) {
        var s = typeof o == "object" && o && o.Object === Object && o, l = typeof self == "object" && self && self.Object === Object && self, u = s || l || Function("return this")();
        function c(D, w, G) {
          switch (G.length) {
            case 0:
              return D.call(w);
            case 1:
              return D.call(w, G[0]);
            case 2:
              return D.call(w, G[0], G[1]);
            case 3:
              return D.call(w, G[0], G[1], G[2]);
          }
          return D.apply(w, G);
        }
        function d(D, w) {
          for (var G = -1, Q = w.length, z = D.length; ++G < Q; ) D[z + G] = w[G];
          return D;
        }
        var m = Object.prototype, f = m.hasOwnProperty, h = m.toString, E = u.Symbol, I = m.propertyIsEnumerable, x = E ? E.isConcatSpreadable : void 0, v = Math.max;
        function S(D) {
          return g(D) || function(w) {
            return function(G) {
              return /* @__PURE__ */ function(Q) {
                return !!Q && typeof Q == "object";
              }(G) && function(Q) {
                return Q != null && function(z) {
                  return typeof z == "number" && z > -1 && z % 1 == 0 && z <= 9007199254740991;
                }(Q.length) && !function(z) {
                  var ce = function(ae) {
                    var K = typeof ae;
                    return !!ae && (K == "object" || K == "function");
                  }(z) ? h.call(z) : "";
                  return ce == "[object Function]" || ce == "[object GeneratorFunction]";
                }(Q);
              }(G);
            }(w) && f.call(w, "callee") && (!I.call(w, "callee") || h.call(w) == "[object Arguments]");
          }(D) || !!(x && D && D[x]);
        }
        var g = Array.isArray, y, T, j, $ = (T = function(D) {
          var w = (D = function(z, ce, ae, K, he) {
            var ye = -1, Te = z.length;
            for (ae || (ae = S), he || (he = []); ++ye < Te; ) {
              var A = z[ye];
              ae(A) ? d(he, A) : he[he.length] = A;
            }
            return he;
          }(D)).length, G = w;
          for (y; G--; ) if (typeof D[G] != "function") throw new TypeError("Expected a function");
          return function() {
            for (var Q = 0, z = w ? D[Q].apply(this, arguments) : arguments[0]; ++Q < w; ) z = D[Q].call(this, z);
            return z;
          };
        }, j = v(j === void 0 ? T.length - 1 : j, 0), function() {
          for (var D = arguments, w = -1, G = v(D.length - j, 0), Q = Array(G); ++w < G; ) Q[w] = D[j + w];
          w = -1;
          for (var z = Array(j + 1); ++w < j; ) z[w] = D[w];
          return z[j] = Q, c(T, this, z);
        });
        r.exports = $;
      }).call(this, i(43));
    }, function(r, a, i) {
      Object.defineProperty(a, "__esModule", { value: !0 }), a.yuv2rgb = function(o) {
        var s, l, u, c = o[0], d = o[1], m = o[2];
        return s = 1 * c + 0 * d + 1.13983 * m, l = 1 * c + -0.39465 * d + -0.5806 * m, u = 1 * c + 2.02311 * d + 0 * m, s = Math.min(Math.max(0, s), 1), l = Math.min(Math.max(0, l), 1), u = Math.min(Math.max(0, u), 1), [255 * s, 255 * l, 255 * u];
      }, a.rgb2yuv = function(o) {
        var s = o[0] / 255, l = o[1] / 255, u = o[2] / 255;
        return [0.299 * s + 0.587 * l + 0.114 * u, -0.14713 * s + -0.28886 * l + 0.436 * u, 0.615 * s + -0.51499 * l + -0.10001 * u];
      };
    }, function(r, a, i) {
      function o(u, c, d) {
        return c in u ? Object.defineProperty(u, c, { value: d, enumerable: !0, configurable: !0, writable: !0 }) : u[c] = d, u;
      }
      var s = i(141), l = function() {
        function u() {
          o(this, "_callbacks", void 0), o(this, "_isDispatching", void 0), o(this, "_isHandled", void 0), o(this, "_isPending", void 0), o(this, "_lastID", void 0), o(this, "_pendingPayload", void 0), this._callbacks = {}, this._isDispatching = !1, this._isHandled = {}, this._isPending = {}, this._lastID = 1;
        }
        var c = u.prototype;
        return c.register = function(d) {
          var m = "ID_" + this._lastID++;
          return this._callbacks[m] = d, m;
        }, c.unregister = function(d) {
          this._callbacks[d] || s(!1), delete this._callbacks[d];
        }, c.waitFor = function(d) {
          this._isDispatching || s(!1);
          for (var m = 0; m < d.length; m++) {
            var f = d[m];
            this._isPending[f] ? this._isHandled[f] || s(!1) : (this._callbacks[f] || s(!1), this._invokeCallback(f));
          }
        }, c.dispatch = function(d) {
          this._isDispatching && s(!1), this._startDispatching(d);
          try {
            for (var m in this._callbacks) this._isPending[m] || this._invokeCallback(m);
          } finally {
            this._stopDispatching();
          }
        }, c.isDispatching = function() {
          return this._isDispatching;
        }, c._invokeCallback = function(d) {
          this._isPending[d] = !0, this._callbacks[d](this._pendingPayload), this._isHandled[d] = !0;
        }, c._startDispatching = function(d) {
          for (var m in this._callbacks) this._isPending[m] = !1, this._isHandled[m] = !1;
          this._pendingPayload = d, this._isDispatching = !0;
        }, c._stopDispatching = function() {
          delete this._pendingPayload, this._isDispatching = !1;
        }, u;
      }();
      r.exports = l;
    }, function(r, a, i) {
      r.exports = function(o, s) {
        for (var l = arguments.length, u = new Array(l > 2 ? l - 2 : 0), c = 2; c < l; c++) u[c - 2] = arguments[c];
        if (!o) {
          var d;
          if (s === void 0) d = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
          else {
            var m = 0;
            (d = new Error(s.replace(/%s/g, function() {
              return String(u[m++]);
            }))).name = "Invariant Violation";
          }
          throw d.framesToPop = 1, d;
        }
      };
    }, function(r, a, i) {
      function o(R, C, _) {
        return C in R ? Object.defineProperty(R, C, { value: _, enumerable: !0, configurable: !0, writable: !0 }) : R[C] = _, R;
      }
      function s(R, C) {
        var _ = Object.keys(R);
        if (Object.getOwnPropertySymbols) {
          var k = Object.getOwnPropertySymbols(R);
          C && (k = k.filter(function(N) {
            return Object.getOwnPropertyDescriptor(R, N).enumerable;
          })), _.push.apply(_, k);
        }
        return _;
      }
      function l(R) {
        for (var C = 1; C < arguments.length; C++) {
          var _ = arguments[C] != null ? arguments[C] : {};
          C % 2 ? s(Object(_), !0).forEach(function(k) {
            o(R, k, _[k]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(_)) : s(Object(_)).forEach(function(k) {
            Object.defineProperty(R, k, Object.getOwnPropertyDescriptor(_, k));
          });
        }
        return R;
      }
      function u(R, C) {
        if (!(R instanceof C)) throw new TypeError("Cannot call a class as a function");
      }
      function c(R, C) {
        for (var _ = 0; _ < C.length; _++) {
          var k = C[_];
          k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(R, k.key, k);
        }
      }
      function d(R, C, _) {
        return C && c(R.prototype, C), _ && c(R, _), R;
      }
      function m(R, C) {
        return (m = Object.setPrototypeOf || function(_, k) {
          return _.__proto__ = k, _;
        })(R, C);
      }
      function f(R, C) {
        if (typeof C != "function" && C !== null) throw new TypeError("Super expression must either be null or a function");
        R.prototype = Object.create(C && C.prototype, { constructor: { value: R, writable: !0, configurable: !0 } }), C && m(R, C);
      }
      function h(R) {
        return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(C) {
          return C.__proto__ || Object.getPrototypeOf(C);
        })(R);
      }
      function E(R) {
        return (E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(C) {
          return typeof C;
        } : function(C) {
          return C && typeof Symbol == "function" && C.constructor === Symbol && C !== Symbol.prototype ? "symbol" : typeof C;
        })(R);
      }
      function I(R) {
        if (R === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return R;
      }
      function x(R, C) {
        return !C || E(C) !== "object" && typeof C != "function" ? I(R) : C;
      }
      function v(R) {
        var C = function() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
            })), !0;
          } catch {
            return !1;
          }
        }();
        return function() {
          var _, k = h(R);
          if (C) {
            var N = h(this).constructor;
            _ = Reflect.construct(k, arguments, N);
          } else _ = k.apply(this, arguments);
          return x(this, _);
        };
      }
      i.r(a);
      var S = i(0), g = i.n(S);
      function y() {
        var R = this.constructor.getDerivedStateFromProps(this.props, this.state);
        R != null && this.setState(R);
      }
      function T(R) {
        this.setState((function(C) {
          var _ = this.constructor.getDerivedStateFromProps(R, C);
          return _ ?? null;
        }).bind(this));
      }
      function j(R, C) {
        try {
          var _ = this.props, k = this.state;
          this.props = R, this.state = C, this.__reactInternalSnapshotFlag = !0, this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(_, k);
        } finally {
          this.props = _, this.state = k;
        }
      }
      function $(R) {
        var C = R.prototype;
        if (!C || !C.isReactComponent) throw new Error("Can only polyfill class components");
        if (typeof R.getDerivedStateFromProps != "function" && typeof C.getSnapshotBeforeUpdate != "function") return R;
        var _ = null, k = null, N = null;
        if (typeof C.componentWillMount == "function" ? _ = "componentWillMount" : typeof C.UNSAFE_componentWillMount == "function" && (_ = "UNSAFE_componentWillMount"), typeof C.componentWillReceiveProps == "function" ? k = "componentWillReceiveProps" : typeof C.UNSAFE_componentWillReceiveProps == "function" && (k = "UNSAFE_componentWillReceiveProps"), typeof C.componentWillUpdate == "function" ? N = "componentWillUpdate" : typeof C.UNSAFE_componentWillUpdate == "function" && (N = "UNSAFE_componentWillUpdate"), _ !== null || k !== null || N !== null) {
          var W = R.displayName || R.name, ee = typeof R.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
          throw Error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

` + W + " uses " + ee + " but also contains the following legacy lifecycles:" + (_ !== null ? `
  ` + _ : "") + (k !== null ? `
  ` + k : "") + (N !== null ? `
  ` + N : "") + `

The above lifecycles should be removed. Learn more about this warning here:
https://fb.me/react-async-component-lifecycle-hooks`);
        }
        if (typeof R.getDerivedStateFromProps == "function" && (C.componentWillMount = y, C.componentWillReceiveProps = T), typeof C.getSnapshotBeforeUpdate == "function") {
          if (typeof C.componentDidUpdate != "function") throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
          C.componentWillUpdate = j;
          var ne = C.componentDidUpdate;
          C.componentDidUpdate = function(V, le, Ce) {
            var Be = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : Ce;
            ne.call(this, V, le, Be);
          };
        }
        return R;
      }
      function D(R, C) {
        if (R == null) return {};
        var _, k, N = function(ee, ne) {
          if (ee == null) return {};
          var V, le, Ce = {}, Be = Object.keys(ee);
          for (le = 0; le < Be.length; le++) V = Be[le], ne.indexOf(V) >= 0 || (Ce[V] = ee[V]);
          return Ce;
        }(R, C);
        if (Object.getOwnPropertySymbols) {
          var W = Object.getOwnPropertySymbols(R);
          for (k = 0; k < W.length; k++) _ = W[k], C.indexOf(_) >= 0 || Object.prototype.propertyIsEnumerable.call(R, _) && (N[_] = R[_]);
        }
        return N;
      }
      function w(R) {
        var C = function(_) {
          return {}.toString.call(_).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
        }(R);
        return C === "number" && (C = isNaN(R) ? "nan" : (0 | R) != R ? "float" : "integer"), C;
      }
      y.__suppressDeprecationWarning = !0, T.__suppressDeprecationWarning = !0, j.__suppressDeprecationWarning = !0;
      var G = { scheme: "rjv-default", author: "mac gainor", base00: "rgba(0, 0, 0, 0)", base01: "rgb(245, 245, 245)", base02: "rgb(235, 235, 235)", base03: "#93a1a1", base04: "rgba(0, 0, 0, 0.3)", base05: "#586e75", base06: "#073642", base07: "#002b36", base08: "#d33682", base09: "#cb4b16", base0A: "#dc322f", base0B: "#859900", base0C: "#6c71c4", base0D: "#586e75", base0E: "#2aa198", base0F: "#268bd2" }, Q = { scheme: "rjv-grey", author: "mac gainor", base00: "rgba(1, 1, 1, 0)", base01: "rgba(1, 1, 1, 0.1)", base02: "rgba(0, 0, 0, 0.2)", base03: "rgba(1, 1, 1, 0.3)", base04: "rgba(0, 0, 0, 0.4)", base05: "rgba(1, 1, 1, 0.5)", base06: "rgba(1, 1, 1, 0.6)", base07: "rgba(1, 1, 1, 0.7)", base08: "rgba(1, 1, 1, 0.8)", base09: "rgba(1, 1, 1, 0.8)", base0A: "rgba(1, 1, 1, 0.8)", base0B: "rgba(1, 1, 1, 0.8)", base0C: "rgba(1, 1, 1, 0.8)", base0D: "rgba(1, 1, 1, 0.8)", base0E: "rgba(1, 1, 1, 0.8)", base0F: "rgba(1, 1, 1, 0.8)" }, z = { white: "#fff", black: "#000", transparent: "rgba(1, 1, 1, 0)", globalFontFamily: "monospace", globalCursor: "default", indentBlockWidth: "5px", braceFontWeight: "bold", braceCursor: "pointer", ellipsisFontSize: "18px", ellipsisLineHeight: "10px", ellipsisCursor: "pointer", keyMargin: "0px 5px", keyLetterSpacing: "0.5px", keyFontStyle: "none", keyBorderRadius: "3px", keyColonWeight: "bold", keyVerticalAlign: "top", keyOpacity: "0.85", keyOpacityHover: "1", keyValPaddingTop: "3px", keyValPaddingBottom: "3px", keyValPaddingRight: "5px", keyValBorderLeft: "1px solid", keyValBorderHover: "2px solid", keyValPaddingHover: "3px 5px 3px 4px", pushedContentMarginLeft: "6px", variableValuePaddingRight: "6px", nullFontSize: "11px", nullFontWeight: "bold", nullPadding: "1px 2px", nullBorderRadius: "3px", nanFontSize: "11px", nanFontWeight: "bold", nanPadding: "1px 2px", nanBorderRadius: "3px", undefinedFontSize: "11px", undefinedFontWeight: "bold", undefinedPadding: "1px 2px", undefinedBorderRadius: "3px", dataTypeFontSize: "11px", dataTypeMarginRight: "4px", datatypeOpacity: "0.8", objectSizeBorderRadius: "3px", objectSizeFontStyle: "italic", objectSizeMargin: "0px 6px 0px 0px", clipboardCursor: "pointer", clipboardCheckMarginLeft: "-12px", metaDataPadding: "0px 0px 0px 10px", arrayGroupMetaPadding: "0px 0px 0px 4px", iconContainerWidth: "17px", tooltipPadding: "4px", editInputMinWidth: "130px", editInputBorderRadius: "2px", editInputPadding: "5px", editInputMarginRight: "4px", editInputFontFamily: "monospace", iconCursor: "pointer", iconFontSize: "15px", iconPaddingRight: "1px", dateValueMarginLeft: "2px", iconMarginRight: "3px", detectedRowPaddingTop: "3px", addKeyCoverBackground: "rgba(255, 255, 255, 0.3)", addKeyCoverPosition: "absolute", addKeyCoverPositionPx: "0px", addKeyModalWidth: "200px", addKeyModalMargin: "auto", addKeyModalPadding: "10px", addKeyModalRadius: "3px" }, ce = i(45), ae = function(R) {
        var C = function(_) {
          return { backgroundColor: _.base00, ellipsisColor: _.base09, braceColor: _.base07, expandedIcon: _.base0D, collapsedIcon: _.base0E, keyColor: _.base07, arrayKeyColor: _.base0C, objectSize: _.base04, copyToClipboard: _.base0F, copyToClipboardCheck: _.base0D, objectBorder: _.base02, dataTypes: { boolean: _.base0E, date: _.base0D, float: _.base0B, function: _.base0D, integer: _.base0F, string: _.base09, nan: _.base08, null: _.base0A, undefined: _.base05, regexp: _.base0A, background: _.base02 }, editVariable: { editIcon: _.base0E, cancelIcon: _.base09, removeIcon: _.base09, addIcon: _.base0E, checkIcon: _.base0E, background: _.base01, color: _.base0A, border: _.base07 }, addKeyModal: { background: _.base05, border: _.base04, color: _.base0A, labelColor: _.base01 }, validationFailure: { background: _.base09, iconColor: _.base01, fontColor: _.base01 } };
        }(R);
        return { "app-container": { fontFamily: z.globalFontFamily, cursor: z.globalCursor, backgroundColor: C.backgroundColor, position: "relative" }, ellipsis: { display: "inline-block", color: C.ellipsisColor, fontSize: z.ellipsisFontSize, lineHeight: z.ellipsisLineHeight, cursor: z.ellipsisCursor }, "brace-row": { display: "inline-block", cursor: "pointer" }, brace: { display: "inline-block", cursor: z.braceCursor, fontWeight: z.braceFontWeight, color: C.braceColor }, "expanded-icon": { color: C.expandedIcon }, "collapsed-icon": { color: C.collapsedIcon }, colon: { display: "inline-block", margin: z.keyMargin, color: C.keyColor, verticalAlign: "top" }, objectKeyVal: function(_, k) {
          return { style: l({ paddingTop: z.keyValPaddingTop, paddingRight: z.keyValPaddingRight, paddingBottom: z.keyValPaddingBottom, borderLeft: z.keyValBorderLeft + " " + C.objectBorder, ":hover": { paddingLeft: k.paddingLeft - 1 + "px", borderLeft: z.keyValBorderHover + " " + C.objectBorder } }, k) };
        }, "object-key-val-no-border": { padding: z.keyValPadding }, "pushed-content": { marginLeft: z.pushedContentMarginLeft }, variableValue: function(_, k) {
          return { style: l({ display: "inline-block", paddingRight: z.variableValuePaddingRight, position: "relative" }, k) };
        }, "object-name": { display: "inline-block", color: C.keyColor, letterSpacing: z.keyLetterSpacing, fontStyle: z.keyFontStyle, verticalAlign: z.keyVerticalAlign, opacity: z.keyOpacity, ":hover": { opacity: z.keyOpacityHover } }, "array-key": { display: "inline-block", color: C.arrayKeyColor, letterSpacing: z.keyLetterSpacing, fontStyle: z.keyFontStyle, verticalAlign: z.keyVerticalAlign, opacity: z.keyOpacity, ":hover": { opacity: z.keyOpacityHover } }, "object-size": { color: C.objectSize, borderRadius: z.objectSizeBorderRadius, fontStyle: z.objectSizeFontStyle, margin: z.objectSizeMargin, cursor: "default" }, "data-type-label": { fontSize: z.dataTypeFontSize, marginRight: z.dataTypeMarginRight, opacity: z.datatypeOpacity }, boolean: { display: "inline-block", color: C.dataTypes.boolean }, date: { display: "inline-block", color: C.dataTypes.date }, "date-value": { marginLeft: z.dateValueMarginLeft }, float: { display: "inline-block", color: C.dataTypes.float }, function: { display: "inline-block", color: C.dataTypes.function, cursor: "pointer", whiteSpace: "pre-line" }, "function-value": { fontStyle: "italic" }, integer: { display: "inline-block", color: C.dataTypes.integer }, string: { display: "inline-block", color: C.dataTypes.string }, nan: { display: "inline-block", color: C.dataTypes.nan, fontSize: z.nanFontSize, fontWeight: z.nanFontWeight, backgroundColor: C.dataTypes.background, padding: z.nanPadding, borderRadius: z.nanBorderRadius }, null: { display: "inline-block", color: C.dataTypes.null, fontSize: z.nullFontSize, fontWeight: z.nullFontWeight, backgroundColor: C.dataTypes.background, padding: z.nullPadding, borderRadius: z.nullBorderRadius }, undefined: { display: "inline-block", color: C.dataTypes.undefined, fontSize: z.undefinedFontSize, padding: z.undefinedPadding, borderRadius: z.undefinedBorderRadius, backgroundColor: C.dataTypes.background }, regexp: { display: "inline-block", color: C.dataTypes.regexp }, "copy-to-clipboard": { cursor: z.clipboardCursor }, "copy-icon": { color: C.copyToClipboard, fontSize: z.iconFontSize, marginRight: z.iconMarginRight, verticalAlign: "top" }, "copy-icon-copied": { color: C.copyToClipboardCheck, marginLeft: z.clipboardCheckMarginLeft }, "array-group-meta-data": { display: "inline-block", padding: z.arrayGroupMetaPadding }, "object-meta-data": { display: "inline-block", padding: z.metaDataPadding }, "icon-container": { display: "inline-block", width: z.iconContainerWidth }, tooltip: { padding: z.tooltipPadding }, removeVarIcon: { verticalAlign: "top", display: "inline-block", color: C.editVariable.removeIcon, cursor: z.iconCursor, fontSize: z.iconFontSize, marginRight: z.iconMarginRight }, addVarIcon: { verticalAlign: "top", display: "inline-block", color: C.editVariable.addIcon, cursor: z.iconCursor, fontSize: z.iconFontSize, marginRight: z.iconMarginRight }, editVarIcon: { verticalAlign: "top", display: "inline-block", color: C.editVariable.editIcon, cursor: z.iconCursor, fontSize: z.iconFontSize, marginRight: z.iconMarginRight }, "edit-icon-container": { display: "inline-block", verticalAlign: "top" }, "check-icon": { display: "inline-block", cursor: z.iconCursor, color: C.editVariable.checkIcon, fontSize: z.iconFontSize, paddingRight: z.iconPaddingRight }, "cancel-icon": { display: "inline-block", cursor: z.iconCursor, color: C.editVariable.cancelIcon, fontSize: z.iconFontSize, paddingRight: z.iconPaddingRight }, "edit-input": { display: "inline-block", minWidth: z.editInputMinWidth, borderRadius: z.editInputBorderRadius, backgroundColor: C.editVariable.background, color: C.editVariable.color, padding: z.editInputPadding, marginRight: z.editInputMarginRight, fontFamily: z.editInputFontFamily }, "detected-row": { paddingTop: z.detectedRowPaddingTop }, "key-modal-request": { position: z.addKeyCoverPosition, top: z.addKeyCoverPositionPx, left: z.addKeyCoverPositionPx, right: z.addKeyCoverPositionPx, bottom: z.addKeyCoverPositionPx, backgroundColor: z.addKeyCoverBackground }, "key-modal": { width: z.addKeyModalWidth, backgroundColor: C.addKeyModal.background, marginLeft: z.addKeyModalMargin, marginRight: z.addKeyModalMargin, padding: z.addKeyModalPadding, borderRadius: z.addKeyModalRadius, marginTop: "15px", position: "relative" }, "key-modal-label": { color: C.addKeyModal.labelColor, marginLeft: "2px", marginBottom: "5px", fontSize: "11px" }, "key-modal-input-container": { overflow: "hidden" }, "key-modal-input": { width: "100%", padding: "3px 6px", fontFamily: "monospace", color: C.addKeyModal.color, border: "none", boxSizing: "border-box", borderRadius: "2px" }, "key-modal-cancel": { backgroundColor: C.editVariable.removeIcon, position: "absolute", top: "0px", right: "0px", borderRadius: "0px 3px 0px 3px", cursor: "pointer" }, "key-modal-cancel-icon": { color: C.addKeyModal.labelColor, fontSize: z.iconFontSize, transform: "rotate(45deg)" }, "key-modal-submit": { color: C.editVariable.addIcon, fontSize: z.iconFontSize, position: "absolute", right: "2px", top: "3px", cursor: "pointer" }, "function-ellipsis": { display: "inline-block", color: C.ellipsisColor, fontSize: z.ellipsisFontSize, lineHeight: z.ellipsisLineHeight, cursor: z.ellipsisCursor }, "validation-failure": { float: "right", padding: "3px 6px", borderRadius: "2px", cursor: "pointer", color: C.validationFailure.fontColor, backgroundColor: C.validationFailure.background }, "validation-failure-label": { marginRight: "6px" }, "validation-failure-clear": { position: "relative", verticalAlign: "top", cursor: "pointer", color: C.validationFailure.iconColor, fontSize: z.iconFontSize, transform: "rotate(45deg)" } };
      };
      function K(R, C, _) {
        return R || console.error("theme has not been set"), function(k) {
          var N = G;
          return k !== !1 && k !== "none" || (N = Q), Object(ce.createStyling)(ae, { defaultBase16: N })(k);
        }(R)(C, _);
      }
      var he = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = (k.rjvId, k.type_name), W = k.displayDataTypes, ee = k.theme;
          return W ? g.a.createElement("span", Object.assign({ className: "data-type-label" }, K(ee, "data-type-label")), N) : null;
        } }]), _;
      }(g.a.PureComponent), ye = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props;
          return g.a.createElement("div", K(k.theme, "boolean"), g.a.createElement(he, Object.assign({ type_name: "bool" }, k)), k.value ? "true" : "false");
        } }]), _;
      }(g.a.PureComponent), Te = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props;
          return g.a.createElement("div", K(k.theme, "date"), g.a.createElement(he, Object.assign({ type_name: "date" }, k)), g.a.createElement("span", Object.assign({ className: "date-value" }, K(k.theme, "date-value")), k.value.toLocaleTimeString("en-us", { weekday: "short", year: "numeric", month: "short", day: "numeric", hour: "2-digit", minute: "2-digit" })));
        } }]), _;
      }(g.a.PureComponent), A = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props;
          return g.a.createElement("div", K(k.theme, "float"), g.a.createElement(he, Object.assign({ type_name: "float" }, k)), this.props.value);
        } }]), _;
      }(g.a.PureComponent);
      function re(R, C) {
        (C == null || C > R.length) && (C = R.length);
        for (var _ = 0, k = new Array(C); _ < C; _++) k[_] = R[_];
        return k;
      }
      function se(R, C) {
        if (R) {
          if (typeof R == "string") return re(R, C);
          var _ = Object.prototype.toString.call(R).slice(8, -1);
          return _ === "Object" && R.constructor && (_ = R.constructor.name), _ === "Map" || _ === "Set" ? Array.from(R) : _ === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_) ? re(R, C) : void 0;
        }
      }
      function M(R, C) {
        var _;
        if (typeof Symbol > "u" || R[Symbol.iterator] == null) {
          if (Array.isArray(R) || (_ = se(R)) || C) {
            _ && (R = _);
            var k = 0, N = function() {
            };
            return { s: N, n: function() {
              return k >= R.length ? { done: !0 } : { done: !1, value: R[k++] };
            }, e: function(V) {
              throw V;
            }, f: N };
          }
          throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        var W, ee = !0, ne = !1;
        return { s: function() {
          _ = R[Symbol.iterator]();
        }, n: function() {
          var V = _.next();
          return ee = V.done, V;
        }, e: function(V) {
          ne = !0, W = V;
        }, f: function() {
          try {
            ee || _.return == null || _.return();
          } finally {
            if (ne) throw W;
          }
        } };
      }
      function me(R) {
        return function(C) {
          if (Array.isArray(C)) return re(C);
        }(R) || function(C) {
          if (typeof Symbol < "u" && Symbol.iterator in Object(C)) return Array.from(C);
        }(R) || se(R) || function() {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }();
      }
      var we = i(46), pe = new (i(47)).Dispatcher(), Ie = new (function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          var k;
          u(this, _);
          for (var N = arguments.length, W = new Array(N), ee = 0; ee < N; ee++) W[ee] = arguments[ee];
          return (k = C.call.apply(C, [this].concat(W))).objects = {}, k.set = function(ne, V, le, Ce) {
            k.objects[ne] === void 0 && (k.objects[ne] = {}), k.objects[ne][V] === void 0 && (k.objects[ne][V] = {}), k.objects[ne][V][le] = Ce;
          }, k.get = function(ne, V, le, Ce) {
            return k.objects[ne] === void 0 || k.objects[ne][V] === void 0 || k.objects[ne][V][le] == null ? Ce : k.objects[ne][V][le];
          }, k.handleAction = function(ne) {
            var V = ne.rjvId, le = ne.data;
            switch (ne.name) {
              case "RESET":
                k.emit("reset-" + V);
                break;
              case "VARIABLE_UPDATED":
                ne.data.updated_src = k.updateSrc(V, le), k.set(V, "action", "variable-update", l(l({}, le), {}, { type: "variable-edited" })), k.emit("variable-update-" + V);
                break;
              case "VARIABLE_REMOVED":
                ne.data.updated_src = k.updateSrc(V, le), k.set(V, "action", "variable-update", l(l({}, le), {}, { type: "variable-removed" })), k.emit("variable-update-" + V);
                break;
              case "VARIABLE_ADDED":
                ne.data.updated_src = k.updateSrc(V, le), k.set(V, "action", "variable-update", l(l({}, le), {}, { type: "variable-added" })), k.emit("variable-update-" + V);
                break;
              case "ADD_VARIABLE_KEY_REQUEST":
                k.set(V, "action", "new-key-request", le), k.emit("add-key-request-" + V);
            }
          }, k.updateSrc = function(ne, V) {
            var le = V.name, Ce = V.namespace, Be = V.new_value, Ge = (V.existing_value, V.variable_removed);
            Ce.shift();
            var je, Le = k.get(ne, "global", "src"), at = k.deepCopy(Le, me(Ce)), Et = at, Ue = M(Ce);
            try {
              for (Ue.s(); !(je = Ue.n()).done; )
                Et = Et[je.value];
            } catch (Dt) {
              Ue.e(Dt);
            } finally {
              Ue.f();
            }
            return Ge ? w(Et) == "array" ? Et.splice(le, 1) : delete Et[le] : le !== null ? Et[le] = Be : at = Be, k.set(ne, "global", "src", at), at;
          }, k.deepCopy = function(ne, V) {
            var le, Ce = w(ne), Be = V.shift();
            return Ce == "array" ? le = me(ne) : Ce == "object" && (le = l({}, ne)), Be !== void 0 && (le[Be] = k.deepCopy(ne[Be], V)), le;
          }, k;
        }
        return _;
      }(we.EventEmitter))();
      pe.register(Ie.handleAction.bind(Ie));
      var Re = Ie, be = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).toggleCollapsed = function() {
            N.setState({ collapsed: !N.state.collapsed }, function() {
              Re.set(N.props.rjvId, N.props.namespace, "collapsed", N.state.collapsed);
            });
          }, N.getFunctionDisplay = function(W) {
            var ee = I(N).props;
            return W ? g.a.createElement("span", null, N.props.value.toString().slice(9, -1).replace(/\{[\s\S]+/, ""), g.a.createElement("span", { className: "function-collapsed", style: { fontWeight: "bold" } }, g.a.createElement("span", null, "{"), g.a.createElement("span", K(ee.theme, "ellipsis"), "..."), g.a.createElement("span", null, "}"))) : N.props.value.toString().slice(9, -1);
          }, N.state = { collapsed: Re.get(k.rjvId, k.namespace, "collapsed", !0) }, N;
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = this.state.collapsed;
          return g.a.createElement("div", K(k.theme, "function"), g.a.createElement(he, Object.assign({ type_name: "function" }, k)), g.a.createElement("span", Object.assign({}, K(k.theme, "function-value"), { className: "rjv-function-container", onClick: this.toggleCollapsed }), this.getFunctionDisplay(N)));
        } }]), _;
      }(g.a.PureComponent), ve = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          return g.a.createElement("div", K(this.props.theme, "nan"), "NaN");
        } }]), _;
      }(g.a.PureComponent), He = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          return g.a.createElement("div", K(this.props.theme, "null"), "NULL");
        } }]), _;
      }(g.a.PureComponent), Se = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props;
          return g.a.createElement("div", K(k.theme, "integer"), g.a.createElement(he, Object.assign({ type_name: "int" }, k)), this.props.value);
        } }]), _;
      }(g.a.PureComponent), Ke = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props;
          return g.a.createElement("div", K(k.theme, "regexp"), g.a.createElement(he, Object.assign({ type_name: "regexp" }, k)), this.props.value.toString());
        } }]), _;
      }(g.a.PureComponent), _t = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).toggleCollapsed = function() {
            N.setState({ collapsed: !N.state.collapsed }, function() {
              Re.set(N.props.rjvId, N.props.namespace, "collapsed", N.state.collapsed);
            });
          }, N.state = { collapsed: Re.get(k.rjvId, k.namespace, "collapsed", !0) }, N;
        }
        return d(_, [{ key: "render", value: function() {
          this.state.collapsed;
          var k = this.props, N = k.collapseStringsAfterLength, W = k.theme, ee = k.value, ne = { style: { cursor: "default" } };
          return w(N) === "integer" && ee.length > N && (ne.style.cursor = "pointer", this.state.collapsed && (ee = g.a.createElement("span", null, ee.substring(0, N), g.a.createElement("span", K(W, "ellipsis"), " ...")))), g.a.createElement("div", K(W, "string"), g.a.createElement(he, Object.assign({ type_name: "string" }, k)), g.a.createElement("span", Object.assign({ className: "string-value" }, ne, { onClick: this.toggleCollapsed }), '"', ee, '"'));
        } }]), _;
      }(g.a.PureComponent), mt = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          return g.a.createElement("div", K(this.props.theme, "undefined"), "undefined");
        } }]), _;
      }(g.a.PureComponent);
      function vt() {
        return (vt = Object.assign || function(R) {
          for (var C = 1; C < arguments.length; C++) {
            var _ = arguments[C];
            for (var k in _) Object.prototype.hasOwnProperty.call(_, k) && (R[k] = _[k]);
          }
          return R;
        }).apply(this, arguments);
      }
      var wt = S.useLayoutEffect, jt = function(R) {
        var C = Object(S.useRef)(R);
        return wt(function() {
          C.current = R;
        }), C;
      }, Tt = function(R, C) {
        typeof R != "function" ? R.current = C : R(C);
      }, Ht = function(R, C) {
        var _ = Object(S.useRef)();
        return Object(S.useCallback)(function(k) {
          R.current = k, _.current && Tt(_.current, null), _.current = C, C && Tt(C, k);
        }, [C]);
      }, Yt = { "min-height": "0", "max-height": "none", height: "0", visibility: "hidden", overflow: "hidden", position: "absolute", "z-index": "-1000", top: "0", right: "0" }, Ct = function(R) {
        Object.keys(Yt).forEach(function(C) {
          R.style.setProperty(C, Yt[C], "important");
        });
      }, gt = null, xe = function() {
      }, Z = ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "boxSizing", "fontFamily", "fontSize", "fontStyle", "fontWeight", "letterSpacing", "lineHeight", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "tabSize", "textIndent", "textRendering", "textTransform", "width"], O = !!document.documentElement.currentStyle, U = function(R, C) {
        var _ = R.cacheMeasurements, k = R.maxRows, N = R.minRows, W = R.onChange, ee = W === void 0 ? xe : W, ne = R.onHeightChange, V = ne === void 0 ? xe : ne, le = function(Ue, Dt) {
          if (Ue == null) return {};
          var dn, Ut, Ur = {}, Mn = Object.keys(Ue);
          for (Ut = 0; Ut < Mn.length; Ut++) dn = Mn[Ut], Dt.indexOf(dn) >= 0 || (Ur[dn] = Ue[dn]);
          return Ur;
        }(R, ["cacheMeasurements", "maxRows", "minRows", "onChange", "onHeightChange"]), Ce, Be = le.value !== void 0, Ge = Object(S.useRef)(null), je = Ht(Ge, C), Le = Object(S.useRef)(0), at = Object(S.useRef)(), Et = function() {
          var Ue = Ge.current, Dt = _ && at.current ? at.current : function(Mn) {
            var jr = window.getComputedStyle(Mn);
            if (jr === null) return null;
            var tr, $t = (tr = jr, Z.reduce(function(yr, nr) {
              return yr[nr] = tr[nr], yr;
            }, {})), Pn = $t.boxSizing;
            return Pn === "" ? null : (O && Pn === "border-box" && ($t.width = parseFloat($t.width) + parseFloat($t.borderRightWidth) + parseFloat($t.borderLeftWidth) + parseFloat($t.paddingRight) + parseFloat($t.paddingLeft) + "px"), { sizingStyle: $t, paddingSize: parseFloat($t.paddingBottom) + parseFloat($t.paddingTop), borderSize: parseFloat($t.borderBottomWidth) + parseFloat($t.borderTopWidth) });
          }(Ue);
          if (Dt) {
            at.current = Dt;
            var dn = function(Mn, jr, tr, $t) {
              tr === void 0 && (tr = 1), $t === void 0 && ($t = 1 / 0), gt || ((gt = document.createElement("textarea")).setAttribute("tab-index", "-1"), gt.setAttribute("aria-hidden", "true"), Ct(gt)), gt.parentNode === null && document.body.appendChild(gt);
              var Pn = Mn.paddingSize, yr = Mn.borderSize, nr = Mn.sizingStyle, Tn = nr.boxSizing;
              Object.keys(nr).forEach(function(Ea) {
                var rr = Ea;
                gt.style[rr] = nr[rr];
              }), Ct(gt), gt.value = jr;
              var Hr = function(Ea, rr) {
                var ya = Ea.scrollHeight;
                return rr.sizingStyle.boxSizing === "border-box" ? ya + rr.borderSize : ya - rr.paddingSize;
              }(gt, Mn);
              gt.value = "x";
              var ga = gt.scrollHeight - Pn, ha = ga * tr;
              Tn === "border-box" && (ha = ha + Pn + yr), Hr = Math.max(ha, Hr);
              var ba = ga * $t;
              return Tn === "border-box" && (ba = ba + Pn + yr), [Hr = Math.min(ba, Hr), ga];
            }(Dt, Ue.value || Ue.placeholder || "x", N, k), Ut = dn[0], Ur = dn[1];
            Le.current !== Ut && (Le.current = Ut, Ue.style.setProperty("height", Ut + "px", "important"), V(Ut, { rowHeight: Ur }));
          }
        };
        return Object(S.useLayoutEffect)(Et), Ce = jt(Et), Object(S.useLayoutEffect)(function() {
          var Ue = function(Dt) {
            Ce.current(Dt);
          };
          return window.addEventListener("resize", Ue), function() {
            window.removeEventListener("resize", Ue);
          };
        }, []), Object(S.createElement)("textarea", vt({}, le, { onChange: function(Ue) {
          Be || Et(), ee(Ue);
        }, ref: je }));
      }, X = Object(S.forwardRef)(U);
      function ue(R) {
        R = R.trim();
        try {
          if ((R = JSON.stringify(JSON.parse(R)))[0] === "[") return fe("array", JSON.parse(R));
          if (R[0] === "{") return fe("object", JSON.parse(R));
          if (R.match(/\-?\d+\.\d+/) && R.match(/\-?\d+\.\d+/)[0] === R) return fe("float", parseFloat(R));
          if (R.match(/\-?\d+e-\d+/) && R.match(/\-?\d+e-\d+/)[0] === R) return fe("float", Number(R));
          if (R.match(/\-?\d+/) && R.match(/\-?\d+/)[0] === R) return fe("integer", parseInt(R));
          if (R.match(/\-?\d+e\+\d+/) && R.match(/\-?\d+e\+\d+/)[0] === R) return fe("integer", Number(R));
        } catch {
        }
        switch (R = R.toLowerCase()) {
          case "undefined":
            return fe("undefined", void 0);
          case "nan":
            return fe("nan", NaN);
          case "null":
            return fe("null", null);
          case "true":
            return fe("boolean", !0);
          case "false":
            return fe("boolean", !1);
          default:
            if (R = Date.parse(R)) return fe("date", new Date(R));
        }
        return fe(!1, null);
      }
      function fe(R, C) {
        return { type: R, value: C };
      }
      var Ne = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 24 24", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("path", { d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7" })));
        } }]), _;
      }(g.a.PureComponent), Oe = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 24 24", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("path", { d: "M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z" })));
        } }]), _;
      }(g.a.PureComponent), Pe = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]), ee = ze(N).style;
          return g.a.createElement("span", W, g.a.createElement("svg", { fill: ee.color, width: ee.height, height: ee.width, style: ee, viewBox: "0 0 1792 1792" }, g.a.createElement("path", { d: "M1344 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z" })));
        } }]), _;
      }(g.a.PureComponent), et = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]), ee = ze(N).style;
          return g.a.createElement("span", W, g.a.createElement("svg", { fill: ee.color, width: ee.height, height: ee.width, style: ee, viewBox: "0 0 1792 1792" }, g.a.createElement("path", { d: "M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z" })));
        } }]), _;
      }(g.a.PureComponent), tt = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", { style: l(l({}, ze(N).style), {}, { paddingLeft: "2px", verticalAlign: "top" }), viewBox: "0 0 15 15", fill: "currentColor" }, g.a.createElement("path", { d: "M0 14l6-6-6-6z" })));
        } }]), _;
      }(g.a.PureComponent), $e = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", { style: l(l({}, ze(N).style), {}, { paddingLeft: "2px", verticalAlign: "top" }), viewBox: "0 0 15 15", fill: "currentColor" }, g.a.createElement("path", { d: "M0 5l6 6 6-6z" })));
        } }]), _;
      }(g.a.PureComponent), Xe = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m30 35h-25v-22.5h25v7.5h2.5v-12.5c0-1.4-1.1-2.5-2.5-2.5h-7.5c0-2.8-2.2-5-5-5s-5 2.2-5 5h-7.5c-1.4 0-2.5 1.1-2.5 2.5v27.5c0 1.4 1.1 2.5 2.5 2.5h25c1.4 0 2.5-1.1 2.5-2.5v-5h-2.5v5z m-20-27.5h2.5s2.5-1.1 2.5-2.5 1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5 1.3 2.5 2.5 2.5h2.5s2.5 1.1 2.5 2.5h-20c0-1.5 1.1-2.5 2.5-2.5z m-2.5 20h5v-2.5h-5v2.5z m17.5-5v-5l-10 7.5 10 7.5v-5h12.5v-5h-12.5z m-17.5 10h7.5v-2.5h-7.5v2.5z m12.5-17.5h-12.5v2.5h12.5v-2.5z m-7.5 5h-5v2.5h5v-2.5z" }))));
        } }]), _;
      }(g.a.PureComponent), rt = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m28.6 25q0-0.5-0.4-1l-4-4 4-4q0.4-0.5 0.4-1 0-0.6-0.4-1.1l-2-2q-0.4-0.4-1-0.4-0.6 0-1 0.4l-4.1 4.1-4-4.1q-0.4-0.4-1-0.4-0.6 0-1 0.4l-2 2q-0.5 0.5-0.5 1.1 0 0.5 0.5 1l4 4-4 4q-0.5 0.5-0.5 1 0 0.7 0.5 1.1l2 2q0.4 0.4 1 0.4 0.6 0 1-0.4l4-4.1 4.1 4.1q0.4 0.4 1 0.4 0.6 0 1-0.4l2-2q0.4-0.4 0.4-1z m8.7-5q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z" }))));
        } }]), _;
      }(g.a.PureComponent), kt = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m30.1 21.4v-2.8q0-0.6-0.4-1t-1-0.5h-5.7v-5.7q0-0.6-0.4-1t-1-0.4h-2.9q-0.6 0-1 0.4t-0.4 1v5.7h-5.7q-0.6 0-1 0.5t-0.5 1v2.8q0 0.6 0.5 1t1 0.5h5.7v5.7q0 0.5 0.4 1t1 0.4h2.9q0.6 0 1-0.4t0.4-1v-5.7h5.7q0.6 0 1-0.5t0.4-1z m7.2-1.4q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z" }))));
        } }]), _;
      }(g.a.PureComponent), ht = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z" }))));
        } }]), _;
      }(g.a.PureComponent), ct = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m19.8 26.4l2.6-2.6-3.4-3.4-2.6 2.6v1.3h2.2v2.1h1.2z m9.8-16q-0.3-0.4-0.7 0l-7.8 7.8q-0.4 0.4 0 0.7t0.7 0l7.8-7.8q0.4-0.4 0-0.7z m1.8 13.2v4.3q0 2.6-1.9 4.5t-4.5 1.9h-18.6q-2.6 0-4.5-1.9t-1.9-4.5v-18.6q0-2.7 1.9-4.6t4.5-1.8h18.6q1.4 0 2.6 0.5 0.3 0.2 0.4 0.5 0.1 0.4-0.2 0.7l-1.1 1.1q-0.3 0.3-0.7 0.1-0.5-0.1-1-0.1h-18.6q-1.4 0-2.5 1.1t-1 2.5v18.6q0 1.4 1 2.5t2.5 1h18.6q1.5 0 2.5-1t1.1-2.5v-2.9q0-0.2 0.2-0.4l1.4-1.5q0.3-0.3 0.8-0.1t0.4 0.6z m-2.1-16.5l6.4 6.5-15 15h-6.4v-6.5z m9.9 3l-2.1 2-6.4-6.4 2.1-2q0.6-0.7 1.5-0.7t1.5 0.7l3.4 3.4q0.6 0.6 0.6 1.5t-0.6 1.5z" }))));
        } }]), _;
      }(g.a.PureComponent), bt = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.style, W = D(k, ["style"]);
          return g.a.createElement("span", W, g.a.createElement("svg", Object.assign({}, ze(N), { viewBox: "0 0 40 40", fill: "currentColor", preserveAspectRatio: "xMidYMid meet" }), g.a.createElement("g", null, g.a.createElement("path", { d: "m31.7 16.4q0-0.6-0.4-1l-2.1-2.1q-0.4-0.4-1-0.4t-1 0.4l-9.1 9.1-5-5q-0.5-0.4-1-0.4t-1 0.4l-2.1 2q-0.4 0.4-0.4 1 0 0.6 0.4 1l8.1 8.1q0.4 0.4 1 0.4 0.6 0 1-0.4l12.2-12.1q0.4-0.4 0.4-1z m5.6 3.6q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z" }))));
        } }]), _;
      }(g.a.PureComponent);
      function ze(R) {
        return R || (R = {}), { style: l(l({ verticalAlign: "middle" }, R), {}, { color: R.color ? R.color : "#000000", height: "1em", width: "1em" }) };
      }
      var At = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).copiedTimer = null, N.handleCopy = function() {
            var W = document.createElement("textarea"), ee = N.props, ne = ee.clickCallback, V = ee.src, le = ee.namespace;
            W.innerHTML = JSON.stringify(N.clipboardValue(V), null, "  "), document.body.appendChild(W), W.select(), document.execCommand("copy"), document.body.removeChild(W), N.copiedTimer = setTimeout(function() {
              N.setState({ copied: !1 });
            }, 5500), N.setState({ copied: !0 }, function() {
              typeof ne == "function" && ne({ src: V, namespace: le, name: le[le.length - 1] });
            });
          }, N.getClippyIcon = function() {
            var W = N.props.theme;
            return N.state.copied ? g.a.createElement("span", null, g.a.createElement(Xe, Object.assign({ className: "copy-icon" }, K(W, "copy-icon"))), g.a.createElement("span", K(W, "copy-icon-copied"), "✔")) : g.a.createElement(Xe, Object.assign({ className: "copy-icon" }, K(W, "copy-icon")));
          }, N.clipboardValue = function(W) {
            switch (w(W)) {
              case "function":
              case "regexp":
                return W.toString();
              default:
                return W;
            }
          }, N.state = { copied: !1 }, N;
        }
        return d(_, [{ key: "componentWillUnmount", value: function() {
          this.copiedTimer && (clearTimeout(this.copiedTimer), this.copiedTimer = null);
        } }, { key: "render", value: function() {
          var k = this.props, N = (k.src, k.theme), W = k.hidden, ee = k.rowHovered, ne = K(N, "copy-to-clipboard").style, V = "inline";
          return W && (V = "none"), g.a.createElement("span", { className: "copy-to-clipboard-container", title: "Copy to clipboard", style: { verticalAlign: "top", display: ee ? "inline-block" : "none" } }, g.a.createElement("span", { style: l(l({}, ne), {}, { display: V }), onClick: this.handleCopy }, this.getClippyIcon()));
        } }]), _;
      }(g.a.PureComponent), Nt = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).getEditIcon = function() {
            var W = N.props, ee = W.variable, ne = W.theme;
            return g.a.createElement("div", { className: "click-to-edit", style: { verticalAlign: "top", display: N.state.hovered ? "inline-block" : "none" } }, g.a.createElement(ct, Object.assign({ className: "click-to-edit-icon" }, K(ne, "editVarIcon"), { onClick: function() {
              N.prepopInput(ee);
            } })));
          }, N.prepopInput = function(W) {
            if (N.props.onEdit !== !1) {
              var ee = function(V) {
                var le;
                switch (w(V)) {
                  case "undefined":
                    le = "undefined";
                    break;
                  case "nan":
                    le = "NaN";
                    break;
                  case "string":
                    le = V;
                    break;
                  case "date":
                  case "function":
                  case "regexp":
                    le = V.toString();
                    break;
                  default:
                    try {
                      le = JSON.stringify(V, null, "  ");
                    } catch {
                      le = "";
                    }
                }
                return le;
              }(W.value), ne = ue(ee);
              N.setState({ editMode: !0, editValue: ee, parsedInput: { type: ne.type, value: ne.value } });
            }
          }, N.getRemoveIcon = function() {
            var W = N.props, ee = W.variable, ne = W.namespace, V = W.theme, le = W.rjvId;
            return g.a.createElement("div", { className: "click-to-remove", style: { verticalAlign: "top", display: N.state.hovered ? "inline-block" : "none" } }, g.a.createElement(rt, Object.assign({ className: "click-to-remove-icon" }, K(V, "removeVarIcon"), { onClick: function() {
              pe.dispatch({ name: "VARIABLE_REMOVED", rjvId: le, data: { name: ee.name, namespace: ne, existing_value: ee.value, variable_removed: !0 } });
            } })));
          }, N.getValue = function(W, ee) {
            var ne = !ee && W.type, V = I(N).props;
            switch (ne) {
              case !1:
                return N.getEditInput();
              case "string":
                return g.a.createElement(_t, Object.assign({ value: W.value }, V));
              case "integer":
                return g.a.createElement(Se, Object.assign({ value: W.value }, V));
              case "float":
                return g.a.createElement(A, Object.assign({ value: W.value }, V));
              case "boolean":
                return g.a.createElement(ye, Object.assign({ value: W.value }, V));
              case "function":
                return g.a.createElement(be, Object.assign({ value: W.value }, V));
              case "null":
                return g.a.createElement(He, V);
              case "nan":
                return g.a.createElement(ve, V);
              case "undefined":
                return g.a.createElement(mt, V);
              case "date":
                return g.a.createElement(Te, Object.assign({ value: W.value }, V));
              case "regexp":
                return g.a.createElement(Ke, Object.assign({ value: W.value }, V));
              default:
                return g.a.createElement("div", { className: "object-value" }, JSON.stringify(W.value));
            }
          }, N.getEditInput = function() {
            var W = N.props.theme, ee = N.state.editValue;
            return g.a.createElement("div", null, g.a.createElement(X, Object.assign({ type: "text", inputRef: function(ne) {
              return ne && ne.focus();
            }, value: ee, className: "variable-editor", onChange: function(ne) {
              var V = ne.target.value, le = ue(V);
              N.setState({ editValue: V, parsedInput: { type: le.type, value: le.value } });
            }, onKeyDown: function(ne) {
              switch (ne.key) {
                case "Escape":
                  N.setState({ editMode: !1, editValue: "" });
                  break;
                case "Enter":
                  (ne.ctrlKey || ne.metaKey) && N.submitEdit(!0);
              }
              ne.stopPropagation();
            }, placeholder: "update this value", minRows: 2 }, K(W, "edit-input"))), g.a.createElement("div", K(W, "edit-icon-container"), g.a.createElement(rt, Object.assign({ className: "edit-cancel" }, K(W, "cancel-icon"), { onClick: function() {
              N.setState({ editMode: !1, editValue: "" });
            } })), g.a.createElement(bt, Object.assign({ className: "edit-check string-value" }, K(W, "check-icon"), { onClick: function() {
              N.submitEdit();
            } })), g.a.createElement("div", null, N.showDetected())));
          }, N.submitEdit = function(W) {
            var ee = N.props, ne = ee.variable, V = ee.namespace, le = ee.rjvId, Ce = N.state, Be = Ce.editValue, Ge = Ce.parsedInput, je = Be;
            W && Ge.type && (je = Ge.value), N.setState({ editMode: !1 }), pe.dispatch({ name: "VARIABLE_UPDATED", rjvId: le, data: { name: ne.name, namespace: V, existing_value: ne.value, new_value: je, variable_removed: !1 } });
          }, N.showDetected = function() {
            var W = N.props, ee = W.theme, ne = (W.variable, W.namespace, W.rjvId, N.state.parsedInput), V = (ne.type, ne.value, N.getDetectedInput());
            if (V) return g.a.createElement("div", null, g.a.createElement("div", K(ee, "detected-row"), V, g.a.createElement(bt, { className: "edit-check detected", style: l({ verticalAlign: "top", paddingLeft: "3px" }, K(ee, "check-icon").style), onClick: function() {
              N.submitEdit(!0);
            } })));
          }, N.getDetectedInput = function() {
            var W = N.state.parsedInput, ee = W.type, ne = W.value, V = I(N).props, le = V.theme;
            if (ee !== !1) switch (ee.toLowerCase()) {
              case "object":
                return g.a.createElement("span", null, g.a.createElement("span", { style: l(l({}, K(le, "brace").style), {}, { cursor: "default" }) }, "{"), g.a.createElement("span", { style: l(l({}, K(le, "ellipsis").style), {}, { cursor: "default" }) }, "..."), g.a.createElement("span", { style: l(l({}, K(le, "brace").style), {}, { cursor: "default" }) }, "}"));
              case "array":
                return g.a.createElement("span", null, g.a.createElement("span", { style: l(l({}, K(le, "brace").style), {}, { cursor: "default" }) }, "["), g.a.createElement("span", { style: l(l({}, K(le, "ellipsis").style), {}, { cursor: "default" }) }, "..."), g.a.createElement("span", { style: l(l({}, K(le, "brace").style), {}, { cursor: "default" }) }, "]"));
              case "string":
                return g.a.createElement(_t, Object.assign({ value: ne }, V));
              case "integer":
                return g.a.createElement(Se, Object.assign({ value: ne }, V));
              case "float":
                return g.a.createElement(A, Object.assign({ value: ne }, V));
              case "boolean":
                return g.a.createElement(ye, Object.assign({ value: ne }, V));
              case "function":
                return g.a.createElement(be, Object.assign({ value: ne }, V));
              case "null":
                return g.a.createElement(He, V);
              case "nan":
                return g.a.createElement(ve, V);
              case "undefined":
                return g.a.createElement(mt, V);
              case "date":
                return g.a.createElement(Te, Object.assign({ value: new Date(ne) }, V));
            }
          }, N.state = { editMode: !1, editValue: "", hovered: !1, renameKey: !1, parsedInput: { type: !1, value: null } }, N;
        }
        return d(_, [{ key: "render", value: function() {
          var k = this, N = this.props, W = N.variable, ee = N.singleIndent, ne = N.type, V = N.theme, le = N.namespace, Ce = N.indentWidth, Be = N.enableClipboard, Ge = N.onEdit, je = N.onDelete, Le = N.onSelect, at = N.displayArrayKey, Et = N.quotesOnKeys, Ue = this.state.editMode;
          return g.a.createElement("div", Object.assign({}, K(V, "objectKeyVal", { paddingLeft: Ce * ee }), { onMouseEnter: function() {
            return k.setState(l(l({}, k.state), {}, { hovered: !0 }));
          }, onMouseLeave: function() {
            return k.setState(l(l({}, k.state), {}, { hovered: !1 }));
          }, className: "variable-row", key: W.name }), ne == "array" ? at ? g.a.createElement("span", Object.assign({}, K(V, "array-key"), { key: W.name + "_" + le }), W.name, g.a.createElement("div", K(V, "colon"), ":")) : null : g.a.createElement("span", null, g.a.createElement("span", Object.assign({}, K(V, "object-name"), { className: "object-key", key: W.name + "_" + le }), !!Et && g.a.createElement("span", { style: { verticalAlign: "top" } }, '"'), g.a.createElement("span", { style: { display: "inline-block" } }, W.name), !!Et && g.a.createElement("span", { style: { verticalAlign: "top" } }, '"')), g.a.createElement("span", K(V, "colon"), ":")), g.a.createElement("div", Object.assign({ className: "variable-value", onClick: Le === !1 && Ge === !1 ? null : function(Dt) {
            var dn = me(le);
            (Dt.ctrlKey || Dt.metaKey) && Ge !== !1 ? k.prepopInput(W) : Le !== !1 && (dn.shift(), Le(l(l({}, W), {}, { namespace: dn })));
          } }, K(V, "variableValue", { cursor: Le === !1 ? "default" : "pointer" })), this.getValue(W, Ue)), Be ? g.a.createElement(At, { rowHovered: this.state.hovered, hidden: Ue, src: W.value, clickCallback: Be, theme: V, namespace: [].concat(me(le), [W.name]) }) : null, Ge !== !1 && Ue == 0 ? this.getEditIcon() : null, je !== !1 && Ue == 0 ? this.getRemoveIcon() : null);
        } }]), _;
      }(g.a.PureComponent), un = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          var k;
          u(this, _);
          for (var N = arguments.length, W = new Array(N), ee = 0; ee < N; ee++) W[ee] = arguments[ee];
          return (k = C.call.apply(C, [this].concat(W))).getObjectSize = function() {
            var ne = k.props, V = ne.size, le = ne.theme;
            if (ne.displayObjectSize) return g.a.createElement("span", Object.assign({ className: "object-size" }, K(le, "object-size")), V, " item", V === 1 ? "" : "s");
          }, k.getAddAttribute = function(ne) {
            var V = k.props, le = V.theme, Ce = V.namespace, Be = V.name, Ge = V.src, je = V.rjvId, Le = V.depth;
            return g.a.createElement("span", { className: "click-to-add", style: { verticalAlign: "top", display: ne ? "inline-block" : "none" } }, g.a.createElement(kt, Object.assign({ className: "click-to-add-icon" }, K(le, "addVarIcon"), { onClick: function() {
              var at = { name: Le > 0 ? Be : null, namespace: Ce.splice(0, Ce.length - 1), existing_value: Ge, variable_removed: !1, key_name: null };
              w(Ge) === "object" ? pe.dispatch({ name: "ADD_VARIABLE_KEY_REQUEST", rjvId: je, data: at }) : pe.dispatch({ name: "VARIABLE_ADDED", rjvId: je, data: l(l({}, at), {}, { new_value: [].concat(me(Ge), [null]) }) });
            } })));
          }, k.getRemoveObject = function(ne) {
            var V = k.props, le = V.theme, Ce = (V.hover, V.namespace), Be = V.name, Ge = V.src, je = V.rjvId;
            if (Ce.length !== 1) return g.a.createElement("span", { className: "click-to-remove", style: { display: ne ? "inline-block" : "none" } }, g.a.createElement(rt, Object.assign({ className: "click-to-remove-icon" }, K(le, "removeVarIcon"), { onClick: function() {
              pe.dispatch({ name: "VARIABLE_REMOVED", rjvId: je, data: { name: Be, namespace: Ce.splice(0, Ce.length - 1), existing_value: Ge, variable_removed: !0 } });
            } })));
          }, k.render = function() {
            var ne = k.props, V = ne.theme, le = ne.onDelete, Ce = ne.onAdd, Be = ne.enableClipboard, Ge = ne.src, je = ne.namespace, Le = ne.rowHovered;
            return g.a.createElement("div", Object.assign({}, K(V, "object-meta-data"), { className: "object-meta-data", onClick: function(at) {
              at.stopPropagation();
            } }), k.getObjectSize(), Be ? g.a.createElement(At, { rowHovered: Le, clickCallback: Be, src: Ge, theme: V, namespace: je }) : null, Ce !== !1 ? k.getAddAttribute(Le) : null, le !== !1 ? k.getRemoveObject(Le) : null);
          }, k;
        }
        return _;
      }(g.a.PureComponent);
      function cn(R) {
        var C = R.parent_type, _ = R.namespace, k = R.quotesOnKeys, N = R.theme, W = R.jsvRoot, ee = R.name, ne = R.displayArrayKey, V = R.name ? R.name : "";
        return !W || ee !== !1 && ee !== null ? C == "array" ? ne ? g.a.createElement("span", Object.assign({}, K(N, "array-key"), { key: _ }), g.a.createElement("span", { className: "array-key" }, V), g.a.createElement("span", K(N, "colon"), ":")) : g.a.createElement("span", null) : g.a.createElement("span", Object.assign({}, K(N, "object-name"), { key: _ }), g.a.createElement("span", { className: "object-key" }, k && g.a.createElement("span", { style: { verticalAlign: "top" } }, '"'), g.a.createElement("span", null, V), k && g.a.createElement("span", { style: { verticalAlign: "top" } }, '"')), g.a.createElement("span", K(N, "colon"), ":")) : g.a.createElement("span", null);
      }
      function qt(R) {
        var C = R.theme;
        switch (R.iconStyle) {
          case "triangle":
            return g.a.createElement($e, Object.assign({}, K(C, "expanded-icon"), { className: "expanded-icon" }));
          case "square":
            return g.a.createElement(Pe, Object.assign({}, K(C, "expanded-icon"), { className: "expanded-icon" }));
          default:
            return g.a.createElement(Ne, Object.assign({}, K(C, "expanded-icon"), { className: "expanded-icon" }));
        }
      }
      function en(R) {
        var C = R.theme;
        switch (R.iconStyle) {
          case "triangle":
            return g.a.createElement(tt, Object.assign({}, K(C, "collapsed-icon"), { className: "collapsed-icon" }));
          case "square":
            return g.a.createElement(et, Object.assign({}, K(C, "collapsed-icon"), { className: "collapsed-icon" }));
          default:
            return g.a.createElement(Oe, Object.assign({}, K(C, "collapsed-icon"), { className: "collapsed-icon" }));
        }
      }
      var Ln = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).toggleCollapsed = function(W) {
            var ee = [];
            for (var ne in N.state.expanded) ee.push(N.state.expanded[ne]);
            ee[W] = !ee[W], N.setState({ expanded: ee });
          }, N.state = { expanded: [] }, N;
        }
        return d(_, [{ key: "getExpandedIcon", value: function(k) {
          var N = this.props, W = N.theme, ee = N.iconStyle;
          return this.state.expanded[k] ? g.a.createElement(qt, { theme: W, iconStyle: ee }) : g.a.createElement(en, { theme: W, iconStyle: ee });
        } }, { key: "render", value: function() {
          var k = this, N = this.props, W = N.src, ee = N.groupArraysAfterLength, ne = (N.depth, N.name), V = N.theme, le = N.jsvRoot, Ce = N.namespace, Be = (N.parent_type, D(N, ["src", "groupArraysAfterLength", "depth", "name", "theme", "jsvRoot", "namespace", "parent_type"])), Ge = 0, je = 5 * this.props.indentWidth;
          le || (Ge = 5 * this.props.indentWidth);
          var Le = ee, at = Math.ceil(W.length / Le);
          return g.a.createElement("div", Object.assign({ className: "object-key-val" }, K(V, le ? "jsv-root" : "objectKeyVal", { paddingLeft: Ge })), g.a.createElement(cn, this.props), g.a.createElement("span", null, g.a.createElement(un, Object.assign({ size: W.length }, this.props))), me(Array(at)).map(function(Et, Ue) {
            return g.a.createElement("div", Object.assign({ key: Ue, className: "object-key-val array-group" }, K(V, "objectKeyVal", { marginLeft: 6, paddingLeft: je })), g.a.createElement("span", K(V, "brace-row"), g.a.createElement("div", Object.assign({ className: "icon-container" }, K(V, "icon-container"), { onClick: function(Dt) {
              k.toggleCollapsed(Ue);
            } }), k.getExpandedIcon(Ue)), k.state.expanded[Ue] ? g.a.createElement(Dn, Object.assign({ key: ne + Ue, depth: 0, name: !1, collapsed: !1, groupArraysAfterLength: Le, index_offset: Ue * Le, src: W.slice(Ue * Le, Ue * Le + Le), namespace: Ce, type: "array", parent_type: "array_group", theme: V }, Be)) : g.a.createElement("span", Object.assign({}, K(V, "brace"), { onClick: function(Dt) {
              k.toggleCollapsed(Ue);
            }, className: "array-group-brace" }), "[", g.a.createElement("div", Object.assign({}, K(V, "array-group-meta-data"), { className: "array-group-meta-data" }), g.a.createElement("span", Object.assign({ className: "object-size" }, K(V, "object-size")), Ue * Le, " - ", Ue * Le + Le > W.length ? W.length : Ue * Le + Le)), "]")));
          }));
        } }]), _;
      }(g.a.PureComponent), Yn = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          u(this, _), (N = C.call(this, k)).toggleCollapsed = function() {
            N.setState({ expanded: !N.state.expanded }, function() {
              Re.set(N.props.rjvId, N.props.namespace, "expanded", N.state.expanded);
            });
          }, N.getObjectContent = function(ee, ne, V) {
            return g.a.createElement("div", { className: "pushed-content object-container" }, g.a.createElement("div", Object.assign({ className: "object-content" }, K(N.props.theme, "pushed-content")), N.renderObjectContents(ne, V)));
          }, N.getEllipsis = function() {
            return N.state.size === 0 ? null : g.a.createElement("div", Object.assign({}, K(N.props.theme, "ellipsis"), { className: "node-ellipsis", onClick: N.toggleCollapsed }), "...");
          }, N.getObjectMetaData = function(ee) {
            var ne = N.props, V = (ne.rjvId, ne.theme, N.state), le = V.size, Ce = V.hovered;
            return g.a.createElement(un, Object.assign({ rowHovered: Ce, size: le }, N.props));
          }, N.renderObjectContents = function(ee, ne) {
            var V, le = N.props, Ce = le.depth, Be = le.parent_type, Ge = le.index_offset, je = le.groupArraysAfterLength, Le = le.namespace, at = N.state.object_type, Et = [], Ue = Object.keys(ee || {});
            return N.props.sortKeys && at !== "array" && (Ue = Ue.sort()), Ue.forEach(function(Dt) {
              if (V = new Br(Dt, ee[Dt]), Be === "array_group" && Ge && (V.name = parseInt(V.name) + Ge), ee.hasOwnProperty(Dt)) if (V.type === "object") Et.push(g.a.createElement(Dn, Object.assign({ key: V.name, depth: Ce + 1, name: V.name, src: V.value, namespace: Le.concat(V.name), parent_type: at }, ne)));
              else if (V.type === "array") {
                var dn = Dn;
                je && V.value.length > je && (dn = Ln), Et.push(g.a.createElement(dn, Object.assign({ key: V.name, depth: Ce + 1, name: V.name, src: V.value, namespace: Le.concat(V.name), type: "array", parent_type: at }, ne)));
              } else Et.push(g.a.createElement(Nt, Object.assign({ key: V.name + "_" + Le, variable: V, singleIndent: 5, namespace: Le, type: N.props.type }, ne)));
            }), Et;
          };
          var W = _.getState(k);
          return N.state = l(l({}, W), {}, { prevProps: {} }), N;
        }
        return d(_, [{ key: "getBraceStart", value: function(k, N) {
          var W = this, ee = this.props, ne = ee.src, V = ee.theme, le = ee.iconStyle;
          if (ee.parent_type === "array_group") return g.a.createElement("span", null, g.a.createElement("span", K(V, "brace"), k === "array" ? "[" : "{"), N ? this.getObjectMetaData(ne) : null);
          var Ce = N ? qt : en;
          return g.a.createElement("span", null, g.a.createElement("span", Object.assign({ onClick: function(Be) {
            W.toggleCollapsed();
          } }, K(V, "brace-row")), g.a.createElement("div", Object.assign({ className: "icon-container" }, K(V, "icon-container")), g.a.createElement(Ce, { theme: V, iconStyle: le })), g.a.createElement(cn, this.props), g.a.createElement("span", K(V, "brace"), k === "array" ? "[" : "{")), N ? this.getObjectMetaData(ne) : null);
        } }, { key: "render", value: function() {
          var k = this, N = this.props, W = N.depth, ee = N.src, ne = (N.namespace, N.name, N.type, N.parent_type), V = N.theme, le = N.jsvRoot, Ce = N.iconStyle, Be = D(N, ["depth", "src", "namespace", "name", "type", "parent_type", "theme", "jsvRoot", "iconStyle"]), Ge = this.state, je = Ge.object_type, Le = Ge.expanded, at = {};
          return le || ne === "array_group" ? ne === "array_group" && (at.borderLeft = 0, at.display = "inline") : at.paddingLeft = 5 * this.props.indentWidth, g.a.createElement("div", Object.assign({ className: "object-key-val", onMouseEnter: function() {
            return k.setState(l(l({}, k.state), {}, { hovered: !0 }));
          }, onMouseLeave: function() {
            return k.setState(l(l({}, k.state), {}, { hovered: !1 }));
          } }, K(V, le ? "jsv-root" : "objectKeyVal", at)), this.getBraceStart(je, Le), Le ? this.getObjectContent(W, ee, l({ theme: V, iconStyle: Ce }, Be)) : this.getEllipsis(), g.a.createElement("span", { className: "brace-row" }, g.a.createElement("span", { style: l(l({}, K(V, "brace").style), {}, { paddingLeft: Le ? "3px" : "0px" }) }, je === "array" ? "]" : "}"), Le ? null : this.getObjectMetaData(ee)));
        } }], [{ key: "getDerivedStateFromProps", value: function(k, N) {
          var W = N.prevProps;
          return k.src !== W.src || k.collapsed !== W.collapsed || k.name !== W.name || k.namespace !== W.namespace || k.rjvId !== W.rjvId ? l(l({}, _.getState(k)), {}, { prevProps: k }) : null;
        } }]), _;
      }(g.a.PureComponent);
      Yn.getState = function(R) {
        var C = Object.keys(R.src).length, _ = (R.collapsed === !1 || R.collapsed !== !0 && R.collapsed > R.depth) && (!R.shouldCollapse || R.shouldCollapse({ name: R.name, src: R.src, type: w(R.src), namespace: R.namespace }) === !1) && C !== 0;
        return { expanded: Re.get(R.rjvId, R.namespace, "expanded", _), object_type: R.type === "array" ? "array" : "object", parent_type: R.type === "array" ? "array" : "object", size: C, hovered: !1 };
      };
      var Br = function R(C, _) {
        u(this, R), this.name = C, this.value = _, this.type = w(_);
      };
      $(Yn);
      var Dn = Yn, Kn = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          var k;
          u(this, _);
          for (var N = arguments.length, W = new Array(N), ee = 0; ee < N; ee++) W[ee] = arguments[ee];
          return (k = C.call.apply(C, [this].concat(W))).render = function() {
            var ne = I(k).props, V = [ne.name], le = Dn;
            return Array.isArray(ne.src) && ne.groupArraysAfterLength && ne.src.length > ne.groupArraysAfterLength && (le = Ln), g.a.createElement("div", { className: "pretty-json-container object-container" }, g.a.createElement("div", { className: "object-content" }, g.a.createElement(le, Object.assign({ namespace: V, depth: 0, jsvRoot: !0 }, ne))));
          }, k;
        }
        return _;
      }(g.a.PureComponent), hr = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).closeModal = function() {
            pe.dispatch({ rjvId: N.props.rjvId, name: "RESET" });
          }, N.submit = function() {
            N.props.submit(N.state.input);
          }, N.state = { input: k.input ? k.input : "" }, N;
        }
        return d(_, [{ key: "render", value: function() {
          var k = this, N = this.props, W = N.theme, ee = N.rjvId, ne = N.isValid, V = this.state.input, le = ne(V);
          return g.a.createElement("div", Object.assign({ className: "key-modal-request" }, K(W, "key-modal-request"), { onClick: this.closeModal }), g.a.createElement("div", Object.assign({}, K(W, "key-modal"), { onClick: function(Ce) {
            Ce.stopPropagation();
          } }), g.a.createElement("div", K(W, "key-modal-label"), "Key Name:"), g.a.createElement("div", { style: { position: "relative" } }, g.a.createElement("input", Object.assign({}, K(W, "key-modal-input"), { className: "key-modal-input", ref: function(Ce) {
            return Ce && Ce.focus();
          }, spellCheck: !1, value: V, placeholder: "...", onChange: function(Ce) {
            k.setState({ input: Ce.target.value });
          }, onKeyPress: function(Ce) {
            le && Ce.key === "Enter" ? k.submit() : Ce.key === "Escape" && k.closeModal();
          } })), le ? g.a.createElement(bt, Object.assign({}, K(W, "key-modal-submit"), { className: "key-modal-submit", onClick: function(Ce) {
            return k.submit();
          } })) : null), g.a.createElement("span", K(W, "key-modal-cancel"), g.a.createElement(ht, Object.assign({}, K(W, "key-modal-cancel-icon"), { className: "key-modal-cancel", onClick: function() {
            pe.dispatch({ rjvId: ee, name: "RESET" });
          } })))));
        } }]), _;
      }(g.a.PureComponent), br = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          var k;
          u(this, _);
          for (var N = arguments.length, W = new Array(N), ee = 0; ee < N; ee++) W[ee] = arguments[ee];
          return (k = C.call.apply(C, [this].concat(W))).isValid = function(ne) {
            var V = k.props.rjvId, le = Re.get(V, "action", "new-key-request");
            return ne != "" && Object.keys(le.existing_value).indexOf(ne) === -1;
          }, k.submit = function(ne) {
            var V = k.props.rjvId, le = Re.get(V, "action", "new-key-request");
            le.new_value = l({}, le.existing_value), le.new_value[ne] = k.props.defaultValue, pe.dispatch({ name: "VARIABLE_ADDED", rjvId: V, data: le });
          }, k;
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.active, W = k.theme, ee = k.rjvId;
          return N ? g.a.createElement(hr, { rjvId: ee, theme: W, isValid: this.isValid, submit: this.submit }) : null;
        } }]), _;
      }(g.a.PureComponent), Er = function(R) {
        f(_, R);
        var C = v(_);
        function _() {
          return u(this, _), C.apply(this, arguments);
        }
        return d(_, [{ key: "render", value: function() {
          var k = this.props, N = k.message, W = k.active, ee = k.theme, ne = k.rjvId;
          return W ? g.a.createElement("div", Object.assign({ className: "validation-failure" }, K(ee, "validation-failure"), { onClick: function() {
            pe.dispatch({ rjvId: ne, name: "RESET" });
          } }), g.a.createElement("span", K(ee, "validation-failure-label"), N), g.a.createElement(ht, K(ee, "validation-failure-clear"))) : null;
        } }]), _;
      }(g.a.PureComponent), q = function(R) {
        f(_, R);
        var C = v(_);
        function _(k) {
          var N;
          return u(this, _), (N = C.call(this, k)).rjvId = Date.now().toString(), N.getListeners = function() {
            return { reset: N.resetState, "variable-update": N.updateSrc, "add-key-request": N.addKeyRequest };
          }, N.updateSrc = function() {
            var W, ee = Re.get(N.rjvId, "action", "variable-update"), ne = ee.name, V = ee.namespace, le = ee.new_value, Ce = ee.existing_value, Be = (ee.variable_removed, ee.updated_src), Ge = ee.type, je = N.props, Le = je.onEdit, at = je.onDelete, Et = je.onAdd, Ue = { existing_src: N.state.src, new_value: le, updated_src: Be, name: ne, namespace: V, existing_value: Ce };
            switch (Ge) {
              case "variable-added":
                W = Et(Ue);
                break;
              case "variable-edited":
                W = Le(Ue);
                break;
              case "variable-removed":
                W = at(Ue);
            }
            W !== !1 ? (Re.set(N.rjvId, "global", "src", Be), N.setState({ src: Be })) : N.setState({ validationFailure: !0 });
          }, N.addKeyRequest = function() {
            N.setState({ addKeyRequest: !0 });
          }, N.resetState = function() {
            N.setState({ validationFailure: !1, addKeyRequest: !1 });
          }, N.state = { addKeyRequest: !1, editKeyRequest: !1, validationFailure: !1, src: _.defaultProps.src, name: _.defaultProps.name, theme: _.defaultProps.theme, validationMessage: _.defaultProps.validationMessage, prevSrc: _.defaultProps.src, prevName: _.defaultProps.name, prevTheme: _.defaultProps.theme }, N;
        }
        return d(_, [{ key: "componentDidMount", value: function() {
          Re.set(this.rjvId, "global", "src", this.state.src);
          var k = this.getListeners();
          for (var N in k) Re.on(N + "-" + this.rjvId, k[N]);
          this.setState({ addKeyRequest: !1, editKeyRequest: !1 });
        } }, { key: "componentDidUpdate", value: function(k, N) {
          N.addKeyRequest !== !1 && this.setState({ addKeyRequest: !1 }), N.editKeyRequest !== !1 && this.setState({ editKeyRequest: !1 }), k.src !== this.state.src && Re.set(this.rjvId, "global", "src", this.state.src);
        } }, { key: "componentWillUnmount", value: function() {
          var k = this.getListeners();
          for (var N in k) Re.removeListener(N + "-" + this.rjvId, k[N]);
        } }, { key: "render", value: function() {
          var k = this.state, N = k.validationFailure, W = k.validationMessage, ee = k.addKeyRequest, ne = k.theme, V = k.src, le = k.name, Ce = this.props, Be = Ce.style, Ge = Ce.defaultValue;
          return g.a.createElement("div", { className: "react-json-view", style: l(l({}, K(ne, "app-container").style), Be) }, g.a.createElement(Er, { message: W, active: N, theme: ne, rjvId: this.rjvId }), g.a.createElement(Kn, Object.assign({}, this.props, { src: V, name: le, theme: ne, type: w(V), rjvId: this.rjvId })), g.a.createElement(br, { active: ee, theme: ne, rjvId: this.rjvId, defaultValue: Ge }));
        } }], [{ key: "getDerivedStateFromProps", value: function(k, N) {
          if (k.src !== N.prevSrc || k.name !== N.prevName || k.theme !== N.prevTheme) {
            var W = { src: k.src, name: k.name, theme: k.theme, validationMessage: k.validationMessage, prevSrc: k.src, prevName: k.name, prevTheme: k.theme };
            return _.validateState(W);
          }
          return null;
        } }]), _;
      }(g.a.PureComponent);
      q.defaultProps = { src: {}, name: "root", theme: "rjv-default", collapsed: !1, collapseStringsAfterLength: !1, shouldCollapse: !1, sortKeys: !1, quotesOnKeys: !0, groupArraysAfterLength: 100, indentWidth: 4, enableClipboard: !0, displayObjectSize: !0, displayDataTypes: !0, onEdit: !1, onDelete: !1, onAdd: !1, onSelect: !1, iconStyle: "triangle", style: {}, validationMessage: "Validation Error", defaultValue: null, displayArrayKey: !0 }, q.validateState = function(R) {
        var C = {};
        return w(R.theme) !== "object" || function(_) {
          var k = ["base00", "base01", "base02", "base03", "base04", "base05", "base06", "base07", "base08", "base09", "base0A", "base0B", "base0C", "base0D", "base0E", "base0F"];
          if (w(_) === "object") {
            for (var N = 0; N < k.length; N++) if (!(k[N] in _)) return !1;
            return !0;
          }
          return !1;
        }(R.theme) || (console.error("react-json-view error:", "theme prop must be a theme name or valid base-16 theme object.", 'defaulting to "rjv-default" theme'), C.theme = "rjv-default"), w(R.src) !== "object" && w(R.src) !== "array" && (console.error("react-json-view error:", "src property must be a valid json object"), C.name = "ERROR", C.src = { message: "src property must be a valid json object" }), l(l({}, R), C);
      }, $(q), a.default = q;
    }]);
  });
})(n_);
var z8 = n_.exports;
const G8 = /* @__PURE__ */ pr(z8);
function V8(e) {
  return { all: e = e || /* @__PURE__ */ new Map(), on: function(t, n) {
    var r = e.get(t);
    r ? r.push(n) : e.set(t, [n]);
  }, off: function(t, n) {
    var r = e.get(t);
    r && (n ? r.splice(r.indexOf(n) >>> 0, 1) : e.set(t, []));
  }, emit: function(t, n) {
    var r = e.get(t);
    r && r.slice().map(function(a) {
      a(n);
    }), (r = e.get("*")) && r.slice().map(function(a) {
      a(t, n);
    });
  } };
}
const Vt = V8(), r_ = ({ msg: e, typing: t, persona: n, widgetProps: r }) => {
  const { threadId: a, id: i } = e || {}, [o, s] = Jt(), [l, u] = Jt(), c = ft(async (d) => {
    let m;
    m = {
      thread_id: a,
      message_id: i,
      score: d
    };
    try {
      const f = await af(r), h = r.serverUrl || rf, E = await fetch(`${h}/threads/score`, {
        method: "POST",
        headers: f,
        body: JSON.stringify(m)
      });
      if (!E.ok) {
        const I = await E.text();
        let x = JSON.parse(I);
        throw new Error(x.error);
      }
      s(d);
    } catch (f) {
      u(f.toString()), console.error("Error recording score:", f);
    }
  }, [a, i, r]);
  return /* @__PURE__ */ Y.jsxs("div", { onClick: (d) => {
    d.stopPropagation(), d.preventDefault(), a && i && Vt.emit("langdb_aiMessageClicked", {
      threadId: a,
      messageId: i,
      traceId: e == null ? void 0 : e.trace_id
    });
  }, className: "flex items-center gap-2", children: [
    /* @__PURE__ */ Y.jsx("div", { children: n ? n.url ? /* @__PURE__ */ Y.jsx(Xr, { name: n.name, imageUrl: n.url, className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(of, { className: "h-6 w-6 rounded-full" }) : /* @__PURE__ */ Y.jsx(Xr, { className: "h-6 w-6 rounded-full", name: "User" }) }),
    /* @__PURE__ */ Y.jsxs("div", { className: "rounded-lg p-2 ai-message", children: [
      /* @__PURE__ */ Y.jsx(qp, { message: (e == null ? void 0 : e.message) || "" }),
      (e == null ? void 0 : e.tool_calls) && e.tool_calls && e.tool_calls.length > 0 && /* @__PURE__ */ Y.jsxs("div", { children: [
        /* @__PURE__ */ Y.jsx("div", { className: "", children: /* @__PURE__ */ Y.jsx("span", { className: "text-sm", children: "Tool Calls" }) }),
        (e == null ? void 0 : e.tool_calls) && e.tool_calls.map((d, m) => {
          if (d.function) {
            let f = { ...d.function, arguments: JSON.parse(d.function.arguments) };
            return /* @__PURE__ */ Y.jsx(G8, { theme: "ashes", src: f }, m);
          }
          return /* @__PURE__ */ Y.jsx(Y.Fragment, {});
        })
      ] }),
      !t && a && i && /* @__PURE__ */ Y.jsx(Y.Fragment, { children: /* @__PURE__ */ Y.jsxs("div", { className: " mt-3 gap-3 flex items-center justify-start space-x-1", children: [
        /* @__PURE__ */ Y.jsxs(
          "button",
          {
            className: "rounded focus:outline-none hover:text-primary-500",
            onClick: (d) => {
              d.preventDefault(), d.stopPropagation(), c(1);
            },
            children: [
              o == null && /* @__PURE__ */ Y.jsx(_x, { className: "h-4 w-4" }),
              o === 1 && /* @__PURE__ */ Y.jsx(Nx, { className: "h-4 w-4 animate-fadeIn" })
            ]
          }
        ),
        /* @__PURE__ */ Y.jsxs(
          "button",
          {
            className: "rounded focus:outline-none hover:text-primary-500",
            onClick: (d) => {
              d.preventDefault(), d.stopPropagation(), c(-1);
            },
            children: [
              o == null && /* @__PURE__ */ Y.jsx(Tx, { className: "h-4 w-4" }),
              o === -1 && /* @__PURE__ */ Y.jsx(Cx, { className: "h-4 w-4 animate-fadeIn" })
            ]
          }
        ),
        l && /* @__PURE__ */ Y.jsx("div", { className: " text-red-500 ", children: l })
      ] }) })
    ] }),
    t && /* @__PURE__ */ Y.jsxs("div", { className: "rounded-lg p-2 ai-message flex items-center gap-2 animate-pulse", children: [
      /* @__PURE__ */ Y.jsx(Rx, { className: "h-5 w-5 text-gray-500" }),
      /* @__PURE__ */ Y.jsx("span", { children: "Typing..." })
    ] })
  ] });
};
var $p = { exports: {} }, _i = { exports: {} }, ot = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ev;
function W8() {
  if (Ev) return ot;
  Ev = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, a = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, c = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, h = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, I = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, v = e ? Symbol.for("react.scope") : 60119;
  function S(y) {
    if (typeof y == "object" && y !== null) {
      var T = y.$$typeof;
      switch (T) {
        case t:
          switch (y = y.type, y) {
            case l:
            case u:
            case r:
            case i:
            case a:
            case d:
              return y;
            default:
              switch (y = y && y.$$typeof, y) {
                case s:
                case c:
                case h:
                case f:
                case o:
                  return y;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function g(y) {
    return S(y) === u;
  }
  return ot.AsyncMode = l, ot.ConcurrentMode = u, ot.ContextConsumer = s, ot.ContextProvider = o, ot.Element = t, ot.ForwardRef = c, ot.Fragment = r, ot.Lazy = h, ot.Memo = f, ot.Portal = n, ot.Profiler = i, ot.StrictMode = a, ot.Suspense = d, ot.isAsyncMode = function(y) {
    return g(y) || S(y) === l;
  }, ot.isConcurrentMode = g, ot.isContextConsumer = function(y) {
    return S(y) === s;
  }, ot.isContextProvider = function(y) {
    return S(y) === o;
  }, ot.isElement = function(y) {
    return typeof y == "object" && y !== null && y.$$typeof === t;
  }, ot.isForwardRef = function(y) {
    return S(y) === c;
  }, ot.isFragment = function(y) {
    return S(y) === r;
  }, ot.isLazy = function(y) {
    return S(y) === h;
  }, ot.isMemo = function(y) {
    return S(y) === f;
  }, ot.isPortal = function(y) {
    return S(y) === n;
  }, ot.isProfiler = function(y) {
    return S(y) === i;
  }, ot.isStrictMode = function(y) {
    return S(y) === a;
  }, ot.isSuspense = function(y) {
    return S(y) === d;
  }, ot.isValidElementType = function(y) {
    return typeof y == "string" || typeof y == "function" || y === r || y === u || y === i || y === a || y === d || y === m || typeof y == "object" && y !== null && (y.$$typeof === h || y.$$typeof === f || y.$$typeof === o || y.$$typeof === s || y.$$typeof === c || y.$$typeof === I || y.$$typeof === x || y.$$typeof === v || y.$$typeof === E);
  }, ot.typeOf = S, ot;
}
var st = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var yv;
function Y8() {
  return yv || (yv = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, a = e ? Symbol.for("react.strict_mode") : 60108, i = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, s = e ? Symbol.for("react.context") : 60110, l = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, c = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, h = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, I = e ? Symbol.for("react.fundamental") : 60117, x = e ? Symbol.for("react.responder") : 60118, v = e ? Symbol.for("react.scope") : 60119;
    function S(Se) {
      return typeof Se == "string" || typeof Se == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      Se === r || Se === u || Se === i || Se === a || Se === d || Se === m || typeof Se == "object" && Se !== null && (Se.$$typeof === h || Se.$$typeof === f || Se.$$typeof === o || Se.$$typeof === s || Se.$$typeof === c || Se.$$typeof === I || Se.$$typeof === x || Se.$$typeof === v || Se.$$typeof === E);
    }
    function g(Se) {
      if (typeof Se == "object" && Se !== null) {
        var Ke = Se.$$typeof;
        switch (Ke) {
          case t:
            var _t = Se.type;
            switch (_t) {
              case l:
              case u:
              case r:
              case i:
              case a:
              case d:
                return _t;
              default:
                var mt = _t && _t.$$typeof;
                switch (mt) {
                  case s:
                  case c:
                  case h:
                  case f:
                  case o:
                    return mt;
                  default:
                    return Ke;
                }
            }
          case n:
            return Ke;
        }
      }
    }
    var y = l, T = u, j = s, $ = o, D = t, w = c, G = r, Q = h, z = f, ce = n, ae = i, K = a, he = d, ye = !1;
    function Te(Se) {
      return ye || (ye = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), A(Se) || g(Se) === l;
    }
    function A(Se) {
      return g(Se) === u;
    }
    function re(Se) {
      return g(Se) === s;
    }
    function se(Se) {
      return g(Se) === o;
    }
    function M(Se) {
      return typeof Se == "object" && Se !== null && Se.$$typeof === t;
    }
    function me(Se) {
      return g(Se) === c;
    }
    function we(Se) {
      return g(Se) === r;
    }
    function pe(Se) {
      return g(Se) === h;
    }
    function Ie(Se) {
      return g(Se) === f;
    }
    function Re(Se) {
      return g(Se) === n;
    }
    function be(Se) {
      return g(Se) === i;
    }
    function ve(Se) {
      return g(Se) === a;
    }
    function He(Se) {
      return g(Se) === d;
    }
    st.AsyncMode = y, st.ConcurrentMode = T, st.ContextConsumer = j, st.ContextProvider = $, st.Element = D, st.ForwardRef = w, st.Fragment = G, st.Lazy = Q, st.Memo = z, st.Portal = ce, st.Profiler = ae, st.StrictMode = K, st.Suspense = he, st.isAsyncMode = Te, st.isConcurrentMode = A, st.isContextConsumer = re, st.isContextProvider = se, st.isElement = M, st.isForwardRef = me, st.isFragment = we, st.isLazy = pe, st.isMemo = Ie, st.isPortal = Re, st.isProfiler = be, st.isStrictMode = ve, st.isSuspense = He, st.isValidElementType = S, st.typeOf = g;
  }()), st;
}
var vv;
function a_() {
  return vv || (vv = 1, process.env.NODE_ENV === "production" ? _i.exports = W8() : _i.exports = Y8()), _i.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var rp, Tv;
function K8() {
  if (Tv) return rp;
  Tv = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(i) {
    if (i == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(i);
  }
  function a() {
    try {
      if (!Object.assign)
        return !1;
      var i = new String("abc");
      if (i[5] = "de", Object.getOwnPropertyNames(i)[0] === "5")
        return !1;
      for (var o = {}, s = 0; s < 10; s++)
        o["_" + String.fromCharCode(s)] = s;
      var l = Object.getOwnPropertyNames(o).map(function(c) {
        return o[c];
      });
      if (l.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(c) {
        u[c] = c;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return rp = a() ? Object.assign : function(i, o) {
    for (var s, l = r(i), u, c = 1; c < arguments.length; c++) {
      s = Object(arguments[c]);
      for (var d in s)
        t.call(s, d) && (l[d] = s[d]);
      if (e) {
        u = e(s);
        for (var m = 0; m < u.length; m++)
          n.call(s, u[m]) && (l[u[m]] = s[u[m]]);
      }
    }
    return l;
  }, rp;
}
var ap, Sv;
function tm() {
  if (Sv) return ap;
  Sv = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ap = e, ap;
}
var ip, _v;
function i_() {
  return _v || (_v = 1, ip = Function.call.bind(Object.prototype.hasOwnProperty)), ip;
}
var op, Av;
function X8() {
  if (Av) return op;
  Av = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = tm(), n = {}, r = i_();
    e = function(i) {
      var o = "Warning: " + i;
      typeof console < "u" && console.error(o);
      try {
        throw new Error(o);
      } catch {
      }
    };
  }
  function a(i, o, s, l, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var c in i)
        if (r(i, c)) {
          var d;
          try {
            if (typeof i[c] != "function") {
              var m = Error(
                (l || "React class") + ": " + s + " type `" + c + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[c] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw m.name = "Invariant Violation", m;
            }
            d = i[c](o, c, l, s, null, t);
          } catch (h) {
            d = h;
          }
          if (d && !(d instanceof Error) && e(
            (l || "React class") + ": type specification of " + s + " `" + c + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof d + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), d instanceof Error && !(d.message in n)) {
            n[d.message] = !0;
            var f = u ? u() : "";
            e(
              "Failed " + s + " type: " + d.message + (f ?? "")
            );
          }
        }
    }
  }
  return a.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, op = a, op;
}
var sp, xv;
function Z8() {
  if (xv) return sp;
  xv = 1;
  var e = a_(), t = K8(), n = tm(), r = i_(), a = X8(), i = function() {
  };
  process.env.NODE_ENV !== "production" && (i = function(s) {
    var l = "Warning: " + s;
    typeof console < "u" && console.error(l);
    try {
      throw new Error(l);
    } catch {
    }
  });
  function o() {
    return null;
  }
  return sp = function(s, l) {
    var u = typeof Symbol == "function" && Symbol.iterator, c = "@@iterator";
    function d(A) {
      var re = A && (u && A[u] || A[c]);
      if (typeof re == "function")
        return re;
    }
    var m = "<<anonymous>>", f = {
      array: x("array"),
      bigint: x("bigint"),
      bool: x("boolean"),
      func: x("function"),
      number: x("number"),
      object: x("object"),
      string: x("string"),
      symbol: x("symbol"),
      any: v(),
      arrayOf: S,
      element: g(),
      elementType: y(),
      instanceOf: T,
      node: w(),
      objectOf: $,
      oneOf: j,
      oneOfType: D,
      shape: Q,
      exact: z
    };
    function h(A, re) {
      return A === re ? A !== 0 || 1 / A === 1 / re : A !== A && re !== re;
    }
    function E(A, re) {
      this.message = A, this.data = re && typeof re == "object" ? re : {}, this.stack = "";
    }
    E.prototype = Error.prototype;
    function I(A) {
      if (process.env.NODE_ENV !== "production")
        var re = {}, se = 0;
      function M(we, pe, Ie, Re, be, ve, He) {
        if (Re = Re || m, ve = ve || Ie, He !== n) {
          if (l) {
            var Se = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw Se.name = "Invariant Violation", Se;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Ke = Re + ":" + Ie;
            !re[Ke] && // Avoid spamming the console because they are often not actionable except for lib authors
            se < 3 && (i(
              "You are manually calling a React.PropTypes validation function for the `" + ve + "` prop on `" + Re + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), re[Ke] = !0, se++);
          }
        }
        return pe[Ie] == null ? we ? pe[Ie] === null ? new E("The " + be + " `" + ve + "` is marked as required " + ("in `" + Re + "`, but its value is `null`.")) : new E("The " + be + " `" + ve + "` is marked as required in " + ("`" + Re + "`, but its value is `undefined`.")) : null : A(pe, Ie, Re, be, ve);
      }
      var me = M.bind(null, !1);
      return me.isRequired = M.bind(null, !0), me;
    }
    function x(A) {
      function re(se, M, me, we, pe, Ie) {
        var Re = se[M], be = K(Re);
        if (be !== A) {
          var ve = he(Re);
          return new E(
            "Invalid " + we + " `" + pe + "` of type " + ("`" + ve + "` supplied to `" + me + "`, expected ") + ("`" + A + "`."),
            { expectedType: A }
          );
        }
        return null;
      }
      return I(re);
    }
    function v() {
      return I(o);
    }
    function S(A) {
      function re(se, M, me, we, pe) {
        if (typeof A != "function")
          return new E("Property `" + pe + "` of component `" + me + "` has invalid PropType notation inside arrayOf.");
        var Ie = se[M];
        if (!Array.isArray(Ie)) {
          var Re = K(Ie);
          return new E("Invalid " + we + " `" + pe + "` of type " + ("`" + Re + "` supplied to `" + me + "`, expected an array."));
        }
        for (var be = 0; be < Ie.length; be++) {
          var ve = A(Ie, be, me, we, pe + "[" + be + "]", n);
          if (ve instanceof Error)
            return ve;
        }
        return null;
      }
      return I(re);
    }
    function g() {
      function A(re, se, M, me, we) {
        var pe = re[se];
        if (!s(pe)) {
          var Ie = K(pe);
          return new E("Invalid " + me + " `" + we + "` of type " + ("`" + Ie + "` supplied to `" + M + "`, expected a single ReactElement."));
        }
        return null;
      }
      return I(A);
    }
    function y() {
      function A(re, se, M, me, we) {
        var pe = re[se];
        if (!e.isValidElementType(pe)) {
          var Ie = K(pe);
          return new E("Invalid " + me + " `" + we + "` of type " + ("`" + Ie + "` supplied to `" + M + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return I(A);
    }
    function T(A) {
      function re(se, M, me, we, pe) {
        if (!(se[M] instanceof A)) {
          var Ie = A.name || m, Re = Te(se[M]);
          return new E("Invalid " + we + " `" + pe + "` of type " + ("`" + Re + "` supplied to `" + me + "`, expected ") + ("instance of `" + Ie + "`."));
        }
        return null;
      }
      return I(re);
    }
    function j(A) {
      if (!Array.isArray(A))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? i(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : i("Invalid argument supplied to oneOf, expected an array.")), o;
      function re(se, M, me, we, pe) {
        for (var Ie = se[M], Re = 0; Re < A.length; Re++)
          if (h(Ie, A[Re]))
            return null;
        var be = JSON.stringify(A, function(He, Se) {
          var Ke = he(Se);
          return Ke === "symbol" ? String(Se) : Se;
        });
        return new E("Invalid " + we + " `" + pe + "` of value `" + String(Ie) + "` " + ("supplied to `" + me + "`, expected one of " + be + "."));
      }
      return I(re);
    }
    function $(A) {
      function re(se, M, me, we, pe) {
        if (typeof A != "function")
          return new E("Property `" + pe + "` of component `" + me + "` has invalid PropType notation inside objectOf.");
        var Ie = se[M], Re = K(Ie);
        if (Re !== "object")
          return new E("Invalid " + we + " `" + pe + "` of type " + ("`" + Re + "` supplied to `" + me + "`, expected an object."));
        for (var be in Ie)
          if (r(Ie, be)) {
            var ve = A(Ie, be, me, we, pe + "." + be, n);
            if (ve instanceof Error)
              return ve;
          }
        return null;
      }
      return I(re);
    }
    function D(A) {
      if (!Array.isArray(A))
        return process.env.NODE_ENV !== "production" && i("Invalid argument supplied to oneOfType, expected an instance of array."), o;
      for (var re = 0; re < A.length; re++) {
        var se = A[re];
        if (typeof se != "function")
          return i(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + ye(se) + " at index " + re + "."
          ), o;
      }
      function M(me, we, pe, Ie, Re) {
        for (var be = [], ve = 0; ve < A.length; ve++) {
          var He = A[ve], Se = He(me, we, pe, Ie, Re, n);
          if (Se == null)
            return null;
          Se.data && r(Se.data, "expectedType") && be.push(Se.data.expectedType);
        }
        var Ke = be.length > 0 ? ", expected one of type [" + be.join(", ") + "]" : "";
        return new E("Invalid " + Ie + " `" + Re + "` supplied to " + ("`" + pe + "`" + Ke + "."));
      }
      return I(M);
    }
    function w() {
      function A(re, se, M, me, we) {
        return ce(re[se]) ? null : new E("Invalid " + me + " `" + we + "` supplied to " + ("`" + M + "`, expected a ReactNode."));
      }
      return I(A);
    }
    function G(A, re, se, M, me) {
      return new E(
        (A || "React class") + ": " + re + " type `" + se + "." + M + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + me + "`."
      );
    }
    function Q(A) {
      function re(se, M, me, we, pe) {
        var Ie = se[M], Re = K(Ie);
        if (Re !== "object")
          return new E("Invalid " + we + " `" + pe + "` of type `" + Re + "` " + ("supplied to `" + me + "`, expected `object`."));
        for (var be in A) {
          var ve = A[be];
          if (typeof ve != "function")
            return G(me, we, pe, be, he(ve));
          var He = ve(Ie, be, me, we, pe + "." + be, n);
          if (He)
            return He;
        }
        return null;
      }
      return I(re);
    }
    function z(A) {
      function re(se, M, me, we, pe) {
        var Ie = se[M], Re = K(Ie);
        if (Re !== "object")
          return new E("Invalid " + we + " `" + pe + "` of type `" + Re + "` " + ("supplied to `" + me + "`, expected `object`."));
        var be = t({}, se[M], A);
        for (var ve in be) {
          var He = A[ve];
          if (r(A, ve) && typeof He != "function")
            return G(me, we, pe, ve, he(He));
          if (!He)
            return new E(
              "Invalid " + we + " `" + pe + "` key `" + ve + "` supplied to `" + me + "`.\nBad object: " + JSON.stringify(se[M], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(A), null, "  ")
            );
          var Se = He(Ie, ve, me, we, pe + "." + ve, n);
          if (Se)
            return Se;
        }
        return null;
      }
      return I(re);
    }
    function ce(A) {
      switch (typeof A) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !A;
        case "object":
          if (Array.isArray(A))
            return A.every(ce);
          if (A === null || s(A))
            return !0;
          var re = d(A);
          if (re) {
            var se = re.call(A), M;
            if (re !== A.entries) {
              for (; !(M = se.next()).done; )
                if (!ce(M.value))
                  return !1;
            } else
              for (; !(M = se.next()).done; ) {
                var me = M.value;
                if (me && !ce(me[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function ae(A, re) {
      return A === "symbol" ? !0 : re ? re["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && re instanceof Symbol : !1;
    }
    function K(A) {
      var re = typeof A;
      return Array.isArray(A) ? "array" : A instanceof RegExp ? "object" : ae(re, A) ? "symbol" : re;
    }
    function he(A) {
      if (typeof A > "u" || A === null)
        return "" + A;
      var re = K(A);
      if (re === "object") {
        if (A instanceof Date)
          return "date";
        if (A instanceof RegExp)
          return "regexp";
      }
      return re;
    }
    function ye(A) {
      var re = he(A);
      switch (re) {
        case "array":
        case "object":
          return "an " + re;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + re;
        default:
          return re;
      }
    }
    function Te(A) {
      return !A.constructor || !A.constructor.name ? m : A.constructor.name;
    }
    return f.checkPropTypes = a, f.resetWarningCache = a.resetWarningCache, f.PropTypes = f, f;
  }, sp;
}
var lp, Rv;
function Q8() {
  if (Rv) return lp;
  Rv = 1;
  var e = tm();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, lp = function() {
    function r(o, s, l, u, c, d) {
      if (d !== e) {
        var m = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw m.name = "Invariant Violation", m;
      }
    }
    r.isRequired = r;
    function a() {
      return r;
    }
    var i = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: a,
      element: r,
      elementType: r,
      instanceOf: a,
      node: r,
      objectOf: a,
      oneOf: a,
      oneOfType: a,
      shape: a,
      exact: a,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return i.PropTypes = i, i;
  }, lp;
}
if (process.env.NODE_ENV !== "production") {
  var J8 = a_(), e9 = !0;
  $p.exports = Z8()(J8.isElement, e9);
} else
  $p.exports = Q8()();
var t9 = $p.exports;
const lt = /* @__PURE__ */ pr(t9);
var Fn = function() {
  return Fn = Object.assign || function(t) {
    for (var n, r = 1, a = arguments.length; r < a; r++) {
      n = arguments[r];
      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
    }
    return t;
  }, Fn.apply(this, arguments);
};
function o_(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var a = 0, r = Object.getOwnPropertySymbols(e); a < r.length; a++)
      t.indexOf(r[a]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[a]) && (n[r[a]] = e[r[a]]);
  return n;
}
function gr(e, t, n, r) {
  function a(i) {
    return i instanceof n ? i : new n(function(o) {
      o(i);
    });
  }
  return new (n || (n = Promise))(function(i, o) {
    function s(c) {
      try {
        u(r.next(c));
      } catch (d) {
        o(d);
      }
    }
    function l(c) {
      try {
        u(r.throw(c));
      } catch (d) {
        o(d);
      }
    }
    function u(c) {
      c.done ? i(c.value) : a(c.value).then(s, l);
    }
    u((r = r.apply(e, t || [])).next());
  });
}
function n9(e, t) {
  var n = { label: 0, sent: function() {
    if (i[0] & 1) throw i[1];
    return i[1];
  }, trys: [], ops: [] }, r, a, i, o = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype);
  return o.next = s(0), o.throw = s(1), o.return = s(2), typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(u) {
    return function(c) {
      return l([u, c]);
    };
  }
  function l(u) {
    if (r) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, u[0] && (n = 0)), n; ) try {
      if (r = 1, a && (i = u[0] & 2 ? a.return : u[0] ? a.throw || ((i = a.return) && i.call(a), 0) : a.next) && !(i = i.call(a, u[1])).done) return i;
      switch (a = 0, i && (u = [u[0] & 2, i.value]), u[0]) {
        case 0:
        case 1:
          i = u;
          break;
        case 4:
          return n.label++, { value: u[1], done: !1 };
        case 5:
          n.label++, a = u[1], u = [0];
          continue;
        case 7:
          u = n.ops.pop(), n.trys.pop();
          continue;
        default:
          if (i = n.trys, !(i = i.length > 0 && i[i.length - 1]) && (u[0] === 6 || u[0] === 2)) {
            n = 0;
            continue;
          }
          if (u[0] === 3 && (!i || u[1] > i[0] && u[1] < i[3])) {
            n.label = u[1];
            break;
          }
          if (u[0] === 6 && n.label < i[1]) {
            n.label = i[1], i = u;
            break;
          }
          if (i && n.label < i[2]) {
            n.label = i[2], n.ops.push(u);
            break;
          }
          i[2] && n.ops.pop(), n.trys.pop();
          continue;
      }
      u = t.call(e, n);
    } catch (c) {
      u = [6, c], a = 0;
    } finally {
      r = i = 0;
    }
    if (u[0] & 5) throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function nn(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n) return e;
  var r = n.call(e), a, i = [], o;
  try {
    for (; (t === void 0 || t-- > 0) && !(a = r.next()).done; ) i.push(a.value);
  } catch (s) {
    o = { error: s };
  } finally {
    try {
      a && !a.done && (n = r.return) && n.call(r);
    } finally {
      if (o) throw o.error;
    }
  }
  return i;
}
function rn(e, t, n) {
  if (n || arguments.length === 2) for (var r = 0, a = t.length, i; r < a; r++)
    (i || !(r in t)) && (i || (i = Array.prototype.slice.call(t, 0, r)), i[r] = t[r]);
  return e.concat(i || Array.prototype.slice.call(t));
}
const r9 = /* @__PURE__ */ new Map([
  // https://github.com/guzzle/psr7/blob/2d9260799e713f1c475d3c5fdc3d6561ff7441b2/src/MimeType.php
  ["1km", "application/vnd.1000minds.decision-model+xml"],
  ["3dml", "text/vnd.in3d.3dml"],
  ["3ds", "image/x-3ds"],
  ["3g2", "video/3gpp2"],
  ["3gp", "video/3gp"],
  ["3gpp", "video/3gpp"],
  ["3mf", "model/3mf"],
  ["7z", "application/x-7z-compressed"],
  ["7zip", "application/x-7z-compressed"],
  ["123", "application/vnd.lotus-1-2-3"],
  ["aab", "application/x-authorware-bin"],
  ["aac", "audio/x-acc"],
  ["aam", "application/x-authorware-map"],
  ["aas", "application/x-authorware-seg"],
  ["abw", "application/x-abiword"],
  ["ac", "application/vnd.nokia.n-gage.ac+xml"],
  ["ac3", "audio/ac3"],
  ["acc", "application/vnd.americandynamics.acc"],
  ["ace", "application/x-ace-compressed"],
  ["acu", "application/vnd.acucobol"],
  ["acutc", "application/vnd.acucorp"],
  ["adp", "audio/adpcm"],
  ["aep", "application/vnd.audiograph"],
  ["afm", "application/x-font-type1"],
  ["afp", "application/vnd.ibm.modcap"],
  ["ahead", "application/vnd.ahead.space"],
  ["ai", "application/pdf"],
  ["aif", "audio/x-aiff"],
  ["aifc", "audio/x-aiff"],
  ["aiff", "audio/x-aiff"],
  ["air", "application/vnd.adobe.air-application-installer-package+zip"],
  ["ait", "application/vnd.dvb.ait"],
  ["ami", "application/vnd.amiga.ami"],
  ["amr", "audio/amr"],
  ["apk", "application/vnd.android.package-archive"],
  ["apng", "image/apng"],
  ["appcache", "text/cache-manifest"],
  ["application", "application/x-ms-application"],
  ["apr", "application/vnd.lotus-approach"],
  ["arc", "application/x-freearc"],
  ["arj", "application/x-arj"],
  ["asc", "application/pgp-signature"],
  ["asf", "video/x-ms-asf"],
  ["asm", "text/x-asm"],
  ["aso", "application/vnd.accpac.simply.aso"],
  ["asx", "video/x-ms-asf"],
  ["atc", "application/vnd.acucorp"],
  ["atom", "application/atom+xml"],
  ["atomcat", "application/atomcat+xml"],
  ["atomdeleted", "application/atomdeleted+xml"],
  ["atomsvc", "application/atomsvc+xml"],
  ["atx", "application/vnd.antix.game-component"],
  ["au", "audio/x-au"],
  ["avi", "video/x-msvideo"],
  ["avif", "image/avif"],
  ["aw", "application/applixware"],
  ["azf", "application/vnd.airzip.filesecure.azf"],
  ["azs", "application/vnd.airzip.filesecure.azs"],
  ["azv", "image/vnd.airzip.accelerator.azv"],
  ["azw", "application/vnd.amazon.ebook"],
  ["b16", "image/vnd.pco.b16"],
  ["bat", "application/x-msdownload"],
  ["bcpio", "application/x-bcpio"],
  ["bdf", "application/x-font-bdf"],
  ["bdm", "application/vnd.syncml.dm+wbxml"],
  ["bdoc", "application/x-bdoc"],
  ["bed", "application/vnd.realvnc.bed"],
  ["bh2", "application/vnd.fujitsu.oasysprs"],
  ["bin", "application/octet-stream"],
  ["blb", "application/x-blorb"],
  ["blorb", "application/x-blorb"],
  ["bmi", "application/vnd.bmi"],
  ["bmml", "application/vnd.balsamiq.bmml+xml"],
  ["bmp", "image/bmp"],
  ["book", "application/vnd.framemaker"],
  ["box", "application/vnd.previewsystems.box"],
  ["boz", "application/x-bzip2"],
  ["bpk", "application/octet-stream"],
  ["bpmn", "application/octet-stream"],
  ["bsp", "model/vnd.valve.source.compiled-map"],
  ["btif", "image/prs.btif"],
  ["buffer", "application/octet-stream"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["c", "text/x-c"],
  ["c4d", "application/vnd.clonk.c4group"],
  ["c4f", "application/vnd.clonk.c4group"],
  ["c4g", "application/vnd.clonk.c4group"],
  ["c4p", "application/vnd.clonk.c4group"],
  ["c4u", "application/vnd.clonk.c4group"],
  ["c11amc", "application/vnd.cluetrust.cartomobile-config"],
  ["c11amz", "application/vnd.cluetrust.cartomobile-config-pkg"],
  ["cab", "application/vnd.ms-cab-compressed"],
  ["caf", "audio/x-caf"],
  ["cap", "application/vnd.tcpdump.pcap"],
  ["car", "application/vnd.curl.car"],
  ["cat", "application/vnd.ms-pki.seccat"],
  ["cb7", "application/x-cbr"],
  ["cba", "application/x-cbr"],
  ["cbr", "application/x-cbr"],
  ["cbt", "application/x-cbr"],
  ["cbz", "application/x-cbr"],
  ["cc", "text/x-c"],
  ["cco", "application/x-cocoa"],
  ["cct", "application/x-director"],
  ["ccxml", "application/ccxml+xml"],
  ["cdbcmsg", "application/vnd.contact.cmsg"],
  ["cda", "application/x-cdf"],
  ["cdf", "application/x-netcdf"],
  ["cdfx", "application/cdfx+xml"],
  ["cdkey", "application/vnd.mediastation.cdkey"],
  ["cdmia", "application/cdmi-capability"],
  ["cdmic", "application/cdmi-container"],
  ["cdmid", "application/cdmi-domain"],
  ["cdmio", "application/cdmi-object"],
  ["cdmiq", "application/cdmi-queue"],
  ["cdr", "application/cdr"],
  ["cdx", "chemical/x-cdx"],
  ["cdxml", "application/vnd.chemdraw+xml"],
  ["cdy", "application/vnd.cinderella"],
  ["cer", "application/pkix-cert"],
  ["cfs", "application/x-cfs-compressed"],
  ["cgm", "image/cgm"],
  ["chat", "application/x-chat"],
  ["chm", "application/vnd.ms-htmlhelp"],
  ["chrt", "application/vnd.kde.kchart"],
  ["cif", "chemical/x-cif"],
  ["cii", "application/vnd.anser-web-certificate-issue-initiation"],
  ["cil", "application/vnd.ms-artgalry"],
  ["cjs", "application/node"],
  ["cla", "application/vnd.claymore"],
  ["class", "application/octet-stream"],
  ["clkk", "application/vnd.crick.clicker.keyboard"],
  ["clkp", "application/vnd.crick.clicker.palette"],
  ["clkt", "application/vnd.crick.clicker.template"],
  ["clkw", "application/vnd.crick.clicker.wordbank"],
  ["clkx", "application/vnd.crick.clicker"],
  ["clp", "application/x-msclip"],
  ["cmc", "application/vnd.cosmocaller"],
  ["cmdf", "chemical/x-cmdf"],
  ["cml", "chemical/x-cml"],
  ["cmp", "application/vnd.yellowriver-custom-menu"],
  ["cmx", "image/x-cmx"],
  ["cod", "application/vnd.rim.cod"],
  ["coffee", "text/coffeescript"],
  ["com", "application/x-msdownload"],
  ["conf", "text/plain"],
  ["cpio", "application/x-cpio"],
  ["cpp", "text/x-c"],
  ["cpt", "application/mac-compactpro"],
  ["crd", "application/x-mscardfile"],
  ["crl", "application/pkix-crl"],
  ["crt", "application/x-x509-ca-cert"],
  ["crx", "application/x-chrome-extension"],
  ["cryptonote", "application/vnd.rig.cryptonote"],
  ["csh", "application/x-csh"],
  ["csl", "application/vnd.citationstyles.style+xml"],
  ["csml", "chemical/x-csml"],
  ["csp", "application/vnd.commonspace"],
  ["csr", "application/octet-stream"],
  ["css", "text/css"],
  ["cst", "application/x-director"],
  ["csv", "text/csv"],
  ["cu", "application/cu-seeme"],
  ["curl", "text/vnd.curl"],
  ["cww", "application/prs.cww"],
  ["cxt", "application/x-director"],
  ["cxx", "text/x-c"],
  ["dae", "model/vnd.collada+xml"],
  ["daf", "application/vnd.mobius.daf"],
  ["dart", "application/vnd.dart"],
  ["dataless", "application/vnd.fdsn.seed"],
  ["davmount", "application/davmount+xml"],
  ["dbf", "application/vnd.dbf"],
  ["dbk", "application/docbook+xml"],
  ["dcr", "application/x-director"],
  ["dcurl", "text/vnd.curl.dcurl"],
  ["dd2", "application/vnd.oma.dd2+xml"],
  ["ddd", "application/vnd.fujixerox.ddd"],
  ["ddf", "application/vnd.syncml.dmddf+xml"],
  ["dds", "image/vnd.ms-dds"],
  ["deb", "application/x-debian-package"],
  ["def", "text/plain"],
  ["deploy", "application/octet-stream"],
  ["der", "application/x-x509-ca-cert"],
  ["dfac", "application/vnd.dreamfactory"],
  ["dgc", "application/x-dgc-compressed"],
  ["dic", "text/x-c"],
  ["dir", "application/x-director"],
  ["dis", "application/vnd.mobius.dis"],
  ["disposition-notification", "message/disposition-notification"],
  ["dist", "application/octet-stream"],
  ["distz", "application/octet-stream"],
  ["djv", "image/vnd.djvu"],
  ["djvu", "image/vnd.djvu"],
  ["dll", "application/octet-stream"],
  ["dmg", "application/x-apple-diskimage"],
  ["dmn", "application/octet-stream"],
  ["dmp", "application/vnd.tcpdump.pcap"],
  ["dms", "application/octet-stream"],
  ["dna", "application/vnd.dna"],
  ["doc", "application/msword"],
  ["docm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["dot", "application/msword"],
  ["dotm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"],
  ["dp", "application/vnd.osgi.dp"],
  ["dpg", "application/vnd.dpgraph"],
  ["dra", "audio/vnd.dra"],
  ["drle", "image/dicom-rle"],
  ["dsc", "text/prs.lines.tag"],
  ["dssc", "application/dssc+der"],
  ["dtb", "application/x-dtbook+xml"],
  ["dtd", "application/xml-dtd"],
  ["dts", "audio/vnd.dts"],
  ["dtshd", "audio/vnd.dts.hd"],
  ["dump", "application/octet-stream"],
  ["dvb", "video/vnd.dvb.file"],
  ["dvi", "application/x-dvi"],
  ["dwd", "application/atsc-dwd+xml"],
  ["dwf", "model/vnd.dwf"],
  ["dwg", "image/vnd.dwg"],
  ["dxf", "image/vnd.dxf"],
  ["dxp", "application/vnd.spotfire.dxp"],
  ["dxr", "application/x-director"],
  ["ear", "application/java-archive"],
  ["ecelp4800", "audio/vnd.nuera.ecelp4800"],
  ["ecelp7470", "audio/vnd.nuera.ecelp7470"],
  ["ecelp9600", "audio/vnd.nuera.ecelp9600"],
  ["ecma", "application/ecmascript"],
  ["edm", "application/vnd.novadigm.edm"],
  ["edx", "application/vnd.novadigm.edx"],
  ["efif", "application/vnd.picsel"],
  ["ei6", "application/vnd.pg.osasli"],
  ["elc", "application/octet-stream"],
  ["emf", "image/emf"],
  ["eml", "message/rfc822"],
  ["emma", "application/emma+xml"],
  ["emotionml", "application/emotionml+xml"],
  ["emz", "application/x-msmetafile"],
  ["eol", "audio/vnd.digital-winds"],
  ["eot", "application/vnd.ms-fontobject"],
  ["eps", "application/postscript"],
  ["epub", "application/epub+zip"],
  ["es", "application/ecmascript"],
  ["es3", "application/vnd.eszigno3+xml"],
  ["esa", "application/vnd.osgi.subsystem"],
  ["esf", "application/vnd.epson.esf"],
  ["et3", "application/vnd.eszigno3+xml"],
  ["etx", "text/x-setext"],
  ["eva", "application/x-eva"],
  ["evy", "application/x-envoy"],
  ["exe", "application/octet-stream"],
  ["exi", "application/exi"],
  ["exp", "application/express"],
  ["exr", "image/aces"],
  ["ext", "application/vnd.novadigm.ext"],
  ["ez", "application/andrew-inset"],
  ["ez2", "application/vnd.ezpix-album"],
  ["ez3", "application/vnd.ezpix-package"],
  ["f", "text/x-fortran"],
  ["f4v", "video/mp4"],
  ["f77", "text/x-fortran"],
  ["f90", "text/x-fortran"],
  ["fbs", "image/vnd.fastbidsheet"],
  ["fcdt", "application/vnd.adobe.formscentral.fcdt"],
  ["fcs", "application/vnd.isac.fcs"],
  ["fdf", "application/vnd.fdf"],
  ["fdt", "application/fdt+xml"],
  ["fe_launch", "application/vnd.denovo.fcselayout-link"],
  ["fg5", "application/vnd.fujitsu.oasysgp"],
  ["fgd", "application/x-director"],
  ["fh", "image/x-freehand"],
  ["fh4", "image/x-freehand"],
  ["fh5", "image/x-freehand"],
  ["fh7", "image/x-freehand"],
  ["fhc", "image/x-freehand"],
  ["fig", "application/x-xfig"],
  ["fits", "image/fits"],
  ["flac", "audio/x-flac"],
  ["fli", "video/x-fli"],
  ["flo", "application/vnd.micrografx.flo"],
  ["flv", "video/x-flv"],
  ["flw", "application/vnd.kde.kivio"],
  ["flx", "text/vnd.fmi.flexstor"],
  ["fly", "text/vnd.fly"],
  ["fm", "application/vnd.framemaker"],
  ["fnc", "application/vnd.frogans.fnc"],
  ["fo", "application/vnd.software602.filler.form+xml"],
  ["for", "text/x-fortran"],
  ["fpx", "image/vnd.fpx"],
  ["frame", "application/vnd.framemaker"],
  ["fsc", "application/vnd.fsc.weblaunch"],
  ["fst", "image/vnd.fst"],
  ["ftc", "application/vnd.fluxtime.clip"],
  ["fti", "application/vnd.anser-web-funds-transfer-initiation"],
  ["fvt", "video/vnd.fvt"],
  ["fxp", "application/vnd.adobe.fxp"],
  ["fxpl", "application/vnd.adobe.fxp"],
  ["fzs", "application/vnd.fuzzysheet"],
  ["g2w", "application/vnd.geoplan"],
  ["g3", "image/g3fax"],
  ["g3w", "application/vnd.geospace"],
  ["gac", "application/vnd.groove-account"],
  ["gam", "application/x-tads"],
  ["gbr", "application/rpki-ghostbusters"],
  ["gca", "application/x-gca-compressed"],
  ["gdl", "model/vnd.gdl"],
  ["gdoc", "application/vnd.google-apps.document"],
  ["geo", "application/vnd.dynageo"],
  ["geojson", "application/geo+json"],
  ["gex", "application/vnd.geometry-explorer"],
  ["ggb", "application/vnd.geogebra.file"],
  ["ggt", "application/vnd.geogebra.tool"],
  ["ghf", "application/vnd.groove-help"],
  ["gif", "image/gif"],
  ["gim", "application/vnd.groove-identity-message"],
  ["glb", "model/gltf-binary"],
  ["gltf", "model/gltf+json"],
  ["gml", "application/gml+xml"],
  ["gmx", "application/vnd.gmx"],
  ["gnumeric", "application/x-gnumeric"],
  ["gpg", "application/gpg-keys"],
  ["gph", "application/vnd.flographit"],
  ["gpx", "application/gpx+xml"],
  ["gqf", "application/vnd.grafeq"],
  ["gqs", "application/vnd.grafeq"],
  ["gram", "application/srgs"],
  ["gramps", "application/x-gramps-xml"],
  ["gre", "application/vnd.geometry-explorer"],
  ["grv", "application/vnd.groove-injector"],
  ["grxml", "application/srgs+xml"],
  ["gsf", "application/x-font-ghostscript"],
  ["gsheet", "application/vnd.google-apps.spreadsheet"],
  ["gslides", "application/vnd.google-apps.presentation"],
  ["gtar", "application/x-gtar"],
  ["gtm", "application/vnd.groove-tool-message"],
  ["gtw", "model/vnd.gtw"],
  ["gv", "text/vnd.graphviz"],
  ["gxf", "application/gxf"],
  ["gxt", "application/vnd.geonext"],
  ["gz", "application/gzip"],
  ["gzip", "application/gzip"],
  ["h", "text/x-c"],
  ["h261", "video/h261"],
  ["h263", "video/h263"],
  ["h264", "video/h264"],
  ["hal", "application/vnd.hal+xml"],
  ["hbci", "application/vnd.hbci"],
  ["hbs", "text/x-handlebars-template"],
  ["hdd", "application/x-virtualbox-hdd"],
  ["hdf", "application/x-hdf"],
  ["heic", "image/heic"],
  ["heics", "image/heic-sequence"],
  ["heif", "image/heif"],
  ["heifs", "image/heif-sequence"],
  ["hej2", "image/hej2k"],
  ["held", "application/atsc-held+xml"],
  ["hh", "text/x-c"],
  ["hjson", "application/hjson"],
  ["hlp", "application/winhlp"],
  ["hpgl", "application/vnd.hp-hpgl"],
  ["hpid", "application/vnd.hp-hpid"],
  ["hps", "application/vnd.hp-hps"],
  ["hqx", "application/mac-binhex40"],
  ["hsj2", "image/hsj2"],
  ["htc", "text/x-component"],
  ["htke", "application/vnd.kenameaapp"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["hvd", "application/vnd.yamaha.hv-dic"],
  ["hvp", "application/vnd.yamaha.hv-voice"],
  ["hvs", "application/vnd.yamaha.hv-script"],
  ["i2g", "application/vnd.intergeo"],
  ["icc", "application/vnd.iccprofile"],
  ["ice", "x-conference/x-cooltalk"],
  ["icm", "application/vnd.iccprofile"],
  ["ico", "image/x-icon"],
  ["ics", "text/calendar"],
  ["ief", "image/ief"],
  ["ifb", "text/calendar"],
  ["ifm", "application/vnd.shana.informed.formdata"],
  ["iges", "model/iges"],
  ["igl", "application/vnd.igloader"],
  ["igm", "application/vnd.insors.igm"],
  ["igs", "model/iges"],
  ["igx", "application/vnd.micrografx.igx"],
  ["iif", "application/vnd.shana.informed.interchange"],
  ["img", "application/octet-stream"],
  ["imp", "application/vnd.accpac.simply.imp"],
  ["ims", "application/vnd.ms-ims"],
  ["in", "text/plain"],
  ["ini", "text/plain"],
  ["ink", "application/inkml+xml"],
  ["inkml", "application/inkml+xml"],
  ["install", "application/x-install-instructions"],
  ["iota", "application/vnd.astraea-software.iota"],
  ["ipfix", "application/ipfix"],
  ["ipk", "application/vnd.shana.informed.package"],
  ["irm", "application/vnd.ibm.rights-management"],
  ["irp", "application/vnd.irepository.package+xml"],
  ["iso", "application/x-iso9660-image"],
  ["itp", "application/vnd.shana.informed.formtemplate"],
  ["its", "application/its+xml"],
  ["ivp", "application/vnd.immervision-ivp"],
  ["ivu", "application/vnd.immervision-ivu"],
  ["jad", "text/vnd.sun.j2me.app-descriptor"],
  ["jade", "text/jade"],
  ["jam", "application/vnd.jam"],
  ["jar", "application/java-archive"],
  ["jardiff", "application/x-java-archive-diff"],
  ["java", "text/x-java-source"],
  ["jhc", "image/jphc"],
  ["jisp", "application/vnd.jisp"],
  ["jls", "image/jls"],
  ["jlt", "application/vnd.hp-jlyt"],
  ["jng", "image/x-jng"],
  ["jnlp", "application/x-java-jnlp-file"],
  ["joda", "application/vnd.joost.joda-archive"],
  ["jp2", "image/jp2"],
  ["jpe", "image/jpeg"],
  ["jpeg", "image/jpeg"],
  ["jpf", "image/jpx"],
  ["jpg", "image/jpeg"],
  ["jpg2", "image/jp2"],
  ["jpgm", "video/jpm"],
  ["jpgv", "video/jpeg"],
  ["jph", "image/jph"],
  ["jpm", "video/jpm"],
  ["jpx", "image/jpx"],
  ["js", "application/javascript"],
  ["json", "application/json"],
  ["json5", "application/json5"],
  ["jsonld", "application/ld+json"],
  // https://jsonlines.org/
  ["jsonl", "application/jsonl"],
  ["jsonml", "application/jsonml+json"],
  ["jsx", "text/jsx"],
  ["jxr", "image/jxr"],
  ["jxra", "image/jxra"],
  ["jxrs", "image/jxrs"],
  ["jxs", "image/jxs"],
  ["jxsc", "image/jxsc"],
  ["jxsi", "image/jxsi"],
  ["jxss", "image/jxss"],
  ["kar", "audio/midi"],
  ["karbon", "application/vnd.kde.karbon"],
  ["kdb", "application/octet-stream"],
  ["kdbx", "application/x-keepass2"],
  ["key", "application/x-iwork-keynote-sffkey"],
  ["kfo", "application/vnd.kde.kformula"],
  ["kia", "application/vnd.kidspiration"],
  ["kml", "application/vnd.google-earth.kml+xml"],
  ["kmz", "application/vnd.google-earth.kmz"],
  ["kne", "application/vnd.kinar"],
  ["knp", "application/vnd.kinar"],
  ["kon", "application/vnd.kde.kontour"],
  ["kpr", "application/vnd.kde.kpresenter"],
  ["kpt", "application/vnd.kde.kpresenter"],
  ["kpxx", "application/vnd.ds-keypoint"],
  ["ksp", "application/vnd.kde.kspread"],
  ["ktr", "application/vnd.kahootz"],
  ["ktx", "image/ktx"],
  ["ktx2", "image/ktx2"],
  ["ktz", "application/vnd.kahootz"],
  ["kwd", "application/vnd.kde.kword"],
  ["kwt", "application/vnd.kde.kword"],
  ["lasxml", "application/vnd.las.las+xml"],
  ["latex", "application/x-latex"],
  ["lbd", "application/vnd.llamagraphics.life-balance.desktop"],
  ["lbe", "application/vnd.llamagraphics.life-balance.exchange+xml"],
  ["les", "application/vnd.hhe.lesson-player"],
  ["less", "text/less"],
  ["lgr", "application/lgr+xml"],
  ["lha", "application/octet-stream"],
  ["link66", "application/vnd.route66.link66+xml"],
  ["list", "text/plain"],
  ["list3820", "application/vnd.ibm.modcap"],
  ["listafp", "application/vnd.ibm.modcap"],
  ["litcoffee", "text/coffeescript"],
  ["lnk", "application/x-ms-shortcut"],
  ["log", "text/plain"],
  ["lostxml", "application/lost+xml"],
  ["lrf", "application/octet-stream"],
  ["lrm", "application/vnd.ms-lrm"],
  ["ltf", "application/vnd.frogans.ltf"],
  ["lua", "text/x-lua"],
  ["luac", "application/x-lua-bytecode"],
  ["lvp", "audio/vnd.lucent.voice"],
  ["lwp", "application/vnd.lotus-wordpro"],
  ["lzh", "application/octet-stream"],
  ["m1v", "video/mpeg"],
  ["m2a", "audio/mpeg"],
  ["m2v", "video/mpeg"],
  ["m3a", "audio/mpeg"],
  ["m3u", "text/plain"],
  ["m3u8", "application/vnd.apple.mpegurl"],
  ["m4a", "audio/x-m4a"],
  ["m4p", "application/mp4"],
  ["m4s", "video/iso.segment"],
  ["m4u", "application/vnd.mpegurl"],
  ["m4v", "video/x-m4v"],
  ["m13", "application/x-msmediaview"],
  ["m14", "application/x-msmediaview"],
  ["m21", "application/mp21"],
  ["ma", "application/mathematica"],
  ["mads", "application/mads+xml"],
  ["maei", "application/mmt-aei+xml"],
  ["mag", "application/vnd.ecowin.chart"],
  ["maker", "application/vnd.framemaker"],
  ["man", "text/troff"],
  ["manifest", "text/cache-manifest"],
  ["map", "application/json"],
  ["mar", "application/octet-stream"],
  ["markdown", "text/markdown"],
  ["mathml", "application/mathml+xml"],
  ["mb", "application/mathematica"],
  ["mbk", "application/vnd.mobius.mbk"],
  ["mbox", "application/mbox"],
  ["mc1", "application/vnd.medcalcdata"],
  ["mcd", "application/vnd.mcd"],
  ["mcurl", "text/vnd.curl.mcurl"],
  ["md", "text/markdown"],
  ["mdb", "application/x-msaccess"],
  ["mdi", "image/vnd.ms-modi"],
  ["mdx", "text/mdx"],
  ["me", "text/troff"],
  ["mesh", "model/mesh"],
  ["meta4", "application/metalink4+xml"],
  ["metalink", "application/metalink+xml"],
  ["mets", "application/mets+xml"],
  ["mfm", "application/vnd.mfmp"],
  ["mft", "application/rpki-manifest"],
  ["mgp", "application/vnd.osgeo.mapguide.package"],
  ["mgz", "application/vnd.proteus.magazine"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mie", "application/x-mie"],
  ["mif", "application/vnd.mif"],
  ["mime", "message/rfc822"],
  ["mj2", "video/mj2"],
  ["mjp2", "video/mj2"],
  ["mjs", "application/javascript"],
  ["mk3d", "video/x-matroska"],
  ["mka", "audio/x-matroska"],
  ["mkd", "text/x-markdown"],
  ["mks", "video/x-matroska"],
  ["mkv", "video/x-matroska"],
  ["mlp", "application/vnd.dolby.mlp"],
  ["mmd", "application/vnd.chipnuts.karaoke-mmd"],
  ["mmf", "application/vnd.smaf"],
  ["mml", "text/mathml"],
  ["mmr", "image/vnd.fujixerox.edmics-mmr"],
  ["mng", "video/x-mng"],
  ["mny", "application/x-msmoney"],
  ["mobi", "application/x-mobipocket-ebook"],
  ["mods", "application/mods+xml"],
  ["mov", "video/quicktime"],
  ["movie", "video/x-sgi-movie"],
  ["mp2", "audio/mpeg"],
  ["mp2a", "audio/mpeg"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mp4a", "audio/mp4"],
  ["mp4s", "application/mp4"],
  ["mp4v", "video/mp4"],
  ["mp21", "application/mp21"],
  ["mpc", "application/vnd.mophun.certificate"],
  ["mpd", "application/dash+xml"],
  ["mpe", "video/mpeg"],
  ["mpeg", "video/mpeg"],
  ["mpg", "video/mpeg"],
  ["mpg4", "video/mp4"],
  ["mpga", "audio/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["mpm", "application/vnd.blueice.multipass"],
  ["mpn", "application/vnd.mophun.application"],
  ["mpp", "application/vnd.ms-project"],
  ["mpt", "application/vnd.ms-project"],
  ["mpy", "application/vnd.ibm.minipay"],
  ["mqy", "application/vnd.mobius.mqy"],
  ["mrc", "application/marc"],
  ["mrcx", "application/marcxml+xml"],
  ["ms", "text/troff"],
  ["mscml", "application/mediaservercontrol+xml"],
  ["mseed", "application/vnd.fdsn.mseed"],
  ["mseq", "application/vnd.mseq"],
  ["msf", "application/vnd.epson.msf"],
  ["msg", "application/vnd.ms-outlook"],
  ["msh", "model/mesh"],
  ["msi", "application/x-msdownload"],
  ["msl", "application/vnd.mobius.msl"],
  ["msm", "application/octet-stream"],
  ["msp", "application/octet-stream"],
  ["msty", "application/vnd.muvee.style"],
  ["mtl", "model/mtl"],
  ["mts", "model/vnd.mts"],
  ["mus", "application/vnd.musician"],
  ["musd", "application/mmt-usd+xml"],
  ["musicxml", "application/vnd.recordare.musicxml+xml"],
  ["mvb", "application/x-msmediaview"],
  ["mvt", "application/vnd.mapbox-vector-tile"],
  ["mwf", "application/vnd.mfer"],
  ["mxf", "application/mxf"],
  ["mxl", "application/vnd.recordare.musicxml"],
  ["mxmf", "audio/mobile-xmf"],
  ["mxml", "application/xv+xml"],
  ["mxs", "application/vnd.triscape.mxs"],
  ["mxu", "video/vnd.mpegurl"],
  ["n-gage", "application/vnd.nokia.n-gage.symbian.install"],
  ["n3", "text/n3"],
  ["nb", "application/mathematica"],
  ["nbp", "application/vnd.wolfram.player"],
  ["nc", "application/x-netcdf"],
  ["ncx", "application/x-dtbncx+xml"],
  ["nfo", "text/x-nfo"],
  ["ngdat", "application/vnd.nokia.n-gage.data"],
  ["nitf", "application/vnd.nitf"],
  ["nlu", "application/vnd.neurolanguage.nlu"],
  ["nml", "application/vnd.enliven"],
  ["nnd", "application/vnd.noblenet-directory"],
  ["nns", "application/vnd.noblenet-sealer"],
  ["nnw", "application/vnd.noblenet-web"],
  ["npx", "image/vnd.net-fpx"],
  ["nq", "application/n-quads"],
  ["nsc", "application/x-conference"],
  ["nsf", "application/vnd.lotus-notes"],
  ["nt", "application/n-triples"],
  ["ntf", "application/vnd.nitf"],
  ["numbers", "application/x-iwork-numbers-sffnumbers"],
  ["nzb", "application/x-nzb"],
  ["oa2", "application/vnd.fujitsu.oasys2"],
  ["oa3", "application/vnd.fujitsu.oasys3"],
  ["oas", "application/vnd.fujitsu.oasys"],
  ["obd", "application/x-msbinder"],
  ["obgx", "application/vnd.openblox.game+xml"],
  ["obj", "model/obj"],
  ["oda", "application/oda"],
  ["odb", "application/vnd.oasis.opendocument.database"],
  ["odc", "application/vnd.oasis.opendocument.chart"],
  ["odf", "application/vnd.oasis.opendocument.formula"],
  ["odft", "application/vnd.oasis.opendocument.formula-template"],
  ["odg", "application/vnd.oasis.opendocument.graphics"],
  ["odi", "application/vnd.oasis.opendocument.image"],
  ["odm", "application/vnd.oasis.opendocument.text-master"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogex", "model/vnd.opengex"],
  ["ogg", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["omdoc", "application/omdoc+xml"],
  ["onepkg", "application/onenote"],
  ["onetmp", "application/onenote"],
  ["onetoc", "application/onenote"],
  ["onetoc2", "application/onenote"],
  ["opf", "application/oebps-package+xml"],
  ["opml", "text/x-opml"],
  ["oprc", "application/vnd.palm"],
  ["opus", "audio/ogg"],
  ["org", "text/x-org"],
  ["osf", "application/vnd.yamaha.openscoreformat"],
  ["osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml"],
  ["osm", "application/vnd.openstreetmap.data+xml"],
  ["otc", "application/vnd.oasis.opendocument.chart-template"],
  ["otf", "font/otf"],
  ["otg", "application/vnd.oasis.opendocument.graphics-template"],
  ["oth", "application/vnd.oasis.opendocument.text-web"],
  ["oti", "application/vnd.oasis.opendocument.image-template"],
  ["otp", "application/vnd.oasis.opendocument.presentation-template"],
  ["ots", "application/vnd.oasis.opendocument.spreadsheet-template"],
  ["ott", "application/vnd.oasis.opendocument.text-template"],
  ["ova", "application/x-virtualbox-ova"],
  ["ovf", "application/x-virtualbox-ovf"],
  ["owl", "application/rdf+xml"],
  ["oxps", "application/oxps"],
  ["oxt", "application/vnd.openofficeorg.extension"],
  ["p", "text/x-pascal"],
  ["p7a", "application/x-pkcs7-signature"],
  ["p7b", "application/x-pkcs7-certificates"],
  ["p7c", "application/pkcs7-mime"],
  ["p7m", "application/pkcs7-mime"],
  ["p7r", "application/x-pkcs7-certreqresp"],
  ["p7s", "application/pkcs7-signature"],
  ["p8", "application/pkcs8"],
  ["p10", "application/x-pkcs10"],
  ["p12", "application/x-pkcs12"],
  ["pac", "application/x-ns-proxy-autoconfig"],
  ["pages", "application/x-iwork-pages-sffpages"],
  ["pas", "text/x-pascal"],
  ["paw", "application/vnd.pawaafile"],
  ["pbd", "application/vnd.powerbuilder6"],
  ["pbm", "image/x-portable-bitmap"],
  ["pcap", "application/vnd.tcpdump.pcap"],
  ["pcf", "application/x-font-pcf"],
  ["pcl", "application/vnd.hp-pcl"],
  ["pclxl", "application/vnd.hp-pclxl"],
  ["pct", "image/x-pict"],
  ["pcurl", "application/vnd.curl.pcurl"],
  ["pcx", "image/x-pcx"],
  ["pdb", "application/x-pilot"],
  ["pde", "text/x-processing"],
  ["pdf", "application/pdf"],
  ["pem", "application/x-x509-user-cert"],
  ["pfa", "application/x-font-type1"],
  ["pfb", "application/x-font-type1"],
  ["pfm", "application/x-font-type1"],
  ["pfr", "application/font-tdpfr"],
  ["pfx", "application/x-pkcs12"],
  ["pgm", "image/x-portable-graymap"],
  ["pgn", "application/x-chess-pgn"],
  ["pgp", "application/pgp"],
  ["php", "application/x-httpd-php"],
  ["php3", "application/x-httpd-php"],
  ["php4", "application/x-httpd-php"],
  ["phps", "application/x-httpd-php-source"],
  ["phtml", "application/x-httpd-php"],
  ["pic", "image/x-pict"],
  ["pkg", "application/octet-stream"],
  ["pki", "application/pkixcmp"],
  ["pkipath", "application/pkix-pkipath"],
  ["pkpass", "application/vnd.apple.pkpass"],
  ["pl", "application/x-perl"],
  ["plb", "application/vnd.3gpp.pic-bw-large"],
  ["plc", "application/vnd.mobius.plc"],
  ["plf", "application/vnd.pocketlearn"],
  ["pls", "application/pls+xml"],
  ["pm", "application/x-perl"],
  ["pml", "application/vnd.ctc-posml"],
  ["png", "image/png"],
  ["pnm", "image/x-portable-anymap"],
  ["portpkg", "application/vnd.macports.portpkg"],
  ["pot", "application/vnd.ms-powerpoint"],
  ["potm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["potx", "application/vnd.openxmlformats-officedocument.presentationml.template"],
  ["ppa", "application/vnd.ms-powerpoint"],
  ["ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"],
  ["ppd", "application/vnd.cups-ppd"],
  ["ppm", "image/x-portable-pixmap"],
  ["pps", "application/vnd.ms-powerpoint"],
  ["ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"],
  ["ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"],
  ["ppt", "application/powerpoint"],
  ["pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["pqa", "application/vnd.palm"],
  ["prc", "application/x-pilot"],
  ["pre", "application/vnd.lotus-freelance"],
  ["prf", "application/pics-rules"],
  ["provx", "application/provenance+xml"],
  ["ps", "application/postscript"],
  ["psb", "application/vnd.3gpp.pic-bw-small"],
  ["psd", "application/x-photoshop"],
  ["psf", "application/x-font-linux-psf"],
  ["pskcxml", "application/pskc+xml"],
  ["pti", "image/prs.pti"],
  ["ptid", "application/vnd.pvi.ptid1"],
  ["pub", "application/x-mspublisher"],
  ["pvb", "application/vnd.3gpp.pic-bw-var"],
  ["pwn", "application/vnd.3m.post-it-notes"],
  ["pya", "audio/vnd.ms-playready.media.pya"],
  ["pyv", "video/vnd.ms-playready.media.pyv"],
  ["qam", "application/vnd.epson.quickanime"],
  ["qbo", "application/vnd.intu.qbo"],
  ["qfx", "application/vnd.intu.qfx"],
  ["qps", "application/vnd.publishare-delta-tree"],
  ["qt", "video/quicktime"],
  ["qwd", "application/vnd.quark.quarkxpress"],
  ["qwt", "application/vnd.quark.quarkxpress"],
  ["qxb", "application/vnd.quark.quarkxpress"],
  ["qxd", "application/vnd.quark.quarkxpress"],
  ["qxl", "application/vnd.quark.quarkxpress"],
  ["qxt", "application/vnd.quark.quarkxpress"],
  ["ra", "audio/x-realaudio"],
  ["ram", "audio/x-pn-realaudio"],
  ["raml", "application/raml+yaml"],
  ["rapd", "application/route-apd+xml"],
  ["rar", "application/x-rar"],
  ["ras", "image/x-cmu-raster"],
  ["rcprofile", "application/vnd.ipunplugged.rcprofile"],
  ["rdf", "application/rdf+xml"],
  ["rdz", "application/vnd.data-vision.rdz"],
  ["relo", "application/p2p-overlay+xml"],
  ["rep", "application/vnd.businessobjects"],
  ["res", "application/x-dtbresource+xml"],
  ["rgb", "image/x-rgb"],
  ["rif", "application/reginfo+xml"],
  ["rip", "audio/vnd.rip"],
  ["ris", "application/x-research-info-systems"],
  ["rl", "application/resource-lists+xml"],
  ["rlc", "image/vnd.fujixerox.edmics-rlc"],
  ["rld", "application/resource-lists-diff+xml"],
  ["rm", "audio/x-pn-realaudio"],
  ["rmi", "audio/midi"],
  ["rmp", "audio/x-pn-realaudio-plugin"],
  ["rms", "application/vnd.jcp.javame.midlet-rms"],
  ["rmvb", "application/vnd.rn-realmedia-vbr"],
  ["rnc", "application/relax-ng-compact-syntax"],
  ["rng", "application/xml"],
  ["roa", "application/rpki-roa"],
  ["roff", "text/troff"],
  ["rp9", "application/vnd.cloanto.rp9"],
  ["rpm", "audio/x-pn-realaudio-plugin"],
  ["rpss", "application/vnd.nokia.radio-presets"],
  ["rpst", "application/vnd.nokia.radio-preset"],
  ["rq", "application/sparql-query"],
  ["rs", "application/rls-services+xml"],
  ["rsa", "application/x-pkcs7"],
  ["rsat", "application/atsc-rsat+xml"],
  ["rsd", "application/rsd+xml"],
  ["rsheet", "application/urc-ressheet+xml"],
  ["rss", "application/rss+xml"],
  ["rtf", "text/rtf"],
  ["rtx", "text/richtext"],
  ["run", "application/x-makeself"],
  ["rusd", "application/route-usd+xml"],
  ["rv", "video/vnd.rn-realvideo"],
  ["s", "text/x-asm"],
  ["s3m", "audio/s3m"],
  ["saf", "application/vnd.yamaha.smaf-audio"],
  ["sass", "text/x-sass"],
  ["sbml", "application/sbml+xml"],
  ["sc", "application/vnd.ibm.secure-container"],
  ["scd", "application/x-msschedule"],
  ["scm", "application/vnd.lotus-screencam"],
  ["scq", "application/scvp-cv-request"],
  ["scs", "application/scvp-cv-response"],
  ["scss", "text/x-scss"],
  ["scurl", "text/vnd.curl.scurl"],
  ["sda", "application/vnd.stardivision.draw"],
  ["sdc", "application/vnd.stardivision.calc"],
  ["sdd", "application/vnd.stardivision.impress"],
  ["sdkd", "application/vnd.solent.sdkm+xml"],
  ["sdkm", "application/vnd.solent.sdkm+xml"],
  ["sdp", "application/sdp"],
  ["sdw", "application/vnd.stardivision.writer"],
  ["sea", "application/octet-stream"],
  ["see", "application/vnd.seemail"],
  ["seed", "application/vnd.fdsn.seed"],
  ["sema", "application/vnd.sema"],
  ["semd", "application/vnd.semd"],
  ["semf", "application/vnd.semf"],
  ["senmlx", "application/senml+xml"],
  ["sensmlx", "application/sensml+xml"],
  ["ser", "application/java-serialized-object"],
  ["setpay", "application/set-payment-initiation"],
  ["setreg", "application/set-registration-initiation"],
  ["sfd-hdstx", "application/vnd.hydrostatix.sof-data"],
  ["sfs", "application/vnd.spotfire.sfs"],
  ["sfv", "text/x-sfv"],
  ["sgi", "image/sgi"],
  ["sgl", "application/vnd.stardivision.writer-global"],
  ["sgm", "text/sgml"],
  ["sgml", "text/sgml"],
  ["sh", "application/x-sh"],
  ["shar", "application/x-shar"],
  ["shex", "text/shex"],
  ["shf", "application/shf+xml"],
  ["shtml", "text/html"],
  ["sid", "image/x-mrsid-image"],
  ["sieve", "application/sieve"],
  ["sig", "application/pgp-signature"],
  ["sil", "audio/silk"],
  ["silo", "model/mesh"],
  ["sis", "application/vnd.symbian.install"],
  ["sisx", "application/vnd.symbian.install"],
  ["sit", "application/x-stuffit"],
  ["sitx", "application/x-stuffitx"],
  ["siv", "application/sieve"],
  ["skd", "application/vnd.koan"],
  ["skm", "application/vnd.koan"],
  ["skp", "application/vnd.koan"],
  ["skt", "application/vnd.koan"],
  ["sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12"],
  ["sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"],
  ["slim", "text/slim"],
  ["slm", "text/slim"],
  ["sls", "application/route-s-tsid+xml"],
  ["slt", "application/vnd.epson.salt"],
  ["sm", "application/vnd.stepmania.stepchart"],
  ["smf", "application/vnd.stardivision.math"],
  ["smi", "application/smil"],
  ["smil", "application/smil"],
  ["smv", "video/x-smv"],
  ["smzip", "application/vnd.stepmania.package"],
  ["snd", "audio/basic"],
  ["snf", "application/x-font-snf"],
  ["so", "application/octet-stream"],
  ["spc", "application/x-pkcs7-certificates"],
  ["spdx", "text/spdx"],
  ["spf", "application/vnd.yamaha.smaf-phrase"],
  ["spl", "application/x-futuresplash"],
  ["spot", "text/vnd.in3d.spot"],
  ["spp", "application/scvp-vp-response"],
  ["spq", "application/scvp-vp-request"],
  ["spx", "audio/ogg"],
  ["sql", "application/x-sql"],
  ["src", "application/x-wais-source"],
  ["srt", "application/x-subrip"],
  ["sru", "application/sru+xml"],
  ["srx", "application/sparql-results+xml"],
  ["ssdl", "application/ssdl+xml"],
  ["sse", "application/vnd.kodak-descriptor"],
  ["ssf", "application/vnd.epson.ssf"],
  ["ssml", "application/ssml+xml"],
  ["sst", "application/octet-stream"],
  ["st", "application/vnd.sailingtracker.track"],
  ["stc", "application/vnd.sun.xml.calc.template"],
  ["std", "application/vnd.sun.xml.draw.template"],
  ["stf", "application/vnd.wt.stf"],
  ["sti", "application/vnd.sun.xml.impress.template"],
  ["stk", "application/hyperstudio"],
  ["stl", "model/stl"],
  ["stpx", "model/step+xml"],
  ["stpxz", "model/step-xml+zip"],
  ["stpz", "model/step+zip"],
  ["str", "application/vnd.pg.format"],
  ["stw", "application/vnd.sun.xml.writer.template"],
  ["styl", "text/stylus"],
  ["stylus", "text/stylus"],
  ["sub", "text/vnd.dvb.subtitle"],
  ["sus", "application/vnd.sus-calendar"],
  ["susp", "application/vnd.sus-calendar"],
  ["sv4cpio", "application/x-sv4cpio"],
  ["sv4crc", "application/x-sv4crc"],
  ["svc", "application/vnd.dvb.service"],
  ["svd", "application/vnd.svd"],
  ["svg", "image/svg+xml"],
  ["svgz", "image/svg+xml"],
  ["swa", "application/x-director"],
  ["swf", "application/x-shockwave-flash"],
  ["swi", "application/vnd.aristanetworks.swi"],
  ["swidtag", "application/swid+xml"],
  ["sxc", "application/vnd.sun.xml.calc"],
  ["sxd", "application/vnd.sun.xml.draw"],
  ["sxg", "application/vnd.sun.xml.writer.global"],
  ["sxi", "application/vnd.sun.xml.impress"],
  ["sxm", "application/vnd.sun.xml.math"],
  ["sxw", "application/vnd.sun.xml.writer"],
  ["t", "text/troff"],
  ["t3", "application/x-t3vm-image"],
  ["t38", "image/t38"],
  ["taglet", "application/vnd.mynfc"],
  ["tao", "application/vnd.tao.intent-module-archive"],
  ["tap", "image/vnd.tencent.tap"],
  ["tar", "application/x-tar"],
  ["tcap", "application/vnd.3gpp2.tcap"],
  ["tcl", "application/x-tcl"],
  ["td", "application/urc-targetdesc+xml"],
  ["teacher", "application/vnd.smart.teacher"],
  ["tei", "application/tei+xml"],
  ["teicorpus", "application/tei+xml"],
  ["tex", "application/x-tex"],
  ["texi", "application/x-texinfo"],
  ["texinfo", "application/x-texinfo"],
  ["text", "text/plain"],
  ["tfi", "application/thraud+xml"],
  ["tfm", "application/x-tex-tfm"],
  ["tfx", "image/tiff-fx"],
  ["tga", "image/x-tga"],
  ["tgz", "application/x-tar"],
  ["thmx", "application/vnd.ms-officetheme"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["tk", "application/x-tcl"],
  ["tmo", "application/vnd.tmobile-livetv"],
  ["toml", "application/toml"],
  ["torrent", "application/x-bittorrent"],
  ["tpl", "application/vnd.groove-tool-template"],
  ["tpt", "application/vnd.trid.tpt"],
  ["tr", "text/troff"],
  ["tra", "application/vnd.trueapp"],
  ["trig", "application/trig"],
  ["trm", "application/x-msterminal"],
  ["ts", "video/mp2t"],
  ["tsd", "application/timestamped-data"],
  ["tsv", "text/tab-separated-values"],
  ["ttc", "font/collection"],
  ["ttf", "font/ttf"],
  ["ttl", "text/turtle"],
  ["ttml", "application/ttml+xml"],
  ["twd", "application/vnd.simtech-mindmapper"],
  ["twds", "application/vnd.simtech-mindmapper"],
  ["txd", "application/vnd.genomatix.tuxedo"],
  ["txf", "application/vnd.mobius.txf"],
  ["txt", "text/plain"],
  ["u8dsn", "message/global-delivery-status"],
  ["u8hdr", "message/global-headers"],
  ["u8mdn", "message/global-disposition-notification"],
  ["u8msg", "message/global"],
  ["u32", "application/x-authorware-bin"],
  ["ubj", "application/ubjson"],
  ["udeb", "application/x-debian-package"],
  ["ufd", "application/vnd.ufdl"],
  ["ufdl", "application/vnd.ufdl"],
  ["ulx", "application/x-glulx"],
  ["umj", "application/vnd.umajin"],
  ["unityweb", "application/vnd.unity"],
  ["uoml", "application/vnd.uoml+xml"],
  ["uri", "text/uri-list"],
  ["uris", "text/uri-list"],
  ["urls", "text/uri-list"],
  ["usdz", "model/vnd.usdz+zip"],
  ["ustar", "application/x-ustar"],
  ["utz", "application/vnd.uiq.theme"],
  ["uu", "text/x-uuencode"],
  ["uva", "audio/vnd.dece.audio"],
  ["uvd", "application/vnd.dece.data"],
  ["uvf", "application/vnd.dece.data"],
  ["uvg", "image/vnd.dece.graphic"],
  ["uvh", "video/vnd.dece.hd"],
  ["uvi", "image/vnd.dece.graphic"],
  ["uvm", "video/vnd.dece.mobile"],
  ["uvp", "video/vnd.dece.pd"],
  ["uvs", "video/vnd.dece.sd"],
  ["uvt", "application/vnd.dece.ttml+xml"],
  ["uvu", "video/vnd.uvvu.mp4"],
  ["uvv", "video/vnd.dece.video"],
  ["uvva", "audio/vnd.dece.audio"],
  ["uvvd", "application/vnd.dece.data"],
  ["uvvf", "application/vnd.dece.data"],
  ["uvvg", "image/vnd.dece.graphic"],
  ["uvvh", "video/vnd.dece.hd"],
  ["uvvi", "image/vnd.dece.graphic"],
  ["uvvm", "video/vnd.dece.mobile"],
  ["uvvp", "video/vnd.dece.pd"],
  ["uvvs", "video/vnd.dece.sd"],
  ["uvvt", "application/vnd.dece.ttml+xml"],
  ["uvvu", "video/vnd.uvvu.mp4"],
  ["uvvv", "video/vnd.dece.video"],
  ["uvvx", "application/vnd.dece.unspecified"],
  ["uvvz", "application/vnd.dece.zip"],
  ["uvx", "application/vnd.dece.unspecified"],
  ["uvz", "application/vnd.dece.zip"],
  ["vbox", "application/x-virtualbox-vbox"],
  ["vbox-extpack", "application/x-virtualbox-vbox-extpack"],
  ["vcard", "text/vcard"],
  ["vcd", "application/x-cdlink"],
  ["vcf", "text/x-vcard"],
  ["vcg", "application/vnd.groove-vcard"],
  ["vcs", "text/x-vcalendar"],
  ["vcx", "application/vnd.vcx"],
  ["vdi", "application/x-virtualbox-vdi"],
  ["vds", "model/vnd.sap.vds"],
  ["vhd", "application/x-virtualbox-vhd"],
  ["vis", "application/vnd.visionary"],
  ["viv", "video/vnd.vivo"],
  ["vlc", "application/videolan"],
  ["vmdk", "application/x-virtualbox-vmdk"],
  ["vob", "video/x-ms-vob"],
  ["vor", "application/vnd.stardivision.writer"],
  ["vox", "application/x-authorware-bin"],
  ["vrml", "model/vrml"],
  ["vsd", "application/vnd.visio"],
  ["vsf", "application/vnd.vsf"],
  ["vss", "application/vnd.visio"],
  ["vst", "application/vnd.visio"],
  ["vsw", "application/vnd.visio"],
  ["vtf", "image/vnd.valve.source.texture"],
  ["vtt", "text/vtt"],
  ["vtu", "model/vnd.vtu"],
  ["vxml", "application/voicexml+xml"],
  ["w3d", "application/x-director"],
  ["wad", "application/x-doom"],
  ["wadl", "application/vnd.sun.wadl+xml"],
  ["war", "application/java-archive"],
  ["wasm", "application/wasm"],
  ["wav", "audio/x-wav"],
  ["wax", "audio/x-ms-wax"],
  ["wbmp", "image/vnd.wap.wbmp"],
  ["wbs", "application/vnd.criticaltools.wbs+xml"],
  ["wbxml", "application/wbxml"],
  ["wcm", "application/vnd.ms-works"],
  ["wdb", "application/vnd.ms-works"],
  ["wdp", "image/vnd.ms-photo"],
  ["weba", "audio/webm"],
  ["webapp", "application/x-web-app-manifest+json"],
  ["webm", "video/webm"],
  ["webmanifest", "application/manifest+json"],
  ["webp", "image/webp"],
  ["wg", "application/vnd.pmi.widget"],
  ["wgt", "application/widget"],
  ["wks", "application/vnd.ms-works"],
  ["wm", "video/x-ms-wm"],
  ["wma", "audio/x-ms-wma"],
  ["wmd", "application/x-ms-wmd"],
  ["wmf", "image/wmf"],
  ["wml", "text/vnd.wap.wml"],
  ["wmlc", "application/wmlc"],
  ["wmls", "text/vnd.wap.wmlscript"],
  ["wmlsc", "application/vnd.wap.wmlscriptc"],
  ["wmv", "video/x-ms-wmv"],
  ["wmx", "video/x-ms-wmx"],
  ["wmz", "application/x-msmetafile"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["word", "application/msword"],
  ["wpd", "application/vnd.wordperfect"],
  ["wpl", "application/vnd.ms-wpl"],
  ["wps", "application/vnd.ms-works"],
  ["wqd", "application/vnd.wqd"],
  ["wri", "application/x-mswrite"],
  ["wrl", "model/vrml"],
  ["wsc", "message/vnd.wfa.wsc"],
  ["wsdl", "application/wsdl+xml"],
  ["wspolicy", "application/wspolicy+xml"],
  ["wtb", "application/vnd.webturbo"],
  ["wvx", "video/x-ms-wvx"],
  ["x3d", "model/x3d+xml"],
  ["x3db", "model/x3d+fastinfoset"],
  ["x3dbz", "model/x3d+binary"],
  ["x3dv", "model/x3d-vrml"],
  ["x3dvz", "model/x3d+vrml"],
  ["x3dz", "model/x3d+xml"],
  ["x32", "application/x-authorware-bin"],
  ["x_b", "model/vnd.parasolid.transmit.binary"],
  ["x_t", "model/vnd.parasolid.transmit.text"],
  ["xaml", "application/xaml+xml"],
  ["xap", "application/x-silverlight-app"],
  ["xar", "application/vnd.xara"],
  ["xav", "application/xcap-att+xml"],
  ["xbap", "application/x-ms-xbap"],
  ["xbd", "application/vnd.fujixerox.docuworks.binder"],
  ["xbm", "image/x-xbitmap"],
  ["xca", "application/xcap-caps+xml"],
  ["xcs", "application/calendar+xml"],
  ["xdf", "application/xcap-diff+xml"],
  ["xdm", "application/vnd.syncml.dm+xml"],
  ["xdp", "application/vnd.adobe.xdp+xml"],
  ["xdssc", "application/dssc+xml"],
  ["xdw", "application/vnd.fujixerox.docuworks"],
  ["xel", "application/xcap-el+xml"],
  ["xenc", "application/xenc+xml"],
  ["xer", "application/patch-ops-error+xml"],
  ["xfdf", "application/vnd.adobe.xfdf"],
  ["xfdl", "application/vnd.xfdl"],
  ["xht", "application/xhtml+xml"],
  ["xhtml", "application/xhtml+xml"],
  ["xhvml", "application/xv+xml"],
  ["xif", "image/vnd.xiff"],
  ["xl", "application/excel"],
  ["xla", "application/vnd.ms-excel"],
  ["xlam", "application/vnd.ms-excel.addin.macroEnabled.12"],
  ["xlc", "application/vnd.ms-excel"],
  ["xlf", "application/xliff+xml"],
  ["xlm", "application/vnd.ms-excel"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"],
  ["xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xlt", "application/vnd.ms-excel"],
  ["xltm", "application/vnd.ms-excel.template.macroEnabled.12"],
  ["xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"],
  ["xlw", "application/vnd.ms-excel"],
  ["xm", "audio/xm"],
  ["xml", "application/xml"],
  ["xns", "application/xcap-ns+xml"],
  ["xo", "application/vnd.olpc-sugar"],
  ["xop", "application/xop+xml"],
  ["xpi", "application/x-xpinstall"],
  ["xpl", "application/xproc+xml"],
  ["xpm", "image/x-xpixmap"],
  ["xpr", "application/vnd.is-xpr"],
  ["xps", "application/vnd.ms-xpsdocument"],
  ["xpw", "application/vnd.intercon.formnet"],
  ["xpx", "application/vnd.intercon.formnet"],
  ["xsd", "application/xml"],
  ["xsl", "application/xml"],
  ["xslt", "application/xslt+xml"],
  ["xsm", "application/vnd.syncml+xml"],
  ["xspf", "application/xspf+xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["xvm", "application/xv+xml"],
  ["xvml", "application/xv+xml"],
  ["xwd", "image/x-xwindowdump"],
  ["xyz", "chemical/x-xyz"],
  ["xz", "application/x-xz"],
  ["yaml", "text/yaml"],
  ["yang", "application/yang"],
  ["yin", "application/yin+xml"],
  ["yml", "text/yaml"],
  ["ymp", "text/x-suse-ymp"],
  ["z", "application/x-compress"],
  ["z1", "application/x-zmachine"],
  ["z2", "application/x-zmachine"],
  ["z3", "application/x-zmachine"],
  ["z4", "application/x-zmachine"],
  ["z5", "application/x-zmachine"],
  ["z6", "application/x-zmachine"],
  ["z7", "application/x-zmachine"],
  ["z8", "application/x-zmachine"],
  ["zaz", "application/vnd.zzazz.deck+xml"],
  ["zip", "application/zip"],
  ["zir", "application/vnd.zul"],
  ["zirz", "application/vnd.zul"],
  ["zmm", "application/vnd.handheld-entertainment+xml"],
  ["zsh", "text/x-scriptzsh"]
]);
function ia(e, t, n) {
  const r = a9(e), { webkitRelativePath: a } = e, i = typeof t == "string" ? t : typeof a == "string" && a.length > 0 ? a : `./${e.name}`;
  return typeof r.path != "string" && Iv(r, "path", i), Iv(r, "relativePath", i), r;
}
function a9(e) {
  const { name: t } = e;
  if (t && t.lastIndexOf(".") !== -1 && !e.type) {
    const r = t.split(".").pop().toLowerCase(), a = r9.get(r);
    a && Object.defineProperty(e, "type", {
      value: a,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return e;
}
function Iv(e, t, n) {
  Object.defineProperty(e, t, {
    value: n,
    writable: !1,
    configurable: !1,
    enumerable: !0
  });
}
const i9 = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  // macOs
  "Thumbs.db"
  // Windows
];
function o9(e) {
  return gr(this, void 0, void 0, function* () {
    return zi(e) && s9(e.dataTransfer) ? d9(e.dataTransfer, e.type) : l9(e) ? u9(e) : Array.isArray(e) && e.every((t) => "getFile" in t && typeof t.getFile == "function") ? c9(e) : [];
  });
}
function s9(e) {
  return zi(e);
}
function l9(e) {
  return zi(e) && zi(e.target);
}
function zi(e) {
  return typeof e == "object" && e !== null;
}
function u9(e) {
  return zp(e.target.files).map((t) => ia(t));
}
function c9(e) {
  return gr(this, void 0, void 0, function* () {
    return (yield Promise.all(e.map((n) => n.getFile()))).map((n) => ia(n));
  });
}
function d9(e, t) {
  return gr(this, void 0, void 0, function* () {
    if (e.items) {
      const n = zp(e.items).filter((a) => a.kind === "file");
      if (t !== "drop")
        return n;
      const r = yield Promise.all(n.map(p9));
      return wv(s_(r));
    }
    return wv(zp(e.files).map((n) => ia(n)));
  });
}
function wv(e) {
  return e.filter((t) => i9.indexOf(t.name) === -1);
}
function zp(e) {
  if (e === null)
    return [];
  const t = [];
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    t.push(r);
  }
  return t;
}
function p9(e) {
  if (typeof e.webkitGetAsEntry != "function")
    return Cv(e);
  const t = e.webkitGetAsEntry();
  return t && t.isDirectory ? l_(t) : Cv(e, t);
}
function s_(e) {
  return e.reduce((t, n) => [
    ...t,
    ...Array.isArray(n) ? s_(n) : [n]
  ], []);
}
function Cv(e, t) {
  return gr(this, void 0, void 0, function* () {
    var n;
    if (globalThis.isSecureContext && typeof e.getAsFileSystemHandle == "function") {
      const i = yield e.getAsFileSystemHandle();
      if (i === null)
        throw new Error(`${e} is not a File`);
      if (i !== void 0) {
        const o = yield i.getFile();
        return o.handle = i, ia(o);
      }
    }
    const r = e.getAsFile();
    if (!r)
      throw new Error(`${e} is not a File`);
    return ia(r, (n = t == null ? void 0 : t.fullPath) !== null && n !== void 0 ? n : void 0);
  });
}
function f9(e) {
  return gr(this, void 0, void 0, function* () {
    return e.isDirectory ? l_(e) : m9(e);
  });
}
function l_(e) {
  const t = e.createReader();
  return new Promise((n, r) => {
    const a = [];
    function i() {
      t.readEntries((o) => gr(this, void 0, void 0, function* () {
        if (o.length) {
          const s = Promise.all(o.map(f9));
          a.push(s), i();
        } else
          try {
            const s = yield Promise.all(a);
            n(s);
          } catch (s) {
            r(s);
          }
      }), (o) => {
        r(o);
      });
    }
    i();
  });
}
function m9(e) {
  return gr(this, void 0, void 0, function* () {
    return new Promise((t, n) => {
      e.file((r) => {
        const a = ia(r, e.fullPath);
        t(a);
      }, (r) => {
        n(r);
      });
    });
  });
}
var up = function(e, t) {
  if (e && t) {
    var n = Array.isArray(t) ? t : t.split(",");
    if (n.length === 0)
      return !0;
    var r = e.name || "", a = (e.type || "").toLowerCase(), i = a.replace(/\/.*$/, "");
    return n.some(function(o) {
      var s = o.trim().toLowerCase();
      return s.charAt(0) === "." ? r.toLowerCase().endsWith(s) : s.endsWith("/*") ? i === s.replace(/\/.*$/, "") : a === s;
    });
  }
  return !0;
};
function kv(e) {
  return b9(e) || h9(e) || c_(e) || g9();
}
function g9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function h9(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function b9(e) {
  if (Array.isArray(e)) return Gp(e);
}
function Nv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Ov(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Nv(Object(n), !0).forEach(function(r) {
      u_(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Nv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function u_(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function Va(e, t) {
  return v9(e) || y9(e, t) || c_(e, t) || E9();
}
function E9() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function c_(e, t) {
  if (e) {
    if (typeof e == "string") return Gp(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Gp(e, t);
  }
}
function Gp(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function y9(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], a = !0, i = !1, o, s;
    try {
      for (n = n.call(e); !(a = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); a = !0)
        ;
    } catch (l) {
      i = !0, s = l;
    } finally {
      try {
        !a && n.return != null && n.return();
      } finally {
        if (i) throw s;
      }
    }
    return r;
  }
}
function v9(e) {
  if (Array.isArray(e)) return e;
}
var T9 = typeof up == "function" ? up : up.default, S9 = "file-invalid-type", _9 = "file-too-large", A9 = "file-too-small", x9 = "too-many-files", R9 = function() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = t.split(","), r = n.length > 1 ? "one of ".concat(n.join(", ")) : n[0];
  return {
    code: S9,
    message: "File type must be ".concat(r)
  };
}, Lv = function(t) {
  return {
    code: _9,
    message: "File is larger than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, Dv = function(t) {
  return {
    code: A9,
    message: "File is smaller than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, I9 = {
  code: x9,
  message: "Too many files"
};
function d_(e, t) {
  var n = e.type === "application/x-moz-file" || T9(e, t);
  return [n, n ? null : R9(t)];
}
function p_(e, t, n) {
  if (xr(e.size))
    if (xr(t) && xr(n)) {
      if (e.size > n) return [!1, Lv(n)];
      if (e.size < t) return [!1, Dv(t)];
    } else {
      if (xr(t) && e.size < t) return [!1, Dv(t)];
      if (xr(n) && e.size > n) return [!1, Lv(n)];
    }
  return [!0, null];
}
function xr(e) {
  return e != null;
}
function w9(e) {
  var t = e.files, n = e.accept, r = e.minSize, a = e.maxSize, i = e.multiple, o = e.maxFiles, s = e.validator;
  return !i && t.length > 1 || i && o >= 1 && t.length > o ? !1 : t.every(function(l) {
    var u = d_(l, n), c = Va(u, 1), d = c[0], m = p_(l, r, a), f = Va(m, 1), h = f[0], E = s ? s(l) : null;
    return d && h && !E;
  });
}
function Gi(e) {
  return typeof e.isPropagationStopped == "function" ? e.isPropagationStopped() : typeof e.cancelBubble < "u" ? e.cancelBubble : !1;
}
function Ai(e) {
  return e.dataTransfer ? Array.prototype.some.call(e.dataTransfer.types, function(t) {
    return t === "Files" || t === "application/x-moz-file";
  }) : !!e.target && !!e.target.files;
}
function Mv(e) {
  e.preventDefault();
}
function C9(e) {
  return e.indexOf("MSIE") !== -1 || e.indexOf("Trident/") !== -1;
}
function k9(e) {
  return e.indexOf("Edge/") !== -1;
}
function N9() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return C9(e) || k9(e);
}
function Hn() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(r) {
    for (var a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), o = 1; o < a; o++)
      i[o - 1] = arguments[o];
    return t.some(function(s) {
      return !Gi(r) && s && s.apply(void 0, [r].concat(i)), Gi(r);
    });
  };
}
function O9() {
  return "showOpenFilePicker" in window;
}
function L9(e) {
  if (xr(e)) {
    var t = Object.entries(e).filter(function(n) {
      var r = Va(n, 2), a = r[0], i = r[1], o = !0;
      return f_(a) || (console.warn('Skipped "'.concat(a, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), o = !1), (!Array.isArray(i) || !i.every(m_)) && (console.warn('Skipped "'.concat(a, '" because an invalid file extension was provided.')), o = !1), o;
    }).reduce(function(n, r) {
      var a = Va(r, 2), i = a[0], o = a[1];
      return Ov(Ov({}, n), {}, u_({}, i, o));
    }, {});
    return [{
      // description is required due to https://crbug.com/1264708
      description: "Files",
      accept: t
    }];
  }
  return e;
}
function D9(e) {
  if (xr(e))
    return Object.entries(e).reduce(function(t, n) {
      var r = Va(n, 2), a = r[0], i = r[1];
      return [].concat(kv(t), [a], kv(i));
    }, []).filter(function(t) {
      return f_(t) || m_(t);
    }).join(",");
}
function M9(e) {
  return e instanceof DOMException && (e.name === "AbortError" || e.code === e.ABORT_ERR);
}
function P9(e) {
  return e instanceof DOMException && (e.name === "SecurityError" || e.code === e.SECURITY_ERR);
}
function f_(e) {
  return e === "audio/*" || e === "video/*" || e === "image/*" || e === "text/*" || e === "application/*" || /\w+\/[-+.\w]+/g.test(e);
}
function m_(e) {
  return /^.*\.[\w]+$/.test(e);
}
var F9 = ["children"], B9 = ["open"], U9 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], j9 = ["refKey", "onChange", "onClick"];
function H9(e) {
  return z9(e) || $9(e) || g_(e) || q9();
}
function q9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function $9(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function z9(e) {
  if (Array.isArray(e)) return Vp(e);
}
function cp(e, t) {
  return W9(e) || V9(e, t) || g_(e, t) || G9();
}
function G9() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function g_(e, t) {
  if (e) {
    if (typeof e == "string") return Vp(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Vp(e, t);
  }
}
function Vp(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function V9(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], a = !0, i = !1, o, s;
    try {
      for (n = n.call(e); !(a = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); a = !0)
        ;
    } catch (l) {
      i = !0, s = l;
    } finally {
      try {
        !a && n.return != null && n.return();
      } finally {
        if (i) throw s;
      }
    }
    return r;
  }
}
function W9(e) {
  if (Array.isArray(e)) return e;
}
function Pv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Rt(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Pv(Object(n), !0).forEach(function(r) {
      Wp(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function Wp(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function Vi(e, t) {
  if (e == null) return {};
  var n = Y9(e, t), r, a;
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(e);
    for (a = 0; a < i.length; a++)
      r = i[a], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
  }
  return n;
}
function Y9(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), a, i;
  for (i = 0; i < r.length; i++)
    a = r[i], !(t.indexOf(a) >= 0) && (n[a] = e[a]);
  return n;
}
var nm = /* @__PURE__ */ $A(function(e, t) {
  var n = e.children, r = Vi(e, F9), a = rm(r), i = a.open, o = Vi(a, B9);
  return zA(t, function() {
    return {
      open: i
    };
  }, [i]), /* @__PURE__ */ An.createElement(GA, null, n(Rt(Rt({}, o), {}, {
    open: i
  })));
});
nm.displayName = "Dropzone";
var h_ = {
  disabled: !1,
  getFilesFromEvent: o9,
  maxSize: 1 / 0,
  minSize: 0,
  multiple: !0,
  maxFiles: 0,
  preventDropOnDocument: !0,
  noClick: !1,
  noKeyboard: !1,
  noDrag: !1,
  noDragEventsBubbling: !1,
  validator: null,
  useFsAccessApi: !1,
  autoFocus: !1
};
nm.defaultProps = h_;
nm.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: lt.func,
  /**
   * Set accepted file types.
   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).
   */
  accept: lt.objectOf(lt.arrayOf(lt.string)),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: lt.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: lt.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: lt.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: lt.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: lt.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: lt.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: lt.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: lt.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: lt.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: lt.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: lt.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: lt.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: lt.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: lt.bool,
  /**
   * Set to true to focus the root element on render
   */
  autoFocus: lt.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: lt.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: lt.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: lt.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: lt.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: lt.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: lt.func,
  /**
   * Cb for when there's some error from any of the promises.
   *
   * @param {Error} error
   */
  onError: lt.func,
  /**
   * Custom validation function. It must return null if there's no errors.
   * @param {File} file
   * @returns {FileError|FileError[]|null}
   */
  validator: lt.func
};
var Yp = {
  isFocused: !1,
  isFileDialogActive: !1,
  isDragActive: !1,
  isDragAccept: !1,
  isDragReject: !1,
  acceptedFiles: [],
  fileRejections: []
};
function rm() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = Rt(Rt({}, h_), e), n = t.accept, r = t.disabled, a = t.getFilesFromEvent, i = t.maxSize, o = t.minSize, s = t.multiple, l = t.maxFiles, u = t.onDragEnter, c = t.onDragLeave, d = t.onDragOver, m = t.onDrop, f = t.onDropAccepted, h = t.onDropRejected, E = t.onFileDialogCancel, I = t.onFileDialogOpen, x = t.useFsAccessApi, v = t.autoFocus, S = t.preventDropOnDocument, g = t.noClick, y = t.noKeyboard, T = t.noDrag, j = t.noDragEventsBubbling, $ = t.onError, D = t.validator, w = lr(function() {
    return D9(n);
  }, [n]), G = lr(function() {
    return L9(n);
  }, [n]), Q = lr(function() {
    return typeof I == "function" ? I : Fv;
  }, [I]), z = lr(function() {
    return typeof E == "function" ? E : Fv;
  }, [E]), ce = It(null), ae = It(null), K = qA(K9, Yp), he = cp(K, 2), ye = he[0], Te = he[1], A = ye.isFocused, re = ye.isFileDialogActive, se = It(typeof window < "u" && window.isSecureContext && x && O9()), M = function() {
    !se.current && re && setTimeout(function() {
      if (ae.current) {
        var Z = ae.current.files;
        Z.length || (Te({
          type: "closeDialog"
        }), z());
      }
    }, 300);
  };
  kn(function() {
    return window.addEventListener("focus", M, !1), function() {
      window.removeEventListener("focus", M, !1);
    };
  }, [ae, re, z, se]);
  var me = It([]), we = function(Z) {
    ce.current && ce.current.contains(Z.target) || (Z.preventDefault(), me.current = []);
  };
  kn(function() {
    return S && (document.addEventListener("dragover", Mv, !1), document.addEventListener("drop", we, !1)), function() {
      S && (document.removeEventListener("dragover", Mv), document.removeEventListener("drop", we));
    };
  }, [ce, S]), kn(function() {
    return !r && v && ce.current && ce.current.focus(), function() {
    };
  }, [ce, v, r]);
  var pe = ft(function(xe) {
    $ ? $(xe) : console.error(xe);
  }, [$]), Ie = ft(function(xe) {
    xe.preventDefault(), xe.persist(), Ht(xe), me.current = [].concat(H9(me.current), [xe.target]), Ai(xe) && Promise.resolve(a(xe)).then(function(Z) {
      if (!(Gi(xe) && !j)) {
        var O = Z.length, U = O > 0 && w9({
          files: Z,
          accept: w,
          minSize: o,
          maxSize: i,
          multiple: s,
          maxFiles: l,
          validator: D
        }), X = O > 0 && !U;
        Te({
          isDragAccept: U,
          isDragReject: X,
          isDragActive: !0,
          type: "setDraggedFiles"
        }), u && u(xe);
      }
    }).catch(function(Z) {
      return pe(Z);
    });
  }, [a, u, pe, j, w, o, i, s, l, D]), Re = ft(function(xe) {
    xe.preventDefault(), xe.persist(), Ht(xe);
    var Z = Ai(xe);
    if (Z && xe.dataTransfer)
      try {
        xe.dataTransfer.dropEffect = "copy";
      } catch {
      }
    return Z && d && d(xe), !1;
  }, [d, j]), be = ft(function(xe) {
    xe.preventDefault(), xe.persist(), Ht(xe);
    var Z = me.current.filter(function(U) {
      return ce.current && ce.current.contains(U);
    }), O = Z.indexOf(xe.target);
    O !== -1 && Z.splice(O, 1), me.current = Z, !(Z.length > 0) && (Te({
      type: "setDraggedFiles",
      isDragActive: !1,
      isDragAccept: !1,
      isDragReject: !1
    }), Ai(xe) && c && c(xe));
  }, [ce, c, j]), ve = ft(function(xe, Z) {
    var O = [], U = [];
    xe.forEach(function(X) {
      var ue = d_(X, w), fe = cp(ue, 2), Ne = fe[0], Oe = fe[1], Pe = p_(X, o, i), et = cp(Pe, 2), tt = et[0], $e = et[1], Xe = D ? D(X) : null;
      if (Ne && tt && !Xe)
        O.push(X);
      else {
        var rt = [Oe, $e];
        Xe && (rt = rt.concat(Xe)), U.push({
          file: X,
          errors: rt.filter(function(kt) {
            return kt;
          })
        });
      }
    }), (!s && O.length > 1 || s && l >= 1 && O.length > l) && (O.forEach(function(X) {
      U.push({
        file: X,
        errors: [I9]
      });
    }), O.splice(0)), Te({
      acceptedFiles: O,
      fileRejections: U,
      isDragReject: U.length > 0,
      type: "setFiles"
    }), m && m(O, U, Z), U.length > 0 && h && h(U, Z), O.length > 0 && f && f(O, Z);
  }, [Te, s, w, o, i, l, m, f, h, D]), He = ft(function(xe) {
    xe.preventDefault(), xe.persist(), Ht(xe), me.current = [], Ai(xe) && Promise.resolve(a(xe)).then(function(Z) {
      Gi(xe) && !j || ve(Z, xe);
    }).catch(function(Z) {
      return pe(Z);
    }), Te({
      type: "reset"
    });
  }, [a, ve, pe, j]), Se = ft(function() {
    if (se.current) {
      Te({
        type: "openDialog"
      }), Q();
      var xe = {
        multiple: s,
        types: G
      };
      window.showOpenFilePicker(xe).then(function(Z) {
        return a(Z);
      }).then(function(Z) {
        ve(Z, null), Te({
          type: "closeDialog"
        });
      }).catch(function(Z) {
        M9(Z) ? (z(Z), Te({
          type: "closeDialog"
        })) : P9(Z) ? (se.current = !1, ae.current ? (ae.current.value = null, ae.current.click()) : pe(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : pe(Z);
      });
      return;
    }
    ae.current && (Te({
      type: "openDialog"
    }), Q(), ae.current.value = null, ae.current.click());
  }, [Te, Q, z, x, ve, pe, G, s]), Ke = ft(function(xe) {
    !ce.current || !ce.current.isEqualNode(xe.target) || (xe.key === " " || xe.key === "Enter" || xe.keyCode === 32 || xe.keyCode === 13) && (xe.preventDefault(), Se());
  }, [ce, Se]), _t = ft(function() {
    Te({
      type: "focus"
    });
  }, []), mt = ft(function() {
    Te({
      type: "blur"
    });
  }, []), vt = ft(function() {
    g || (N9() ? setTimeout(Se, 0) : Se());
  }, [g, Se]), wt = function(Z) {
    return r ? null : Z;
  }, jt = function(Z) {
    return y ? null : wt(Z);
  }, Tt = function(Z) {
    return T ? null : wt(Z);
  }, Ht = function(Z) {
    j && Z.stopPropagation();
  }, Yt = lr(function() {
    return function() {
      var xe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = xe.refKey, O = Z === void 0 ? "ref" : Z, U = xe.role, X = xe.onKeyDown, ue = xe.onFocus, fe = xe.onBlur, Ne = xe.onClick, Oe = xe.onDragEnter, Pe = xe.onDragOver, et = xe.onDragLeave, tt = xe.onDrop, $e = Vi(xe, U9);
      return Rt(Rt(Wp({
        onKeyDown: jt(Hn(X, Ke)),
        onFocus: jt(Hn(ue, _t)),
        onBlur: jt(Hn(fe, mt)),
        onClick: wt(Hn(Ne, vt)),
        onDragEnter: Tt(Hn(Oe, Ie)),
        onDragOver: Tt(Hn(Pe, Re)),
        onDragLeave: Tt(Hn(et, be)),
        onDrop: Tt(Hn(tt, He)),
        role: typeof U == "string" && U !== "" ? U : "presentation"
      }, O, ce), !r && !y ? {
        tabIndex: 0
      } : {}), $e);
    };
  }, [ce, Ke, _t, mt, vt, Ie, Re, be, He, y, T, r]), Ct = ft(function(xe) {
    xe.stopPropagation();
  }, []), gt = lr(function() {
    return function() {
      var xe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = xe.refKey, O = Z === void 0 ? "ref" : Z, U = xe.onChange, X = xe.onClick, ue = Vi(xe, j9), fe = Wp({
        accept: w,
        multiple: s,
        type: "file",
        style: {
          border: 0,
          clip: "rect(0, 0, 0, 0)",
          clipPath: "inset(50%)",
          height: "1px",
          margin: "0 -1px -1px 0",
          overflow: "hidden",
          padding: 0,
          position: "absolute",
          width: "1px",
          whiteSpace: "nowrap"
        },
        onChange: wt(Hn(U, He)),
        onClick: wt(Hn(X, Ct)),
        tabIndex: -1
      }, O, ae);
      return Rt(Rt({}, fe), ue);
    };
  }, [ae, n, s, He, r]);
  return Rt(Rt({}, ye), {}, {
    isFocused: A && !r,
    getRootProps: Yt,
    getInputProps: gt,
    rootRef: ce,
    inputRef: ae,
    open: wt(Se)
  });
}
function K9(e, t) {
  switch (t.type) {
    case "focus":
      return Rt(Rt({}, e), {}, {
        isFocused: !0
      });
    case "blur":
      return Rt(Rt({}, e), {}, {
        isFocused: !1
      });
    case "openDialog":
      return Rt(Rt({}, Yp), {}, {
        isFileDialogActive: !0
      });
    case "closeDialog":
      return Rt(Rt({}, e), {}, {
        isFileDialogActive: !1
      });
    case "setDraggedFiles":
      return Rt(Rt({}, e), {}, {
        isDragActive: t.isDragActive,
        isDragAccept: t.isDragAccept,
        isDragReject: t.isDragReject
      });
    case "setFiles":
      return Rt(Rt({}, e), {}, {
        acceptedFiles: t.acceptedFiles,
        fileRejections: t.fileRejections,
        isDragReject: t.isDragReject
      });
    case "reset":
      return Rt({}, Yp);
    default:
      return e;
  }
}
function Fv() {
}
const X9 = () => /* @__PURE__ */ Y.jsxs("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
  /* @__PURE__ */ Y.jsx("path", { d: "M9.5 4C8.67157 4 8 4.67157 8 5.5V18.5C8 19.3284 8.67157 20 9.5 20C10.3284 20 11 19.3284 11 18.5V5.5C11 4.67157 10.3284 4 9.5 4Z", fill: "currentColor" }),
  /* @__PURE__ */ Y.jsx("path", { d: "M13 8.5C13 7.67157 13.6716 7 14.5 7C15.3284 7 16 7.67157 16 8.5V15.5C16 16.3284 15.3284 17 14.5 17C13.6716 17 13 16.3284 13 15.5V8.5Z", fill: "currentColor" }),
  /* @__PURE__ */ Y.jsx("path", { d: "M4.5 9C3.67157 9 3 9.67157 3 10.5V13.5C3 14.3284 3.67157 15 4.5 15C5.32843 15 6 14.3284 6 13.5V10.5C6 9.67157 5.32843 9 4.5 9Z", fill: "currentColor" }),
  /* @__PURE__ */ Y.jsx("path", { d: "M19.5 9C18.6716 9 18 9.67157 18 10.5V13.5C18 14.3284 18.6716 15 19.5 15C20.3284 15 21 14.3284 21 13.5V10.5C21 9.67157 20.3284 9 19.5 9Z", fill: "currentColor" })
] });
function Bv(...e) {
  return e.filter(Boolean).join(" ");
}
const b_ = (e) => new Promise((t, n) => {
  const r = new FileReader();
  r.readAsDataURL(e), r.onload = () => t(r.result), r.onerror = (a) => n(a);
}), Z9 = ({ onSubmit: e, currentInput: t, setCurrentInput: n, className: r, isProcessing: a, searchToolEnabled: i, toggleSearchTool: o }) => {
  const [s, l] = Jt(!1), [u, c] = Jt(""), [d, m] = Jt(!1);
  kn(() => {
    "webkitSpeechRecognition" in window || "SpeechRecognition" in window ? m(!0) : m(!1);
  }, []);
  const f = ft((y) => {
    let T = y.map(($) => $.type.startsWith("audio/") ? b_($).then((D) => ({
      preview: "",
      base64: D,
      raw_file: $,
      ...$,
      type: $.type
    })) : Promise.resolve({
      preview: URL.createObjectURL($),
      raw_file: $,
      ...$,
      type: $.type
    }));
    Promise.all(T).then(($) => {
      Vt.emit("langdb_fileAdded", { files: $ });
    });
  }, []);
  kn(() => {
    const y = ({ files: T }) => {
      E((j) => [
        ...j,
        ...T
      ]);
    };
    return Vt.on("langdb_fileAdded", y), Vt.on("langdb_speechRecognitionStart", () => {
      l(!0), c("");
    }), Vt.on("langdb_speechRecognitionEnd", () => {
      l(!1);
    }), () => {
      Vt.off("langdb_fileAdded", y), Vt.off("langdb_speechRecognitionStart", () => {
        l(!0), c("");
      }), Vt.off("langdb_speechRecognitionEnd", () => {
        l(!1);
      });
    };
  }, []);
  const [h, E] = Jt([]), { getRootProps: I, isDragActive: x, open: v, getInputProps: S } = rm({
    onDrop: f,
    noClick: !0,
    noKeyboard: !0,
    accept: {
      "image/*": [],
      "audio/*": []
    }
  }), g = ft(() => {
    if (!("webkitSpeechRecognition" in window || "SpeechRecognition" in window)) {
      c("Speech recognition is not supported in this browser.");
      return;
    }
    const y = window.SpeechRecognition || window.webkitSpeechRecognition, T = new y();
    T.lang = "en-US", T.interimResults = !1, T.continuous = !1, T.onstart = () => {
      Vt.emit("langdb_speechRecognitionStart", {});
    }, T.onresult = (j) => {
      const $ = j.results[0][0].transcript;
      e({
        inputText: $,
        files: h,
        searchToolEnabled: i,
        otherTools: []
      });
    }, T.onerror = (j) => {
      c(j.error);
    }, T.onend = () => {
      Vt.emit("langdb_speechRecognitionEnd", {});
    }, T.start();
  }, []);
  return /* @__PURE__ */ Y.jsxs("div", { className: "langdb-chat-input bg-inherit sticky bottom-0 pt-1 px-4", children: [
    h && h.length > 0 && /* @__PURE__ */ Y.jsx(sT, { files: h, setFiles: E }),
    u && /* @__PURE__ */ Y.jsx("div", { className: "text-red-500", children: u }),
    s && /* @__PURE__ */ Y.jsx("div", { className: "animate-pulse text-xs m-2", children: "Listening..." }),
    /* @__PURE__ */ Y.jsx(
      "form",
      {
        ...I(),
        onSubmit: (y) => {
          y.preventDefault();
          let T = h;
          E([]), e({ inputText: t, files: T, searchToolEnabled: i, otherTools: [] });
        },
        className: `langdb-input-container flex items-center p-2 rounded-xl mb-3 ${r}`,
        children: /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-col flex-1", children: [
          /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-row flex-1 items-center ", children: [
            x && /* @__PURE__ */ Y.jsx("div", { className: "absolute gap-20 flex-col inset-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-xl z-50", children: /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-col justify-center items-center text-xs", children: [
              /* @__PURE__ */ Y.jsx("span", { className: "font-bold", children: "Add anything" }),
              /* @__PURE__ */ Y.jsx("span", { children: "Drop any file here to add it to conversation" })
            ] }) }),
            /* @__PURE__ */ Y.jsx("input", { ...S(), className: "hidden" }),
            /* @__PURE__ */ Y.jsx(
              "textarea",
              {
                value: t,
                disabled: s,
                onChange: (y) => n(y.target.value),
                onKeyDown: (y) => {
                  if (y.key === "Enter" && !y.shiftKey && (y.preventDefault(), t.trim())) {
                    let T = h;
                    E([]), e({ inputText: t, files: T, searchToolEnabled: i, otherTools: [] });
                  }
                },
                placeholder: "Type your message...",
                rows: 1,
                className: "bg-transparent border-none flex-1 p-2 ring-0 focus:ring-0 focus:outline-none resize-none overflow-auto"
              }
            )
          ] }),
          /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-row flex-1 items-center justify-between", children: [
            /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-row items-center gap-2", children: [
              /* @__PURE__ */ Y.jsx(
                "button",
                {
                  onClick: (y) => {
                    y.stopPropagation(), y.preventDefault(), v();
                  },
                  className: "flex items-center justify-center h-9 rounded-full border hover:bg-[rgb(66,66,66)] border-[hsla(0,0%,100%,0.1)] w-9",
                  children: /* @__PURE__ */ Y.jsx(oT, { className: "h-[18px] w-[18px] font-bold" })
                }
              ),
              o && /* @__PURE__ */ Y.jsxs(
                "button",
                {
                  type: "button",
                  className: Bv(
                    "flex gap-2 h-9 min-w-8 items-center justify-center  rounded-full border p-2 text-[13px] font-medium radix-state-open:bg-black/10  border-[hsla(0,0%,100%,0.1)]",
                    i ? "bg-[rgb(42,74,109)] hover:bg-[rgb(26,65,106)]" : "bg-transparent hover:bg-[rgb(66,66,66)]"
                  ),
                  onClick: (y) => {
                    y.stopPropagation(), y.preventDefault(), o == null || o(!i);
                  },
                  children: [
                    /* @__PURE__ */ Y.jsx(yx, { className: Bv("h-[18px] w-[18px] font-bold text-[#b4b4b4]") }),
                    /* @__PURE__ */ Y.jsx("span", { className: "font-semibold text-[#b4b4b4]", children: "Search" })
                  ]
                }
              ),
              !1
            ] }),
            /* @__PURE__ */ Y.jsx("div", { children: d && /* @__PURE__ */ Y.jsx(
              "button",
              {
                type: "button",
                disabled: s || a,
                onClick: (y) => {
                  y.stopPropagation(), y.preventDefault(), g();
                },
                className: "send-button ml-2 rounded-full hover:cursor-pointer",
                children: /* @__PURE__ */ Y.jsx(X9, {})
              }
            ) })
          ] })
        ] })
      }
    )
  ] });
}, Q9 = ({ message: e, personaOptions: t, widgetProps: n }) => /* @__PURE__ */ Y.jsx("div", { className: `flex mb-2 ${e.type === dr.HumanMessage ? "justify-end" : "justify-start"}`, children: /* @__PURE__ */ Y.jsx("div", { className: "max-w-3/4 overflow-scroll", children: e.type === dr.HumanMessage ? /* @__PURE__ */ Y.jsx($8, { msg: e, persona: t.user }) : /* @__PURE__ */ Y.jsx(r_, { msg: e, persona: t.assistant, widgetProps: n }) }) }), J9 = (e, t) => {
  const {
    setMessages: n,
    setCurrentInput: r,
    setTyping: a,
    setError: i,
    setMessageId: o,
    setThreadId: s,
    appendUsage: l,
    messageId: u,
    threadId: c,
    messages: d
  } = t, m = ft(async (x, v) => {
    if (x.ok && x.headers.get("content-type") === "text/event-stream") {
      const S = x.headers.get("X-Message-Id"), g = v;
      if (e.responseCallback) {
        const y = x.headers.get("x-trace-id");
        e.responseCallback({
          traceId: y,
          modelName: e.modelName,
          threadId: g,
          messageId: S
        });
      }
    }
    if (!x.ok) {
      let S = await x.json();
      throw S.error ? new Error(S.error) : new Error(x.statusText);
    }
  }, [e, o, s]), f = ft((x, v, S, g) => {
    var y;
    try {
      if (x.data === "[DONE]")
        return;
      const T = JSON.parse(x.data);
      if (T.error)
        i(T.error), a(!1);
      else {
        const j = T;
        j.usage && (Vt.emit("langdb_usageStats", { usage: j.usage, threadId: v }), l(j.usage)), (y = e.onEvent) == null || y.call(e, j), n(($) => {
          const D = $[$.length - 1];
          if (D && D.type === dr.HumanMessage)
            return [
              ...$.slice(0, -1),
              { ...D, threadId: v },
              {
                id: S || Cm(),
                message: j.choices.map((G) => G.delta.content).join(""),
                type: dr.AIMessage,
                content_type: vp.Text,
                threadId: v,
                trace_id: g || void 0
              }
            ];
          const w = {
            ...D,
            message: D.message + j.choices.map((G) => G.delta.content).join("")
          };
          return [...$.slice(0, -1), w];
        });
      }
    } catch {
    }
  }, [e, a, i, o, s, l, u]), { messagesEndRef: h, scrollToBottom: E } = lx();
  return {
    submitMessageFn: ft(
      async (x) => {
        const { inputText: v, files: S, searchToolEnabled: g, otherTools: y } = x;
        if (v.trim() === "") return;
        const T = {
          id: Cm(),
          message: v,
          type: dr.HumanMessage,
          content_type: vp.Text,
          role: "user",
          threadId: c,
          files: S
        };
        n(($) => [...$, T]), r(""), a(!0), i(void 0);
        let j = c;
        try {
          let $ = u, D = null;
          E(), await sx({
            searchToolEnabled: g,
            otherTools: y,
            previousMessages: d,
            widgetProps: e,
            files: S,
            message: v,
            threadId: c,
            onerror: (w) => {
              var G;
              throw i(w instanceof Error ? w.message : String(w)), a(!1), (G = e.responseCallback) == null || G.call(e, {
                error: w,
                modelName: e.modelName
              }), w;
            },
            onopen: (w) => {
              if (w.ok && w.headers.get("content-type") === "text/event-stream") {
                const G = w.headers.get("X-Thread-Id"), Q = w.headers.get("X-Message-Id"), z = w.headers.get("X-Trace-Id");
                j = G || j, $ = Q || $, D = z, s(j), o($);
              }
              return m(w, j);
            },
            onmessage: (w) => f(w, j || c, $ || u, D),
            onclose: () => {
              Vt.emit("langdb_chatSubmitSuccess", { threadId: j }), o(void 0), a(!1);
            }
          });
        } catch ($) {
          i($ instanceof Error ? $.message : String($)), a(!1), Vt.emit("langdb_chatSubmitError", { error: $ instanceof Error ? $.message : String($) });
        } finally {
          Vt.emit("langdb_chatSubmitDone", { threadId: j });
        }
      },
      [
        e,
        c,
        n,
        r,
        a,
        i,
        o,
        s,
        u,
        d,
        h,
        E
      ]
    ),
    messagesEndRef: h,
    scrollToBottom: E
  };
}, ej = (e) => {
  var I, x;
  const t = fx({ initialMessages: e.messages || [] }), {
    messages: n,
    currentInput: r,
    setCurrentInput: a,
    typing: i,
    error: o,
    setError: s
  } = t, { hideChatInput: l } = e, u = {
    assistant: {
      name: "LangDB",
      avatar: of,
      ...(I = e.personaOptions) == null ? void 0 : I.assistant
    },
    user: {
      name: "User",
      ...(x = e.personaOptions) == null ? void 0 : x.user
    }
  }, { submitMessageFn: c, messagesEndRef: d } = J9(e, t), m = ft((v) => c(v), [c]), f = ft((v) => {
    let S = v.map((y) => y.type.startsWith("audio/") ? b_(y).then((T) => ({
      preview: "",
      base64: T,
      raw_file: y,
      ...y,
      type: y.type
    })) : Promise.resolve({
      preview: URL.createObjectURL(y),
      raw_file: y,
      ...y,
      type: y.type
    }));
    Promise.all(S).then((y) => {
      Vt.emit("langdb_fileAdded", { files: y });
    });
  }, []), { getRootProps: h, isDragActive: E } = rm({
    onDrop: f,
    noClick: !0,
    noKeyboard: !0,
    accept: {
      "image/*": [],
      "audio/*": []
    }
  });
  return kn(() => {
    const v = ({ inputText: S, files: g, searchToolEnabled: y, otherTools: T }) => {
      a(S), m({ inputText: S, files: g, searchToolEnabled: y, otherTools: T });
    };
    return Vt.on("langdb_chatSubmit", v), () => {
      Vt.off("langdb_chatSubmit", v);
    };
  }, [m, a]), /* @__PURE__ */ Y.jsxs("div", { className: "langdb-chat mx-auto flex flex-1 flex-col lg:max-w-[40rem] xl:max-w-[48rem] w-full h-full", children: [
    /* @__PURE__ */ Y.jsxs("div", { ...h(), className: "langdb-message-section flex flex-col flex-1 justify-center overflow-y-auto p-4 pb-0", children: [
      E && /* @__PURE__ */ Y.jsxs("div", { className: "absolute gap-20 flex-col inset-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-xl z-50", children: [
        /* @__PURE__ */ Y.jsx(oT, { className: "h-12 w-12" }),
        /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-col justify-center items-center", children: [
          /* @__PURE__ */ Y.jsx("span", { className: " font-bold", children: "Add anything" }),
          /* @__PURE__ */ Y.jsx("span", { children: "Drop any file here to add it to conversation" })
        ] })
      ] }),
      n.length === 0 && /* @__PURE__ */ Y.jsx(tj, { starters: e.starters, onStarterClick: (v) => {
        a(v), c({ inputText: v, files: [] });
      } }),
      /* @__PURE__ */ Y.jsxs("div", { className: "langdb-message-render flex-1 overflow-auto", children: [
        n.filter((v) => v.type === dr.HumanMessage || v.type !== dr.ToolMessage).map((v) => /* @__PURE__ */ Y.jsx(Q9, { message: v, personaOptions: u, widgetProps: e }, v.id)),
        i && /* @__PURE__ */ Y.jsx("div", { className: "flex justify-start", children: /* @__PURE__ */ Y.jsx("div", { className: "max-w-3/4", children: /* @__PURE__ */ Y.jsx(r_, { typing: !0, persona: u.assistant, widgetProps: e }) }) }, "typing-ai"),
        /* @__PURE__ */ Y.jsx("div", { ref: d })
      ] }),
      o && /* @__PURE__ */ Y.jsxs("div", { className: " bg-red-100 flex  p-2 rounded-lg items-center justify-between mb-4", children: [
        /* @__PURE__ */ Y.jsx("span", { className: "text-red-700", children: o }),
        /* @__PURE__ */ Y.jsx(
          Lx,
          {
            onClick: () => {
              s(void 0);
            },
            className: "h-4 w-4 text-red-500 hover:text-red-700 hover:cursor-pointer rounded-full"
          }
        )
      ] })
    ] }),
    !l && /* @__PURE__ */ Y.jsx(
      Z9,
      {
        searchToolEnabled: e.searchToolEnabled,
        toggleSearchTool: e.toggleSearchTool,
        onSubmit: (v) => (Vt.emit("langdb_chatSubmit", v), a(""), Promise.resolve()),
        currentInput: r,
        setCurrentInput: a
      }
    )
  ] });
}, tj = ({ starters: e, onStarterClick: t }) => /* @__PURE__ */ Y.jsxs("div", { className: "flex  h-full self-center flex-1 flex-col justify-center items-center", children: [
  /* @__PURE__ */ Y.jsxs("div", { className: "flex flex-2 gap-3 flex-col justify-center items-center", children: [
    /* @__PURE__ */ Y.jsx(of, { width: 48, height: 48 }),
    /* @__PURE__ */ Y.jsx("span", { className: "font-bold", children: "LangDB" }),
    /* @__PURE__ */ Y.jsx("div", { className: "flex flex-col justify-center items-center", children: /* @__PURE__ */ Y.jsx("span", { className: "text-sm", children: "Easily build and deploy AI agents" }) })
  ] }),
  /* @__PURE__ */ Y.jsx("div", { className: "flex p-8 justify-end items-end", children: /* @__PURE__ */ Y.jsx("div", { className: "flex  flex-row gap-4", children: e && e.map((n, r) => /* @__PURE__ */ Y.jsx("button", { onClick: () => {
    t(n.prompt);
  }, className: "bg-zinc-100 starter-button border bg-opacity-10  h-[101px] w-[160px] line-clamp-2 flex p-[12px] rounded-lg mb-2", children: /* @__PURE__ */ Y.jsx("div", { className: "", children: n.prompt }) }, r)) }) })
] });
function E_(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: nj } = Object.prototype, { getPrototypeOf: am } = Object, ho = /* @__PURE__ */ ((e) => (t) => {
  const n = nj.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), jn = (e) => (e = e.toLowerCase(), (t) => ho(t) === e), bo = (e) => (t) => typeof t === e, { isArray: fa } = Array, Wa = bo("undefined");
function rj(e) {
  return e !== null && !Wa(e) && e.constructor !== null && !Wa(e.constructor) && Rn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const y_ = jn("ArrayBuffer");
function aj(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && y_(e.buffer), t;
}
const ij = bo("string"), Rn = bo("function"), v_ = bo("number"), Eo = (e) => e !== null && typeof e == "object", oj = (e) => e === !0 || e === !1, ki = (e) => {
  if (ho(e) !== "object")
    return !1;
  const t = am(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, sj = jn("Date"), lj = jn("File"), uj = jn("Blob"), cj = jn("FileList"), dj = (e) => Eo(e) && Rn(e.pipe), pj = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || Rn(e.append) && ((t = ho(e)) === "formdata" || // detect form-data instance
  t === "object" && Rn(e.toString) && e.toString() === "[object FormData]"));
}, fj = jn("URLSearchParams"), [mj, gj, hj, bj] = ["ReadableStream", "Request", "Response", "Headers"].map(jn), Ej = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function ai(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, a;
  if (typeof e != "object" && (e = [e]), fa(e))
    for (r = 0, a = e.length; r < a; r++)
      t.call(null, e[r], r, e);
  else {
    const i = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = i.length;
    let s;
    for (r = 0; r < o; r++)
      s = i[r], t.call(null, e[s], s, e);
  }
}
function T_(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, a;
  for (; r-- > 0; )
    if (a = n[r], t === a.toLowerCase())
      return a;
  return null;
}
const wr = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, S_ = (e) => !Wa(e) && e !== wr;
function Kp() {
  const { caseless: e } = S_(this) && this || {}, t = {}, n = (r, a) => {
    const i = e && T_(t, a) || a;
    ki(t[i]) && ki(r) ? t[i] = Kp(t[i], r) : ki(r) ? t[i] = Kp({}, r) : fa(r) ? t[i] = r.slice() : t[i] = r;
  };
  for (let r = 0, a = arguments.length; r < a; r++)
    arguments[r] && ai(arguments[r], n);
  return t;
}
const yj = (e, t, n, { allOwnKeys: r } = {}) => (ai(t, (a, i) => {
  n && Rn(a) ? e[i] = E_(a, n) : e[i] = a;
}, { allOwnKeys: r }), e), vj = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), Tj = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, Sj = (e, t, n, r) => {
  let a, i, o;
  const s = {};
  if (t = t || {}, e == null) return t;
  do {
    for (a = Object.getOwnPropertyNames(e), i = a.length; i-- > 0; )
      o = a[i], (!r || r(o, e, t)) && !s[o] && (t[o] = e[o], s[o] = !0);
    e = n !== !1 && am(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, _j = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, Aj = (e) => {
  if (!e) return null;
  if (fa(e)) return e;
  let t = e.length;
  if (!v_(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, xj = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && am(Uint8Array)), Rj = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let a;
  for (; (a = r.next()) && !a.done; ) {
    const i = a.value;
    t.call(e, i[0], i[1]);
  }
}, Ij = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, wj = jn("HTMLFormElement"), Cj = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, a) {
    return r.toUpperCase() + a;
  }
), Uv = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), kj = jn("RegExp"), __ = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  ai(n, (a, i) => {
    let o;
    (o = t(a, i, e)) !== !1 && (r[i] = o || a);
  }), Object.defineProperties(e, r);
}, Nj = (e) => {
  __(e, (t, n) => {
    if (Rn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (Rn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, Oj = (e, t) => {
  const n = {}, r = (a) => {
    a.forEach((i) => {
      n[i] = !0;
    });
  };
  return fa(e) ? r(e) : r(String(e).split(t)), n;
}, Lj = () => {
}, Dj = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, dp = "abcdefghijklmnopqrstuvwxyz", jv = "0123456789", A_ = {
  DIGIT: jv,
  ALPHA: dp,
  ALPHA_DIGIT: dp + dp.toUpperCase() + jv
}, Mj = (e = 16, t = A_.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function Pj(e) {
  return !!(e && Rn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const Fj = (e) => {
  const t = new Array(10), n = (r, a) => {
    if (Eo(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[a] = r;
        const i = fa(r) ? [] : {};
        return ai(r, (o, s) => {
          const l = n(o, a + 1);
          !Wa(l) && (i[s] = l);
        }), t[a] = void 0, i;
      }
    }
    return r;
  };
  return n(e, 0);
}, Bj = jn("AsyncFunction"), Uj = (e) => e && (Eo(e) || Rn(e)) && Rn(e.then) && Rn(e.catch), x_ = ((e, t) => e ? setImmediate : t ? ((n, r) => (wr.addEventListener("message", ({ source: a, data: i }) => {
  a === wr && i === n && r.length && r.shift()();
}, !1), (a) => {
  r.push(a), wr.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  Rn(wr.postMessage)
), jj = typeof queueMicrotask < "u" ? queueMicrotask.bind(wr) : typeof process < "u" && process.nextTick || x_, oe = {
  isArray: fa,
  isArrayBuffer: y_,
  isBuffer: rj,
  isFormData: pj,
  isArrayBufferView: aj,
  isString: ij,
  isNumber: v_,
  isBoolean: oj,
  isObject: Eo,
  isPlainObject: ki,
  isReadableStream: mj,
  isRequest: gj,
  isResponse: hj,
  isHeaders: bj,
  isUndefined: Wa,
  isDate: sj,
  isFile: lj,
  isBlob: uj,
  isRegExp: kj,
  isFunction: Rn,
  isStream: dj,
  isURLSearchParams: fj,
  isTypedArray: xj,
  isFileList: cj,
  forEach: ai,
  merge: Kp,
  extend: yj,
  trim: Ej,
  stripBOM: vj,
  inherits: Tj,
  toFlatObject: Sj,
  kindOf: ho,
  kindOfTest: jn,
  endsWith: _j,
  toArray: Aj,
  forEachEntry: Rj,
  matchAll: Ij,
  isHTMLForm: wj,
  hasOwnProperty: Uv,
  hasOwnProp: Uv,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: __,
  freezeMethods: Nj,
  toObjectSet: Oj,
  toCamelCase: Cj,
  noop: Lj,
  toFiniteNumber: Dj,
  findKey: T_,
  global: wr,
  isContextDefined: S_,
  ALPHABET: A_,
  generateString: Mj,
  isSpecCompliantForm: Pj,
  toJSONObject: Fj,
  isAsyncFn: Bj,
  isThenable: Uj,
  setImmediate: x_,
  asap: jj
};
function Ye(e, t, n, r, a) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), a && (this.response = a, this.status = a.status ? a.status : null);
}
oe.inherits(Ye, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: oe.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const R_ = Ye.prototype, I_ = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  I_[e] = { value: e };
});
Object.defineProperties(Ye, I_);
Object.defineProperty(R_, "isAxiosError", { value: !0 });
Ye.from = (e, t, n, r, a, i) => {
  const o = Object.create(R_);
  return oe.toFlatObject(e, o, function(l) {
    return l !== Error.prototype;
  }, (s) => s !== "isAxiosError"), Ye.call(o, e.message, t, n, r, a), o.cause = e, o.name = e.name, i && Object.assign(o, i), o;
};
const Hj = null;
function Xp(e) {
  return oe.isPlainObject(e) || oe.isArray(e);
}
function w_(e) {
  return oe.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function Hv(e, t, n) {
  return e ? e.concat(t).map(function(a, i) {
    return a = w_(a), !n && i ? "[" + a + "]" : a;
  }).join(n ? "." : "") : t;
}
function qj(e) {
  return oe.isArray(e) && !e.some(Xp);
}
const $j = oe.toFlatObject(oe, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function yo(e, t, n) {
  if (!oe.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = oe.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(E, I) {
    return !oe.isUndefined(I[E]);
  });
  const r = n.metaTokens, a = n.visitor || c, i = n.dots, o = n.indexes, l = (n.Blob || typeof Blob < "u" && Blob) && oe.isSpecCompliantForm(t);
  if (!oe.isFunction(a))
    throw new TypeError("visitor must be a function");
  function u(h) {
    if (h === null) return "";
    if (oe.isDate(h))
      return h.toISOString();
    if (!l && oe.isBlob(h))
      throw new Ye("Blob is not supported. Use a Buffer instead.");
    return oe.isArrayBuffer(h) || oe.isTypedArray(h) ? l && typeof Blob == "function" ? new Blob([h]) : Buffer.from(h) : h;
  }
  function c(h, E, I) {
    let x = h;
    if (h && !I && typeof h == "object") {
      if (oe.endsWith(E, "{}"))
        E = r ? E : E.slice(0, -2), h = JSON.stringify(h);
      else if (oe.isArray(h) && qj(h) || (oe.isFileList(h) || oe.endsWith(E, "[]")) && (x = oe.toArray(h)))
        return E = w_(E), x.forEach(function(S, g) {
          !(oe.isUndefined(S) || S === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? Hv([E], g, i) : o === null ? E : E + "[]",
            u(S)
          );
        }), !1;
    }
    return Xp(h) ? !0 : (t.append(Hv(I, E, i), u(h)), !1);
  }
  const d = [], m = Object.assign($j, {
    defaultVisitor: c,
    convertValue: u,
    isVisitable: Xp
  });
  function f(h, E) {
    if (!oe.isUndefined(h)) {
      if (d.indexOf(h) !== -1)
        throw Error("Circular reference detected in " + E.join("."));
      d.push(h), oe.forEach(h, function(x, v) {
        (!(oe.isUndefined(x) || x === null) && a.call(
          t,
          x,
          oe.isString(v) ? v.trim() : v,
          E,
          m
        )) === !0 && f(x, E ? E.concat(v) : [v]);
      }), d.pop();
    }
  }
  if (!oe.isObject(e))
    throw new TypeError("data must be an object");
  return f(e), t;
}
function qv(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function im(e, t) {
  this._pairs = [], e && yo(e, this, t);
}
const C_ = im.prototype;
C_.append = function(t, n) {
  this._pairs.push([t, n]);
};
C_.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, qv);
  } : qv;
  return this._pairs.map(function(a) {
    return n(a[0]) + "=" + n(a[1]);
  }, "").join("&");
};
function zj(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function k_(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || zj;
  oe.isFunction(n) && (n = {
    serialize: n
  });
  const a = n && n.serialize;
  let i;
  if (a ? i = a(t, n) : i = oe.isURLSearchParams(t) ? t.toString() : new im(t, n).toString(r), i) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + i;
  }
  return e;
}
class $v {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    oe.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const N_ = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, Gj = typeof URLSearchParams < "u" ? URLSearchParams : im, Vj = typeof FormData < "u" ? FormData : null, Wj = typeof Blob < "u" ? Blob : null, Yj = {
  isBrowser: !0,
  classes: {
    URLSearchParams: Gj,
    FormData: Vj,
    Blob: Wj
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, om = typeof window < "u" && typeof document < "u", Zp = typeof navigator == "object" && navigator || void 0, Kj = om && (!Zp || ["ReactNative", "NativeScript", "NS"].indexOf(Zp.product) < 0), Xj = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", Zj = om && window.location.href || "http://localhost", Qj = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: om,
  hasStandardBrowserEnv: Kj,
  hasStandardBrowserWebWorkerEnv: Xj,
  navigator: Zp,
  origin: Zj
}, Symbol.toStringTag, { value: "Module" })), an = {
  ...Qj,
  ...Yj
};
function Jj(e, t) {
  return yo(e, new an.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, a, i) {
      return an.isNode && oe.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : i.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function eH(e) {
  return oe.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function tH(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const a = n.length;
  let i;
  for (r = 0; r < a; r++)
    i = n[r], t[i] = e[i];
  return t;
}
function O_(e) {
  function t(n, r, a, i) {
    let o = n[i++];
    if (o === "__proto__") return !0;
    const s = Number.isFinite(+o), l = i >= n.length;
    return o = !o && oe.isArray(a) ? a.length : o, l ? (oe.hasOwnProp(a, o) ? a[o] = [a[o], r] : a[o] = r, !s) : ((!a[o] || !oe.isObject(a[o])) && (a[o] = []), t(n, r, a[o], i) && oe.isArray(a[o]) && (a[o] = tH(a[o])), !s);
  }
  if (oe.isFormData(e) && oe.isFunction(e.entries)) {
    const n = {};
    return oe.forEachEntry(e, (r, a) => {
      t(eH(r), a, n, 0);
    }), n;
  }
  return null;
}
function nH(e, t, n) {
  if (oe.isString(e))
    try {
      return (t || JSON.parse)(e), oe.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (0, JSON.stringify)(e);
}
const ii = {
  transitional: N_,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", a = r.indexOf("application/json") > -1, i = oe.isObject(t);
    if (i && oe.isHTMLForm(t) && (t = new FormData(t)), oe.isFormData(t))
      return a ? JSON.stringify(O_(t)) : t;
    if (oe.isArrayBuffer(t) || oe.isBuffer(t) || oe.isStream(t) || oe.isFile(t) || oe.isBlob(t) || oe.isReadableStream(t))
      return t;
    if (oe.isArrayBufferView(t))
      return t.buffer;
    if (oe.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let s;
    if (i) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return Jj(t, this.formSerializer).toString();
      if ((s = oe.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const l = this.env && this.env.FormData;
        return yo(
          s ? { "files[]": t } : t,
          l && new l(),
          this.formSerializer
        );
      }
    }
    return i || a ? (n.setContentType("application/json", !1), nH(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || ii.transitional, r = n && n.forcedJSONParsing, a = this.responseType === "json";
    if (oe.isResponse(t) || oe.isReadableStream(t))
      return t;
    if (t && oe.isString(t) && (r && !this.responseType || a)) {
      const o = !(n && n.silentJSONParsing) && a;
      try {
        return JSON.parse(t);
      } catch (s) {
        if (o)
          throw s.name === "SyntaxError" ? Ye.from(s, Ye.ERR_BAD_RESPONSE, this, null, this.response) : s;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: an.classes.FormData,
    Blob: an.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
oe.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  ii.headers[e] = {};
});
const rH = oe.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), aH = (e) => {
  const t = {};
  let n, r, a;
  return e && e.split(`
`).forEach(function(o) {
    a = o.indexOf(":"), n = o.substring(0, a).trim().toLowerCase(), r = o.substring(a + 1).trim(), !(!n || t[n] && rH[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, zv = Symbol("internals");
function Ia(e) {
  return e && String(e).trim().toLowerCase();
}
function Ni(e) {
  return e === !1 || e == null ? e : oe.isArray(e) ? e.map(Ni) : String(e);
}
function iH(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const oH = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function pp(e, t, n, r, a) {
  if (oe.isFunction(r))
    return r.call(this, t, n);
  if (a && (t = n), !!oe.isString(t)) {
    if (oe.isString(r))
      return t.indexOf(r) !== -1;
    if (oe.isRegExp(r))
      return r.test(t);
  }
}
function sH(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function lH(e, t) {
  const n = oe.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(a, i, o) {
        return this[r].call(this, t, a, i, o);
      },
      configurable: !0
    });
  });
}
class En {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const a = this;
    function i(s, l, u) {
      const c = Ia(l);
      if (!c)
        throw new Error("header name must be a non-empty string");
      const d = oe.findKey(a, c);
      (!d || a[d] === void 0 || u === !0 || u === void 0 && a[d] !== !1) && (a[d || l] = Ni(s));
    }
    const o = (s, l) => oe.forEach(s, (u, c) => i(u, c, l));
    if (oe.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (oe.isString(t) && (t = t.trim()) && !oH(t))
      o(aH(t), n);
    else if (oe.isHeaders(t))
      for (const [s, l] of t.entries())
        i(l, s, r);
    else
      t != null && i(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = Ia(t), t) {
      const r = oe.findKey(this, t);
      if (r) {
        const a = this[r];
        if (!n)
          return a;
        if (n === !0)
          return iH(a);
        if (oe.isFunction(n))
          return n.call(this, a, r);
        if (oe.isRegExp(n))
          return n.exec(a);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = Ia(t), t) {
      const r = oe.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || pp(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let a = !1;
    function i(o) {
      if (o = Ia(o), o) {
        const s = oe.findKey(r, o);
        s && (!n || pp(r, r[s], s, n)) && (delete r[s], a = !0);
      }
    }
    return oe.isArray(t) ? t.forEach(i) : i(t), a;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, a = !1;
    for (; r--; ) {
      const i = n[r];
      (!t || pp(this, this[i], i, t, !0)) && (delete this[i], a = !0);
    }
    return a;
  }
  normalize(t) {
    const n = this, r = {};
    return oe.forEach(this, (a, i) => {
      const o = oe.findKey(r, i);
      if (o) {
        n[o] = Ni(a), delete n[i];
        return;
      }
      const s = t ? sH(i) : String(i).trim();
      s !== i && delete n[i], n[s] = Ni(a), r[s] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return oe.forEach(this, (r, a) => {
      r != null && r !== !1 && (n[a] = t && oe.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((a) => r.set(a)), r;
  }
  static accessor(t) {
    const r = (this[zv] = this[zv] = {
      accessors: {}
    }).accessors, a = this.prototype;
    function i(o) {
      const s = Ia(o);
      r[s] || (lH(a, o), r[s] = !0);
    }
    return oe.isArray(t) ? t.forEach(i) : i(t), this;
  }
}
En.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
oe.reduceDescriptors(En.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
oe.freezeMethods(En);
function fp(e, t) {
  const n = this || ii, r = t || n, a = En.from(r.headers);
  let i = r.data;
  return oe.forEach(e, function(s) {
    i = s.call(n, i, a.normalize(), t ? t.status : void 0);
  }), a.normalize(), i;
}
function L_(e) {
  return !!(e && e.__CANCEL__);
}
function ma(e, t, n) {
  Ye.call(this, e ?? "canceled", Ye.ERR_CANCELED, t, n), this.name = "CanceledError";
}
oe.inherits(ma, Ye, {
  __CANCEL__: !0
});
function D_(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new Ye(
    "Request failed with status code " + n.status,
    [Ye.ERR_BAD_REQUEST, Ye.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function uH(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function cH(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let a = 0, i = 0, o;
  return t = t !== void 0 ? t : 1e3, function(l) {
    const u = Date.now(), c = r[i];
    o || (o = u), n[a] = l, r[a] = u;
    let d = i, m = 0;
    for (; d !== a; )
      m += n[d++], d = d % e;
    if (a = (a + 1) % e, a === i && (i = (i + 1) % e), u - o < t)
      return;
    const f = c && u - c;
    return f ? Math.round(m * 1e3 / f) : void 0;
  };
}
function dH(e, t) {
  let n = 0, r = 1e3 / t, a, i;
  const o = (u, c = Date.now()) => {
    n = c, a = null, i && (clearTimeout(i), i = null), e.apply(null, u);
  };
  return [(...u) => {
    const c = Date.now(), d = c - n;
    d >= r ? o(u, c) : (a = u, i || (i = setTimeout(() => {
      i = null, o(a);
    }, r - d)));
  }, () => a && o(a)];
}
const Wi = (e, t, n = 3) => {
  let r = 0;
  const a = cH(50, 250);
  return dH((i) => {
    const o = i.loaded, s = i.lengthComputable ? i.total : void 0, l = o - r, u = a(l), c = o <= s;
    r = o;
    const d = {
      loaded: o,
      total: s,
      progress: s ? o / s : void 0,
      bytes: l,
      rate: u || void 0,
      estimated: u && s && c ? (s - o) / u : void 0,
      event: i,
      lengthComputable: s != null,
      [t ? "download" : "upload"]: !0
    };
    e(d);
  }, n);
}, Gv = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, Vv = (e) => (...t) => oe.asap(() => e(...t)), pH = an.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, an.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(an.origin),
  an.navigator && /(msie|trident)/i.test(an.navigator.userAgent)
) : () => !0, fH = an.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, a, i) {
      const o = [e + "=" + encodeURIComponent(t)];
      oe.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), oe.isString(r) && o.push("path=" + r), oe.isString(a) && o.push("domain=" + a), i === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function mH(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function gH(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function M_(e, t) {
  return e && !mH(t) ? gH(e, t) : t;
}
const Wv = (e) => e instanceof En ? { ...e } : e;
function Or(e, t) {
  t = t || {};
  const n = {};
  function r(u, c, d, m) {
    return oe.isPlainObject(u) && oe.isPlainObject(c) ? oe.merge.call({ caseless: m }, u, c) : oe.isPlainObject(c) ? oe.merge({}, c) : oe.isArray(c) ? c.slice() : c;
  }
  function a(u, c, d, m) {
    if (oe.isUndefined(c)) {
      if (!oe.isUndefined(u))
        return r(void 0, u, d, m);
    } else return r(u, c, d, m);
  }
  function i(u, c) {
    if (!oe.isUndefined(c))
      return r(void 0, c);
  }
  function o(u, c) {
    if (oe.isUndefined(c)) {
      if (!oe.isUndefined(u))
        return r(void 0, u);
    } else return r(void 0, c);
  }
  function s(u, c, d) {
    if (d in t)
      return r(u, c);
    if (d in e)
      return r(void 0, u);
  }
  const l = {
    url: i,
    method: i,
    data: i,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: s,
    headers: (u, c, d) => a(Wv(u), Wv(c), d, !0)
  };
  return oe.forEach(Object.keys(Object.assign({}, e, t)), function(c) {
    const d = l[c] || a, m = d(e[c], t[c], c);
    oe.isUndefined(m) && d !== s || (n[c] = m);
  }), n;
}
const P_ = (e) => {
  const t = Or({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: a, xsrfCookieName: i, headers: o, auth: s } = t;
  t.headers = o = En.from(o), t.url = k_(M_(t.baseURL, t.url), e.params, e.paramsSerializer), s && o.set(
    "Authorization",
    "Basic " + btoa((s.username || "") + ":" + (s.password ? unescape(encodeURIComponent(s.password)) : ""))
  );
  let l;
  if (oe.isFormData(n)) {
    if (an.hasStandardBrowserEnv || an.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((l = o.getContentType()) !== !1) {
      const [u, ...c] = l ? l.split(";").map((d) => d.trim()).filter(Boolean) : [];
      o.setContentType([u || "multipart/form-data", ...c].join("; "));
    }
  }
  if (an.hasStandardBrowserEnv && (r && oe.isFunction(r) && (r = r(t)), r || r !== !1 && pH(t.url))) {
    const u = a && i && fH.read(i);
    u && o.set(a, u);
  }
  return t;
}, hH = typeof XMLHttpRequest < "u", bH = hH && function(e) {
  return new Promise(function(n, r) {
    const a = P_(e);
    let i = a.data;
    const o = En.from(a.headers).normalize();
    let { responseType: s, onUploadProgress: l, onDownloadProgress: u } = a, c, d, m, f, h;
    function E() {
      f && f(), h && h(), a.cancelToken && a.cancelToken.unsubscribe(c), a.signal && a.signal.removeEventListener("abort", c);
    }
    let I = new XMLHttpRequest();
    I.open(a.method.toUpperCase(), a.url, !0), I.timeout = a.timeout;
    function x() {
      if (!I)
        return;
      const S = En.from(
        "getAllResponseHeaders" in I && I.getAllResponseHeaders()
      ), y = {
        data: !s || s === "text" || s === "json" ? I.responseText : I.response,
        status: I.status,
        statusText: I.statusText,
        headers: S,
        config: e,
        request: I
      };
      D_(function(j) {
        n(j), E();
      }, function(j) {
        r(j), E();
      }, y), I = null;
    }
    "onloadend" in I ? I.onloadend = x : I.onreadystatechange = function() {
      !I || I.readyState !== 4 || I.status === 0 && !(I.responseURL && I.responseURL.indexOf("file:") === 0) || setTimeout(x);
    }, I.onabort = function() {
      I && (r(new Ye("Request aborted", Ye.ECONNABORTED, e, I)), I = null);
    }, I.onerror = function() {
      r(new Ye("Network Error", Ye.ERR_NETWORK, e, I)), I = null;
    }, I.ontimeout = function() {
      let g = a.timeout ? "timeout of " + a.timeout + "ms exceeded" : "timeout exceeded";
      const y = a.transitional || N_;
      a.timeoutErrorMessage && (g = a.timeoutErrorMessage), r(new Ye(
        g,
        y.clarifyTimeoutError ? Ye.ETIMEDOUT : Ye.ECONNABORTED,
        e,
        I
      )), I = null;
    }, i === void 0 && o.setContentType(null), "setRequestHeader" in I && oe.forEach(o.toJSON(), function(g, y) {
      I.setRequestHeader(y, g);
    }), oe.isUndefined(a.withCredentials) || (I.withCredentials = !!a.withCredentials), s && s !== "json" && (I.responseType = a.responseType), u && ([m, h] = Wi(u, !0), I.addEventListener("progress", m)), l && I.upload && ([d, f] = Wi(l), I.upload.addEventListener("progress", d), I.upload.addEventListener("loadend", f)), (a.cancelToken || a.signal) && (c = (S) => {
      I && (r(!S || S.type ? new ma(null, e, I) : S), I.abort(), I = null);
    }, a.cancelToken && a.cancelToken.subscribe(c), a.signal && (a.signal.aborted ? c() : a.signal.addEventListener("abort", c)));
    const v = uH(a.url);
    if (v && an.protocols.indexOf(v) === -1) {
      r(new Ye("Unsupported protocol " + v + ":", Ye.ERR_BAD_REQUEST, e));
      return;
    }
    I.send(i || null);
  });
}, EH = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), a;
    const i = function(u) {
      if (!a) {
        a = !0, s();
        const c = u instanceof Error ? u : this.reason;
        r.abort(c instanceof Ye ? c : new ma(c instanceof Error ? c.message : c));
      }
    };
    let o = t && setTimeout(() => {
      o = null, i(new Ye(`timeout ${t} of ms exceeded`, Ye.ETIMEDOUT));
    }, t);
    const s = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((u) => {
        u.unsubscribe ? u.unsubscribe(i) : u.removeEventListener("abort", i);
      }), e = null);
    };
    e.forEach((u) => u.addEventListener("abort", i));
    const { signal: l } = r;
    return l.unsubscribe = () => oe.asap(s), l;
  }
}, yH = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, a;
  for (; r < n; )
    a = r + t, yield e.slice(r, a), r = a;
}, vH = async function* (e, t) {
  for await (const n of TH(e))
    yield* yH(n, t);
}, TH = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, Yv = (e, t, n, r) => {
  const a = vH(e, t);
  let i = 0, o, s = (l) => {
    o || (o = !0, r && r(l));
  };
  return new ReadableStream({
    async pull(l) {
      try {
        const { done: u, value: c } = await a.next();
        if (u) {
          s(), l.close();
          return;
        }
        let d = c.byteLength;
        if (n) {
          let m = i += d;
          n(m);
        }
        l.enqueue(new Uint8Array(c));
      } catch (u) {
        throw s(u), u;
      }
    },
    cancel(l) {
      return s(l), a.return();
    }
  }, {
    highWaterMark: 2
  });
}, vo = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", F_ = vo && typeof ReadableStream == "function", SH = vo && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), B_ = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, _H = F_ && B_(() => {
  let e = !1;
  const t = new Request(an.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), Kv = 64 * 1024, Qp = F_ && B_(() => oe.isReadableStream(new Response("").body)), Yi = {
  stream: Qp && ((e) => e.body)
};
vo && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !Yi[t] && (Yi[t] = oe.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new Ye(`Response type '${t}' is not supported`, Ye.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const AH = async (e) => {
  if (e == null)
    return 0;
  if (oe.isBlob(e))
    return e.size;
  if (oe.isSpecCompliantForm(e))
    return (await new Request(an.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (oe.isArrayBufferView(e) || oe.isArrayBuffer(e))
    return e.byteLength;
  if (oe.isURLSearchParams(e) && (e = e + ""), oe.isString(e))
    return (await SH(e)).byteLength;
}, xH = async (e, t) => {
  const n = oe.toFiniteNumber(e.getContentLength());
  return n ?? AH(t);
}, RH = vo && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: a,
    cancelToken: i,
    timeout: o,
    onDownloadProgress: s,
    onUploadProgress: l,
    responseType: u,
    headers: c,
    withCredentials: d = "same-origin",
    fetchOptions: m
  } = P_(e);
  u = u ? (u + "").toLowerCase() : "text";
  let f = EH([a, i && i.toAbortSignal()], o), h;
  const E = f && f.unsubscribe && (() => {
    f.unsubscribe();
  });
  let I;
  try {
    if (l && _H && n !== "get" && n !== "head" && (I = await xH(c, r)) !== 0) {
      let y = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), T;
      if (oe.isFormData(r) && (T = y.headers.get("content-type")) && c.setContentType(T), y.body) {
        const [j, $] = Gv(
          I,
          Wi(Vv(l))
        );
        r = Yv(y.body, Kv, j, $);
      }
    }
    oe.isString(d) || (d = d ? "include" : "omit");
    const x = "credentials" in Request.prototype;
    h = new Request(t, {
      ...m,
      signal: f,
      method: n.toUpperCase(),
      headers: c.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: x ? d : void 0
    });
    let v = await fetch(h);
    const S = Qp && (u === "stream" || u === "response");
    if (Qp && (s || S && E)) {
      const y = {};
      ["status", "statusText", "headers"].forEach((D) => {
        y[D] = v[D];
      });
      const T = oe.toFiniteNumber(v.headers.get("content-length")), [j, $] = s && Gv(
        T,
        Wi(Vv(s), !0)
      ) || [];
      v = new Response(
        Yv(v.body, Kv, j, () => {
          $ && $(), E && E();
        }),
        y
      );
    }
    u = u || "text";
    let g = await Yi[oe.findKey(Yi, u) || "text"](v, e);
    return !S && E && E(), await new Promise((y, T) => {
      D_(y, T, {
        data: g,
        headers: En.from(v.headers),
        status: v.status,
        statusText: v.statusText,
        config: e,
        request: h
      });
    });
  } catch (x) {
    throw E && E(), x && x.name === "TypeError" && /fetch/i.test(x.message) ? Object.assign(
      new Ye("Network Error", Ye.ERR_NETWORK, e, h),
      {
        cause: x.cause || x
      }
    ) : Ye.from(x, x && x.code, e, h);
  }
}), Jp = {
  http: Hj,
  xhr: bH,
  fetch: RH
};
oe.forEach(Jp, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const Xv = (e) => `- ${e}`, IH = (e) => oe.isFunction(e) || e === null || e === !1, U_ = {
  getAdapter: (e) => {
    e = oe.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const a = {};
    for (let i = 0; i < t; i++) {
      n = e[i];
      let o;
      if (r = n, !IH(n) && (r = Jp[(o = String(n)).toLowerCase()], r === void 0))
        throw new Ye(`Unknown adapter '${o}'`);
      if (r)
        break;
      a[o || "#" + i] = r;
    }
    if (!r) {
      const i = Object.entries(a).map(
        ([s, l]) => `adapter ${s} ` + (l === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? i.length > 1 ? `since :
` + i.map(Xv).join(`
`) : " " + Xv(i[0]) : "as no adapter specified";
      throw new Ye(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: Jp
};
function mp(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new ma(null, e);
}
function Zv(e) {
  return mp(e), e.headers = En.from(e.headers), e.data = fp.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), U_.getAdapter(e.adapter || ii.adapter)(e).then(function(r) {
    return mp(e), r.data = fp.call(
      e,
      e.transformResponse,
      r
    ), r.headers = En.from(r.headers), r;
  }, function(r) {
    return L_(r) || (mp(e), r && r.response && (r.response.data = fp.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = En.from(r.response.headers))), Promise.reject(r);
  });
}
const j_ = "1.7.8", To = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  To[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const Qv = {};
To.transitional = function(t, n, r) {
  function a(i, o) {
    return "[Axios v" + j_ + "] Transitional option '" + i + "'" + o + (r ? ". " + r : "");
  }
  return (i, o, s) => {
    if (t === !1)
      throw new Ye(
        a(o, " has been removed" + (n ? " in " + n : "")),
        Ye.ERR_DEPRECATED
      );
    return n && !Qv[o] && (Qv[o] = !0, console.warn(
      a(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(i, o, s) : !0;
  };
};
To.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function wH(e, t, n) {
  if (typeof e != "object")
    throw new Ye("options must be an object", Ye.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let a = r.length;
  for (; a-- > 0; ) {
    const i = r[a], o = t[i];
    if (o) {
      const s = e[i], l = s === void 0 || o(s, i, e);
      if (l !== !0)
        throw new Ye("option " + i + " must be " + l, Ye.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new Ye("Unknown option " + i, Ye.ERR_BAD_OPTION);
  }
}
const Oi = {
  assertOptions: wH,
  validators: To
}, qn = Oi.validators;
class kr {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new $v(),
      response: new $v()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let a = {};
        Error.captureStackTrace ? Error.captureStackTrace(a) : a = new Error();
        const i = a.stack ? a.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? i && !String(r.stack).endsWith(i.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + i) : r.stack = i;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = Or(this.defaults, n);
    const { transitional: r, paramsSerializer: a, headers: i } = n;
    r !== void 0 && Oi.assertOptions(r, {
      silentJSONParsing: qn.transitional(qn.boolean),
      forcedJSONParsing: qn.transitional(qn.boolean),
      clarifyTimeoutError: qn.transitional(qn.boolean)
    }, !1), a != null && (oe.isFunction(a) ? n.paramsSerializer = {
      serialize: a
    } : Oi.assertOptions(a, {
      encode: qn.function,
      serialize: qn.function
    }, !0)), Oi.assertOptions(n, {
      baseUrl: qn.spelling("baseURL"),
      withXsrfToken: qn.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = i && oe.merge(
      i.common,
      i[n.method]
    );
    i && oe.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (h) => {
        delete i[h];
      }
    ), n.headers = En.concat(o, i);
    const s = [];
    let l = !0;
    this.interceptors.request.forEach(function(E) {
      typeof E.runWhen == "function" && E.runWhen(n) === !1 || (l = l && E.synchronous, s.unshift(E.fulfilled, E.rejected));
    });
    const u = [];
    this.interceptors.response.forEach(function(E) {
      u.push(E.fulfilled, E.rejected);
    });
    let c, d = 0, m;
    if (!l) {
      const h = [Zv.bind(this), void 0];
      for (h.unshift.apply(h, s), h.push.apply(h, u), m = h.length, c = Promise.resolve(n); d < m; )
        c = c.then(h[d++], h[d++]);
      return c;
    }
    m = s.length;
    let f = n;
    for (d = 0; d < m; ) {
      const h = s[d++], E = s[d++];
      try {
        f = h(f);
      } catch (I) {
        E.call(this, I);
        break;
      }
    }
    try {
      c = Zv.call(this, f);
    } catch (h) {
      return Promise.reject(h);
    }
    for (d = 0, m = u.length; d < m; )
      c = c.then(u[d++], u[d++]);
    return c;
  }
  getUri(t) {
    t = Or(this.defaults, t);
    const n = M_(t.baseURL, t.url);
    return k_(n, t.params, t.paramsSerializer);
  }
}
oe.forEach(["delete", "get", "head", "options"], function(t) {
  kr.prototype[t] = function(n, r) {
    return this.request(Or(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
oe.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(i, o, s) {
      return this.request(Or(s || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: i,
        data: o
      }));
    };
  }
  kr.prototype[t] = n(), kr.prototype[t + "Form"] = n(!0);
});
class sm {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(i) {
      n = i;
    });
    const r = this;
    this.promise.then((a) => {
      if (!r._listeners) return;
      let i = r._listeners.length;
      for (; i-- > 0; )
        r._listeners[i](a);
      r._listeners = null;
    }), this.promise.then = (a) => {
      let i;
      const o = new Promise((s) => {
        r.subscribe(s), i = s;
      }).then(a);
      return o.cancel = function() {
        r.unsubscribe(i);
      }, o;
    }, t(function(i, o, s) {
      r.reason || (r.reason = new ma(i, o, s), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new sm(function(a) {
        t = a;
      }),
      cancel: t
    };
  }
}
function CH(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function kH(e) {
  return oe.isObject(e) && e.isAxiosError === !0;
}
const ef = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(ef).forEach(([e, t]) => {
  ef[t] = e;
});
function H_(e) {
  const t = new kr(e), n = E_(kr.prototype.request, t);
  return oe.extend(n, kr.prototype, t, { allOwnKeys: !0 }), oe.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(a) {
    return H_(Or(e, a));
  }, n;
}
const Bt = H_(ii);
Bt.Axios = kr;
Bt.CanceledError = ma;
Bt.CancelToken = sm;
Bt.isCancel = L_;
Bt.VERSION = j_;
Bt.toFormData = yo;
Bt.AxiosError = Ye;
Bt.Cancel = Bt.CanceledError;
Bt.all = function(t) {
  return Promise.all(t);
};
Bt.spread = CH;
Bt.isAxiosError = kH;
Bt.mergeConfig = Or;
Bt.AxiosHeaders = En;
Bt.formToJSON = (e) => O_(oe.isHTMLForm(e) ? new FormData(e) : e);
Bt.getAdapter = U_.getAdapter;
Bt.HttpStatusCode = ef;
Bt.default = Bt;
var NH = function(e) {
  return function(t, n) {
    var r = It(!1);
    e(function() {
      return function() {
        r.current = !1;
      };
    }, []), e(function() {
      if (!r.current)
        r.current = !0;
      else
        return t();
    }, n);
  };
}, So = function(e) {
  return typeof e == "function";
}, _o = process.env.NODE_ENV === "development" || process.env.NODE_ENV === "test";
function Wr(e) {
  _o && (So(e) || console.error("useMemoizedFn expected parameter is a function, got ".concat(typeof e)));
  var t = It(e);
  t.current = lr(function() {
    return e;
  }, [e]);
  var n = It();
  return n.current || (n.current = function() {
    for (var r = [], a = 0; a < arguments.length; a++)
      r[a] = arguments[a];
    return t.current.apply(this, r);
  }), n.current;
}
const Ya = NH(kn);
var q_ = function(e, t) {
  var n = t.manual, r = t.ready, a = r === void 0 ? !0 : r, i = t.defaultParams, o = i === void 0 ? [] : i, s = t.refreshDeps, l = s === void 0 ? [] : s, u = t.refreshDepsAction, c = It(!1);
  return c.current = !1, Ya(function() {
    !n && a && (c.current = !0, e.run.apply(e, rn([], nn(o), !1)));
  }, [a]), Ya(function() {
    c.current || n || (c.current = !0, u ? u() : e.refresh());
  }, rn([], nn(l), !1)), {
    onBefore: function() {
      if (!a)
        return {
          stopNow: !0
        };
    }
  };
};
q_.onInit = function(e) {
  var t = e.ready, n = t === void 0 ? !0 : t, r = e.manual;
  return {
    loading: !r && n
  };
};
function OH(e, t) {
  if (e === t) return !0;
  for (var n = 0; n < e.length; n++)
    if (!Object.is(e[n], t[n])) return !1;
  return !0;
}
function $_(e, t) {
  var n = It({
    deps: t,
    obj: void 0,
    initialized: !1
  }).current;
  return (n.initialized === !1 || !OH(n.deps, t)) && (n.deps = t, n.obj = e(), n.initialized = !0), n.obj;
}
function z_(e) {
  var t = It(e);
  return t.current = e, t;
}
var lm = function(e) {
  _o && (So(e) || console.error("useUnmount expected parameter is a function, got ".concat(typeof e)));
  var t = z_(e);
  kn(function() {
    return function() {
      t.current();
    };
  }, []);
}, Li = /* @__PURE__ */ new Map(), LH = function(e, t, n) {
  var r = Li.get(e);
  r != null && r.timer && clearTimeout(r.timer);
  var a = void 0;
  t > -1 && (a = setTimeout(function() {
    Li.delete(e);
  }, t)), Li.set(e, Fn(Fn({}, n), {
    timer: a
  }));
}, DH = function(e) {
  return Li.get(e);
}, Di = /* @__PURE__ */ new Map(), MH = function(e) {
  return Di.get(e);
}, PH = function(e, t) {
  Di.set(e, t), t.then(function(n) {
    return Di.delete(e), n;
  }).catch(function() {
    Di.delete(e);
  });
}, Rr = {}, FH = function(e, t) {
  Rr[e] && Rr[e].forEach(function(n) {
    return n(t);
  });
}, gp = function(e, t) {
  return Rr[e] || (Rr[e] = []), Rr[e].push(t), function() {
    var r = Rr[e].indexOf(t);
    Rr[e].splice(r, 1);
  };
}, BH = function(e, t) {
  var n = t.cacheKey, r = t.cacheTime, a = r === void 0 ? 5 * 60 * 1e3 : r, i = t.staleTime, o = i === void 0 ? 0 : i, s = t.setCache, l = t.getCache, u = It(), c = It(), d = function(f, h) {
    s ? s(h) : LH(f, a, h), FH(f, h.data);
  }, m = function(f, h) {
    return h === void 0 && (h = []), l ? l(h) : DH(f);
  };
  return $_(function() {
    if (n) {
      var f = m(n);
      f && Object.hasOwnProperty.call(f, "data") && (e.state.data = f.data, e.state.params = f.params, (o === -1 || (/* @__PURE__ */ new Date()).getTime() - f.time <= o) && (e.state.loading = !1)), u.current = gp(n, function(h) {
        e.setState({
          data: h
        });
      });
    }
  }, []), lm(function() {
    var f;
    (f = u.current) === null || f === void 0 || f.call(u);
  }), n ? {
    onBefore: function(f) {
      var h = m(n, f);
      return !h || !Object.hasOwnProperty.call(h, "data") ? {} : o === -1 || (/* @__PURE__ */ new Date()).getTime() - h.time <= o ? {
        loading: !1,
        data: h == null ? void 0 : h.data,
        error: void 0,
        returnNow: !0
      } : {
        data: h == null ? void 0 : h.data,
        error: void 0
      };
    },
    onRequest: function(f, h) {
      var E = MH(n);
      return E && E !== c.current ? {
        servicePromise: E
      } : (E = f.apply(void 0, rn([], nn(h), !1)), c.current = E, PH(n, E), {
        servicePromise: E
      });
    },
    onSuccess: function(f, h) {
      var E;
      n && ((E = u.current) === null || E === void 0 || E.call(u), d(n, {
        data: f,
        params: h,
        time: (/* @__PURE__ */ new Date()).getTime()
      }), u.current = gp(n, function(I) {
        e.setState({
          data: I
        });
      }));
    },
    onMutate: function(f) {
      var h;
      n && ((h = u.current) === null || h === void 0 || h.call(u), d(n, {
        data: f,
        params: e.state.params,
        time: (/* @__PURE__ */ new Date()).getTime()
      }), u.current = gp(n, function(E) {
        e.setState({
          data: E
        });
      }));
    }
  } : {};
};
function UH(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var um = UH, jH = typeof mn == "object" && mn && mn.Object === Object && mn, HH = jH, qH = HH, $H = typeof self == "object" && self && self.Object === Object && self, zH = qH || $H || Function("return this")(), G_ = zH, GH = G_, VH = function() {
  return GH.Date.now();
}, WH = VH, YH = /\s/;
function KH(e) {
  for (var t = e.length; t-- && YH.test(e.charAt(t)); )
    ;
  return t;
}
var XH = KH, ZH = XH, QH = /^\s+/;
function JH(e) {
  return e && e.slice(0, ZH(e) + 1).replace(QH, "");
}
var e7 = JH, t7 = G_, n7 = t7.Symbol, V_ = n7, Jv = V_, W_ = Object.prototype, r7 = W_.hasOwnProperty, a7 = W_.toString, wa = Jv ? Jv.toStringTag : void 0;
function i7(e) {
  var t = r7.call(e, wa), n = e[wa];
  try {
    e[wa] = void 0;
    var r = !0;
  } catch {
  }
  var a = a7.call(e);
  return r && (t ? e[wa] = n : delete e[wa]), a;
}
var o7 = i7, s7 = Object.prototype, l7 = s7.toString;
function u7(e) {
  return l7.call(e);
}
var c7 = u7, eT = V_, d7 = o7, p7 = c7, f7 = "[object Null]", m7 = "[object Undefined]", tT = eT ? eT.toStringTag : void 0;
function g7(e) {
  return e == null ? e === void 0 ? m7 : f7 : tT && tT in Object(e) ? d7(e) : p7(e);
}
var h7 = g7;
function b7(e) {
  return e != null && typeof e == "object";
}
var E7 = b7, y7 = h7, v7 = E7, T7 = "[object Symbol]";
function S7(e) {
  return typeof e == "symbol" || v7(e) && y7(e) == T7;
}
var _7 = S7, A7 = e7, nT = um, x7 = _7, rT = NaN, R7 = /^[-+]0x[0-9a-f]+$/i, I7 = /^0b[01]+$/i, w7 = /^0o[0-7]+$/i, C7 = parseInt;
function k7(e) {
  if (typeof e == "number")
    return e;
  if (x7(e))
    return rT;
  if (nT(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = nT(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = A7(e);
  var n = I7.test(e);
  return n || w7.test(e) ? C7(e.slice(2), n ? 2 : 8) : R7.test(e) ? rT : +e;
}
var N7 = k7, O7 = um, hp = WH, aT = N7, L7 = "Expected a function", D7 = Math.max, M7 = Math.min;
function P7(e, t, n) {
  var r, a, i, o, s, l, u = 0, c = !1, d = !1, m = !0;
  if (typeof e != "function")
    throw new TypeError(L7);
  t = aT(t) || 0, O7(n) && (c = !!n.leading, d = "maxWait" in n, i = d ? D7(aT(n.maxWait) || 0, t) : i, m = "trailing" in n ? !!n.trailing : m);
  function f(T) {
    var j = r, $ = a;
    return r = a = void 0, u = T, o = e.apply($, j), o;
  }
  function h(T) {
    return u = T, s = setTimeout(x, t), c ? f(T) : o;
  }
  function E(T) {
    var j = T - l, $ = T - u, D = t - j;
    return d ? M7(D, i - $) : D;
  }
  function I(T) {
    var j = T - l, $ = T - u;
    return l === void 0 || j >= t || j < 0 || d && $ >= i;
  }
  function x() {
    var T = hp();
    if (I(T))
      return v(T);
    s = setTimeout(x, E(T));
  }
  function v(T) {
    return s = void 0, m && r ? f(T) : (r = a = void 0, o);
  }
  function S() {
    s !== void 0 && clearTimeout(s), u = 0, r = l = a = s = void 0;
  }
  function g() {
    return s === void 0 ? o : v(hp());
  }
  function y() {
    var T = hp(), j = I(T);
    if (r = arguments, a = this, l = T, j) {
      if (s === void 0)
        return h(l);
      if (d)
        return clearTimeout(s), s = setTimeout(x, t), f(l);
    }
    return s === void 0 && (s = setTimeout(x, t)), o;
  }
  return y.cancel = S, y.flush = g, y;
}
var Y_ = P7;
const F7 = /* @__PURE__ */ pr(Y_);
var B7 = function(e, t) {
  var n = t.debounceWait, r = t.debounceLeading, a = t.debounceTrailing, i = t.debounceMaxWait, o = It(), s = lr(function() {
    var l = {};
    return r !== void 0 && (l.leading = r), a !== void 0 && (l.trailing = a), i !== void 0 && (l.maxWait = i), l;
  }, [r, a, i]);
  return kn(function() {
    if (n) {
      var l = e.runAsync.bind(e);
      return o.current = F7(function(u) {
        u();
      }, n, s), e.runAsync = function() {
        for (var u = [], c = 0; c < arguments.length; c++)
          u[c] = arguments[c];
        return new Promise(function(d, m) {
          var f;
          (f = o.current) === null || f === void 0 || f.call(o, function() {
            l.apply(void 0, rn([], nn(u), !1)).then(d).catch(m);
          });
        });
      }, function() {
        var u;
        (u = o.current) === null || u === void 0 || u.cancel(), e.runAsync = l;
      };
    }
  }, [n, s]), n ? {
    onCancel: function() {
      var l;
      (l = o.current) === null || l === void 0 || l.cancel();
    }
  } : {};
}, U7 = function(e, t) {
  var n = t.loadingDelay, r = t.ready, a = It();
  if (!n)
    return {};
  var i = function() {
    a.current && clearTimeout(a.current);
  };
  return {
    onBefore: function() {
      return i(), r !== !1 && (a.current = setTimeout(function() {
        e.setState({
          loading: !0
        });
      }, n)), {
        loading: !1
      };
    },
    onFinally: function() {
      i();
    },
    onCancel: function() {
      i();
    }
  };
}, Ao = !!(typeof window < "u" && window.document && window.document.createElement);
function cm() {
  return Ao ? document.visibilityState !== "hidden" : !0;
}
var Ua = [];
function j7(e) {
  return Ua.push(e), function() {
    var n = Ua.indexOf(e);
    Ua.splice(n, 1);
  };
}
if (Ao) {
  var H7 = function() {
    if (cm())
      for (var e = 0; e < Ua.length; e++) {
        var t = Ua[e];
        t();
      }
  };
  window.addEventListener("visibilitychange", H7, !1);
}
var q7 = function(e, t) {
  var n = t.pollingInterval, r = t.pollingWhenHidden, a = r === void 0 ? !0 : r, i = t.pollingErrorRetryCount, o = i === void 0 ? -1 : i, s = It(), l = It(), u = It(0), c = function() {
    var d;
    s.current && clearTimeout(s.current), (d = l.current) === null || d === void 0 || d.call(l);
  };
  return Ya(function() {
    n || c();
  }, [n]), n ? {
    onBefore: function() {
      c();
    },
    onError: function() {
      u.current += 1;
    },
    onSuccess: function() {
      u.current = 0;
    },
    onFinally: function() {
      o === -1 || // When an error occurs, the request is not repeated after pollingErrorRetryCount retries
      o !== -1 && u.current <= o ? s.current = setTimeout(function() {
        !a && !cm() ? l.current = j7(function() {
          e.refresh();
        }) : e.refresh();
      }, n) : u.current = 0;
    },
    onCancel: function() {
      c();
    }
  } : {};
};
function $7(e, t) {
  var n = !1;
  return function() {
    for (var r = [], a = 0; a < arguments.length; a++)
      r[a] = arguments[a];
    n || (n = !0, e.apply(void 0, rn([], nn(r), !1)), setTimeout(function() {
      n = !1;
    }, t));
  };
}
function z7() {
  return Ao && typeof navigator.onLine < "u" ? navigator.onLine : !0;
}
var ja = [];
function G7(e) {
  return ja.push(e), function() {
    var n = ja.indexOf(e);
    n > -1 && ja.splice(n, 1);
  };
}
if (Ao) {
  var iT = function() {
    if (!(!cm() || !z7()))
      for (var e = 0; e < ja.length; e++) {
        var t = ja[e];
        t();
      }
  };
  window.addEventListener("visibilitychange", iT, !1), window.addEventListener("focus", iT, !1);
}
var V7 = function(e, t) {
  var n = t.refreshOnWindowFocus, r = t.focusTimespan, a = r === void 0 ? 5e3 : r, i = It(), o = function() {
    var s;
    (s = i.current) === null || s === void 0 || s.call(i);
  };
  return kn(function() {
    if (n) {
      var s = $7(e.refresh.bind(e), a);
      i.current = G7(function() {
        s();
      });
    }
    return function() {
      o();
    };
  }, [n, a]), lm(function() {
    o();
  }), {};
}, W7 = function(e, t) {
  var n = t.retryInterval, r = t.retryCount, a = It(), i = It(0), o = It(!1);
  return r ? {
    onBefore: function() {
      o.current || (i.current = 0), o.current = !1, a.current && clearTimeout(a.current);
    },
    onSuccess: function() {
      i.current = 0;
    },
    onError: function() {
      if (i.current += 1, r === -1 || i.current <= r) {
        var s = n ?? Math.min(1e3 * Math.pow(2, i.current), 3e4);
        a.current = setTimeout(function() {
          o.current = !0, e.refresh();
        }, s);
      } else
        i.current = 0;
    },
    onCancel: function() {
      i.current = 0, a.current && clearTimeout(a.current);
    }
  } : {};
}, Y7 = Y_, K7 = um, X7 = "Expected a function";
function Z7(e, t, n) {
  var r = !0, a = !0;
  if (typeof e != "function")
    throw new TypeError(X7);
  return K7(n) && (r = "leading" in n ? !!n.leading : r, a = "trailing" in n ? !!n.trailing : a), Y7(e, t, {
    leading: r,
    maxWait: t,
    trailing: a
  });
}
var Q7 = Z7;
const J7 = /* @__PURE__ */ pr(Q7);
var eq = function(e, t) {
  var n = t.throttleWait, r = t.throttleLeading, a = t.throttleTrailing, i = It(), o = {};
  return r !== void 0 && (o.leading = r), a !== void 0 && (o.trailing = a), kn(function() {
    if (n) {
      var s = e.runAsync.bind(e);
      return i.current = J7(function(l) {
        l();
      }, n, o), e.runAsync = function() {
        for (var l = [], u = 0; u < arguments.length; u++)
          l[u] = arguments[u];
        return new Promise(function(c, d) {
          var m;
          (m = i.current) === null || m === void 0 || m.call(i, function() {
            s.apply(void 0, rn([], nn(l), !1)).then(c).catch(d);
          });
        });
      }, function() {
        var l;
        e.runAsync = s, (l = i.current) === null || l === void 0 || l.cancel();
      };
    }
  }, [n, r, a]), n ? {
    onCancel: function() {
      var s;
      (s = i.current) === null || s === void 0 || s.cancel();
    }
  } : {};
}, K_ = function(e) {
  _o && (So(e) || console.error('useMount: parameter `fn` expected to be a function, but got "'.concat(typeof e, '".'))), kn(function() {
    e == null || e();
  }, []);
}, tq = function() {
  var e = nn(Jt({}), 2), t = e[1];
  return ft(function() {
    return t({});
  }, []);
}, nq = (
  /** @class */
  function() {
    function e(t, n, r, a) {
      a === void 0 && (a = {}), this.serviceRef = t, this.options = n, this.subscribe = r, this.initState = a, this.count = 0, this.state = {
        loading: !1,
        params: void 0,
        data: void 0,
        error: void 0
      }, this.state = Fn(Fn(Fn({}, this.state), {
        loading: !n.manual
      }), a);
    }
    return e.prototype.setState = function(t) {
      t === void 0 && (t = {}), this.state = Fn(Fn({}, this.state), t), this.subscribe();
    }, e.prototype.runPluginHandler = function(t) {
      for (var n = [], r = 1; r < arguments.length; r++)
        n[r - 1] = arguments[r];
      var a = this.pluginImpls.map(function(i) {
        var o;
        return (o = i[t]) === null || o === void 0 ? void 0 : o.call.apply(o, rn([i], nn(n), !1));
      }).filter(Boolean);
      return Object.assign.apply(Object, rn([{}], nn(a), !1));
    }, e.prototype.runAsync = function() {
      for (var t, n, r, a, i, o, s, l, u, c, d = [], m = 0; m < arguments.length; m++)
        d[m] = arguments[m];
      return gr(this, void 0, void 0, function() {
        var f, h, E, I, x, v, S, g, y, T, j;
        return n9(this, function($) {
          switch ($.label) {
            case 0:
              if (this.count += 1, f = this.count, h = this.runPluginHandler("onBefore", d), E = h.stopNow, I = E === void 0 ? !1 : E, x = h.returnNow, v = x === void 0 ? !1 : x, S = o_(h, ["stopNow", "returnNow"]), I)
                return [2, new Promise(function() {
                })];
              if (this.setState(Fn({
                loading: !0,
                params: d
              }, S)), v)
                return [2, Promise.resolve(S.data)];
              (n = (t = this.options).onBefore) === null || n === void 0 || n.call(t, d), $.label = 1;
            case 1:
              return $.trys.push([1, 3, , 4]), g = this.runPluginHandler("onRequest", this.serviceRef.current, d).servicePromise, g || (g = (j = this.serviceRef).current.apply(j, rn([], nn(d), !1))), [4, g];
            case 2:
              return y = $.sent(), f !== this.count ? [2, new Promise(function() {
              })] : (this.setState({
                data: y,
                error: void 0,
                loading: !1
              }), (a = (r = this.options).onSuccess) === null || a === void 0 || a.call(r, y, d), this.runPluginHandler("onSuccess", y, d), (o = (i = this.options).onFinally) === null || o === void 0 || o.call(i, d, y, void 0), f === this.count && this.runPluginHandler("onFinally", d, y, void 0), [2, y]);
            case 3:
              if (T = $.sent(), f !== this.count)
                return [2, new Promise(function() {
                })];
              throw this.setState({
                error: T,
                loading: !1
              }), (l = (s = this.options).onError) === null || l === void 0 || l.call(s, T, d), this.runPluginHandler("onError", T, d), (c = (u = this.options).onFinally) === null || c === void 0 || c.call(u, d, void 0, T), f === this.count && this.runPluginHandler("onFinally", d, void 0, T), T;
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.run = function() {
      for (var t = this, n = [], r = 0; r < arguments.length; r++)
        n[r] = arguments[r];
      this.runAsync.apply(this, rn([], nn(n), !1)).catch(function(a) {
        t.options.onError || console.error(a);
      });
    }, e.prototype.cancel = function() {
      this.count += 1, this.setState({
        loading: !1
      }), this.runPluginHandler("onCancel");
    }, e.prototype.refresh = function() {
      this.run.apply(this, rn([], nn(this.state.params || []), !1));
    }, e.prototype.refreshAsync = function() {
      return this.runAsync.apply(this, rn([], nn(this.state.params || []), !1));
    }, e.prototype.mutate = function(t) {
      var n = So(t) ? t(this.state.data) : t;
      this.runPluginHandler("onMutate", n), this.setState({
        data: n
      });
    }, e;
  }()
);
function rq(e, t, n) {
  t === void 0 && (t = {}), n === void 0 && (n = []);
  var r = t.manual, a = r === void 0 ? !1 : r, i = t.ready, o = i === void 0 ? !0 : i, s = o_(t, ["manual", "ready"]);
  _o && t.defaultParams && !Array.isArray(t.defaultParams) && console.warn("expected defaultParams is array, got ".concat(typeof t.defaultParams));
  var l = Fn({
    manual: a,
    ready: o
  }, s), u = z_(e), c = tq(), d = $_(function() {
    var m = n.map(function(f) {
      var h;
      return (h = f == null ? void 0 : f.onInit) === null || h === void 0 ? void 0 : h.call(f, l);
    }).filter(Boolean);
    return new nq(u, l, c, Object.assign.apply(Object, rn([{}], nn(m), !1)));
  }, []);
  return d.options = l, d.pluginImpls = n.map(function(m) {
    return m(d, l);
  }), K_(function() {
    if (!a && o) {
      var m = d.state.params || t.defaultParams || [];
      d.run.apply(d, rn([], nn(m), !1));
    }
  }), lm(function() {
    d.cancel();
  }), {
    loading: d.state.loading,
    data: d.state.data,
    error: d.state.error,
    params: d.state.params || [],
    cancel: Wr(d.cancel.bind(d)),
    refresh: Wr(d.refresh.bind(d)),
    refreshAsync: Wr(d.refreshAsync.bind(d)),
    run: Wr(d.run.bind(d)),
    runAsync: Wr(d.runAsync.bind(d)),
    mutate: Wr(d.mutate.bind(d))
  };
}
function aq(e, t, n) {
  return rq(e, t, rn(rn([], nn([]), !1), [B7, U7, q7, V7, eq, q_, BH, W7], !1));
}
const iq = async (e) => {
  try {
    const { threadId: t, projectId: n, apiKey: r, getAccessToken: a, publicId: i, serverUrl: o } = e, s = await af({
      projectId: n,
      publicId: i,
      getAccessToken: a,
      threadId: t,
      apiKey: r
    });
    let u = (await Bt.get(`${o}/threads/${t}/messages`, {
      headers: s
    })).data;
    const c = [];
    for (const d of u)
      c.push({
        id: d.id,
        message: d.content,
        type: d.type,
        content_type: d.content_type,
        content_array: d.content_array,
        threadId: d.thread_id,
        tool_call_id: d.tool_call_id,
        tool_calls: d.tool_calls,
        model_name: d.model_name,
        user_id: d.user_id,
        created_at: d.created_at
      });
    return c;
  } catch (t) {
    return console.error("Error fetching messages:", t), [];
  }
}, bq = An.memo((e) => {
  const t = e.theme === "dark" ? "dark-theme" : "light-theme", { threadId: n, projectId: r, getAccessToken: a, publicId: i, apiKey: o, messages: s, autoRefreshThread: l, renderLoading: u } = e, { run: c, loading: d, data: m } = aq(iq, {
    manual: !0
  }), f = ft(() => {
    n && r && (a || i || o) && (s === void 0 || s.length === 0) && c({
      threadId: n,
      projectId: r,
      getAccessToken: a,
      publicId: i,
      serverUrl: e.serverUrl || rf,
      apiKey: e.apiKey
    });
  }, [n, r, i, o, a, c, s]);
  return K_(() => {
    f();
  }), Ya(() => {
    f();
  }, [r]), Ya(() => {
    l && f();
  }, [n, l]), d ? /* @__PURE__ */ Y.jsx("div", { className: `${t} dark-theme w-full h-full justify-center items-center flex`, children: u ? u() : /* @__PURE__ */ Y.jsx("span", { className: "animate-pulse", children: " Loading..." }) }) : /* @__PURE__ */ Y.jsx("div", { className: `${t} w-full h-full`, children: /* @__PURE__ */ Y.jsx(ej, { ...e, messages: s || m || [] }) });
});
function bp(...e) {
  return e.filter(Boolean).join(" ");
}
const Eq = (e) => {
  const {
    onMinimize: t,
    onMaximize: n,
    btnClassName: r,
    theme: a,
    children: i,
    title: o,
    maximizedPanelClassName: s,
    maximizedPanelStyle: l,
    showFullScreen: u,
    controls: c
  } = e, [d, m] = Jt(!1), [f, h] = Jt(u || !1), E = ft(() => {
    m((I) => !I);
  }, []);
  return /* @__PURE__ */ Y.jsxs("div", { className: bp(a === "dark" ? "floating-dark" : ""), children: [
    d && /* @__PURE__ */ Y.jsxs(
      "div",
      {
        style: f ? l : {},
        className: bp(
          "langdb-floating-widget",
          "flex flex-1 flex-col absolute p-[10px] pt-[0px]",
          f ? s || "h-full w-full bottom-0 right-0" : "rounded border border-border shadow-md h-[60vh] w-[45vw] min-h-[500px] bottom-16 right-16"
        ),
        children: [
          /* @__PURE__ */ Y.jsxs(
            "div",
            {
              className: "border-b py-[5px] flex justify-center items-center",
              children: [
                /* @__PURE__ */ Y.jsxs("div", { className: "flex gap-2", children: [
                  /* @__PURE__ */ Y.jsx(
                    "button",
                    {
                      onClick: () => {
                        m(!1), t && t();
                      },
                      children: /* @__PURE__ */ Y.jsx(sq, {})
                    }
                  ),
                  !(c != null && c.hideMaximise) && /* @__PURE__ */ Y.jsx(
                    "button",
                    {
                      onClick: () => {
                        h((I) => !I), n && n();
                      },
                      children: f ? /* @__PURE__ */ Y.jsx(uq, {}) : /* @__PURE__ */ Y.jsx(lq, {})
                    }
                  )
                ] }),
                /* @__PURE__ */ Y.jsx("div", { className: "flex flex-1 justify-center header-title", children: o })
              ]
            }
          ),
          /* @__PURE__ */ Y.jsx("div", { className: "flex flex-1 overflow-scroll", children: i })
        ]
      }
    ),
    !d && /* @__PURE__ */ Y.jsx(
      "button",
      {
        className: bp(
          r || "",
          "fixed text-white bg-primary hover:bg-primary-800 bottom-5 right-5 flex w-[50px] hover:scale-110 scale-100 h-[50px] justify-center items-center p-[10px] rounded-full cursor-pointer shadow-none hover:shadow-xl transition ease-in-out"
        ),
        onClick: E,
        children: /* @__PURE__ */ Y.jsx(oq, {})
      }
    )
  ] });
}, oq = () => /* @__PURE__ */ Y.jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: "1.5",
    stroke: "currentColor",
    className: "size-6",
    children: /* @__PURE__ */ Y.jsx(
      "path",
      {
        strokeLinecap: "round",
        "stroke-linejoin": "round",
        d: "M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155"
      }
    )
  }
), sq = () => /* @__PURE__ */ Y.jsx(
  "svg",
  {
    viewBox: "0 0 24 24",
    width: "24",
    height: "24",
    fill: "currentColor",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ Y.jsx("path", { d: "M19 13H5v-2h14v2z" })
  }
), lq = () => /* @__PURE__ */ Y.jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: "1.5",
    stroke: "currentColor",
    className: "size-6",
    children: /* @__PURE__ */ Y.jsx(
      "path",
      {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 8.25V18a2.25 2.25 0 0 0 2.25 2.25h13.5A2.25 2.25 0 0 0 21 18V8.25m-18 0V6a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 6v2.25m-18 0h18M5.25 6h.008v.008H5.25V6ZM7.5 6h.008v.008H7.5V6Zm2.25 0h.008v.008H9.75V6Z"
      }
    )
  }
), uq = () => /* @__PURE__ */ Y.jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    className: "size-6",
    children: /* @__PURE__ */ Y.jsx(
      "path",
      {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 9V4.5M9 9H4.5M9 9 3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5 5.25 5.25"
      }
    )
  }
);
var cq = /* @__PURE__ */ ((e) => (e.Stop = "stop", e.StopSequence = "stop_sequence", e.Length = "length", e.ToolCalls = "tool_calls", e.ContentFilter = "content_filter", e.Guardrail = "guardrail", e.Other = "other", e))(cq || {});
export {
  oq as ChatIcon,
  Z9 as ChatInput,
  Eq as FloatingChatWidget,
  XA as ImageDetail,
  YA as MessageContentType,
  KA as MessageType,
  cq as ModelFinishReason,
  X9 as SoundWaveIcon,
  bq as Widget,
  b_ as convertAudioToBase64,
  ZA as convert_to,
  pq as createImageUrl,
  fq as createInnerMessage,
  QA as createSubmitMessage,
  Vt as emitter
};
//# sourceMappingURL=index.es.js.map
